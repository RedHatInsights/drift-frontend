// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ConnectedDriftTable should render correctly 1`] = `
<MemoryRouter
  keyLength={0}
>
  <Router
    location={
      Object {
        "hash": "",
        "key": "default",
        "pathname": "/",
        "search": "",
        "state": null,
      }
    }
    navigationType="POP"
    navigator={
      Object {
        "action": "POP",
        "createHref": [Function],
        "createURL": [Function],
        "encodeLocation": [Function],
        "go": [Function],
        "index": 0,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "key": "default",
          "pathname": "/",
          "search": "",
          "state": null,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <Connect(DriftTableWithHooks)
        addStateFilter={[MockFunction]}
        baselines={Array []}
        error={Object {}}
        factTypeFilters={Array []}
        fetchCompare={[MockFunction]}
        handleFactFilter={
          [MockFunction] {
            "calls": Array [
              Array [
                "",
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": Object {
                  "type": "null",
                },
              },
            ],
          }
        }
        historicalProfiles={Array []}
        permissions={
          Object {
            "hspRead": true,
          }
        }
        searchParams={
          Object {
            "get": [MockFunction] {
              "calls": Array [
                Array [
                  "reference_id",
                ],
                Array [
                  "filter[name]",
                ],
                Array [
                  "filter[state]",
                ],
                Array [
                  "filter[show]",
                ],
                Array [
                  "sort",
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": "",
                },
                Object {
                  "type": "return",
                  "value": "",
                },
                Object {
                  "type": "return",
                  "value": "",
                },
                Object {
                  "type": "return",
                  "value": "",
                },
                Object {
                  "type": "return",
                  "value": "",
                },
              ],
            },
            "getAll": [MockFunction] {
              "calls": Array [
                Array [
                  "system_ids",
                ],
                Array [
                  "baseline_ids",
                ],
                Array [
                  "hsp_ids",
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": "",
                },
                Object {
                  "type": "return",
                  "value": "",
                },
                Object {
                  "type": "return",
                  "value": "",
                },
              ],
            },
          }
        }
        setHistory={[MockFunction]}
        setIsFirstReference={[MockFunction]}
        stateFilters={Array []}
        systems={Array []}
        updateReferenceId={[MockFunction]}
      >
        <DriftTableWithHooks
          addStateFilter={[MockFunction]}
          addSystemModalOpened={false}
          baselines={Array []}
          emptyState={false}
          error={Object {}}
          expandRow={[Function]}
          expandedRows={Array []}
          factTypeFilters={Array []}
          fetchCompare={[Function]}
          fullCompareData={Array []}
          handleFactFilter={
            [MockFunction] {
              "calls": Array [
                Array [
                  "",
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": Object {
                    "type": "null",
                  },
                },
              ],
            }
          }
          historicalProfiles={Array []}
          loading={false}
          permissions={
            Object {
              "hspRead": true,
            }
          }
          searchParams={
            Object {
              "get": [MockFunction] {
                "calls": Array [
                  Array [
                    "reference_id",
                  ],
                  Array [
                    "filter[name]",
                  ],
                  Array [
                    "filter[state]",
                  ],
                  Array [
                    "filter[show]",
                  ],
                  Array [
                    "sort",
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": "",
                  },
                  Object {
                    "type": "return",
                    "value": "",
                  },
                  Object {
                    "type": "return",
                    "value": "",
                  },
                  Object {
                    "type": "return",
                    "value": "",
                  },
                  Object {
                    "type": "return",
                    "value": "",
                  },
                ],
              },
              "getAll": [MockFunction] {
                "calls": Array [
                  Array [
                    "system_ids",
                  ],
                  Array [
                    "baseline_ids",
                  ],
                  Array [
                    "hsp_ids",
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": "",
                  },
                  Object {
                    "type": "return",
                    "value": "",
                  },
                  Object {
                    "type": "return",
                    "value": "",
                  },
                ],
              },
            }
          }
          selectHistoricProfiles={[Function]}
          setHistory={[MockFunction]}
          setIsFirstReference={[MockFunction]}
          setSelectedBaselines={[Function]}
          stateFilters={Array []}
          systems={Array []}
          toggleFactSort={[Function]}
          toggleStateSort={[Function]}
          updateReferenceId={[MockFunction]}
        >
          <DriftTable
            addStateFilter={[MockFunction]}
            addSystemModalOpened={false}
            baselines={Array []}
            chrome={
              Object {
                "appAction": [MockFunction],
                "isBeta": [MockFunction],
              }
            }
            emptyState={false}
            error={Object {}}
            expandRow={[Function]}
            expandedRows={Array []}
            factTypeFilters={Array []}
            fetchCompare={[Function]}
            fullCompareData={Array []}
            handleFactFilter={
              [MockFunction] {
                "calls": Array [
                  Array [
                    "",
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": Object {
                      "type": "null",
                    },
                  },
                ],
              }
            }
            historicalProfiles={Array []}
            loading={false}
            permissions={
              Object {
                "hspRead": true,
              }
            }
            searchParams={
              Object {
                "get": [MockFunction] {
                  "calls": Array [
                    Array [
                      "reference_id",
                    ],
                    Array [
                      "filter[name]",
                    ],
                    Array [
                      "filter[state]",
                    ],
                    Array [
                      "filter[show]",
                    ],
                    Array [
                      "sort",
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": "",
                    },
                    Object {
                      "type": "return",
                      "value": "",
                    },
                    Object {
                      "type": "return",
                      "value": "",
                    },
                    Object {
                      "type": "return",
                      "value": "",
                    },
                    Object {
                      "type": "return",
                      "value": "",
                    },
                  ],
                },
                "getAll": [MockFunction] {
                  "calls": Array [
                    Array [
                      "system_ids",
                    ],
                    Array [
                      "baseline_ids",
                    ],
                    Array [
                      "hsp_ids",
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": "",
                    },
                    Object {
                      "type": "return",
                      "value": "",
                    },
                    Object {
                      "type": "return",
                      "value": "",
                    },
                  ],
                },
              }
            }
            selectHistoricProfiles={[Function]}
            setHistory={[MockFunction]}
            setIsFirstReference={[MockFunction]}
            setSelectedBaselines={[Function]}
            stateFilters={Array []}
            systems={Array []}
            toggleFactSort={[Function]}
            toggleStateSort={[Function]}
            updateReferenceId={[MockFunction]}
          >
            <Connect(WrappedAddSystemModal)
              confirmModal={[Function]}
              permissions={
                Object {
                  "hspRead": true,
                }
              }
              selectedSystemIds={Array []}
              updateReferenceId={[MockFunction]}
            >
              <WrappedAddSystemModal
                addSystemModalOpened={false}
                confirmModal={[Function]}
                disableSystemTable={[Function]}
                handleBaselineSelection={[Function]}
                handleHSPSelection={[Function]}
                handleSystemSelection={[Function]}
                permissions={
                  Object {
                    "hspRead": true,
                  }
                }
                revertBaselineFetch={[Function]}
                selectActiveTab={[Function]}
                selectBaseline={[Function]}
                selectEntity={[Function]}
                selectHistoricProfiles={[Function]}
                selectedBaselineIds={Array []}
                selectedHSPIds={Array []}
                selectedSystemIds={Array []}
                setSelectedBaselines={[Function]}
                setSelectedSystemIds={[Function]}
                toggleAddSystemModal={[Function]}
                updateReferenceId={[MockFunction]}
              >
                <AddSystemModal
                  addSystemModalOpened={false}
                  confirmModal={[Function]}
                  disableSystemTable={[Function]}
                  handleBaselineSelection={[Function]}
                  handleHSPSelection={[Function]}
                  handleSystemSelection={[Function]}
                  permissions={
                    Object {
                      "hspRead": true,
                    }
                  }
                  revertBaselineFetch={[Function]}
                  selectActiveTab={[Function]}
                  selectBaseline={[Function]}
                  selectEntity={[Function]}
                  selectHistoricProfiles={[Function]}
                  selectedBaselineIds={Array []}
                  selectedHSPIds={Array []}
                  selectedSystemIds={Array []}
                  setSelectedBaselines={[Function]}
                  setSelectedSystemIds={[Function]}
                  toggleAddSystemModal={[Function]}
                  updateReferenceId={[MockFunction]}
                >
                  <Modal
                    actions={
                      Array [
                        <Button
                          isDisabled={false}
                          onClick={[Function]}
                          ouiaId="add-to-comparison-submit-button"
                          variant="primary"
                        >
                          Submit
                        </Button>,
                        <Button
                          isDisabled={false}
                          onClick={[Function]}
                          ouiaId="add-to-comparison-cancel-button"
                          variant="link"
                        >
                          Cancel
                        </Button>,
                      ]
                    }
                    appendTo={[Function]}
                    aria-describedby=""
                    aria-label=""
                    aria-labelledby=""
                    className="drift"
                    hasNoBodyWrapper={false}
                    isOpen={false}
                    onClose={[Function]}
                    onScroll={null}
                    ouiaId="add-to-comparison-modal"
                    ouiaSafe={true}
                    showClose={true}
                    style={
                      Object {
                        "maxHeight": "600px",
                      }
                    }
                    title="Add to comparison"
                    titleIconVariant={null}
                    titleLabel=""
                    variant="default"
                    width="1200px"
                  >
                    <Portal
                      containerInfo={<div />}
                    >
                      <ModalContent
                        actions={
                          Array [
                            <Button
                              isDisabled={false}
                              onClick={[Function]}
                              ouiaId="add-to-comparison-submit-button"
                              variant="primary"
                            >
                              Submit
                            </Button>,
                            <Button
                              isDisabled={false}
                              onClick={[Function]}
                              ouiaId="add-to-comparison-cancel-button"
                              variant="link"
                            >
                              Cancel
                            </Button>,
                          ]
                        }
                        aria-describedby=""
                        aria-label=""
                        aria-labelledby=""
                        boxId="pf-modal-part-0"
                        className="drift"
                        descriptorId="pf-modal-part-2"
                        hasNoBodyWrapper={false}
                        isOpen={false}
                        labelId="pf-modal-part-1"
                        onClose={[Function]}
                        onScroll={null}
                        ouiaId="add-to-comparison-modal"
                        ouiaSafe={true}
                        showClose={true}
                        style={
                          Object {
                            "maxHeight": "600px",
                          }
                        }
                        title="Add to comparison"
                        titleIconVariant={null}
                        titleLabel=""
                        variant="default"
                        width="1200px"
                      />
                    </Portal>
                  </Modal>
                </AddSystemModal>
              </WrappedAddSystemModal>
            </Connect(WrappedAddSystemModal)>
            <div
              className="sticky-table-header"
            >
              <div
                className="second-scroll-wrapper"
                onScroll={[Function]}
              >
                <div
                  className="second-scroll"
                  style={
                    Object {
                      "width": "",
                    }
                  }
                />
              </div>
              <div
                className="drift-table-wrapper"
                onScroll={[Function]}
              >
                <table
                  className="pf-c-table pf-m-compact drift-table"
                  data-ouia-component-id="comparison-table"
                  data-ouia-component-type="PF4/Table"
                >
                  <thead>
                    <ComparisonHeader
                      fetchCompare={[Function]}
                      masterList={Array []}
                      permissions={
                        Object {
                          "hspRead": true,
                        }
                      }
                      removeSystem={[Function]}
                      selectHistoricProfiles={[Function]}
                      setColumnHeaderWidth={[Function]}
                      setHistory={[MockFunction]}
                      systemIds={Array []}
                      toggleFactSort={[Function]}
                      toggleStateSort={[Function]}
                      updateReferenceId={[Function]}
                    >
                      <tr
                        className="sticky-column-header"
                        data-ouia-component-id="comparison-table-header-row"
                        data-ouia-component-type="PF4/TableRow"
                      >
                        <th
                          className="fact-header sticky-column fixed-column-1 pointer sticky-header"
                          data-ouia-component-id="fact-sort-button"
                          data-ouia-component-type="PF4/Button"
                          key="fact-header"
                          onClick={[Function]}
                        >
                          <div
                            className="active-blue"
                          >
                            Fact 
                            <ArrowsAltVIcon
                              className="not-active"
                              color="currentColor"
                              noVerticalAlign={false}
                              size="sm"
                            >
                              <svg
                                aria-hidden={true}
                                aria-labelledby={null}
                                className="not-active"
                                fill="currentColor"
                                height="1em"
                                role="img"
                                style={
                                  Object {
                                    "verticalAlign": "-0.125em",
                                  }
                                }
                                viewBox="0 0 256 512"
                                width="1em"
                              >
                                <path
                                  d="M214.059 377.941H168V134.059h46.059c21.382 0 32.09-25.851 16.971-40.971L144.971 7.029c-9.373-9.373-24.568-9.373-33.941 0L24.971 93.088c-15.119 15.119-4.411 40.971 16.971 40.971H88v243.882H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.568 9.373 33.941 0l86.059-86.059c15.12-15.119 4.412-40.971-16.97-40.971z"
                                />
                              </svg>
                            </ArrowsAltVIcon>
                          </div>
                        </th>
                        <th
                          className="state-header sticky-column fixed-column-2 pointer right-border sticky-header"
                          data-ouia-component-id="state-sort-button"
                          data-ouia-component-type="PF4/Button"
                          id="disabled"
                          key="state-header"
                          onClick={[Function]}
                        >
                          <div
                            className="active-blue"
                          >
                            State 
                            <ArrowsAltVIcon
                              className="not-active"
                              color="currentColor"
                              noVerticalAlign={false}
                              size="sm"
                            >
                              <svg
                                aria-hidden={true}
                                aria-labelledby={null}
                                className="not-active"
                                fill="currentColor"
                                height="1em"
                                role="img"
                                style={
                                  Object {
                                    "verticalAlign": "-0.125em",
                                  }
                                }
                                viewBox="0 0 256 512"
                                width="1em"
                              >
                                <path
                                  d="M214.059 377.941H168V134.059h46.059c21.382 0 32.09-25.851 16.971-40.971L144.971 7.029c-9.373-9.373-24.568-9.373-33.941 0L24.971 93.088c-15.119 15.119-4.411 40.971 16.971 40.971H88v243.882H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.568 9.373 33.941 0l86.059-86.059c15.12-15.119 4.412-40.971-16.97-40.971z"
                                />
                              </svg>
                            </ArrowsAltVIcon>
                          </div>
                        </th>
                        <td
                          key="loading-systems-header"
                        >
                          <Skeleton
                            size="md"
                          >
                            <Skeleton
                              className="ins-c-skeleton ins-c-skeleton__md"
                            >
                              <div
                                className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__md"
                              >
                                <span
                                  className="pf-u-screen-reader"
                                />
                              </div>
                            </Skeleton>
                          </Skeleton>
                        </td>
                      </tr>
                    </ComparisonHeader>
                  </thead>
                </table>
              </div>
            </div>
            <div
              className="drift-table-wrapper table-body-scroll"
              onScroll={[Function]}
            >
              <table
                className="pf-c-table pf-m-compact drift-table"
                data-ouia-component-id="comparison-table"
                data-ouia-component-type="PF4/Table"
              >
                <tbody />
              </table>
            </div>
          </DriftTable>
        </DriftTableWithHooks>
      </Connect(DriftTableWithHooks)>
    </Provider>
  </Router>
</MemoryRouter>
`;

exports[`ConnectedDriftTable should render loading rows 1`] = `
<MemoryRouter
  keyLength={0}
>
  <Router
    location={
      Object {
        "hash": "",
        "key": "default",
        "pathname": "/",
        "search": "",
        "state": null,
      }
    }
    navigationType="POP"
    navigator={
      Object {
        "action": "POP",
        "createHref": [Function],
        "createURL": [Function],
        "encodeLocation": [Function],
        "go": [Function],
        "index": 0,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "key": "default",
          "pathname": "/",
          "search": "",
          "state": null,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <Connect(DriftTableWithHooks)
        addStateFilter={[MockFunction]}
        baselines={Array []}
        error={Object {}}
        factTypeFilters={Array []}
        fetchCompare={[MockFunction]}
        handleFactFilter={
          [MockFunction] {
            "calls": Array [
              Array [
                "",
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": Object {
                  "type": "null",
                },
              },
            ],
          }
        }
        historicalProfiles={Array []}
        permissions={
          Object {
            "hspRead": true,
          }
        }
        searchParams={
          Object {
            "get": [MockFunction] {
              "calls": Array [
                Array [
                  "reference_id",
                ],
                Array [
                  "filter[name]",
                ],
                Array [
                  "filter[state]",
                ],
                Array [
                  "filter[show]",
                ],
                Array [
                  "sort",
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": "",
                },
                Object {
                  "type": "return",
                  "value": "",
                },
                Object {
                  "type": "return",
                  "value": "",
                },
                Object {
                  "type": "return",
                  "value": "",
                },
                Object {
                  "type": "return",
                  "value": "",
                },
              ],
            },
            "getAll": [MockFunction] {
              "calls": Array [
                Array [
                  "system_ids",
                ],
                Array [
                  "baseline_ids",
                ],
                Array [
                  "hsp_ids",
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": "",
                },
                Object {
                  "type": "return",
                  "value": "",
                },
                Object {
                  "type": "return",
                  "value": "",
                },
              ],
            },
          }
        }
        setHistory={[MockFunction]}
        setIsFirstReference={[MockFunction]}
        stateFilters={Array []}
        systems={Array []}
        updateReferenceId={[MockFunction]}
      >
        <DriftTableWithHooks
          addStateFilter={[MockFunction]}
          addSystemModalOpened={false}
          baselines={Array []}
          emptyState={false}
          error={Object {}}
          expandRow={[Function]}
          expandedRows={Array []}
          factTypeFilters={Array []}
          fetchCompare={[Function]}
          fullCompareData={Array []}
          handleFactFilter={
            [MockFunction] {
              "calls": Array [
                Array [
                  "",
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": Object {
                    "type": "null",
                  },
                },
              ],
            }
          }
          historicalProfiles={Array []}
          loading={true}
          permissions={
            Object {
              "hspRead": true,
            }
          }
          searchParams={
            Object {
              "get": [MockFunction] {
                "calls": Array [
                  Array [
                    "reference_id",
                  ],
                  Array [
                    "filter[name]",
                  ],
                  Array [
                    "filter[state]",
                  ],
                  Array [
                    "filter[show]",
                  ],
                  Array [
                    "sort",
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": "",
                  },
                  Object {
                    "type": "return",
                    "value": "",
                  },
                  Object {
                    "type": "return",
                    "value": "",
                  },
                  Object {
                    "type": "return",
                    "value": "",
                  },
                  Object {
                    "type": "return",
                    "value": "",
                  },
                ],
              },
              "getAll": [MockFunction] {
                "calls": Array [
                  Array [
                    "system_ids",
                  ],
                  Array [
                    "baseline_ids",
                  ],
                  Array [
                    "hsp_ids",
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": "",
                  },
                  Object {
                    "type": "return",
                    "value": "",
                  },
                  Object {
                    "type": "return",
                    "value": "",
                  },
                ],
              },
            }
          }
          selectHistoricProfiles={[Function]}
          setHistory={[MockFunction]}
          setIsFirstReference={[MockFunction]}
          setSelectedBaselines={[Function]}
          stateFilters={Array []}
          systems={Array []}
          toggleFactSort={[Function]}
          toggleStateSort={[Function]}
          updateReferenceId={[MockFunction]}
        >
          <DriftTable
            addStateFilter={[MockFunction]}
            addSystemModalOpened={false}
            baselines={Array []}
            chrome={
              Object {
                "appAction": [MockFunction],
                "isBeta": [MockFunction],
              }
            }
            emptyState={false}
            error={Object {}}
            expandRow={[Function]}
            expandedRows={Array []}
            factTypeFilters={Array []}
            fetchCompare={[Function]}
            fullCompareData={Array []}
            handleFactFilter={
              [MockFunction] {
                "calls": Array [
                  Array [
                    "",
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": Object {
                      "type": "null",
                    },
                  },
                ],
              }
            }
            historicalProfiles={Array []}
            loading={true}
            permissions={
              Object {
                "hspRead": true,
              }
            }
            searchParams={
              Object {
                "get": [MockFunction] {
                  "calls": Array [
                    Array [
                      "reference_id",
                    ],
                    Array [
                      "filter[name]",
                    ],
                    Array [
                      "filter[state]",
                    ],
                    Array [
                      "filter[show]",
                    ],
                    Array [
                      "sort",
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": "",
                    },
                    Object {
                      "type": "return",
                      "value": "",
                    },
                    Object {
                      "type": "return",
                      "value": "",
                    },
                    Object {
                      "type": "return",
                      "value": "",
                    },
                    Object {
                      "type": "return",
                      "value": "",
                    },
                  ],
                },
                "getAll": [MockFunction] {
                  "calls": Array [
                    Array [
                      "system_ids",
                    ],
                    Array [
                      "baseline_ids",
                    ],
                    Array [
                      "hsp_ids",
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": "",
                    },
                    Object {
                      "type": "return",
                      "value": "",
                    },
                    Object {
                      "type": "return",
                      "value": "",
                    },
                  ],
                },
              }
            }
            selectHistoricProfiles={[Function]}
            setHistory={[MockFunction]}
            setIsFirstReference={[MockFunction]}
            setSelectedBaselines={[Function]}
            stateFilters={Array []}
            systems={Array []}
            toggleFactSort={[Function]}
            toggleStateSort={[Function]}
            updateReferenceId={[MockFunction]}
          >
            <Connect(WrappedAddSystemModal)
              confirmModal={[Function]}
              permissions={
                Object {
                  "hspRead": true,
                }
              }
              selectedSystemIds={Array []}
              updateReferenceId={[MockFunction]}
            >
              <WrappedAddSystemModal
                addSystemModalOpened={false}
                confirmModal={[Function]}
                disableSystemTable={[Function]}
                handleBaselineSelection={[Function]}
                handleHSPSelection={[Function]}
                handleSystemSelection={[Function]}
                permissions={
                  Object {
                    "hspRead": true,
                  }
                }
                revertBaselineFetch={[Function]}
                selectActiveTab={[Function]}
                selectBaseline={[Function]}
                selectEntity={[Function]}
                selectHistoricProfiles={[Function]}
                selectedBaselineIds={Array []}
                selectedHSPIds={Array []}
                selectedSystemIds={Array []}
                setSelectedBaselines={[Function]}
                setSelectedSystemIds={[Function]}
                toggleAddSystemModal={[Function]}
                updateReferenceId={[MockFunction]}
              >
                <AddSystemModal
                  addSystemModalOpened={false}
                  confirmModal={[Function]}
                  disableSystemTable={[Function]}
                  handleBaselineSelection={[Function]}
                  handleHSPSelection={[Function]}
                  handleSystemSelection={[Function]}
                  permissions={
                    Object {
                      "hspRead": true,
                    }
                  }
                  revertBaselineFetch={[Function]}
                  selectActiveTab={[Function]}
                  selectBaseline={[Function]}
                  selectEntity={[Function]}
                  selectHistoricProfiles={[Function]}
                  selectedBaselineIds={Array []}
                  selectedHSPIds={Array []}
                  selectedSystemIds={Array []}
                  setSelectedBaselines={[Function]}
                  setSelectedSystemIds={[Function]}
                  toggleAddSystemModal={[Function]}
                  updateReferenceId={[MockFunction]}
                >
                  <Modal
                    actions={
                      Array [
                        <Button
                          isDisabled={false}
                          onClick={[Function]}
                          ouiaId="add-to-comparison-submit-button"
                          variant="primary"
                        >
                          Submit
                        </Button>,
                        <Button
                          isDisabled={false}
                          onClick={[Function]}
                          ouiaId="add-to-comparison-cancel-button"
                          variant="link"
                        >
                          Cancel
                        </Button>,
                      ]
                    }
                    appendTo={[Function]}
                    aria-describedby=""
                    aria-label=""
                    aria-labelledby=""
                    className="drift"
                    hasNoBodyWrapper={false}
                    isOpen={false}
                    onClose={[Function]}
                    onScroll={null}
                    ouiaId="add-to-comparison-modal"
                    ouiaSafe={true}
                    showClose={true}
                    style={
                      Object {
                        "maxHeight": "600px",
                      }
                    }
                    title="Add to comparison"
                    titleIconVariant={null}
                    titleLabel=""
                    variant="default"
                    width="1200px"
                  >
                    <Portal
                      containerInfo={<div />}
                    >
                      <ModalContent
                        actions={
                          Array [
                            <Button
                              isDisabled={false}
                              onClick={[Function]}
                              ouiaId="add-to-comparison-submit-button"
                              variant="primary"
                            >
                              Submit
                            </Button>,
                            <Button
                              isDisabled={false}
                              onClick={[Function]}
                              ouiaId="add-to-comparison-cancel-button"
                              variant="link"
                            >
                              Cancel
                            </Button>,
                          ]
                        }
                        aria-describedby=""
                        aria-label=""
                        aria-labelledby=""
                        boxId="pf-modal-part-2"
                        className="drift"
                        descriptorId="pf-modal-part-4"
                        hasNoBodyWrapper={false}
                        isOpen={false}
                        labelId="pf-modal-part-3"
                        onClose={[Function]}
                        onScroll={null}
                        ouiaId="add-to-comparison-modal"
                        ouiaSafe={true}
                        showClose={true}
                        style={
                          Object {
                            "maxHeight": "600px",
                          }
                        }
                        title="Add to comparison"
                        titleIconVariant={null}
                        titleLabel=""
                        variant="default"
                        width="1200px"
                      />
                    </Portal>
                  </Modal>
                </AddSystemModal>
              </WrappedAddSystemModal>
            </Connect(WrappedAddSystemModal)>
            <div
              className="sticky-table-header"
            >
              <div
                className="second-scroll-wrapper"
                onScroll={[Function]}
              >
                <div
                  className="second-scroll"
                  style={
                    Object {
                      "width": "",
                    }
                  }
                />
              </div>
              <div
                className="drift-table-wrapper"
                onScroll={[Function]}
              >
                <table
                  className="pf-c-table pf-m-compact drift-table"
                  data-ouia-component-id="comparison-table"
                  data-ouia-component-type="PF4/Table"
                >
                  <thead>
                    <ComparisonHeader
                      fetchCompare={[Function]}
                      masterList={Array []}
                      permissions={
                        Object {
                          "hspRead": true,
                        }
                      }
                      removeSystem={[Function]}
                      selectHistoricProfiles={[Function]}
                      setColumnHeaderWidth={[Function]}
                      setHistory={[MockFunction]}
                      systemIds={Array []}
                      toggleFactSort={[Function]}
                      toggleStateSort={[Function]}
                      updateReferenceId={[Function]}
                    >
                      <tr
                        className="sticky-column-header"
                        data-ouia-component-id="comparison-table-header-row"
                        data-ouia-component-type="PF4/TableRow"
                      >
                        <th
                          className="fact-header sticky-column fixed-column-1 pointer sticky-header"
                          data-ouia-component-id="fact-sort-button"
                          data-ouia-component-type="PF4/Button"
                          key="fact-header"
                          onClick={[Function]}
                        >
                          <div
                            className="active-blue"
                          >
                            Fact 
                            <ArrowsAltVIcon
                              className="not-active"
                              color="currentColor"
                              noVerticalAlign={false}
                              size="sm"
                            >
                              <svg
                                aria-hidden={true}
                                aria-labelledby={null}
                                className="not-active"
                                fill="currentColor"
                                height="1em"
                                role="img"
                                style={
                                  Object {
                                    "verticalAlign": "-0.125em",
                                  }
                                }
                                viewBox="0 0 256 512"
                                width="1em"
                              >
                                <path
                                  d="M214.059 377.941H168V134.059h46.059c21.382 0 32.09-25.851 16.971-40.971L144.971 7.029c-9.373-9.373-24.568-9.373-33.941 0L24.971 93.088c-15.119 15.119-4.411 40.971 16.971 40.971H88v243.882H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.568 9.373 33.941 0l86.059-86.059c15.12-15.119 4.412-40.971-16.97-40.971z"
                                />
                              </svg>
                            </ArrowsAltVIcon>
                          </div>
                        </th>
                        <th
                          className="state-header sticky-column fixed-column-2 pointer right-border sticky-header"
                          data-ouia-component-id="state-sort-button"
                          data-ouia-component-type="PF4/Button"
                          id="disabled"
                          key="state-header"
                          onClick={[Function]}
                        >
                          <div
                            className="active-blue"
                          >
                            State 
                            <ArrowsAltVIcon
                              className="not-active"
                              color="currentColor"
                              noVerticalAlign={false}
                              size="sm"
                            >
                              <svg
                                aria-hidden={true}
                                aria-labelledby={null}
                                className="not-active"
                                fill="currentColor"
                                height="1em"
                                role="img"
                                style={
                                  Object {
                                    "verticalAlign": "-0.125em",
                                  }
                                }
                                viewBox="0 0 256 512"
                                width="1em"
                              >
                                <path
                                  d="M214.059 377.941H168V134.059h46.059c21.382 0 32.09-25.851 16.971-40.971L144.971 7.029c-9.373-9.373-24.568-9.373-33.941 0L24.971 93.088c-15.119 15.119-4.411 40.971 16.971 40.971H88v243.882H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.568 9.373 33.941 0l86.059-86.059c15.12-15.119 4.412-40.971-16.97-40.971z"
                                />
                              </svg>
                            </ArrowsAltVIcon>
                          </div>
                        </th>
                        <td
                          key="loading-systems-header"
                        >
                          <Skeleton
                            size="md"
                          >
                            <Skeleton
                              className="ins-c-skeleton ins-c-skeleton__md"
                            >
                              <div
                                className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__md"
                              >
                                <span
                                  className="pf-u-screen-reader"
                                />
                              </div>
                            </Skeleton>
                          </Skeleton>
                        </td>
                      </tr>
                    </ComparisonHeader>
                  </thead>
                </table>
              </div>
            </div>
            <div
              className="drift-table-wrapper table-body-scroll"
              onScroll={[Function]}
            >
              <table
                className="pf-c-table pf-m-compact drift-table"
                data-ouia-component-id="comparison-table"
                data-ouia-component-type="PF4/Table"
              >
                <tbody>
                  <tr>
                    <td
                      className="fact-loading-width"
                    >
                      <Skeleton
                        size="md"
                      >
                        <Skeleton
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                          <div
                            className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__md"
                          >
                            <span
                              className="pf-u-screen-reader"
                            />
                          </div>
                        </Skeleton>
                      </Skeleton>
                    </td>
                    <td
                      className="state-loading-width"
                    >
                      <Skeleton
                        size="md"
                      >
                        <Skeleton
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                          <div
                            className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__md"
                          >
                            <span
                              className="pf-u-screen-reader"
                            />
                          </div>
                        </Skeleton>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        size="md"
                      >
                        <Skeleton
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                          <div
                            className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__md"
                          >
                            <span
                              className="pf-u-screen-reader"
                            />
                          </div>
                        </Skeleton>
                      </Skeleton>
                    </td>
                  </tr>
                  <tr>
                    <td
                      className="fact-loading-width"
                    >
                      <Skeleton
                        size="md"
                      >
                        <Skeleton
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                          <div
                            className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__md"
                          >
                            <span
                              className="pf-u-screen-reader"
                            />
                          </div>
                        </Skeleton>
                      </Skeleton>
                    </td>
                    <td
                      className="state-loading-width"
                    >
                      <Skeleton
                        size="md"
                      >
                        <Skeleton
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                          <div
                            className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__md"
                          >
                            <span
                              className="pf-u-screen-reader"
                            />
                          </div>
                        </Skeleton>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        size="md"
                      >
                        <Skeleton
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                          <div
                            className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__md"
                          >
                            <span
                              className="pf-u-screen-reader"
                            />
                          </div>
                        </Skeleton>
                      </Skeleton>
                    </td>
                  </tr>
                  <tr>
                    <td
                      className="fact-loading-width"
                    >
                      <Skeleton
                        size="md"
                      >
                        <Skeleton
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                          <div
                            className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__md"
                          >
                            <span
                              className="pf-u-screen-reader"
                            />
                          </div>
                        </Skeleton>
                      </Skeleton>
                    </td>
                    <td
                      className="state-loading-width"
                    >
                      <Skeleton
                        size="md"
                      >
                        <Skeleton
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                          <div
                            className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__md"
                          >
                            <span
                              className="pf-u-screen-reader"
                            />
                          </div>
                        </Skeleton>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        size="md"
                      >
                        <Skeleton
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                          <div
                            className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__md"
                          >
                            <span
                              className="pf-u-screen-reader"
                            />
                          </div>
                        </Skeleton>
                      </Skeleton>
                    </td>
                  </tr>
                  <tr>
                    <td
                      className="fact-loading-width"
                    >
                      <Skeleton
                        size="md"
                      >
                        <Skeleton
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                          <div
                            className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__md"
                          >
                            <span
                              className="pf-u-screen-reader"
                            />
                          </div>
                        </Skeleton>
                      </Skeleton>
                    </td>
                    <td
                      className="state-loading-width"
                    >
                      <Skeleton
                        size="md"
                      >
                        <Skeleton
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                          <div
                            className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__md"
                          >
                            <span
                              className="pf-u-screen-reader"
                            />
                          </div>
                        </Skeleton>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        size="md"
                      >
                        <Skeleton
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                          <div
                            className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__md"
                          >
                            <span
                              className="pf-u-screen-reader"
                            />
                          </div>
                        </Skeleton>
                      </Skeleton>
                    </td>
                  </tr>
                  <tr>
                    <td
                      className="fact-loading-width"
                    >
                      <Skeleton
                        size="md"
                      >
                        <Skeleton
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                          <div
                            className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__md"
                          >
                            <span
                              className="pf-u-screen-reader"
                            />
                          </div>
                        </Skeleton>
                      </Skeleton>
                    </td>
                    <td
                      className="state-loading-width"
                    >
                      <Skeleton
                        size="md"
                      >
                        <Skeleton
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                          <div
                            className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__md"
                          >
                            <span
                              className="pf-u-screen-reader"
                            />
                          </div>
                        </Skeleton>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        size="md"
                      >
                        <Skeleton
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                          <div
                            className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__md"
                          >
                            <span
                              className="pf-u-screen-reader"
                            />
                          </div>
                        </Skeleton>
                      </Skeleton>
                    </td>
                  </tr>
                  <tr>
                    <td
                      className="fact-loading-width"
                    >
                      <Skeleton
                        size="md"
                      >
                        <Skeleton
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                          <div
                            className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__md"
                          >
                            <span
                              className="pf-u-screen-reader"
                            />
                          </div>
                        </Skeleton>
                      </Skeleton>
                    </td>
                    <td
                      className="state-loading-width"
                    >
                      <Skeleton
                        size="md"
                      >
                        <Skeleton
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                          <div
                            className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__md"
                          >
                            <span
                              className="pf-u-screen-reader"
                            />
                          </div>
                        </Skeleton>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        size="md"
                      >
                        <Skeleton
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                          <div
                            className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__md"
                          >
                            <span
                              className="pf-u-screen-reader"
                            />
                          </div>
                        </Skeleton>
                      </Skeleton>
                    </td>
                  </tr>
                  <tr>
                    <td
                      className="fact-loading-width"
                    >
                      <Skeleton
                        size="md"
                      >
                        <Skeleton
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                          <div
                            className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__md"
                          >
                            <span
                              className="pf-u-screen-reader"
                            />
                          </div>
                        </Skeleton>
                      </Skeleton>
                    </td>
                    <td
                      className="state-loading-width"
                    >
                      <Skeleton
                        size="md"
                      >
                        <Skeleton
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                          <div
                            className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__md"
                          >
                            <span
                              className="pf-u-screen-reader"
                            />
                          </div>
                        </Skeleton>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        size="md"
                      >
                        <Skeleton
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                          <div
                            className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__md"
                          >
                            <span
                              className="pf-u-screen-reader"
                            />
                          </div>
                        </Skeleton>
                      </Skeleton>
                    </td>
                  </tr>
                  <tr>
                    <td
                      className="fact-loading-width"
                    >
                      <Skeleton
                        size="md"
                      >
                        <Skeleton
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                          <div
                            className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__md"
                          >
                            <span
                              className="pf-u-screen-reader"
                            />
                          </div>
                        </Skeleton>
                      </Skeleton>
                    </td>
                    <td
                      className="state-loading-width"
                    >
                      <Skeleton
                        size="md"
                      >
                        <Skeleton
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                          <div
                            className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__md"
                          >
                            <span
                              className="pf-u-screen-reader"
                            />
                          </div>
                        </Skeleton>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        size="md"
                      >
                        <Skeleton
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                          <div
                            className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__md"
                          >
                            <span
                              className="pf-u-screen-reader"
                            />
                          </div>
                        </Skeleton>
                      </Skeleton>
                    </td>
                  </tr>
                  <tr>
                    <td
                      className="fact-loading-width"
                    >
                      <Skeleton
                        size="md"
                      >
                        <Skeleton
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                          <div
                            className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__md"
                          >
                            <span
                              className="pf-u-screen-reader"
                            />
                          </div>
                        </Skeleton>
                      </Skeleton>
                    </td>
                    <td
                      className="state-loading-width"
                    >
                      <Skeleton
                        size="md"
                      >
                        <Skeleton
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                          <div
                            className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__md"
                          >
                            <span
                              className="pf-u-screen-reader"
                            />
                          </div>
                        </Skeleton>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        size="md"
                      >
                        <Skeleton
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                          <div
                            className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__md"
                          >
                            <span
                              className="pf-u-screen-reader"
                            />
                          </div>
                        </Skeleton>
                      </Skeleton>
                    </td>
                  </tr>
                  <tr>
                    <td
                      className="fact-loading-width"
                    >
                      <Skeleton
                        size="md"
                      >
                        <Skeleton
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                          <div
                            className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__md"
                          >
                            <span
                              className="pf-u-screen-reader"
                            />
                          </div>
                        </Skeleton>
                      </Skeleton>
                    </td>
                    <td
                      className="state-loading-width"
                    >
                      <Skeleton
                        size="md"
                      >
                        <Skeleton
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                          <div
                            className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__md"
                          >
                            <span
                              className="pf-u-screen-reader"
                            />
                          </div>
                        </Skeleton>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        size="md"
                      >
                        <Skeleton
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                          <div
                            className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__md"
                          >
                            <span
                              className="pf-u-screen-reader"
                            />
                          </div>
                        </Skeleton>
                      </Skeleton>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
          </DriftTable>
        </DriftTableWithHooks>
      </Connect(DriftTableWithHooks)>
    </Provider>
  </Router>
</MemoryRouter>
`;

exports[`ConnectedDriftTable should render systems, baselines and historicalProfiles 1`] = `
<MemoryRouter
  keyLength={0}
>
  <Router
    location={
      Object {
        "hash": "",
        "key": "default",
        "pathname": "/",
        "search": "",
        "state": null,
      }
    }
    navigationType="POP"
    navigator={
      Object {
        "action": "POP",
        "createHref": [Function],
        "createURL": [Function],
        "encodeLocation": [Function],
        "go": [Function],
        "index": 0,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "key": "default",
          "pathname": "/",
          "search": "",
          "state": null,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <Connect(DriftTableWithHooks)
        addStateFilter={[MockFunction]}
        baselines={
          Array [
            Object {
              "display_name": "baseline1",
              "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
              "last_updated": "2019-01-15T14:53:15.886891Z",
              "type": "baseline",
            },
            Object {
              "display_name": "baseline2",
              "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
              "last_updated": "2019-01-15T15:25:16.304899Z",
              "type": "baseline",
            },
          ]
        }
        factTypeFilters={Array []}
        fetchCompare={[MockFunction]}
        handleFactFilter={
          [MockFunction] {
            "calls": Array [
              Array [
                "",
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": Object {
                  "type": "null",
                },
              },
            ],
          }
        }
        historicalProfiles={
          Array [
            Object {
              "display_name": "system1",
              "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
              "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
              "type": "historical-system-profile",
              "updated": "2019-01-15T14:53:15.886891Z",
            },
            Object {
              "display_name": "system1",
              "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
              "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
              "type": "historical-system-profile",
              "updated": "2019-01-15T15:25:16.304899Z",
            },
          ]
        }
        permissions={
          Object {
            "hspRead": true,
          }
        }
        searchParams={
          Object {
            "get": [MockFunction] {
              "calls": Array [
                Array [
                  "reference_id",
                ],
                Array [
                  "filter[name]",
                ],
                Array [
                  "filter[state]",
                ],
                Array [
                  "filter[show]",
                ],
                Array [
                  "sort",
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": "",
                },
                Object {
                  "type": "return",
                  "value": "",
                },
                Object {
                  "type": "return",
                  "value": "",
                },
                Object {
                  "type": "return",
                  "value": "",
                },
                Object {
                  "type": "return",
                  "value": "",
                },
              ],
            },
            "getAll": [MockFunction] {
              "calls": Array [
                Array [
                  "system_ids",
                ],
                Array [
                  "baseline_ids",
                ],
                Array [
                  "hsp_ids",
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": "",
                },
                Object {
                  "type": "return",
                  "value": "",
                },
                Object {
                  "type": "return",
                  "value": "",
                },
              ],
            },
          }
        }
        setHistory={[MockFunction]}
        setIsFirstReference={[MockFunction]}
        stateFilters={Array []}
        systems={
          Array [
            Object {
              "display_name": "sgi-xe500-01.rhts.eng.bos.redhat.com",
              "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
              "last_updated": "2019-01-15T14:53:15.886891Z",
              "type": "system",
            },
            Object {
              "display_name": "ibm-x3650m4-03-vm03.lab.eng.brq.redhat.com",
              "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
              "last_updated": "2019-01-15T15:25:16.304899Z",
              "type": "system",
            },
          ]
        }
        updateReferenceId={
          [MockFunction] {
            "calls": Array [
              Array [
                undefined,
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          }
        }
      >
        <DriftTableWithHooks
          addStateFilter={[MockFunction]}
          addSystemModalOpened={false}
          baselines={
            Array [
              Object {
                "display_name": "baseline1",
                "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                "last_updated": "2019-01-15T14:53:15.886891Z",
                "type": "baseline",
              },
              Object {
                "display_name": "baseline2",
                "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                "last_updated": "2019-01-15T15:25:16.304899Z",
                "type": "baseline",
              },
            ]
          }
          emptyState={false}
          expandRow={[Function]}
          expandedRows={Array []}
          factTypeFilters={Array []}
          fetchCompare={[Function]}
          filteredCompareData={
            Array [
              Object {
                "name": "cpus",
                "state": "DIFFERENT",
                "systems": Array [
                  Object {
                    "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                    "value": "4",
                  },
                  Object {
                    "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                    "value": "3",
                  },
                ],
                "tooltip": "Different - At least one system fact value in this row differs.",
              },
              Object {
                "name": "bios_uuid",
                "state": "SAME",
                "systems": Array [
                  Object {
                    "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                    "value": "FAKE-BIOS",
                  },
                  Object {
                    "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                    "value": "FAKE-BIOS",
                  },
                ],
              },
              Object {
                "name": "display_name",
                "state": "SAME",
                "systems": Array [
                  Object {
                    "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                    "value": "PC-NAME",
                  },
                  Object {
                    "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                    "value": "PC-NAME",
                  },
                ],
              },
            ]
          }
          fullCompareData={
            Array [
              Object {
                "name": "cpus",
                "state": "DIFFERENT",
                "systems": Array [
                  Object {
                    "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                    "value": "4",
                  },
                  Object {
                    "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                    "value": "3",
                  },
                ],
                "tooltip": "Different - At least one system fact value in this row differs.",
              },
              Object {
                "name": "bios_uuid",
                "state": "SAME",
                "systems": Array [
                  Object {
                    "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                    "value": "FAKE-BIOS",
                  },
                  Object {
                    "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                    "value": "FAKE-BIOS",
                  },
                ],
              },
              Object {
                "name": "display_name",
                "state": "SAME",
                "systems": Array [
                  Object {
                    "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                    "value": "PC-NAME",
                  },
                  Object {
                    "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                    "value": "PC-NAME",
                  },
                ],
              },
            ]
          }
          handleFactFilter={
            [MockFunction] {
              "calls": Array [
                Array [
                  "",
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": Object {
                    "type": "null",
                  },
                },
              ],
            }
          }
          historicalProfiles={
            Array [
              Object {
                "display_name": "system1",
                "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                "type": "historical-system-profile",
                "updated": "2019-01-15T14:53:15.886891Z",
              },
              Object {
                "display_name": "system1",
                "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                "type": "historical-system-profile",
                "updated": "2019-01-15T15:25:16.304899Z",
              },
            ]
          }
          loading={false}
          permissions={
            Object {
              "hspRead": true,
            }
          }
          searchParams={
            Object {
              "get": [MockFunction] {
                "calls": Array [
                  Array [
                    "reference_id",
                  ],
                  Array [
                    "filter[name]",
                  ],
                  Array [
                    "filter[state]",
                  ],
                  Array [
                    "filter[show]",
                  ],
                  Array [
                    "sort",
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": "",
                  },
                  Object {
                    "type": "return",
                    "value": "",
                  },
                  Object {
                    "type": "return",
                    "value": "",
                  },
                  Object {
                    "type": "return",
                    "value": "",
                  },
                  Object {
                    "type": "return",
                    "value": "",
                  },
                ],
              },
              "getAll": [MockFunction] {
                "calls": Array [
                  Array [
                    "system_ids",
                  ],
                  Array [
                    "baseline_ids",
                  ],
                  Array [
                    "hsp_ids",
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": "",
                  },
                  Object {
                    "type": "return",
                    "value": "",
                  },
                  Object {
                    "type": "return",
                    "value": "",
                  },
                ],
              },
            }
          }
          selectHistoricProfiles={[Function]}
          setHistory={[MockFunction]}
          setIsFirstReference={[MockFunction]}
          setSelectedBaselines={[Function]}
          stateFilters={Array []}
          systems={
            Array [
              Object {
                "display_name": "sgi-xe500-01.rhts.eng.bos.redhat.com",
                "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                "last_updated": "2019-01-15T14:53:15.886891Z",
                "type": "system",
              },
              Object {
                "display_name": "ibm-x3650m4-03-vm03.lab.eng.brq.redhat.com",
                "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                "last_updated": "2019-01-15T15:25:16.304899Z",
                "type": "system",
              },
            ]
          }
          toggleFactSort={[Function]}
          toggleStateSort={[Function]}
          updateReferenceId={
            [MockFunction] {
              "calls": Array [
                Array [
                  undefined,
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            }
          }
        >
          <DriftTable
            addStateFilter={[MockFunction]}
            addSystemModalOpened={false}
            baselines={
              Array [
                Object {
                  "display_name": "baseline1",
                  "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                  "last_updated": "2019-01-15T14:53:15.886891Z",
                  "type": "baseline",
                },
                Object {
                  "display_name": "baseline2",
                  "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                  "last_updated": "2019-01-15T15:25:16.304899Z",
                  "type": "baseline",
                },
              ]
            }
            chrome={
              Object {
                "appAction": [MockFunction],
                "isBeta": [MockFunction],
              }
            }
            emptyState={false}
            expandRow={[Function]}
            expandedRows={Array []}
            factTypeFilters={Array []}
            fetchCompare={[Function]}
            filteredCompareData={
              Array [
                Object {
                  "name": "cpus",
                  "state": "DIFFERENT",
                  "systems": Array [
                    Object {
                      "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                      "value": "4",
                    },
                    Object {
                      "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                      "value": "3",
                    },
                  ],
                  "tooltip": "Different - At least one system fact value in this row differs.",
                },
                Object {
                  "name": "bios_uuid",
                  "state": "SAME",
                  "systems": Array [
                    Object {
                      "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                      "value": "FAKE-BIOS",
                    },
                    Object {
                      "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                      "value": "FAKE-BIOS",
                    },
                  ],
                },
                Object {
                  "name": "display_name",
                  "state": "SAME",
                  "systems": Array [
                    Object {
                      "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                      "value": "PC-NAME",
                    },
                    Object {
                      "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                      "value": "PC-NAME",
                    },
                  ],
                },
              ]
            }
            fullCompareData={
              Array [
                Object {
                  "name": "cpus",
                  "state": "DIFFERENT",
                  "systems": Array [
                    Object {
                      "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                      "value": "4",
                    },
                    Object {
                      "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                      "value": "3",
                    },
                  ],
                  "tooltip": "Different - At least one system fact value in this row differs.",
                },
                Object {
                  "name": "bios_uuid",
                  "state": "SAME",
                  "systems": Array [
                    Object {
                      "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                      "value": "FAKE-BIOS",
                    },
                    Object {
                      "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                      "value": "FAKE-BIOS",
                    },
                  ],
                },
                Object {
                  "name": "display_name",
                  "state": "SAME",
                  "systems": Array [
                    Object {
                      "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                      "value": "PC-NAME",
                    },
                    Object {
                      "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                      "value": "PC-NAME",
                    },
                  ],
                },
              ]
            }
            handleFactFilter={
              [MockFunction] {
                "calls": Array [
                  Array [
                    "",
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": Object {
                      "type": "null",
                    },
                  },
                ],
              }
            }
            historicalProfiles={
              Array [
                Object {
                  "display_name": "system1",
                  "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                  "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                  "type": "historical-system-profile",
                  "updated": "2019-01-15T14:53:15.886891Z",
                },
                Object {
                  "display_name": "system1",
                  "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                  "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                  "type": "historical-system-profile",
                  "updated": "2019-01-15T15:25:16.304899Z",
                },
              ]
            }
            loading={false}
            permissions={
              Object {
                "hspRead": true,
              }
            }
            searchParams={
              Object {
                "get": [MockFunction] {
                  "calls": Array [
                    Array [
                      "reference_id",
                    ],
                    Array [
                      "filter[name]",
                    ],
                    Array [
                      "filter[state]",
                    ],
                    Array [
                      "filter[show]",
                    ],
                    Array [
                      "sort",
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": "",
                    },
                    Object {
                      "type": "return",
                      "value": "",
                    },
                    Object {
                      "type": "return",
                      "value": "",
                    },
                    Object {
                      "type": "return",
                      "value": "",
                    },
                    Object {
                      "type": "return",
                      "value": "",
                    },
                  ],
                },
                "getAll": [MockFunction] {
                  "calls": Array [
                    Array [
                      "system_ids",
                    ],
                    Array [
                      "baseline_ids",
                    ],
                    Array [
                      "hsp_ids",
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": "",
                    },
                    Object {
                      "type": "return",
                      "value": "",
                    },
                    Object {
                      "type": "return",
                      "value": "",
                    },
                  ],
                },
              }
            }
            selectHistoricProfiles={[Function]}
            setHistory={[MockFunction]}
            setIsFirstReference={[MockFunction]}
            setSelectedBaselines={[Function]}
            stateFilters={Array []}
            systems={
              Array [
                Object {
                  "display_name": "sgi-xe500-01.rhts.eng.bos.redhat.com",
                  "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                  "last_updated": "2019-01-15T14:53:15.886891Z",
                  "type": "system",
                },
                Object {
                  "display_name": "ibm-x3650m4-03-vm03.lab.eng.brq.redhat.com",
                  "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                  "last_updated": "2019-01-15T15:25:16.304899Z",
                  "type": "system",
                },
              ]
            }
            toggleFactSort={[Function]}
            toggleStateSort={[Function]}
            updateReferenceId={
              [MockFunction] {
                "calls": Array [
                  Array [
                    undefined,
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              }
            }
          >
            <Connect(WrappedAddSystemModal)
              confirmModal={[Function]}
              permissions={
                Object {
                  "hspRead": true,
                }
              }
              selectedSystemIds={
                Array [
                  "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                  "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                ]
              }
              updateReferenceId={
                [MockFunction] {
                  "calls": Array [
                    Array [
                      undefined,
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": undefined,
                    },
                  ],
                }
              }
            >
              <WrappedAddSystemModal
                addSystemModalOpened={false}
                confirmModal={[Function]}
                disableSystemTable={[Function]}
                handleBaselineSelection={[Function]}
                handleHSPSelection={[Function]}
                handleSystemSelection={[Function]}
                permissions={
                  Object {
                    "hspRead": true,
                  }
                }
                revertBaselineFetch={[Function]}
                selectActiveTab={[Function]}
                selectBaseline={[Function]}
                selectEntity={[Function]}
                selectHistoricProfiles={[Function]}
                selectedBaselineIds={Array []}
                selectedHSPIds={Array []}
                selectedSystemIds={
                  Array [
                    "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                    "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                  ]
                }
                setSelectedBaselines={[Function]}
                setSelectedSystemIds={[Function]}
                toggleAddSystemModal={[Function]}
                updateReferenceId={
                  [MockFunction] {
                    "calls": Array [
                      Array [
                        undefined,
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                    ],
                  }
                }
              >
                <AddSystemModal
                  addSystemModalOpened={false}
                  confirmModal={[Function]}
                  disableSystemTable={[Function]}
                  handleBaselineSelection={[Function]}
                  handleHSPSelection={[Function]}
                  handleSystemSelection={[Function]}
                  permissions={
                    Object {
                      "hspRead": true,
                    }
                  }
                  revertBaselineFetch={[Function]}
                  selectActiveTab={[Function]}
                  selectBaseline={[Function]}
                  selectEntity={[Function]}
                  selectHistoricProfiles={[Function]}
                  selectedBaselineIds={Array []}
                  selectedHSPIds={Array []}
                  selectedSystemIds={
                    Array [
                      "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                      "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                    ]
                  }
                  setSelectedBaselines={[Function]}
                  setSelectedSystemIds={[Function]}
                  toggleAddSystemModal={[Function]}
                  updateReferenceId={
                    [MockFunction] {
                      "calls": Array [
                        Array [
                          undefined,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    }
                  }
                >
                  <Modal
                    actions={
                      Array [
                        <Button
                          isDisabled={false}
                          onClick={[Function]}
                          ouiaId="add-to-comparison-submit-button"
                          variant="primary"
                        >
                          Submit
                        </Button>,
                        <Button
                          isDisabled={false}
                          onClick={[Function]}
                          ouiaId="add-to-comparison-cancel-button"
                          variant="link"
                        >
                          Cancel
                        </Button>,
                      ]
                    }
                    appendTo={[Function]}
                    aria-describedby=""
                    aria-label=""
                    aria-labelledby=""
                    className="drift"
                    hasNoBodyWrapper={false}
                    isOpen={false}
                    onClose={[Function]}
                    onScroll={null}
                    ouiaId="add-to-comparison-modal"
                    ouiaSafe={true}
                    showClose={true}
                    style={
                      Object {
                        "maxHeight": "600px",
                      }
                    }
                    title="Add to comparison"
                    titleIconVariant={null}
                    titleLabel=""
                    variant="default"
                    width="1200px"
                  >
                    <Portal
                      containerInfo={<div />}
                    >
                      <ModalContent
                        actions={
                          Array [
                            <Button
                              isDisabled={false}
                              onClick={[Function]}
                              ouiaId="add-to-comparison-submit-button"
                              variant="primary"
                            >
                              Submit
                            </Button>,
                            <Button
                              isDisabled={false}
                              onClick={[Function]}
                              ouiaId="add-to-comparison-cancel-button"
                              variant="link"
                            >
                              Cancel
                            </Button>,
                          ]
                        }
                        aria-describedby=""
                        aria-label=""
                        aria-labelledby=""
                        boxId="pf-modal-part-1"
                        className="drift"
                        descriptorId="pf-modal-part-3"
                        hasNoBodyWrapper={false}
                        isOpen={false}
                        labelId="pf-modal-part-2"
                        onClose={[Function]}
                        onScroll={null}
                        ouiaId="add-to-comparison-modal"
                        ouiaSafe={true}
                        showClose={true}
                        style={
                          Object {
                            "maxHeight": "600px",
                          }
                        }
                        title="Add to comparison"
                        titleIconVariant={null}
                        titleLabel=""
                        variant="default"
                        width="1200px"
                      />
                    </Portal>
                  </Modal>
                </AddSystemModal>
              </WrappedAddSystemModal>
            </Connect(WrappedAddSystemModal)>
            <div
              className="sticky-table-header"
            >
              <div
                className="second-scroll-wrapper"
                onScroll={[Function]}
              >
                <div
                  className="second-scroll"
                  style={
                    Object {
                      "width": 0,
                    }
                  }
                />
              </div>
              <div
                className="drift-table-wrapper"
                onScroll={[Function]}
              >
                <table
                  className="pf-c-table pf-m-compact drift-table"
                  data-ouia-component-id="comparison-table"
                  data-ouia-component-type="PF4/Table"
                >
                  <thead>
                    <ComparisonHeader
                      fetchCompare={[Function]}
                      masterList={
                        Array [
                          Object {
                            "display_name": "baseline1",
                            "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                            "last_updated": "2019-01-15T14:53:15.886891Z",
                            "type": "baseline",
                          },
                          Object {
                            "display_name": "baseline2",
                            "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                            "last_updated": "2019-01-15T15:25:16.304899Z",
                            "type": "baseline",
                          },
                          Object {
                            "display_name": "sgi-xe500-01.rhts.eng.bos.redhat.com",
                            "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                            "last_updated": "2019-01-15T14:53:15.886891Z",
                            "type": "system",
                          },
                          Object {
                            "display_name": "system1",
                            "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                            "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                            "type": "historical-system-profile",
                            "updated": "2019-01-15T14:53:15.886891Z",
                          },
                          Object {
                            "display_name": "system1",
                            "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                            "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                            "type": "historical-system-profile",
                            "updated": "2019-01-15T15:25:16.304899Z",
                          },
                          Object {
                            "display_name": "ibm-x3650m4-03-vm03.lab.eng.brq.redhat.com",
                            "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                            "last_updated": "2019-01-15T15:25:16.304899Z",
                            "type": "system",
                          },
                        ]
                      }
                      permissions={
                        Object {
                          "hspRead": true,
                        }
                      }
                      removeSystem={[Function]}
                      selectHistoricProfiles={[Function]}
                      setColumnHeaderWidth={[Function]}
                      setHistory={[MockFunction]}
                      systemIds={
                        Array [
                          "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                          "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                        ]
                      }
                      toggleFactSort={[Function]}
                      toggleStateSort={[Function]}
                      updateReferenceId={[Function]}
                    >
                      <tr
                        className="sticky-column-header"
                        data-ouia-component-id="comparison-table-header-row"
                        data-ouia-component-type="PF4/TableRow"
                      >
                        <th
                          className="fact-header sticky-column fixed-column-1 pointer sticky-header"
                          data-ouia-component-id="fact-sort-button"
                          data-ouia-component-type="PF4/Button"
                          key="fact-header"
                          onClick={[Function]}
                        >
                          <div
                            className="active-blue"
                          >
                            Fact 
                            <ArrowsAltVIcon
                              className="not-active"
                              color="currentColor"
                              noVerticalAlign={false}
                              size="sm"
                            >
                              <svg
                                aria-hidden={true}
                                aria-labelledby={null}
                                className="not-active"
                                fill="currentColor"
                                height="1em"
                                role="img"
                                style={
                                  Object {
                                    "verticalAlign": "-0.125em",
                                  }
                                }
                                viewBox="0 0 256 512"
                                width="1em"
                              >
                                <path
                                  d="M214.059 377.941H168V134.059h46.059c21.382 0 32.09-25.851 16.971-40.971L144.971 7.029c-9.373-9.373-24.568-9.373-33.941 0L24.971 93.088c-15.119 15.119-4.411 40.971 16.971 40.971H88v243.882H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.568 9.373 33.941 0l86.059-86.059c15.12-15.119 4.412-40.971-16.97-40.971z"
                                />
                              </svg>
                            </ArrowsAltVIcon>
                          </div>
                        </th>
                        <th
                          className="state-header sticky-column fixed-column-2 pointer right-border sticky-header"
                          data-ouia-component-id="state-sort-button"
                          data-ouia-component-type="PF4/Button"
                          id="disabled"
                          key="state-header"
                          onClick={[Function]}
                        >
                          <div
                            className="active-blue"
                          >
                            State 
                            <ArrowsAltVIcon
                              className="not-active"
                              color="currentColor"
                              noVerticalAlign={false}
                              size="sm"
                            >
                              <svg
                                aria-hidden={true}
                                aria-labelledby={null}
                                className="not-active"
                                fill="currentColor"
                                height="1em"
                                role="img"
                                style={
                                  Object {
                                    "verticalAlign": "-0.125em",
                                  }
                                }
                                viewBox="0 0 256 512"
                                width="1em"
                              >
                                <path
                                  d="M214.059 377.941H168V134.059h46.059c21.382 0 32.09-25.851 16.971-40.971L144.971 7.029c-9.373-9.373-24.568-9.373-33.941 0L24.971 93.088c-15.119 15.119-4.411 40.971 16.971 40.971H88v243.882H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.568 9.373 33.941 0l86.059-86.059c15.12-15.119 4.412-40.971-16.97-40.971z"
                                />
                              </svg>
                            </ArrowsAltVIcon>
                          </div>
                        </th>
                        <th
                          className="drift-header right-border baseline-header sticky-header"
                          header-id="9bbbefcc-8f23-4d97-07f2-142asdl234e9"
                          key="9bbbefcc-8f23-4d97-07f2-142asdl234e9"
                        >
                          <div>
                            <a
                              className="remove-system-icon"
                              data-ouia-component-id="remove-system-button-9bbbefcc-8f23-4d97-07f2-142asdl234e9"
                              data-ouia-component-type="PF4/Button"
                              onClick={[Function]}
                            >
                              <TimesIcon
                                color="currentColor"
                                noVerticalAlign={false}
                                size="sm"
                              >
                                <svg
                                  aria-hidden={true}
                                  aria-labelledby={null}
                                  fill="currentColor"
                                  height="1em"
                                  role="img"
                                  style={
                                    Object {
                                      "verticalAlign": "-0.125em",
                                    }
                                  }
                                  viewBox="0 0 352 512"
                                  width="1em"
                                >
                                  <path
                                    d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                                  />
                                </svg>
                              </TimesIcon>
                            </a>
                          </div>
                          <div
                            className="comparison-header"
                          >
                            <div>
                              <span
                                className="drift-header-icon"
                              >
                                <Tooltip
                                  content={
                                    <div>
                                      Baseline
                                    </div>
                                  }
                                  position="top"
                                >
                                  <Popper
                                    appendTo={[Function]}
                                    distance={15}
                                    enableFlip={true}
                                    flipBehavior={
                                      Array [
                                        "top",
                                        "right",
                                        "bottom",
                                        "left",
                                        "top",
                                        "right",
                                        "bottom",
                                      ]
                                    }
                                    isVisible={false}
                                    onBlur={[Function]}
                                    onDocumentClick={false}
                                    onDocumentKeyDown={[Function]}
                                    onFocus={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                    onPopperMouseEnter={[Function]}
                                    onPopperMouseLeave={[Function]}
                                    onTriggerEnter={[Function]}
                                    placement="top"
                                    popper={
                                      <div
                                        aria-live="off"
                                        className="pf-c-tooltip"
                                        id="pf-tooltip-16"
                                        role="tooltip"
                                        style={
                                          Object {
                                            "maxWidth": null,
                                            "opacity": 0,
                                            "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                          }
                                        }
                                      >
                                        <TooltipArrow />
                                        <TooltipContent
                                          isLeftAligned={false}
                                        >
                                          <div>
                                            Baseline
                                          </div>
                                        </TooltipContent>
                                      </div>
                                    }
                                    popperMatchesTriggerWidth={false}
                                    positionModifiers={
                                      Object {
                                        "bottom": "pf-m-bottom",
                                        "bottom-end": "pf-m-bottom-right",
                                        "bottom-start": "pf-m-bottom-left",
                                        "left": "pf-m-left",
                                        "left-end": "pf-m-left-bottom",
                                        "left-start": "pf-m-left-top",
                                        "right": "pf-m-right",
                                        "right-end": "pf-m-right-bottom",
                                        "right-start": "pf-m-right-top",
                                        "top": "pf-m-top",
                                        "top-end": "pf-m-top-right",
                                        "top-start": "pf-m-top-left",
                                      }
                                    }
                                    removeFindDomNode={false}
                                    trigger={
                                      <BlueprintIcon
                                        color="currentColor"
                                        noVerticalAlign={false}
                                        size="sm"
                                      />
                                    }
                                    zIndex={9999}
                                  >
                                    <FindRefWrapper
                                      onFoundRef={[Function]}
                                    >
                                      <BlueprintIcon
                                        color="currentColor"
                                        noVerticalAlign={false}
                                        size="sm"
                                      >
                                        <svg
                                          aria-hidden={true}
                                          aria-labelledby={null}
                                          fill="currentColor"
                                          height="1em"
                                          role="img"
                                          style={
                                            Object {
                                              "verticalAlign": "-0.125em",
                                            }
                                          }
                                          viewBox="0 0 1024 1024"
                                          width="1em"
                                        >
                                          <path
                                            d="M0,767.3 L0,640 L64,640 L64,752.3 C64,760.584271 70.7157288,767.3 79,767.3 L128,768.1 L128,832.1 L64,831.3 C28.6674863,831.266922 0.0330777378,802.632514 0,767.3 Z M64,0 L191.3,0 L191.3,64 L79,64 C70.7157288,64 64,70.7157288 64,79 L64,192 L0,192 L0,64 C0.0330777378,28.6674863 28.6674863,0.0330777378 64,0 Z M0,384 L64,384 L64,256 L0,256 L0,384 Z M0,576 L64,576 L64,448 L0,448 L0,576 Z M832,64.7 L832,128 L768,128 L768,79.7 C768,71.4157288 761.284271,64.7 753,64.7 L640,64.7 L640,0.7 L768,0.7 C803.332514,0.733077738 831.966922,29.3674863 832,64.7 Z M448,64.7 L576,64.7 L576,0.7 L448,0.7 L448,64.7 Z M256,64.7 L384,64.7 L384,0.7 L256,0.7 L256,64.7 Z M960,192 L256,192 C220.667486,192.033078 192.033078,220.667486 192,256 L192,960 C192.033078,995.332514 220.667486,1023.96692 256,1024 L960,1024 C995.332514,1023.96692 1023.96692,995.332514 1024,960 L1024,256 C1023.96692,220.667486 995.332514,192.033078 960,192 Z M960,945 C960,953.284271 953.284271,960 945,960 L271,960 C262.715729,960 256,953.284271 256,945 L256,271 C256,262.715729 262.715729,256 271,256 L945,256 C953.284271,256 960,262.715729 960,271 L960,945 Z"
                                          />
                                        </svg>
                                      </BlueprintIcon>
                                    </FindRefWrapper>
                                  </Popper>
                                </Tooltip>
                              </span>
                              <span
                                className="system-name"
                              >
                                baseline1
                              </span>
                            </div>
                            <div
                              className="system-updated-and-reference"
                            >
                              <ReferenceSelector
                                isReference={false}
                                item={
                                  Object {
                                    "display_name": "baseline1",
                                    "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                                    "last_updated": "2019-01-15T14:53:15.886891Z",
                                    "type": "baseline",
                                  }
                                }
                                updateReferenceId={[Function]}
                              >
                                <Tooltip
                                  content={
                                    <div>
                                      Use this 
                                      baseline
                                       as a reference to compare.
                                    </div>
                                  }
                                  position="top"
                                >
                                  <Popper
                                    appendTo={[Function]}
                                    distance={15}
                                    enableFlip={true}
                                    flipBehavior={
                                      Array [
                                        "top",
                                        "right",
                                        "bottom",
                                        "left",
                                        "top",
                                        "right",
                                        "bottom",
                                      ]
                                    }
                                    isVisible={false}
                                    onBlur={[Function]}
                                    onDocumentClick={false}
                                    onDocumentKeyDown={[Function]}
                                    onFocus={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                    onPopperMouseEnter={[Function]}
                                    onPopperMouseLeave={[Function]}
                                    onTriggerEnter={[Function]}
                                    placement="top"
                                    popper={
                                      <div
                                        aria-live="off"
                                        className="pf-c-tooltip"
                                        id="pf-tooltip-17"
                                        role="tooltip"
                                        style={
                                          Object {
                                            "maxWidth": null,
                                            "opacity": 0,
                                            "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                          }
                                        }
                                      >
                                        <TooltipArrow />
                                        <TooltipContent
                                          isLeftAligned={false}
                                        >
                                          <div>
                                            Use this 
                                            baseline
                                             as a reference to compare.
                                          </div>
                                        </TooltipContent>
                                      </div>
                                    }
                                    popperMatchesTriggerWidth={false}
                                    positionModifiers={
                                      Object {
                                        "bottom": "pf-m-bottom",
                                        "bottom-end": "pf-m-bottom-right",
                                        "bottom-start": "pf-m-bottom-left",
                                        "left": "pf-m-left",
                                        "left-end": "pf-m-left-bottom",
                                        "left-start": "pf-m-left-top",
                                        "right": "pf-m-right",
                                        "right-end": "pf-m-right-bottom",
                                        "right-start": "pf-m-right-top",
                                        "top": "pf-m-top",
                                        "top-end": "pf-m-top-right",
                                        "top-start": "pf-m-top-left",
                                      }
                                    }
                                    removeFindDomNode={false}
                                    trigger={
                                      <OutlinedStarIcon
                                        className="reference-selector pointer"
                                        color="currentColor"
                                        data-ouia-component-id="reference-selector-9bbbefcc-8f23-4d97-07f2-142asdl234e9"
                                        data-ouia-component-type="PF4/Button"
                                        noVerticalAlign={false}
                                        onClick={[Function]}
                                        size="sm"
                                      />
                                    }
                                    zIndex={9999}
                                  >
                                    <FindRefWrapper
                                      onFoundRef={[Function]}
                                    >
                                      <OutlinedStarIcon
                                        className="reference-selector pointer"
                                        color="currentColor"
                                        data-ouia-component-id="reference-selector-9bbbefcc-8f23-4d97-07f2-142asdl234e9"
                                        data-ouia-component-type="PF4/Button"
                                        noVerticalAlign={false}
                                        onClick={[Function]}
                                        size="sm"
                                      >
                                        <svg
                                          aria-hidden={true}
                                          aria-labelledby={null}
                                          className="reference-selector pointer"
                                          data-ouia-component-id="reference-selector-9bbbefcc-8f23-4d97-07f2-142asdl234e9"
                                          data-ouia-component-type="PF4/Button"
                                          fill="currentColor"
                                          height="1em"
                                          onClick={[Function]}
                                          role="img"
                                          style={
                                            Object {
                                              "verticalAlign": "-0.125em",
                                            }
                                          }
                                          viewBox="0 0 576 512"
                                          width="1em"
                                        >
                                          <path
                                            d="M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z"
                                          />
                                        </svg>
                                      </OutlinedStarIcon>
                                    </FindRefWrapper>
                                  </Popper>
                                </Tooltip>
                              </ReferenceSelector>
                              <span
                                className="margin-right-4-px"
                              >
                                15 Jan 2019, 14:53 UTC
                              </span>
                            </div>
                          </div>
                        </th>
                        <th
                          className="drift-header right-border baseline-header sticky-header"
                          header-id="fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29"
                          key="fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29"
                        >
                          <div>
                            <a
                              className="remove-system-icon"
                              data-ouia-component-id="remove-system-button-fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29"
                              data-ouia-component-type="PF4/Button"
                              onClick={[Function]}
                            >
                              <TimesIcon
                                color="currentColor"
                                noVerticalAlign={false}
                                size="sm"
                              >
                                <svg
                                  aria-hidden={true}
                                  aria-labelledby={null}
                                  fill="currentColor"
                                  height="1em"
                                  role="img"
                                  style={
                                    Object {
                                      "verticalAlign": "-0.125em",
                                    }
                                  }
                                  viewBox="0 0 352 512"
                                  width="1em"
                                >
                                  <path
                                    d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                                  />
                                </svg>
                              </TimesIcon>
                            </a>
                          </div>
                          <div
                            className="comparison-header"
                          >
                            <div>
                              <span
                                className="drift-header-icon"
                              >
                                <Tooltip
                                  content={
                                    <div>
                                      Baseline
                                    </div>
                                  }
                                  position="top"
                                >
                                  <Popper
                                    appendTo={[Function]}
                                    distance={15}
                                    enableFlip={true}
                                    flipBehavior={
                                      Array [
                                        "top",
                                        "right",
                                        "bottom",
                                        "left",
                                        "top",
                                        "right",
                                        "bottom",
                                      ]
                                    }
                                    isVisible={false}
                                    onBlur={[Function]}
                                    onDocumentClick={false}
                                    onDocumentKeyDown={[Function]}
                                    onFocus={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                    onPopperMouseEnter={[Function]}
                                    onPopperMouseLeave={[Function]}
                                    onTriggerEnter={[Function]}
                                    placement="top"
                                    popper={
                                      <div
                                        aria-live="off"
                                        className="pf-c-tooltip"
                                        id="pf-tooltip-18"
                                        role="tooltip"
                                        style={
                                          Object {
                                            "maxWidth": null,
                                            "opacity": 0,
                                            "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                          }
                                        }
                                      >
                                        <TooltipArrow />
                                        <TooltipContent
                                          isLeftAligned={false}
                                        >
                                          <div>
                                            Baseline
                                          </div>
                                        </TooltipContent>
                                      </div>
                                    }
                                    popperMatchesTriggerWidth={false}
                                    positionModifiers={
                                      Object {
                                        "bottom": "pf-m-bottom",
                                        "bottom-end": "pf-m-bottom-right",
                                        "bottom-start": "pf-m-bottom-left",
                                        "left": "pf-m-left",
                                        "left-end": "pf-m-left-bottom",
                                        "left-start": "pf-m-left-top",
                                        "right": "pf-m-right",
                                        "right-end": "pf-m-right-bottom",
                                        "right-start": "pf-m-right-top",
                                        "top": "pf-m-top",
                                        "top-end": "pf-m-top-right",
                                        "top-start": "pf-m-top-left",
                                      }
                                    }
                                    removeFindDomNode={false}
                                    trigger={
                                      <BlueprintIcon
                                        color="currentColor"
                                        noVerticalAlign={false}
                                        size="sm"
                                      />
                                    }
                                    zIndex={9999}
                                  >
                                    <FindRefWrapper
                                      onFoundRef={[Function]}
                                    >
                                      <BlueprintIcon
                                        color="currentColor"
                                        noVerticalAlign={false}
                                        size="sm"
                                      >
                                        <svg
                                          aria-hidden={true}
                                          aria-labelledby={null}
                                          fill="currentColor"
                                          height="1em"
                                          role="img"
                                          style={
                                            Object {
                                              "verticalAlign": "-0.125em",
                                            }
                                          }
                                          viewBox="0 0 1024 1024"
                                          width="1em"
                                        >
                                          <path
                                            d="M0,767.3 L0,640 L64,640 L64,752.3 C64,760.584271 70.7157288,767.3 79,767.3 L128,768.1 L128,832.1 L64,831.3 C28.6674863,831.266922 0.0330777378,802.632514 0,767.3 Z M64,0 L191.3,0 L191.3,64 L79,64 C70.7157288,64 64,70.7157288 64,79 L64,192 L0,192 L0,64 C0.0330777378,28.6674863 28.6674863,0.0330777378 64,0 Z M0,384 L64,384 L64,256 L0,256 L0,384 Z M0,576 L64,576 L64,448 L0,448 L0,576 Z M832,64.7 L832,128 L768,128 L768,79.7 C768,71.4157288 761.284271,64.7 753,64.7 L640,64.7 L640,0.7 L768,0.7 C803.332514,0.733077738 831.966922,29.3674863 832,64.7 Z M448,64.7 L576,64.7 L576,0.7 L448,0.7 L448,64.7 Z M256,64.7 L384,64.7 L384,0.7 L256,0.7 L256,64.7 Z M960,192 L256,192 C220.667486,192.033078 192.033078,220.667486 192,256 L192,960 C192.033078,995.332514 220.667486,1023.96692 256,1024 L960,1024 C995.332514,1023.96692 1023.96692,995.332514 1024,960 L1024,256 C1023.96692,220.667486 995.332514,192.033078 960,192 Z M960,945 C960,953.284271 953.284271,960 945,960 L271,960 C262.715729,960 256,953.284271 256,945 L256,271 C256,262.715729 262.715729,256 271,256 L945,256 C953.284271,256 960,262.715729 960,271 L960,945 Z"
                                          />
                                        </svg>
                                      </BlueprintIcon>
                                    </FindRefWrapper>
                                  </Popper>
                                </Tooltip>
                              </span>
                              <span
                                className="system-name"
                              >
                                baseline2
                              </span>
                            </div>
                            <div
                              className="system-updated-and-reference"
                            >
                              <ReferenceSelector
                                isReference={false}
                                item={
                                  Object {
                                    "display_name": "baseline2",
                                    "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                                    "last_updated": "2019-01-15T15:25:16.304899Z",
                                    "type": "baseline",
                                  }
                                }
                                updateReferenceId={[Function]}
                              >
                                <Tooltip
                                  content={
                                    <div>
                                      Use this 
                                      baseline
                                       as a reference to compare.
                                    </div>
                                  }
                                  position="top"
                                >
                                  <Popper
                                    appendTo={[Function]}
                                    distance={15}
                                    enableFlip={true}
                                    flipBehavior={
                                      Array [
                                        "top",
                                        "right",
                                        "bottom",
                                        "left",
                                        "top",
                                        "right",
                                        "bottom",
                                      ]
                                    }
                                    isVisible={false}
                                    onBlur={[Function]}
                                    onDocumentClick={false}
                                    onDocumentKeyDown={[Function]}
                                    onFocus={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                    onPopperMouseEnter={[Function]}
                                    onPopperMouseLeave={[Function]}
                                    onTriggerEnter={[Function]}
                                    placement="top"
                                    popper={
                                      <div
                                        aria-live="off"
                                        className="pf-c-tooltip"
                                        id="pf-tooltip-19"
                                        role="tooltip"
                                        style={
                                          Object {
                                            "maxWidth": null,
                                            "opacity": 0,
                                            "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                          }
                                        }
                                      >
                                        <TooltipArrow />
                                        <TooltipContent
                                          isLeftAligned={false}
                                        >
                                          <div>
                                            Use this 
                                            baseline
                                             as a reference to compare.
                                          </div>
                                        </TooltipContent>
                                      </div>
                                    }
                                    popperMatchesTriggerWidth={false}
                                    positionModifiers={
                                      Object {
                                        "bottom": "pf-m-bottom",
                                        "bottom-end": "pf-m-bottom-right",
                                        "bottom-start": "pf-m-bottom-left",
                                        "left": "pf-m-left",
                                        "left-end": "pf-m-left-bottom",
                                        "left-start": "pf-m-left-top",
                                        "right": "pf-m-right",
                                        "right-end": "pf-m-right-bottom",
                                        "right-start": "pf-m-right-top",
                                        "top": "pf-m-top",
                                        "top-end": "pf-m-top-right",
                                        "top-start": "pf-m-top-left",
                                      }
                                    }
                                    removeFindDomNode={false}
                                    trigger={
                                      <OutlinedStarIcon
                                        className="reference-selector pointer"
                                        color="currentColor"
                                        data-ouia-component-id="reference-selector-fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29"
                                        data-ouia-component-type="PF4/Button"
                                        noVerticalAlign={false}
                                        onClick={[Function]}
                                        size="sm"
                                      />
                                    }
                                    zIndex={9999}
                                  >
                                    <FindRefWrapper
                                      onFoundRef={[Function]}
                                    >
                                      <OutlinedStarIcon
                                        className="reference-selector pointer"
                                        color="currentColor"
                                        data-ouia-component-id="reference-selector-fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29"
                                        data-ouia-component-type="PF4/Button"
                                        noVerticalAlign={false}
                                        onClick={[Function]}
                                        size="sm"
                                      >
                                        <svg
                                          aria-hidden={true}
                                          aria-labelledby={null}
                                          className="reference-selector pointer"
                                          data-ouia-component-id="reference-selector-fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29"
                                          data-ouia-component-type="PF4/Button"
                                          fill="currentColor"
                                          height="1em"
                                          onClick={[Function]}
                                          role="img"
                                          style={
                                            Object {
                                              "verticalAlign": "-0.125em",
                                            }
                                          }
                                          viewBox="0 0 576 512"
                                          width="1em"
                                        >
                                          <path
                                            d="M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z"
                                          />
                                        </svg>
                                      </OutlinedStarIcon>
                                    </FindRefWrapper>
                                  </Popper>
                                </Tooltip>
                              </ReferenceSelector>
                              <span
                                className="margin-right-4-px"
                              >
                                15 Jan 2019, 15:25 UTC
                              </span>
                            </div>
                          </div>
                        </th>
                        <th
                          className="drift-header right-border system-header sticky-header"
                          header-id="9c79efcc-8f9a-47c7-b0f2-142ff52e89e9"
                          key="9c79efcc-8f9a-47c7-b0f2-142ff52e89e9"
                        >
                          <div>
                            <a
                              className="remove-system-icon"
                              data-ouia-component-id="remove-system-button-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9"
                              data-ouia-component-type="PF4/Button"
                              onClick={[Function]}
                            >
                              <TimesIcon
                                color="currentColor"
                                noVerticalAlign={false}
                                size="sm"
                              >
                                <svg
                                  aria-hidden={true}
                                  aria-labelledby={null}
                                  fill="currentColor"
                                  height="1em"
                                  role="img"
                                  style={
                                    Object {
                                      "verticalAlign": "-0.125em",
                                    }
                                  }
                                  viewBox="0 0 352 512"
                                  width="1em"
                                >
                                  <path
                                    d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                                  />
                                </svg>
                              </TimesIcon>
                            </a>
                          </div>
                          <div
                            className="comparison-header"
                          >
                            <div>
                              <span
                                className="drift-header-icon"
                              >
                                <Tooltip
                                  content={
                                    <div>
                                      System
                                    </div>
                                  }
                                  position="top"
                                >
                                  <Popper
                                    appendTo={[Function]}
                                    distance={15}
                                    enableFlip={true}
                                    flipBehavior={
                                      Array [
                                        "top",
                                        "right",
                                        "bottom",
                                        "left",
                                        "top",
                                        "right",
                                        "bottom",
                                      ]
                                    }
                                    isVisible={false}
                                    onBlur={[Function]}
                                    onDocumentClick={false}
                                    onDocumentKeyDown={[Function]}
                                    onFocus={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                    onPopperMouseEnter={[Function]}
                                    onPopperMouseLeave={[Function]}
                                    onTriggerEnter={[Function]}
                                    placement="top"
                                    popper={
                                      <div
                                        aria-live="off"
                                        className="pf-c-tooltip"
                                        id="pf-tooltip-20"
                                        role="tooltip"
                                        style={
                                          Object {
                                            "maxWidth": null,
                                            "opacity": 0,
                                            "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                          }
                                        }
                                      >
                                        <TooltipArrow />
                                        <TooltipContent
                                          isLeftAligned={false}
                                        >
                                          <div>
                                            System
                                          </div>
                                        </TooltipContent>
                                      </div>
                                    }
                                    popperMatchesTriggerWidth={false}
                                    positionModifiers={
                                      Object {
                                        "bottom": "pf-m-bottom",
                                        "bottom-end": "pf-m-bottom-right",
                                        "bottom-start": "pf-m-bottom-left",
                                        "left": "pf-m-left",
                                        "left-end": "pf-m-left-bottom",
                                        "left-start": "pf-m-left-top",
                                        "right": "pf-m-right",
                                        "right-end": "pf-m-right-bottom",
                                        "right-start": "pf-m-right-top",
                                        "top": "pf-m-top",
                                        "top-end": "pf-m-top-right",
                                        "top-start": "pf-m-top-left",
                                      }
                                    }
                                    removeFindDomNode={false}
                                    trigger={
                                      <ServerIcon
                                        color="currentColor"
                                        noVerticalAlign={false}
                                        size="sm"
                                      />
                                    }
                                    zIndex={9999}
                                  >
                                    <FindRefWrapper
                                      onFoundRef={[Function]}
                                    >
                                      <ServerIcon
                                        color="currentColor"
                                        noVerticalAlign={false}
                                        size="sm"
                                      >
                                        <svg
                                          aria-hidden={true}
                                          aria-labelledby={null}
                                          fill="currentColor"
                                          height="1em"
                                          role="img"
                                          style={
                                            Object {
                                              "verticalAlign": "-0.125em",
                                            }
                                          }
                                          viewBox="0 0 512 512"
                                          width="1em"
                                        >
                                          <path
                                            d="M480 160H32c-17.673 0-32-14.327-32-32V64c0-17.673 14.327-32 32-32h448c17.673 0 32 14.327 32 32v64c0 17.673-14.327 32-32 32zm-48-88c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm-64 0c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm112 248H32c-17.673 0-32-14.327-32-32v-64c0-17.673 14.327-32 32-32h448c17.673 0 32 14.327 32 32v64c0 17.673-14.327 32-32 32zm-48-88c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm-64 0c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm112 248H32c-17.673 0-32-14.327-32-32v-64c0-17.673 14.327-32 32-32h448c17.673 0 32 14.327 32 32v64c0 17.673-14.327 32-32 32zm-48-88c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm-64 0c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24z"
                                          />
                                        </svg>
                                      </ServerIcon>
                                    </FindRefWrapper>
                                  </Popper>
                                </Tooltip>
                              </span>
                              <span
                                className="system-name"
                              >
                                sgi-xe500-01.rhts.eng.bos.redhat.com
                              </span>
                            </div>
                            <div
                              className="system-updated-and-reference"
                            >
                              <ReferenceSelector
                                isReference={false}
                                item={
                                  Object {
                                    "display_name": "sgi-xe500-01.rhts.eng.bos.redhat.com",
                                    "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                    "last_updated": "2019-01-15T14:53:15.886891Z",
                                    "type": "system",
                                  }
                                }
                                updateReferenceId={[Function]}
                              >
                                <Tooltip
                                  content={
                                    <div>
                                      Use this 
                                      system
                                       as a reference to compare.
                                    </div>
                                  }
                                  position="top"
                                >
                                  <Popper
                                    appendTo={[Function]}
                                    distance={15}
                                    enableFlip={true}
                                    flipBehavior={
                                      Array [
                                        "top",
                                        "right",
                                        "bottom",
                                        "left",
                                        "top",
                                        "right",
                                        "bottom",
                                      ]
                                    }
                                    isVisible={false}
                                    onBlur={[Function]}
                                    onDocumentClick={false}
                                    onDocumentKeyDown={[Function]}
                                    onFocus={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                    onPopperMouseEnter={[Function]}
                                    onPopperMouseLeave={[Function]}
                                    onTriggerEnter={[Function]}
                                    placement="top"
                                    popper={
                                      <div
                                        aria-live="off"
                                        className="pf-c-tooltip"
                                        id="pf-tooltip-21"
                                        role="tooltip"
                                        style={
                                          Object {
                                            "maxWidth": null,
                                            "opacity": 0,
                                            "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                          }
                                        }
                                      >
                                        <TooltipArrow />
                                        <TooltipContent
                                          isLeftAligned={false}
                                        >
                                          <div>
                                            Use this 
                                            system
                                             as a reference to compare.
                                          </div>
                                        </TooltipContent>
                                      </div>
                                    }
                                    popperMatchesTriggerWidth={false}
                                    positionModifiers={
                                      Object {
                                        "bottom": "pf-m-bottom",
                                        "bottom-end": "pf-m-bottom-right",
                                        "bottom-start": "pf-m-bottom-left",
                                        "left": "pf-m-left",
                                        "left-end": "pf-m-left-bottom",
                                        "left-start": "pf-m-left-top",
                                        "right": "pf-m-right",
                                        "right-end": "pf-m-right-bottom",
                                        "right-start": "pf-m-right-top",
                                        "top": "pf-m-top",
                                        "top-end": "pf-m-top-right",
                                        "top-start": "pf-m-top-left",
                                      }
                                    }
                                    removeFindDomNode={false}
                                    trigger={
                                      <OutlinedStarIcon
                                        className="reference-selector pointer"
                                        color="currentColor"
                                        data-ouia-component-id="reference-selector-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9"
                                        data-ouia-component-type="PF4/Button"
                                        noVerticalAlign={false}
                                        onClick={[Function]}
                                        size="sm"
                                      />
                                    }
                                    zIndex={9999}
                                  >
                                    <FindRefWrapper
                                      onFoundRef={[Function]}
                                    >
                                      <OutlinedStarIcon
                                        className="reference-selector pointer"
                                        color="currentColor"
                                        data-ouia-component-id="reference-selector-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9"
                                        data-ouia-component-type="PF4/Button"
                                        noVerticalAlign={false}
                                        onClick={[Function]}
                                        size="sm"
                                      >
                                        <svg
                                          aria-hidden={true}
                                          aria-labelledby={null}
                                          className="reference-selector pointer"
                                          data-ouia-component-id="reference-selector-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9"
                                          data-ouia-component-type="PF4/Button"
                                          fill="currentColor"
                                          height="1em"
                                          onClick={[Function]}
                                          role="img"
                                          style={
                                            Object {
                                              "verticalAlign": "-0.125em",
                                            }
                                          }
                                          viewBox="0 0 576 512"
                                          width="1em"
                                        >
                                          <path
                                            d="M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z"
                                          />
                                        </svg>
                                      </OutlinedStarIcon>
                                    </FindRefWrapper>
                                  </Popper>
                                </Tooltip>
                              </ReferenceSelector>
                              <span
                                className="margin-right-4-px"
                              >
                                15 Jan 2019, 14:53 UTC
                              </span>
                              <HistoricalProfilesPopover
                                fetchCompare={[Function]}
                                hasCompareButton={true}
                                hasMultiSelect={true}
                                selectHistoricProfiles={[Function]}
                                system={
                                  Object {
                                    "display_name": "sgi-xe500-01.rhts.eng.bos.redhat.com",
                                    "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                    "last_updated": "2019-01-15T14:53:15.886891Z",
                                    "type": "system",
                                  }
                                }
                                systemIds={
                                  Array [
                                    "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                    "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                                  ]
                                }
                                systemName="sgi-xe500-01.rhts.eng.bos.redhat.com"
                              >
                                <span
                                  className="hsp-icon-padding"
                                  data-ouia-component-id="hsp-popover-toggle-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9"
                                  data-ouia-component-type="PF4/Button"
                                >
                                  <Popover
                                    bodyContent={
                                      <div
                                        style={
                                          Object {
                                            "maxHeight": "350px",
                                            "overflowY": "scroll",
                                          }
                                        }
                                      >
                                        <React.Fragment>
                                          <Skeleton
                                            size="sm"
                                          />
                                          <br
                                            className="hsp-dropdown-loading"
                                          />
                                        </React.Fragment>
                                        <React.Fragment>
                                          <Skeleton
                                            size="sm"
                                          />
                                          <br
                                            className="hsp-dropdown-loading"
                                          />
                                        </React.Fragment>
                                        <React.Fragment>
                                          <Skeleton
                                            size="sm"
                                          />
                                          <br
                                            className="hsp-dropdown-loading"
                                          />
                                        </React.Fragment>
                                      </div>
                                    }
                                    footerContent={
                                      <Button
                                        isDisabled={true}
                                        onClick={[Function]}
                                        ouiaId="hsp-popover-compare"
                                        variant="primary"
                                      >
                                        Compare
                                      </Button>
                                    }
                                    headerContent={
                                      <div>
                                        Historical profiles for this system
                                      </div>
                                    }
                                    id="hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9"
                                    isVisible={false}
                                    shouldClose={[Function]}
                                  >
                                    <Popper
                                      appendTo={[Function]}
                                      distance={25}
                                      enableFlip={true}
                                      flipBehavior={
                                        Array [
                                          "top",
                                          "bottom",
                                          "left",
                                          "right",
                                          "top-start",
                                          "top-end",
                                          "bottom-start",
                                          "bottom-end",
                                          "left-start",
                                          "left-end",
                                          "right-start",
                                          "right-end",
                                        ]
                                      }
                                      isVisible={false}
                                      onDocumentClick={[Function]}
                                      onDocumentKeyDown={[Function]}
                                      onTriggerClick={[Function]}
                                      placement="top"
                                      popper={
                                        <ForwardRef
                                          active={false}
                                          aria-describedby="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-body"
                                          aria-labelledby="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-header"
                                          aria-modal="true"
                                          className="pf-c-popover"
                                          focusTrapOptions={
                                            Object {
                                              "clickOutsideDeactivates": true,
                                              "fallbackFocus": [Function],
                                              "returnFocusOnDeactivate": true,
                                              "tabbableOptions": Object {
                                                "displayCheck": "none",
                                              },
                                            }
                                          }
                                          onMouseDown={[Function]}
                                          preventScrollOnDeactivate={true}
                                          role="dialog"
                                          style={
                                            Object {
                                              "maxWidth": null,
                                              "minWidth": null,
                                              "opacity": 0,
                                              "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                            }
                                          }
                                        >
                                          <PopoverArrow />
                                          <PopoverContent>
                                            <PopoverCloseButton
                                              aria-label="Close"
                                              onClose={[Function]}
                                            />
                                            <PopoverHeader
                                              alertSeverityScreenReaderText="undefined alert:"
                                              icon={null}
                                              id="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-header"
                                              titleHeadingLevel="h6"
                                            >
                                              <div>
                                                Historical profiles for this system
                                              </div>
                                            </PopoverHeader>
                                            <PopoverBody
                                              id="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-body"
                                            >
                                              <div
                                                style={
                                                  Object {
                                                    "maxHeight": "350px",
                                                    "overflowY": "scroll",
                                                  }
                                                }
                                              >
                                                <React.Fragment>
                                                  <Skeleton
                                                    size="sm"
                                                  />
                                                  <br
                                                    className="hsp-dropdown-loading"
                                                  />
                                                </React.Fragment>
                                                <React.Fragment>
                                                  <Skeleton
                                                    size="sm"
                                                  />
                                                  <br
                                                    className="hsp-dropdown-loading"
                                                  />
                                                </React.Fragment>
                                                <React.Fragment>
                                                  <Skeleton
                                                    size="sm"
                                                  />
                                                  <br
                                                    className="hsp-dropdown-loading"
                                                  />
                                                </React.Fragment>
                                              </div>
                                            </PopoverBody>
                                            <PopoverFooter
                                              id="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-footer"
                                            >
                                              <Button
                                                isDisabled={true}
                                                onClick={[Function]}
                                                ouiaId="hsp-popover-compare"
                                                variant="primary"
                                              >
                                                Compare
                                              </Button>
                                            </PopoverFooter>
                                          </PopoverContent>
                                        </ForwardRef>
                                      }
                                      popperMatchesTriggerWidth={false}
                                      positionModifiers={
                                        Object {
                                          "bottom": "pf-m-bottom",
                                          "bottom-end": "pf-m-bottom-right",
                                          "bottom-start": "pf-m-bottom-left",
                                          "left": "pf-m-left",
                                          "left-end": "pf-m-left-bottom",
                                          "left-start": "pf-m-left-top",
                                          "right": "pf-m-right",
                                          "right-end": "pf-m-right-bottom",
                                          "right-start": "pf-m-right-top",
                                          "top": "pf-m-top",
                                          "top-end": "pf-m-top-right",
                                          "top-start": "pf-m-top-left",
                                        }
                                      }
                                      removeFindDomNode={false}
                                      trigger={
                                        <HistoryIcon
                                          className="hsp-dropdown-icon"
                                          color="currentColor"
                                          noVerticalAlign={false}
                                          onClick={[Function]}
                                          size="sm"
                                        />
                                      }
                                      zIndex={9999}
                                    >
                                      <FindRefWrapper
                                        onFoundRef={[Function]}
                                      >
                                        <HistoryIcon
                                          className="hsp-dropdown-icon"
                                          color="currentColor"
                                          noVerticalAlign={false}
                                          onClick={[Function]}
                                          size="sm"
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            className="hsp-dropdown-icon"
                                            fill="currentColor"
                                            height="1em"
                                            onClick={[Function]}
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 512 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M504 255.531c.253 136.64-111.18 248.372-247.82 248.468-59.015.042-113.223-20.53-155.822-54.911-11.077-8.94-11.905-25.541-1.839-35.607l11.267-11.267c8.609-8.609 22.353-9.551 31.891-1.984C173.062 425.135 212.781 440 256 440c101.705 0 184-82.311 184-184 0-101.705-82.311-184-184-184-48.814 0-93.149 18.969-126.068 49.932l50.754 50.754c10.08 10.08 2.941 27.314-11.313 27.314H24c-8.837 0-16-7.163-16-16V38.627c0-14.254 17.234-21.393 27.314-11.314l49.372 49.372C129.209 34.136 189.552 8 256 8c136.81 0 247.747 110.78 248 247.531zm-180.912 78.784l9.823-12.63c8.138-10.463 6.253-25.542-4.21-33.679L288 256.349V152c0-13.255-10.745-24-24-24h-16c-13.255 0-24 10.745-24 24v135.651l65.409 50.874c10.463 8.137 25.541 6.253 33.679-4.21z"
                                            />
                                          </svg>
                                        </HistoryIcon>
                                      </FindRefWrapper>
                                    </Popper>
                                  </Popover>
                                </span>
                              </HistoricalProfilesPopover>
                            </div>
                          </div>
                        </th>
                        <th
                          className="drift-header right-border historical-system-profile-header sticky-header"
                          header-id="9bbbefcc-8f23-4d97-07f2-142asdl234e8"
                          key="9bbbefcc-8f23-4d97-07f2-142asdl234e8"
                        >
                          <div>
                            <a
                              className="remove-system-icon"
                              data-ouia-component-id="remove-system-button-9bbbefcc-8f23-4d97-07f2-142asdl234e8"
                              data-ouia-component-type="PF4/Button"
                              onClick={[Function]}
                            >
                              <TimesIcon
                                color="currentColor"
                                noVerticalAlign={false}
                                size="sm"
                              >
                                <svg
                                  aria-hidden={true}
                                  aria-labelledby={null}
                                  fill="currentColor"
                                  height="1em"
                                  role="img"
                                  style={
                                    Object {
                                      "verticalAlign": "-0.125em",
                                    }
                                  }
                                  viewBox="0 0 352 512"
                                  width="1em"
                                >
                                  <path
                                    d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                                  />
                                </svg>
                              </TimesIcon>
                            </a>
                          </div>
                          <div
                            className="comparison-header"
                          >
                            <div>
                              <span
                                className="drift-header-icon"
                              >
                                <Tooltip
                                  content={
                                    <div>
                                      Historical system
                                    </div>
                                  }
                                  position="top"
                                >
                                  <Popper
                                    appendTo={[Function]}
                                    distance={15}
                                    enableFlip={true}
                                    flipBehavior={
                                      Array [
                                        "top",
                                        "right",
                                        "bottom",
                                        "left",
                                        "top",
                                        "right",
                                        "bottom",
                                      ]
                                    }
                                    isVisible={false}
                                    onBlur={[Function]}
                                    onDocumentClick={false}
                                    onDocumentKeyDown={[Function]}
                                    onFocus={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                    onPopperMouseEnter={[Function]}
                                    onPopperMouseLeave={[Function]}
                                    onTriggerEnter={[Function]}
                                    placement="top"
                                    popper={
                                      <div
                                        aria-live="off"
                                        className="pf-c-tooltip"
                                        id="pf-tooltip-22"
                                        role="tooltip"
                                        style={
                                          Object {
                                            "maxWidth": null,
                                            "opacity": 0,
                                            "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                          }
                                        }
                                      >
                                        <TooltipArrow />
                                        <TooltipContent
                                          isLeftAligned={false}
                                        >
                                          <div>
                                            Historical system
                                          </div>
                                        </TooltipContent>
                                      </div>
                                    }
                                    popperMatchesTriggerWidth={false}
                                    positionModifiers={
                                      Object {
                                        "bottom": "pf-m-bottom",
                                        "bottom-end": "pf-m-bottom-right",
                                        "bottom-start": "pf-m-bottom-left",
                                        "left": "pf-m-left",
                                        "left-end": "pf-m-left-bottom",
                                        "left-start": "pf-m-left-top",
                                        "right": "pf-m-right",
                                        "right-end": "pf-m-right-bottom",
                                        "right-start": "pf-m-right-top",
                                        "top": "pf-m-top",
                                        "top-end": "pf-m-top-right",
                                        "top-start": "pf-m-top-left",
                                      }
                                    }
                                    removeFindDomNode={false}
                                    trigger={
                                      <ClockIcon
                                        color="currentColor"
                                        noVerticalAlign={false}
                                        size="sm"
                                      />
                                    }
                                    zIndex={9999}
                                  >
                                    <FindRefWrapper
                                      onFoundRef={[Function]}
                                    >
                                      <ClockIcon
                                        color="currentColor"
                                        noVerticalAlign={false}
                                        size="sm"
                                      >
                                        <svg
                                          aria-hidden={true}
                                          aria-labelledby={null}
                                          fill="currentColor"
                                          height="1em"
                                          role="img"
                                          style={
                                            Object {
                                              "verticalAlign": "-0.125em",
                                            }
                                          }
                                          viewBox="0 0 512 512"
                                          width="1em"
                                        >
                                          <path
                                            d="M256,8C119,8,8,119,8,256S119,504,256,504,504,393,504,256,393,8,256,8Zm92.49,313h0l-20,25a16,16,0,0,1-22.49,2.5h0l-67-49.72a40,40,0,0,1-15-31.23V112a16,16,0,0,1,16-16h32a16,16,0,0,1,16,16V256l58,42.5A16,16,0,0,1,348.49,321Z"
                                          />
                                        </svg>
                                      </ClockIcon>
                                    </FindRefWrapper>
                                  </Popper>
                                </Tooltip>
                              </span>
                              <span
                                className="system-name"
                              >
                                system1
                              </span>
                            </div>
                            <div
                              className="system-updated-and-reference"
                            >
                              <ReferenceSelector
                                isReference={false}
                                item={
                                  Object {
                                    "display_name": "system1",
                                    "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                                    "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                    "type": "historical-system-profile",
                                    "updated": "2019-01-15T14:53:15.886891Z",
                                  }
                                }
                                updateReferenceId={[Function]}
                              >
                                <Tooltip
                                  content={
                                    <div>
                                      Use this 
                                      historical system
                                       as a reference to compare.
                                    </div>
                                  }
                                  position="top"
                                >
                                  <Popper
                                    appendTo={[Function]}
                                    distance={15}
                                    enableFlip={true}
                                    flipBehavior={
                                      Array [
                                        "top",
                                        "right",
                                        "bottom",
                                        "left",
                                        "top",
                                        "right",
                                        "bottom",
                                      ]
                                    }
                                    isVisible={false}
                                    onBlur={[Function]}
                                    onDocumentClick={false}
                                    onDocumentKeyDown={[Function]}
                                    onFocus={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                    onPopperMouseEnter={[Function]}
                                    onPopperMouseLeave={[Function]}
                                    onTriggerEnter={[Function]}
                                    placement="top"
                                    popper={
                                      <div
                                        aria-live="off"
                                        className="pf-c-tooltip"
                                        id="pf-tooltip-23"
                                        role="tooltip"
                                        style={
                                          Object {
                                            "maxWidth": null,
                                            "opacity": 0,
                                            "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                          }
                                        }
                                      >
                                        <TooltipArrow />
                                        <TooltipContent
                                          isLeftAligned={false}
                                        >
                                          <div>
                                            Use this 
                                            historical system
                                             as a reference to compare.
                                          </div>
                                        </TooltipContent>
                                      </div>
                                    }
                                    popperMatchesTriggerWidth={false}
                                    positionModifiers={
                                      Object {
                                        "bottom": "pf-m-bottom",
                                        "bottom-end": "pf-m-bottom-right",
                                        "bottom-start": "pf-m-bottom-left",
                                        "left": "pf-m-left",
                                        "left-end": "pf-m-left-bottom",
                                        "left-start": "pf-m-left-top",
                                        "right": "pf-m-right",
                                        "right-end": "pf-m-right-bottom",
                                        "right-start": "pf-m-right-top",
                                        "top": "pf-m-top",
                                        "top-end": "pf-m-top-right",
                                        "top-start": "pf-m-top-left",
                                      }
                                    }
                                    removeFindDomNode={false}
                                    trigger={
                                      <OutlinedStarIcon
                                        className="reference-selector pointer"
                                        color="currentColor"
                                        data-ouia-component-id="reference-selector-9bbbefcc-8f23-4d97-07f2-142asdl234e8"
                                        data-ouia-component-type="PF4/Button"
                                        noVerticalAlign={false}
                                        onClick={[Function]}
                                        size="sm"
                                      />
                                    }
                                    zIndex={9999}
                                  >
                                    <FindRefWrapper
                                      onFoundRef={[Function]}
                                    >
                                      <OutlinedStarIcon
                                        className="reference-selector pointer"
                                        color="currentColor"
                                        data-ouia-component-id="reference-selector-9bbbefcc-8f23-4d97-07f2-142asdl234e8"
                                        data-ouia-component-type="PF4/Button"
                                        noVerticalAlign={false}
                                        onClick={[Function]}
                                        size="sm"
                                      >
                                        <svg
                                          aria-hidden={true}
                                          aria-labelledby={null}
                                          className="reference-selector pointer"
                                          data-ouia-component-id="reference-selector-9bbbefcc-8f23-4d97-07f2-142asdl234e8"
                                          data-ouia-component-type="PF4/Button"
                                          fill="currentColor"
                                          height="1em"
                                          onClick={[Function]}
                                          role="img"
                                          style={
                                            Object {
                                              "verticalAlign": "-0.125em",
                                            }
                                          }
                                          viewBox="0 0 576 512"
                                          width="1em"
                                        >
                                          <path
                                            d="M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z"
                                          />
                                        </svg>
                                      </OutlinedStarIcon>
                                    </FindRefWrapper>
                                  </Popper>
                                </Tooltip>
                              </ReferenceSelector>
                              <span
                                className="margin-right-4-px"
                              >
                                15 Jan 2019, 14:53 UTC
                              </span>
                              <HistoricalProfilesPopover
                                fetchCompare={[Function]}
                                hasCompareButton={true}
                                hasMultiSelect={true}
                                selectHistoricProfiles={[Function]}
                                system={
                                  Object {
                                    "display_name": "system1",
                                    "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                                    "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                    "type": "historical-system-profile",
                                    "updated": "2019-01-15T14:53:15.886891Z",
                                  }
                                }
                                systemIds={
                                  Array [
                                    "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                    "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                                  ]
                                }
                                systemName="system1"
                              >
                                <span
                                  className="hsp-icon-padding"
                                  data-ouia-component-id="hsp-popover-toggle-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9"
                                  data-ouia-component-type="PF4/Button"
                                >
                                  <Popover
                                    bodyContent={
                                      <div
                                        style={
                                          Object {
                                            "maxHeight": "350px",
                                            "overflowY": "scroll",
                                          }
                                        }
                                      >
                                        <React.Fragment>
                                          <Skeleton
                                            size="sm"
                                          />
                                          <br
                                            className="hsp-dropdown-loading"
                                          />
                                        </React.Fragment>
                                        <React.Fragment>
                                          <Skeleton
                                            size="sm"
                                          />
                                          <br
                                            className="hsp-dropdown-loading"
                                          />
                                        </React.Fragment>
                                        <React.Fragment>
                                          <Skeleton
                                            size="sm"
                                          />
                                          <br
                                            className="hsp-dropdown-loading"
                                          />
                                        </React.Fragment>
                                      </div>
                                    }
                                    footerContent={
                                      <Button
                                        isDisabled={true}
                                        onClick={[Function]}
                                        ouiaId="hsp-popover-compare"
                                        variant="primary"
                                      >
                                        Compare
                                      </Button>
                                    }
                                    headerContent={
                                      <div>
                                        Historical profiles for this system
                                      </div>
                                    }
                                    id="hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9"
                                    isVisible={false}
                                    shouldClose={[Function]}
                                  >
                                    <Popper
                                      appendTo={[Function]}
                                      distance={25}
                                      enableFlip={true}
                                      flipBehavior={
                                        Array [
                                          "top",
                                          "bottom",
                                          "left",
                                          "right",
                                          "top-start",
                                          "top-end",
                                          "bottom-start",
                                          "bottom-end",
                                          "left-start",
                                          "left-end",
                                          "right-start",
                                          "right-end",
                                        ]
                                      }
                                      isVisible={false}
                                      onDocumentClick={[Function]}
                                      onDocumentKeyDown={[Function]}
                                      onTriggerClick={[Function]}
                                      placement="top"
                                      popper={
                                        <ForwardRef
                                          active={false}
                                          aria-describedby="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-body"
                                          aria-labelledby="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-header"
                                          aria-modal="true"
                                          className="pf-c-popover"
                                          focusTrapOptions={
                                            Object {
                                              "clickOutsideDeactivates": true,
                                              "fallbackFocus": [Function],
                                              "returnFocusOnDeactivate": true,
                                              "tabbableOptions": Object {
                                                "displayCheck": "none",
                                              },
                                            }
                                          }
                                          onMouseDown={[Function]}
                                          preventScrollOnDeactivate={true}
                                          role="dialog"
                                          style={
                                            Object {
                                              "maxWidth": null,
                                              "minWidth": null,
                                              "opacity": 0,
                                              "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                            }
                                          }
                                        >
                                          <PopoverArrow />
                                          <PopoverContent>
                                            <PopoverCloseButton
                                              aria-label="Close"
                                              onClose={[Function]}
                                            />
                                            <PopoverHeader
                                              alertSeverityScreenReaderText="undefined alert:"
                                              icon={null}
                                              id="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-header"
                                              titleHeadingLevel="h6"
                                            >
                                              <div>
                                                Historical profiles for this system
                                              </div>
                                            </PopoverHeader>
                                            <PopoverBody
                                              id="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-body"
                                            >
                                              <div
                                                style={
                                                  Object {
                                                    "maxHeight": "350px",
                                                    "overflowY": "scroll",
                                                  }
                                                }
                                              >
                                                <React.Fragment>
                                                  <Skeleton
                                                    size="sm"
                                                  />
                                                  <br
                                                    className="hsp-dropdown-loading"
                                                  />
                                                </React.Fragment>
                                                <React.Fragment>
                                                  <Skeleton
                                                    size="sm"
                                                  />
                                                  <br
                                                    className="hsp-dropdown-loading"
                                                  />
                                                </React.Fragment>
                                                <React.Fragment>
                                                  <Skeleton
                                                    size="sm"
                                                  />
                                                  <br
                                                    className="hsp-dropdown-loading"
                                                  />
                                                </React.Fragment>
                                              </div>
                                            </PopoverBody>
                                            <PopoverFooter
                                              id="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-footer"
                                            >
                                              <Button
                                                isDisabled={true}
                                                onClick={[Function]}
                                                ouiaId="hsp-popover-compare"
                                                variant="primary"
                                              >
                                                Compare
                                              </Button>
                                            </PopoverFooter>
                                          </PopoverContent>
                                        </ForwardRef>
                                      }
                                      popperMatchesTriggerWidth={false}
                                      positionModifiers={
                                        Object {
                                          "bottom": "pf-m-bottom",
                                          "bottom-end": "pf-m-bottom-right",
                                          "bottom-start": "pf-m-bottom-left",
                                          "left": "pf-m-left",
                                          "left-end": "pf-m-left-bottom",
                                          "left-start": "pf-m-left-top",
                                          "right": "pf-m-right",
                                          "right-end": "pf-m-right-bottom",
                                          "right-start": "pf-m-right-top",
                                          "top": "pf-m-top",
                                          "top-end": "pf-m-top-right",
                                          "top-start": "pf-m-top-left",
                                        }
                                      }
                                      removeFindDomNode={false}
                                      trigger={
                                        <HistoryIcon
                                          className="hsp-dropdown-icon"
                                          color="currentColor"
                                          noVerticalAlign={false}
                                          onClick={[Function]}
                                          size="sm"
                                        />
                                      }
                                      zIndex={9999}
                                    >
                                      <FindRefWrapper
                                        onFoundRef={[Function]}
                                      >
                                        <HistoryIcon
                                          className="hsp-dropdown-icon"
                                          color="currentColor"
                                          noVerticalAlign={false}
                                          onClick={[Function]}
                                          size="sm"
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            className="hsp-dropdown-icon"
                                            fill="currentColor"
                                            height="1em"
                                            onClick={[Function]}
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 512 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M504 255.531c.253 136.64-111.18 248.372-247.82 248.468-59.015.042-113.223-20.53-155.822-54.911-11.077-8.94-11.905-25.541-1.839-35.607l11.267-11.267c8.609-8.609 22.353-9.551 31.891-1.984C173.062 425.135 212.781 440 256 440c101.705 0 184-82.311 184-184 0-101.705-82.311-184-184-184-48.814 0-93.149 18.969-126.068 49.932l50.754 50.754c10.08 10.08 2.941 27.314-11.313 27.314H24c-8.837 0-16-7.163-16-16V38.627c0-14.254 17.234-21.393 27.314-11.314l49.372 49.372C129.209 34.136 189.552 8 256 8c136.81 0 247.747 110.78 248 247.531zm-180.912 78.784l9.823-12.63c8.138-10.463 6.253-25.542-4.21-33.679L288 256.349V152c0-13.255-10.745-24-24-24h-16c-13.255 0-24 10.745-24 24v135.651l65.409 50.874c10.463 8.137 25.541 6.253 33.679-4.21z"
                                            />
                                          </svg>
                                        </HistoryIcon>
                                      </FindRefWrapper>
                                    </Popper>
                                  </Popover>
                                </span>
                              </HistoricalProfilesPopover>
                            </div>
                          </div>
                        </th>
                        <th
                          className="drift-header right-border historical-system-profile-header sticky-header"
                          header-id="edmk59dj-fn42-dfjk-alv3-bmn2854mnn27"
                          key="edmk59dj-fn42-dfjk-alv3-bmn2854mnn27"
                        >
                          <div>
                            <a
                              className="remove-system-icon"
                              data-ouia-component-id="remove-system-button-edmk59dj-fn42-dfjk-alv3-bmn2854mnn27"
                              data-ouia-component-type="PF4/Button"
                              onClick={[Function]}
                            >
                              <TimesIcon
                                color="currentColor"
                                noVerticalAlign={false}
                                size="sm"
                              >
                                <svg
                                  aria-hidden={true}
                                  aria-labelledby={null}
                                  fill="currentColor"
                                  height="1em"
                                  role="img"
                                  style={
                                    Object {
                                      "verticalAlign": "-0.125em",
                                    }
                                  }
                                  viewBox="0 0 352 512"
                                  width="1em"
                                >
                                  <path
                                    d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                                  />
                                </svg>
                              </TimesIcon>
                            </a>
                          </div>
                          <div
                            className="comparison-header"
                          >
                            <div>
                              <span
                                className="drift-header-icon"
                              >
                                <Tooltip
                                  content={
                                    <div>
                                      Historical system
                                    </div>
                                  }
                                  position="top"
                                >
                                  <Popper
                                    appendTo={[Function]}
                                    distance={15}
                                    enableFlip={true}
                                    flipBehavior={
                                      Array [
                                        "top",
                                        "right",
                                        "bottom",
                                        "left",
                                        "top",
                                        "right",
                                        "bottom",
                                      ]
                                    }
                                    isVisible={false}
                                    onBlur={[Function]}
                                    onDocumentClick={false}
                                    onDocumentKeyDown={[Function]}
                                    onFocus={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                    onPopperMouseEnter={[Function]}
                                    onPopperMouseLeave={[Function]}
                                    onTriggerEnter={[Function]}
                                    placement="top"
                                    popper={
                                      <div
                                        aria-live="off"
                                        className="pf-c-tooltip"
                                        id="pf-tooltip-24"
                                        role="tooltip"
                                        style={
                                          Object {
                                            "maxWidth": null,
                                            "opacity": 0,
                                            "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                          }
                                        }
                                      >
                                        <TooltipArrow />
                                        <TooltipContent
                                          isLeftAligned={false}
                                        >
                                          <div>
                                            Historical system
                                          </div>
                                        </TooltipContent>
                                      </div>
                                    }
                                    popperMatchesTriggerWidth={false}
                                    positionModifiers={
                                      Object {
                                        "bottom": "pf-m-bottom",
                                        "bottom-end": "pf-m-bottom-right",
                                        "bottom-start": "pf-m-bottom-left",
                                        "left": "pf-m-left",
                                        "left-end": "pf-m-left-bottom",
                                        "left-start": "pf-m-left-top",
                                        "right": "pf-m-right",
                                        "right-end": "pf-m-right-bottom",
                                        "right-start": "pf-m-right-top",
                                        "top": "pf-m-top",
                                        "top-end": "pf-m-top-right",
                                        "top-start": "pf-m-top-left",
                                      }
                                    }
                                    removeFindDomNode={false}
                                    trigger={
                                      <ClockIcon
                                        color="currentColor"
                                        noVerticalAlign={false}
                                        size="sm"
                                      />
                                    }
                                    zIndex={9999}
                                  >
                                    <FindRefWrapper
                                      onFoundRef={[Function]}
                                    >
                                      <ClockIcon
                                        color="currentColor"
                                        noVerticalAlign={false}
                                        size="sm"
                                      >
                                        <svg
                                          aria-hidden={true}
                                          aria-labelledby={null}
                                          fill="currentColor"
                                          height="1em"
                                          role="img"
                                          style={
                                            Object {
                                              "verticalAlign": "-0.125em",
                                            }
                                          }
                                          viewBox="0 0 512 512"
                                          width="1em"
                                        >
                                          <path
                                            d="M256,8C119,8,8,119,8,256S119,504,256,504,504,393,504,256,393,8,256,8Zm92.49,313h0l-20,25a16,16,0,0,1-22.49,2.5h0l-67-49.72a40,40,0,0,1-15-31.23V112a16,16,0,0,1,16-16h32a16,16,0,0,1,16,16V256l58,42.5A16,16,0,0,1,348.49,321Z"
                                          />
                                        </svg>
                                      </ClockIcon>
                                    </FindRefWrapper>
                                  </Popper>
                                </Tooltip>
                              </span>
                              <span
                                className="system-name"
                              >
                                system1
                              </span>
                            </div>
                            <div
                              className="system-updated-and-reference"
                            >
                              <ReferenceSelector
                                isReference={false}
                                item={
                                  Object {
                                    "display_name": "system1",
                                    "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                                    "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                    "type": "historical-system-profile",
                                    "updated": "2019-01-15T15:25:16.304899Z",
                                  }
                                }
                                updateReferenceId={[Function]}
                              >
                                <Tooltip
                                  content={
                                    <div>
                                      Use this 
                                      historical system
                                       as a reference to compare.
                                    </div>
                                  }
                                  position="top"
                                >
                                  <Popper
                                    appendTo={[Function]}
                                    distance={15}
                                    enableFlip={true}
                                    flipBehavior={
                                      Array [
                                        "top",
                                        "right",
                                        "bottom",
                                        "left",
                                        "top",
                                        "right",
                                        "bottom",
                                      ]
                                    }
                                    isVisible={false}
                                    onBlur={[Function]}
                                    onDocumentClick={false}
                                    onDocumentKeyDown={[Function]}
                                    onFocus={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                    onPopperMouseEnter={[Function]}
                                    onPopperMouseLeave={[Function]}
                                    onTriggerEnter={[Function]}
                                    placement="top"
                                    popper={
                                      <div
                                        aria-live="off"
                                        className="pf-c-tooltip"
                                        id="pf-tooltip-25"
                                        role="tooltip"
                                        style={
                                          Object {
                                            "maxWidth": null,
                                            "opacity": 0,
                                            "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                          }
                                        }
                                      >
                                        <TooltipArrow />
                                        <TooltipContent
                                          isLeftAligned={false}
                                        >
                                          <div>
                                            Use this 
                                            historical system
                                             as a reference to compare.
                                          </div>
                                        </TooltipContent>
                                      </div>
                                    }
                                    popperMatchesTriggerWidth={false}
                                    positionModifiers={
                                      Object {
                                        "bottom": "pf-m-bottom",
                                        "bottom-end": "pf-m-bottom-right",
                                        "bottom-start": "pf-m-bottom-left",
                                        "left": "pf-m-left",
                                        "left-end": "pf-m-left-bottom",
                                        "left-start": "pf-m-left-top",
                                        "right": "pf-m-right",
                                        "right-end": "pf-m-right-bottom",
                                        "right-start": "pf-m-right-top",
                                        "top": "pf-m-top",
                                        "top-end": "pf-m-top-right",
                                        "top-start": "pf-m-top-left",
                                      }
                                    }
                                    removeFindDomNode={false}
                                    trigger={
                                      <OutlinedStarIcon
                                        className="reference-selector pointer"
                                        color="currentColor"
                                        data-ouia-component-id="reference-selector-edmk59dj-fn42-dfjk-alv3-bmn2854mnn27"
                                        data-ouia-component-type="PF4/Button"
                                        noVerticalAlign={false}
                                        onClick={[Function]}
                                        size="sm"
                                      />
                                    }
                                    zIndex={9999}
                                  >
                                    <FindRefWrapper
                                      onFoundRef={[Function]}
                                    >
                                      <OutlinedStarIcon
                                        className="reference-selector pointer"
                                        color="currentColor"
                                        data-ouia-component-id="reference-selector-edmk59dj-fn42-dfjk-alv3-bmn2854mnn27"
                                        data-ouia-component-type="PF4/Button"
                                        noVerticalAlign={false}
                                        onClick={[Function]}
                                        size="sm"
                                      >
                                        <svg
                                          aria-hidden={true}
                                          aria-labelledby={null}
                                          className="reference-selector pointer"
                                          data-ouia-component-id="reference-selector-edmk59dj-fn42-dfjk-alv3-bmn2854mnn27"
                                          data-ouia-component-type="PF4/Button"
                                          fill="currentColor"
                                          height="1em"
                                          onClick={[Function]}
                                          role="img"
                                          style={
                                            Object {
                                              "verticalAlign": "-0.125em",
                                            }
                                          }
                                          viewBox="0 0 576 512"
                                          width="1em"
                                        >
                                          <path
                                            d="M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z"
                                          />
                                        </svg>
                                      </OutlinedStarIcon>
                                    </FindRefWrapper>
                                  </Popper>
                                </Tooltip>
                              </ReferenceSelector>
                              <span
                                className="margin-right-4-px"
                              >
                                15 Jan 2019, 15:25 UTC
                              </span>
                              <HistoricalProfilesPopover
                                fetchCompare={[Function]}
                                hasCompareButton={true}
                                hasMultiSelect={true}
                                selectHistoricProfiles={[Function]}
                                system={
                                  Object {
                                    "display_name": "system1",
                                    "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                                    "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                    "type": "historical-system-profile",
                                    "updated": "2019-01-15T15:25:16.304899Z",
                                  }
                                }
                                systemIds={
                                  Array [
                                    "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                    "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                                  ]
                                }
                                systemName="system1"
                              >
                                <span
                                  className="hsp-icon-padding"
                                  data-ouia-component-id="hsp-popover-toggle-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9"
                                  data-ouia-component-type="PF4/Button"
                                >
                                  <Popover
                                    bodyContent={
                                      <div
                                        style={
                                          Object {
                                            "maxHeight": "350px",
                                            "overflowY": "scroll",
                                          }
                                        }
                                      >
                                        <React.Fragment>
                                          <Skeleton
                                            size="sm"
                                          />
                                          <br
                                            className="hsp-dropdown-loading"
                                          />
                                        </React.Fragment>
                                        <React.Fragment>
                                          <Skeleton
                                            size="sm"
                                          />
                                          <br
                                            className="hsp-dropdown-loading"
                                          />
                                        </React.Fragment>
                                        <React.Fragment>
                                          <Skeleton
                                            size="sm"
                                          />
                                          <br
                                            className="hsp-dropdown-loading"
                                          />
                                        </React.Fragment>
                                      </div>
                                    }
                                    footerContent={
                                      <Button
                                        isDisabled={true}
                                        onClick={[Function]}
                                        ouiaId="hsp-popover-compare"
                                        variant="primary"
                                      >
                                        Compare
                                      </Button>
                                    }
                                    headerContent={
                                      <div>
                                        Historical profiles for this system
                                      </div>
                                    }
                                    id="hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9"
                                    isVisible={false}
                                    shouldClose={[Function]}
                                  >
                                    <Popper
                                      appendTo={[Function]}
                                      distance={25}
                                      enableFlip={true}
                                      flipBehavior={
                                        Array [
                                          "top",
                                          "bottom",
                                          "left",
                                          "right",
                                          "top-start",
                                          "top-end",
                                          "bottom-start",
                                          "bottom-end",
                                          "left-start",
                                          "left-end",
                                          "right-start",
                                          "right-end",
                                        ]
                                      }
                                      isVisible={false}
                                      onDocumentClick={[Function]}
                                      onDocumentKeyDown={[Function]}
                                      onTriggerClick={[Function]}
                                      placement="top"
                                      popper={
                                        <ForwardRef
                                          active={false}
                                          aria-describedby="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-body"
                                          aria-labelledby="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-header"
                                          aria-modal="true"
                                          className="pf-c-popover"
                                          focusTrapOptions={
                                            Object {
                                              "clickOutsideDeactivates": true,
                                              "fallbackFocus": [Function],
                                              "returnFocusOnDeactivate": true,
                                              "tabbableOptions": Object {
                                                "displayCheck": "none",
                                              },
                                            }
                                          }
                                          onMouseDown={[Function]}
                                          preventScrollOnDeactivate={true}
                                          role="dialog"
                                          style={
                                            Object {
                                              "maxWidth": null,
                                              "minWidth": null,
                                              "opacity": 0,
                                              "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                            }
                                          }
                                        >
                                          <PopoverArrow />
                                          <PopoverContent>
                                            <PopoverCloseButton
                                              aria-label="Close"
                                              onClose={[Function]}
                                            />
                                            <PopoverHeader
                                              alertSeverityScreenReaderText="undefined alert:"
                                              icon={null}
                                              id="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-header"
                                              titleHeadingLevel="h6"
                                            >
                                              <div>
                                                Historical profiles for this system
                                              </div>
                                            </PopoverHeader>
                                            <PopoverBody
                                              id="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-body"
                                            >
                                              <div
                                                style={
                                                  Object {
                                                    "maxHeight": "350px",
                                                    "overflowY": "scroll",
                                                  }
                                                }
                                              >
                                                <React.Fragment>
                                                  <Skeleton
                                                    size="sm"
                                                  />
                                                  <br
                                                    className="hsp-dropdown-loading"
                                                  />
                                                </React.Fragment>
                                                <React.Fragment>
                                                  <Skeleton
                                                    size="sm"
                                                  />
                                                  <br
                                                    className="hsp-dropdown-loading"
                                                  />
                                                </React.Fragment>
                                                <React.Fragment>
                                                  <Skeleton
                                                    size="sm"
                                                  />
                                                  <br
                                                    className="hsp-dropdown-loading"
                                                  />
                                                </React.Fragment>
                                              </div>
                                            </PopoverBody>
                                            <PopoverFooter
                                              id="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-footer"
                                            >
                                              <Button
                                                isDisabled={true}
                                                onClick={[Function]}
                                                ouiaId="hsp-popover-compare"
                                                variant="primary"
                                              >
                                                Compare
                                              </Button>
                                            </PopoverFooter>
                                          </PopoverContent>
                                        </ForwardRef>
                                      }
                                      popperMatchesTriggerWidth={false}
                                      positionModifiers={
                                        Object {
                                          "bottom": "pf-m-bottom",
                                          "bottom-end": "pf-m-bottom-right",
                                          "bottom-start": "pf-m-bottom-left",
                                          "left": "pf-m-left",
                                          "left-end": "pf-m-left-bottom",
                                          "left-start": "pf-m-left-top",
                                          "right": "pf-m-right",
                                          "right-end": "pf-m-right-bottom",
                                          "right-start": "pf-m-right-top",
                                          "top": "pf-m-top",
                                          "top-end": "pf-m-top-right",
                                          "top-start": "pf-m-top-left",
                                        }
                                      }
                                      removeFindDomNode={false}
                                      trigger={
                                        <HistoryIcon
                                          className="hsp-dropdown-icon"
                                          color="currentColor"
                                          noVerticalAlign={false}
                                          onClick={[Function]}
                                          size="sm"
                                        />
                                      }
                                      zIndex={9999}
                                    >
                                      <FindRefWrapper
                                        onFoundRef={[Function]}
                                      >
                                        <HistoryIcon
                                          className="hsp-dropdown-icon"
                                          color="currentColor"
                                          noVerticalAlign={false}
                                          onClick={[Function]}
                                          size="sm"
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            className="hsp-dropdown-icon"
                                            fill="currentColor"
                                            height="1em"
                                            onClick={[Function]}
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 512 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M504 255.531c.253 136.64-111.18 248.372-247.82 248.468-59.015.042-113.223-20.53-155.822-54.911-11.077-8.94-11.905-25.541-1.839-35.607l11.267-11.267c8.609-8.609 22.353-9.551 31.891-1.984C173.062 425.135 212.781 440 256 440c101.705 0 184-82.311 184-184 0-101.705-82.311-184-184-184-48.814 0-93.149 18.969-126.068 49.932l50.754 50.754c10.08 10.08 2.941 27.314-11.313 27.314H24c-8.837 0-16-7.163-16-16V38.627c0-14.254 17.234-21.393 27.314-11.314l49.372 49.372C129.209 34.136 189.552 8 256 8c136.81 0 247.747 110.78 248 247.531zm-180.912 78.784l9.823-12.63c8.138-10.463 6.253-25.542-4.21-33.679L288 256.349V152c0-13.255-10.745-24-24-24h-16c-13.255 0-24 10.745-24 24v135.651l65.409 50.874c10.463 8.137 25.541 6.253 33.679-4.21z"
                                            />
                                          </svg>
                                        </HistoryIcon>
                                      </FindRefWrapper>
                                    </Popper>
                                  </Popover>
                                </span>
                              </HistoricalProfilesPopover>
                            </div>
                          </div>
                        </th>
                        <th
                          className="drift-header right-border system-header sticky-header"
                          header-id="f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2"
                          key="f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2"
                        >
                          <div>
                            <a
                              className="remove-system-icon"
                              data-ouia-component-id="remove-system-button-f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2"
                              data-ouia-component-type="PF4/Button"
                              onClick={[Function]}
                            >
                              <TimesIcon
                                color="currentColor"
                                noVerticalAlign={false}
                                size="sm"
                              >
                                <svg
                                  aria-hidden={true}
                                  aria-labelledby={null}
                                  fill="currentColor"
                                  height="1em"
                                  role="img"
                                  style={
                                    Object {
                                      "verticalAlign": "-0.125em",
                                    }
                                  }
                                  viewBox="0 0 352 512"
                                  width="1em"
                                >
                                  <path
                                    d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                                  />
                                </svg>
                              </TimesIcon>
                            </a>
                          </div>
                          <div
                            className="comparison-header"
                          >
                            <div>
                              <span
                                className="drift-header-icon"
                              >
                                <Tooltip
                                  content={
                                    <div>
                                      System
                                    </div>
                                  }
                                  position="top"
                                >
                                  <Popper
                                    appendTo={[Function]}
                                    distance={15}
                                    enableFlip={true}
                                    flipBehavior={
                                      Array [
                                        "top",
                                        "right",
                                        "bottom",
                                        "left",
                                        "top",
                                        "right",
                                        "bottom",
                                      ]
                                    }
                                    isVisible={false}
                                    onBlur={[Function]}
                                    onDocumentClick={false}
                                    onDocumentKeyDown={[Function]}
                                    onFocus={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                    onPopperMouseEnter={[Function]}
                                    onPopperMouseLeave={[Function]}
                                    onTriggerEnter={[Function]}
                                    placement="top"
                                    popper={
                                      <div
                                        aria-live="off"
                                        className="pf-c-tooltip"
                                        id="pf-tooltip-26"
                                        role="tooltip"
                                        style={
                                          Object {
                                            "maxWidth": null,
                                            "opacity": 0,
                                            "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                          }
                                        }
                                      >
                                        <TooltipArrow />
                                        <TooltipContent
                                          isLeftAligned={false}
                                        >
                                          <div>
                                            System
                                          </div>
                                        </TooltipContent>
                                      </div>
                                    }
                                    popperMatchesTriggerWidth={false}
                                    positionModifiers={
                                      Object {
                                        "bottom": "pf-m-bottom",
                                        "bottom-end": "pf-m-bottom-right",
                                        "bottom-start": "pf-m-bottom-left",
                                        "left": "pf-m-left",
                                        "left-end": "pf-m-left-bottom",
                                        "left-start": "pf-m-left-top",
                                        "right": "pf-m-right",
                                        "right-end": "pf-m-right-bottom",
                                        "right-start": "pf-m-right-top",
                                        "top": "pf-m-top",
                                        "top-end": "pf-m-top-right",
                                        "top-start": "pf-m-top-left",
                                      }
                                    }
                                    removeFindDomNode={false}
                                    trigger={
                                      <ServerIcon
                                        color="currentColor"
                                        noVerticalAlign={false}
                                        size="sm"
                                      />
                                    }
                                    zIndex={9999}
                                  >
                                    <FindRefWrapper
                                      onFoundRef={[Function]}
                                    >
                                      <ServerIcon
                                        color="currentColor"
                                        noVerticalAlign={false}
                                        size="sm"
                                      >
                                        <svg
                                          aria-hidden={true}
                                          aria-labelledby={null}
                                          fill="currentColor"
                                          height="1em"
                                          role="img"
                                          style={
                                            Object {
                                              "verticalAlign": "-0.125em",
                                            }
                                          }
                                          viewBox="0 0 512 512"
                                          width="1em"
                                        >
                                          <path
                                            d="M480 160H32c-17.673 0-32-14.327-32-32V64c0-17.673 14.327-32 32-32h448c17.673 0 32 14.327 32 32v64c0 17.673-14.327 32-32 32zm-48-88c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm-64 0c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm112 248H32c-17.673 0-32-14.327-32-32v-64c0-17.673 14.327-32 32-32h448c17.673 0 32 14.327 32 32v64c0 17.673-14.327 32-32 32zm-48-88c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm-64 0c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm112 248H32c-17.673 0-32-14.327-32-32v-64c0-17.673 14.327-32 32-32h448c17.673 0 32 14.327 32 32v64c0 17.673-14.327 32-32 32zm-48-88c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm-64 0c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24z"
                                          />
                                        </svg>
                                      </ServerIcon>
                                    </FindRefWrapper>
                                  </Popper>
                                </Tooltip>
                              </span>
                              <span
                                className="system-name"
                              >
                                ibm-x3650m4-03-vm03.lab.eng.brq.redhat.com
                              </span>
                            </div>
                            <div
                              className="system-updated-and-reference"
                            >
                              <ReferenceSelector
                                isReference={false}
                                item={
                                  Object {
                                    "display_name": "ibm-x3650m4-03-vm03.lab.eng.brq.redhat.com",
                                    "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                                    "last_updated": "2019-01-15T15:25:16.304899Z",
                                    "type": "system",
                                  }
                                }
                                updateReferenceId={[Function]}
                              >
                                <Tooltip
                                  content={
                                    <div>
                                      Use this 
                                      system
                                       as a reference to compare.
                                    </div>
                                  }
                                  position="top"
                                >
                                  <Popper
                                    appendTo={[Function]}
                                    distance={15}
                                    enableFlip={true}
                                    flipBehavior={
                                      Array [
                                        "top",
                                        "right",
                                        "bottom",
                                        "left",
                                        "top",
                                        "right",
                                        "bottom",
                                      ]
                                    }
                                    isVisible={false}
                                    onBlur={[Function]}
                                    onDocumentClick={false}
                                    onDocumentKeyDown={[Function]}
                                    onFocus={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                    onPopperMouseEnter={[Function]}
                                    onPopperMouseLeave={[Function]}
                                    onTriggerEnter={[Function]}
                                    placement="top"
                                    popper={
                                      <div
                                        aria-live="off"
                                        className="pf-c-tooltip"
                                        id="pf-tooltip-27"
                                        role="tooltip"
                                        style={
                                          Object {
                                            "maxWidth": null,
                                            "opacity": 0,
                                            "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                          }
                                        }
                                      >
                                        <TooltipArrow />
                                        <TooltipContent
                                          isLeftAligned={false}
                                        >
                                          <div>
                                            Use this 
                                            system
                                             as a reference to compare.
                                          </div>
                                        </TooltipContent>
                                      </div>
                                    }
                                    popperMatchesTriggerWidth={false}
                                    positionModifiers={
                                      Object {
                                        "bottom": "pf-m-bottom",
                                        "bottom-end": "pf-m-bottom-right",
                                        "bottom-start": "pf-m-bottom-left",
                                        "left": "pf-m-left",
                                        "left-end": "pf-m-left-bottom",
                                        "left-start": "pf-m-left-top",
                                        "right": "pf-m-right",
                                        "right-end": "pf-m-right-bottom",
                                        "right-start": "pf-m-right-top",
                                        "top": "pf-m-top",
                                        "top-end": "pf-m-top-right",
                                        "top-start": "pf-m-top-left",
                                      }
                                    }
                                    removeFindDomNode={false}
                                    trigger={
                                      <OutlinedStarIcon
                                        className="reference-selector pointer"
                                        color="currentColor"
                                        data-ouia-component-id="reference-selector-f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2"
                                        data-ouia-component-type="PF4/Button"
                                        noVerticalAlign={false}
                                        onClick={[Function]}
                                        size="sm"
                                      />
                                    }
                                    zIndex={9999}
                                  >
                                    <FindRefWrapper
                                      onFoundRef={[Function]}
                                    >
                                      <OutlinedStarIcon
                                        className="reference-selector pointer"
                                        color="currentColor"
                                        data-ouia-component-id="reference-selector-f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2"
                                        data-ouia-component-type="PF4/Button"
                                        noVerticalAlign={false}
                                        onClick={[Function]}
                                        size="sm"
                                      >
                                        <svg
                                          aria-hidden={true}
                                          aria-labelledby={null}
                                          className="reference-selector pointer"
                                          data-ouia-component-id="reference-selector-f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2"
                                          data-ouia-component-type="PF4/Button"
                                          fill="currentColor"
                                          height="1em"
                                          onClick={[Function]}
                                          role="img"
                                          style={
                                            Object {
                                              "verticalAlign": "-0.125em",
                                            }
                                          }
                                          viewBox="0 0 576 512"
                                          width="1em"
                                        >
                                          <path
                                            d="M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z"
                                          />
                                        </svg>
                                      </OutlinedStarIcon>
                                    </FindRefWrapper>
                                  </Popper>
                                </Tooltip>
                              </ReferenceSelector>
                              <span
                                className="margin-right-4-px"
                              >
                                15 Jan 2019, 15:25 UTC
                              </span>
                              <HistoricalProfilesPopover
                                fetchCompare={[Function]}
                                hasCompareButton={true}
                                hasMultiSelect={true}
                                selectHistoricProfiles={[Function]}
                                system={
                                  Object {
                                    "display_name": "ibm-x3650m4-03-vm03.lab.eng.brq.redhat.com",
                                    "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                                    "last_updated": "2019-01-15T15:25:16.304899Z",
                                    "type": "system",
                                  }
                                }
                                systemIds={
                                  Array [
                                    "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                    "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                                  ]
                                }
                                systemName="ibm-x3650m4-03-vm03.lab.eng.brq.redhat.com"
                              >
                                <span
                                  className="hsp-icon-padding"
                                  data-ouia-component-id="hsp-popover-toggle-f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2"
                                  data-ouia-component-type="PF4/Button"
                                >
                                  <Popover
                                    bodyContent={
                                      <div
                                        style={
                                          Object {
                                            "maxHeight": "350px",
                                            "overflowY": "scroll",
                                          }
                                        }
                                      >
                                        <React.Fragment>
                                          <Skeleton
                                            size="sm"
                                          />
                                          <br
                                            className="hsp-dropdown-loading"
                                          />
                                        </React.Fragment>
                                        <React.Fragment>
                                          <Skeleton
                                            size="sm"
                                          />
                                          <br
                                            className="hsp-dropdown-loading"
                                          />
                                        </React.Fragment>
                                        <React.Fragment>
                                          <Skeleton
                                            size="sm"
                                          />
                                          <br
                                            className="hsp-dropdown-loading"
                                          />
                                        </React.Fragment>
                                      </div>
                                    }
                                    footerContent={
                                      <Button
                                        isDisabled={true}
                                        onClick={[Function]}
                                        ouiaId="hsp-popover-compare"
                                        variant="primary"
                                      >
                                        Compare
                                      </Button>
                                    }
                                    headerContent={
                                      <div>
                                        Historical profiles for this system
                                      </div>
                                    }
                                    id="hsp-popover-f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2"
                                    isVisible={false}
                                    shouldClose={[Function]}
                                  >
                                    <Popper
                                      appendTo={[Function]}
                                      distance={25}
                                      enableFlip={true}
                                      flipBehavior={
                                        Array [
                                          "top",
                                          "bottom",
                                          "left",
                                          "right",
                                          "top-start",
                                          "top-end",
                                          "bottom-start",
                                          "bottom-end",
                                          "left-start",
                                          "left-end",
                                          "right-start",
                                          "right-end",
                                        ]
                                      }
                                      isVisible={false}
                                      onDocumentClick={[Function]}
                                      onDocumentKeyDown={[Function]}
                                      onTriggerClick={[Function]}
                                      placement="top"
                                      popper={
                                        <ForwardRef
                                          active={false}
                                          aria-describedby="popover-hsp-popover-f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2-body"
                                          aria-labelledby="popover-hsp-popover-f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2-header"
                                          aria-modal="true"
                                          className="pf-c-popover"
                                          focusTrapOptions={
                                            Object {
                                              "clickOutsideDeactivates": true,
                                              "fallbackFocus": [Function],
                                              "returnFocusOnDeactivate": true,
                                              "tabbableOptions": Object {
                                                "displayCheck": "none",
                                              },
                                            }
                                          }
                                          onMouseDown={[Function]}
                                          preventScrollOnDeactivate={true}
                                          role="dialog"
                                          style={
                                            Object {
                                              "maxWidth": null,
                                              "minWidth": null,
                                              "opacity": 0,
                                              "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                            }
                                          }
                                        >
                                          <PopoverArrow />
                                          <PopoverContent>
                                            <PopoverCloseButton
                                              aria-label="Close"
                                              onClose={[Function]}
                                            />
                                            <PopoverHeader
                                              alertSeverityScreenReaderText="undefined alert:"
                                              icon={null}
                                              id="popover-hsp-popover-f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2-header"
                                              titleHeadingLevel="h6"
                                            >
                                              <div>
                                                Historical profiles for this system
                                              </div>
                                            </PopoverHeader>
                                            <PopoverBody
                                              id="popover-hsp-popover-f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2-body"
                                            >
                                              <div
                                                style={
                                                  Object {
                                                    "maxHeight": "350px",
                                                    "overflowY": "scroll",
                                                  }
                                                }
                                              >
                                                <React.Fragment>
                                                  <Skeleton
                                                    size="sm"
                                                  />
                                                  <br
                                                    className="hsp-dropdown-loading"
                                                  />
                                                </React.Fragment>
                                                <React.Fragment>
                                                  <Skeleton
                                                    size="sm"
                                                  />
                                                  <br
                                                    className="hsp-dropdown-loading"
                                                  />
                                                </React.Fragment>
                                                <React.Fragment>
                                                  <Skeleton
                                                    size="sm"
                                                  />
                                                  <br
                                                    className="hsp-dropdown-loading"
                                                  />
                                                </React.Fragment>
                                              </div>
                                            </PopoverBody>
                                            <PopoverFooter
                                              id="popover-hsp-popover-f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2-footer"
                                            >
                                              <Button
                                                isDisabled={true}
                                                onClick={[Function]}
                                                ouiaId="hsp-popover-compare"
                                                variant="primary"
                                              >
                                                Compare
                                              </Button>
                                            </PopoverFooter>
                                          </PopoverContent>
                                        </ForwardRef>
                                      }
                                      popperMatchesTriggerWidth={false}
                                      positionModifiers={
                                        Object {
                                          "bottom": "pf-m-bottom",
                                          "bottom-end": "pf-m-bottom-right",
                                          "bottom-start": "pf-m-bottom-left",
                                          "left": "pf-m-left",
                                          "left-end": "pf-m-left-bottom",
                                          "left-start": "pf-m-left-top",
                                          "right": "pf-m-right",
                                          "right-end": "pf-m-right-bottom",
                                          "right-start": "pf-m-right-top",
                                          "top": "pf-m-top",
                                          "top-end": "pf-m-top-right",
                                          "top-start": "pf-m-top-left",
                                        }
                                      }
                                      removeFindDomNode={false}
                                      trigger={
                                        <HistoryIcon
                                          className="hsp-dropdown-icon"
                                          color="currentColor"
                                          noVerticalAlign={false}
                                          onClick={[Function]}
                                          size="sm"
                                        />
                                      }
                                      zIndex={9999}
                                    >
                                      <FindRefWrapper
                                        onFoundRef={[Function]}
                                      >
                                        <HistoryIcon
                                          className="hsp-dropdown-icon"
                                          color="currentColor"
                                          noVerticalAlign={false}
                                          onClick={[Function]}
                                          size="sm"
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            className="hsp-dropdown-icon"
                                            fill="currentColor"
                                            height="1em"
                                            onClick={[Function]}
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 512 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M504 255.531c.253 136.64-111.18 248.372-247.82 248.468-59.015.042-113.223-20.53-155.822-54.911-11.077-8.94-11.905-25.541-1.839-35.607l11.267-11.267c8.609-8.609 22.353-9.551 31.891-1.984C173.062 425.135 212.781 440 256 440c101.705 0 184-82.311 184-184 0-101.705-82.311-184-184-184-48.814 0-93.149 18.969-126.068 49.932l50.754 50.754c10.08 10.08 2.941 27.314-11.313 27.314H24c-8.837 0-16-7.163-16-16V38.627c0-14.254 17.234-21.393 27.314-11.314l49.372 49.372C129.209 34.136 189.552 8 256 8c136.81 0 247.747 110.78 248 247.531zm-180.912 78.784l9.823-12.63c8.138-10.463 6.253-25.542-4.21-33.679L288 256.349V152c0-13.255-10.745-24-24-24h-16c-13.255 0-24 10.745-24 24v135.651l65.409 50.874c10.463 8.137 25.541 6.253 33.679-4.21z"
                                            />
                                          </svg>
                                        </HistoryIcon>
                                      </FindRefWrapper>
                                    </Popper>
                                  </Popover>
                                </span>
                              </HistoricalProfilesPopover>
                            </div>
                          </div>
                        </th>
                      </tr>
                    </ComparisonHeader>
                  </thead>
                </table>
              </div>
            </div>
            <div
              className="drift-table-wrapper table-body-scroll"
              onScroll={[Function]}
            >
              <table
                className="pf-c-table pf-m-compact drift-table"
                data-ouia-component-id="comparison-table"
                data-ouia-component-type="PF4/Table"
              >
                <tbody>
                  <DriftTableRow
                    columnWidth={0}
                    expandedRows={Array []}
                    fact={
                      Object {
                        "name": "cpus",
                        "state": "DIFFERENT",
                        "systems": Array [
                          Object {
                            "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                            "value": "4",
                          },
                          Object {
                            "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                            "value": "3",
                          },
                        ],
                        "tooltip": "Different - At least one system fact value in this row differs.",
                      }
                    }
                    masterList={
                      Array [
                        Object {
                          "display_name": "baseline1",
                          "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                          "last_updated": "2019-01-15T14:53:15.886891Z",
                          "type": "baseline",
                        },
                        Object {
                          "display_name": "baseline2",
                          "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                          "last_updated": "2019-01-15T15:25:16.304899Z",
                          "type": "baseline",
                        },
                        Object {
                          "display_name": "sgi-xe500-01.rhts.eng.bos.redhat.com",
                          "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                          "last_updated": "2019-01-15T14:53:15.886891Z",
                          "type": "system",
                        },
                        Object {
                          "display_name": "system1",
                          "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                          "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                          "type": "historical-system-profile",
                          "updated": "2019-01-15T14:53:15.886891Z",
                        },
                        Object {
                          "display_name": "system1",
                          "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                          "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                          "type": "historical-system-profile",
                          "updated": "2019-01-15T15:25:16.304899Z",
                        },
                        Object {
                          "display_name": "ibm-x3650m4-03-vm03.lab.eng.brq.redhat.com",
                          "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                          "last_updated": "2019-01-15T15:25:16.304899Z",
                          "type": "system",
                        },
                      ]
                    }
                    type="fact"
                  >
                    <tr
                      className="unexpected-row"
                      data-ouia-component-id="comparison-table-row-cpus"
                      data-ouia-component-type="PF4/TableRow"
                    >
                      <RowFact
                        expandedRows={Array []}
                        factName="cpus"
                        type="fact"
                      >
                        <td
                          className="sticky-column fixed-column-1"
                        >
                          cpus
                        </td>
                      </RowFact>
                      <td
                        className="fact-state sticky-column fixed-column-2"
                      >
                        <StateIcon
                          fact={
                            Object {
                              "name": "cpus",
                              "state": "DIFFERENT",
                              "systems": Array [
                                Object {
                                  "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                  "value": "4",
                                },
                                Object {
                                  "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                                  "value": "3",
                                },
                              ],
                              "tooltip": "Different - At least one system fact value in this row differs.",
                            }
                          }
                          stateSort={null}
                        >
                          <Tooltip
                            content={
                              <div>
                                Different - At least one system fact value in this row differs.
                              </div>
                            }
                            key="cpus-null"
                            position="top"
                          >
                            <Popper
                              appendTo={[Function]}
                              distance={15}
                              enableFlip={true}
                              flipBehavior={
                                Array [
                                  "top",
                                  "right",
                                  "bottom",
                                  "left",
                                  "top",
                                  "right",
                                  "bottom",
                                ]
                              }
                              isVisible={false}
                              onBlur={[Function]}
                              onDocumentClick={false}
                              onDocumentKeyDown={[Function]}
                              onFocus={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onPopperMouseEnter={[Function]}
                              onPopperMouseLeave={[Function]}
                              onTriggerEnter={[Function]}
                              placement="top"
                              popper={
                                <div
                                  aria-live="off"
                                  className="pf-c-tooltip"
                                  id="pf-tooltip-28"
                                  role="tooltip"
                                  style={
                                    Object {
                                      "maxWidth": null,
                                      "opacity": 0,
                                      "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                    }
                                  }
                                >
                                  <TooltipArrow />
                                  <TooltipContent
                                    isLeftAligned={false}
                                  >
                                    <div>
                                      Different - At least one system fact value in this row differs.
                                    </div>
                                  </TooltipContent>
                                </div>
                              }
                              popperMatchesTriggerWidth={false}
                              positionModifiers={
                                Object {
                                  "bottom": "pf-m-bottom",
                                  "bottom-end": "pf-m-bottom-right",
                                  "bottom-start": "pf-m-bottom-left",
                                  "left": "pf-m-left",
                                  "left-end": "pf-m-left-bottom",
                                  "left-start": "pf-m-left-top",
                                  "right": "pf-m-right",
                                  "right-end": "pf-m-right-bottom",
                                  "right-start": "pf-m-right-top",
                                  "top": "pf-m-top",
                                  "top-end": "pf-m-top-right",
                                  "top-start": "pf-m-top-left",
                                }
                              }
                              removeFindDomNode={false}
                              trigger={
                                <ExclamationCircleIcon
                                  color="#C9190B"
                                  height="16px"
                                  noVerticalAlign={false}
                                  size="sm"
                                  width="16px"
                                />
                              }
                              zIndex={9999}
                            >
                              <FindRefWrapper
                                onFoundRef={[Function]}
                              >
                                <ExclamationCircleIcon
                                  color="#C9190B"
                                  height="16px"
                                  noVerticalAlign={false}
                                  size="sm"
                                  width="16px"
                                >
                                  <svg
                                    aria-hidden={true}
                                    aria-labelledby={null}
                                    fill="#C9190B"
                                    height="16px"
                                    role="img"
                                    style={
                                      Object {
                                        "verticalAlign": "-0.125em",
                                      }
                                    }
                                    viewBox="0 0 512 512"
                                    width="16px"
                                  >
                                    <path
                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                    />
                                  </svg>
                                </ExclamationCircleIcon>
                              </FindRefWrapper>
                            </Popper>
                          </Tooltip>
                        </StateIcon>
                      </td>
                      <td
                        className="comparison-cell highlight"
                        style={
                          Object {
                            "width": 0,
                          }
                        }
                      />
                      <td
                        className="comparison-cell highlight"
                        style={
                          Object {
                            "width": 0,
                          }
                        }
                      />
                      <td
                        className="comparison-cell highlight"
                        style={
                          Object {
                            "width": 0,
                          }
                        }
                      >
                        4
                      </td>
                      <td
                        className="comparison-cell highlight"
                        style={
                          Object {
                            "width": 0,
                          }
                        }
                      />
                      <td
                        className="comparison-cell highlight"
                        style={
                          Object {
                            "width": 0,
                          }
                        }
                      />
                      <td
                        className="comparison-cell highlight"
                        style={
                          Object {
                            "width": 0,
                          }
                        }
                      >
                        3
                      </td>
                    </tr>
                  </DriftTableRow>
                  <DriftTableRow
                    columnWidth={0}
                    expandedRows={Array []}
                    fact={
                      Object {
                        "name": "bios_uuid",
                        "state": "SAME",
                        "systems": Array [
                          Object {
                            "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                            "value": "FAKE-BIOS",
                          },
                          Object {
                            "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                            "value": "FAKE-BIOS",
                          },
                        ],
                      }
                    }
                    masterList={
                      Array [
                        Object {
                          "display_name": "baseline1",
                          "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                          "last_updated": "2019-01-15T14:53:15.886891Z",
                          "type": "baseline",
                        },
                        Object {
                          "display_name": "baseline2",
                          "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                          "last_updated": "2019-01-15T15:25:16.304899Z",
                          "type": "baseline",
                        },
                        Object {
                          "display_name": "sgi-xe500-01.rhts.eng.bos.redhat.com",
                          "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                          "last_updated": "2019-01-15T14:53:15.886891Z",
                          "type": "system",
                        },
                        Object {
                          "display_name": "system1",
                          "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                          "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                          "type": "historical-system-profile",
                          "updated": "2019-01-15T14:53:15.886891Z",
                        },
                        Object {
                          "display_name": "system1",
                          "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                          "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                          "type": "historical-system-profile",
                          "updated": "2019-01-15T15:25:16.304899Z",
                        },
                        Object {
                          "display_name": "ibm-x3650m4-03-vm03.lab.eng.brq.redhat.com",
                          "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                          "last_updated": "2019-01-15T15:25:16.304899Z",
                          "type": "system",
                        },
                      ]
                    }
                    type="fact"
                  >
                    <tr
                      className=""
                      data-ouia-component-id="comparison-table-row-bios_uuid"
                      data-ouia-component-type="PF4/TableRow"
                    >
                      <RowFact
                        expandedRows={Array []}
                        factName="bios_uuid"
                        type="fact"
                      >
                        <td
                          className="sticky-column fixed-column-1"
                        >
                          bios_uuid
                        </td>
                      </RowFact>
                      <td
                        className="fact-state sticky-column fixed-column-2"
                      >
                        <StateIcon
                          fact={
                            Object {
                              "name": "bios_uuid",
                              "state": "SAME",
                              "systems": Array [
                                Object {
                                  "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                  "value": "FAKE-BIOS",
                                },
                                Object {
                                  "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                                  "value": "FAKE-BIOS",
                                },
                              ],
                            }
                          }
                          stateSort={null}
                        >
                          <Tooltip
                            content={<div />}
                            key="bios_uuid-null"
                            position="top"
                          >
                            <Popper
                              appendTo={[Function]}
                              distance={15}
                              enableFlip={true}
                              flipBehavior={
                                Array [
                                  "top",
                                  "right",
                                  "bottom",
                                  "left",
                                  "top",
                                  "right",
                                  "bottom",
                                ]
                              }
                              isVisible={false}
                              onBlur={[Function]}
                              onDocumentClick={false}
                              onDocumentKeyDown={[Function]}
                              onFocus={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onPopperMouseEnter={[Function]}
                              onPopperMouseLeave={[Function]}
                              onTriggerEnter={[Function]}
                              placement="top"
                              popper={
                                <div
                                  aria-live="off"
                                  className="pf-c-tooltip"
                                  id="pf-tooltip-29"
                                  role="tooltip"
                                  style={
                                    Object {
                                      "maxWidth": null,
                                      "opacity": 0,
                                      "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                    }
                                  }
                                >
                                  <TooltipArrow />
                                  <TooltipContent
                                    isLeftAligned={false}
                                  >
                                    <div />
                                  </TooltipContent>
                                </div>
                              }
                              popperMatchesTriggerWidth={false}
                              positionModifiers={
                                Object {
                                  "bottom": "pf-m-bottom",
                                  "bottom-end": "pf-m-bottom-right",
                                  "bottom-start": "pf-m-bottom-left",
                                  "left": "pf-m-left",
                                  "left-end": "pf-m-left-bottom",
                                  "left-start": "pf-m-left-top",
                                  "right": "pf-m-right",
                                  "right-end": "pf-m-right-bottom",
                                  "right-start": "pf-m-right-top",
                                  "top": "pf-m-top",
                                  "top-end": "pf-m-top-right",
                                  "top-start": "pf-m-top-left",
                                }
                              }
                              removeFindDomNode={false}
                              trigger={
                                <CheckCircleIcon
                                  color="#3E8635"
                                  height="16px"
                                  noVerticalAlign={false}
                                  size="sm"
                                  width="16px"
                                />
                              }
                              zIndex={9999}
                            >
                              <FindRefWrapper
                                onFoundRef={[Function]}
                              >
                                <CheckCircleIcon
                                  color="#3E8635"
                                  height="16px"
                                  noVerticalAlign={false}
                                  size="sm"
                                  width="16px"
                                >
                                  <svg
                                    aria-hidden={true}
                                    aria-labelledby={null}
                                    fill="#3E8635"
                                    height="16px"
                                    role="img"
                                    style={
                                      Object {
                                        "verticalAlign": "-0.125em",
                                      }
                                    }
                                    viewBox="0 0 512 512"
                                    width="16px"
                                  >
                                    <path
                                      d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                                    />
                                  </svg>
                                </CheckCircleIcon>
                              </FindRefWrapper>
                            </Popper>
                          </Tooltip>
                        </StateIcon>
                      </td>
                      <td
                        className="comparison-cell"
                        style={
                          Object {
                            "width": 0,
                          }
                        }
                      />
                      <td
                        className="comparison-cell"
                        style={
                          Object {
                            "width": 0,
                          }
                        }
                      />
                      <td
                        className="comparison-cell"
                        style={
                          Object {
                            "width": 0,
                          }
                        }
                      >
                        FAKE-BIOS
                      </td>
                      <td
                        className="comparison-cell"
                        style={
                          Object {
                            "width": 0,
                          }
                        }
                      />
                      <td
                        className="comparison-cell"
                        style={
                          Object {
                            "width": 0,
                          }
                        }
                      />
                      <td
                        className="comparison-cell"
                        style={
                          Object {
                            "width": 0,
                          }
                        }
                      >
                        FAKE-BIOS
                      </td>
                    </tr>
                  </DriftTableRow>
                  <DriftTableRow
                    columnWidth={0}
                    expandedRows={Array []}
                    fact={
                      Object {
                        "name": "display_name",
                        "state": "SAME",
                        "systems": Array [
                          Object {
                            "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                            "value": "PC-NAME",
                          },
                          Object {
                            "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                            "value": "PC-NAME",
                          },
                        ],
                      }
                    }
                    masterList={
                      Array [
                        Object {
                          "display_name": "baseline1",
                          "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                          "last_updated": "2019-01-15T14:53:15.886891Z",
                          "type": "baseline",
                        },
                        Object {
                          "display_name": "baseline2",
                          "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                          "last_updated": "2019-01-15T15:25:16.304899Z",
                          "type": "baseline",
                        },
                        Object {
                          "display_name": "sgi-xe500-01.rhts.eng.bos.redhat.com",
                          "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                          "last_updated": "2019-01-15T14:53:15.886891Z",
                          "type": "system",
                        },
                        Object {
                          "display_name": "system1",
                          "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                          "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                          "type": "historical-system-profile",
                          "updated": "2019-01-15T14:53:15.886891Z",
                        },
                        Object {
                          "display_name": "system1",
                          "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                          "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                          "type": "historical-system-profile",
                          "updated": "2019-01-15T15:25:16.304899Z",
                        },
                        Object {
                          "display_name": "ibm-x3650m4-03-vm03.lab.eng.brq.redhat.com",
                          "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                          "last_updated": "2019-01-15T15:25:16.304899Z",
                          "type": "system",
                        },
                      ]
                    }
                    type="fact"
                  >
                    <tr
                      className=""
                      data-ouia-component-id="comparison-table-row-display_name"
                      data-ouia-component-type="PF4/TableRow"
                    >
                      <RowFact
                        expandedRows={Array []}
                        factName="display_name"
                        type="fact"
                      >
                        <td
                          className="sticky-column fixed-column-1"
                        >
                          display_name
                        </td>
                      </RowFact>
                      <td
                        className="fact-state sticky-column fixed-column-2"
                      >
                        <StateIcon
                          fact={
                            Object {
                              "name": "display_name",
                              "state": "SAME",
                              "systems": Array [
                                Object {
                                  "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                  "value": "PC-NAME",
                                },
                                Object {
                                  "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                                  "value": "PC-NAME",
                                },
                              ],
                            }
                          }
                          stateSort={null}
                        >
                          <Tooltip
                            content={<div />}
                            key="display_name-null"
                            position="top"
                          >
                            <Popper
                              appendTo={[Function]}
                              distance={15}
                              enableFlip={true}
                              flipBehavior={
                                Array [
                                  "top",
                                  "right",
                                  "bottom",
                                  "left",
                                  "top",
                                  "right",
                                  "bottom",
                                ]
                              }
                              isVisible={false}
                              onBlur={[Function]}
                              onDocumentClick={false}
                              onDocumentKeyDown={[Function]}
                              onFocus={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onPopperMouseEnter={[Function]}
                              onPopperMouseLeave={[Function]}
                              onTriggerEnter={[Function]}
                              placement="top"
                              popper={
                                <div
                                  aria-live="off"
                                  className="pf-c-tooltip"
                                  id="pf-tooltip-30"
                                  role="tooltip"
                                  style={
                                    Object {
                                      "maxWidth": null,
                                      "opacity": 0,
                                      "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                    }
                                  }
                                >
                                  <TooltipArrow />
                                  <TooltipContent
                                    isLeftAligned={false}
                                  >
                                    <div />
                                  </TooltipContent>
                                </div>
                              }
                              popperMatchesTriggerWidth={false}
                              positionModifiers={
                                Object {
                                  "bottom": "pf-m-bottom",
                                  "bottom-end": "pf-m-bottom-right",
                                  "bottom-start": "pf-m-bottom-left",
                                  "left": "pf-m-left",
                                  "left-end": "pf-m-left-bottom",
                                  "left-start": "pf-m-left-top",
                                  "right": "pf-m-right",
                                  "right-end": "pf-m-right-bottom",
                                  "right-start": "pf-m-right-top",
                                  "top": "pf-m-top",
                                  "top-end": "pf-m-top-right",
                                  "top-start": "pf-m-top-left",
                                }
                              }
                              removeFindDomNode={false}
                              trigger={
                                <CheckCircleIcon
                                  color="#3E8635"
                                  height="16px"
                                  noVerticalAlign={false}
                                  size="sm"
                                  width="16px"
                                />
                              }
                              zIndex={9999}
                            >
                              <FindRefWrapper
                                onFoundRef={[Function]}
                              >
                                <CheckCircleIcon
                                  color="#3E8635"
                                  height="16px"
                                  noVerticalAlign={false}
                                  size="sm"
                                  width="16px"
                                >
                                  <svg
                                    aria-hidden={true}
                                    aria-labelledby={null}
                                    fill="#3E8635"
                                    height="16px"
                                    role="img"
                                    style={
                                      Object {
                                        "verticalAlign": "-0.125em",
                                      }
                                    }
                                    viewBox="0 0 512 512"
                                    width="16px"
                                  >
                                    <path
                                      d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                                    />
                                  </svg>
                                </CheckCircleIcon>
                              </FindRefWrapper>
                            </Popper>
                          </Tooltip>
                        </StateIcon>
                      </td>
                      <td
                        className="comparison-cell"
                        style={
                          Object {
                            "width": 0,
                          }
                        }
                      />
                      <td
                        className="comparison-cell"
                        style={
                          Object {
                            "width": 0,
                          }
                        }
                      />
                      <td
                        className="comparison-cell"
                        style={
                          Object {
                            "width": 0,
                          }
                        }
                      >
                        PC-NAME
                      </td>
                      <td
                        className="comparison-cell"
                        style={
                          Object {
                            "width": 0,
                          }
                        }
                      />
                      <td
                        className="comparison-cell"
                        style={
                          Object {
                            "width": 0,
                          }
                        }
                      />
                      <td
                        className="comparison-cell"
                        style={
                          Object {
                            "width": 0,
                          }
                        }
                      >
                        PC-NAME
                      </td>
                    </tr>
                  </DriftTableRow>
                </tbody>
              </table>
            </div>
          </DriftTable>
        </DriftTableWithHooks>
      </Connect(DriftTableWithHooks)>
    </Provider>
  </Router>
</MemoryRouter>
`;

exports[`DriftTable should render correctly 1`] = `
<Fragment>
  <Connect(WrappedAddSystemModal)
    confirmModal={[Function]}
    permissions={
      Object {
        "hspRead": true,
      }
    }
    selectedSystemIds={Array []}
    updateReferenceId={[MockFunction]}
  />
  <div
    className="sticky-table-header"
  >
    <div
      className="second-scroll-wrapper"
      onScroll={[Function]}
    >
      <div
        className="second-scroll"
        style={
          Object {
            "width": "",
          }
        }
      />
    </div>
    <div
      className="drift-table-wrapper"
      onScroll={[Function]}
    >
      <table
        className="pf-c-table pf-m-compact drift-table"
        data-ouia-component-id="comparison-table"
        data-ouia-component-type="PF4/Table"
      >
        <thead>
          <ComparisonHeader
            factSort="asc"
            fetchCompare={[Function]}
            masterList={Array []}
            permissions={
              Object {
                "hspRead": true,
              }
            }
            removeSystem={[Function]}
            selectHistoricProfiles={[MockFunction]}
            setColumnHeaderWidth={[Function]}
            setHistory={[MockFunction]}
            stateSort="desc"
            systemIds={Array []}
            toggleFactSort={[MockFunction]}
            toggleStateSort={[MockFunction]}
            updateReferenceId={[Function]}
          />
        </thead>
      </table>
    </div>
  </div>
  <div
    className="drift-table-wrapper table-body-scroll"
    onScroll={[Function]}
  >
    <table
      className="pf-c-table pf-m-compact drift-table"
      data-ouia-component-id="comparison-table"
      data-ouia-component-type="PF4/Table"
    >
      <tbody />
    </table>
  </div>
</Fragment>
`;
