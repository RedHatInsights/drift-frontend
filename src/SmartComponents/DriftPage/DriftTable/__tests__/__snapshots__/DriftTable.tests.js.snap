// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ConnectedDriftTable should render correctly 1`] = `
<MemoryRouter
  keyLength={0}
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <withRouter(Connect(DriftTable))
        baselines={Array []}
        error={Object {}}
        historicalProfiles={Array []}
        systems={Array []}
        updateReferenceId={
          [MockFunction] {
            "calls": Array [
              Array [
                undefined,
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          }
        }
      >
        <Connect(DriftTable)
          baselines={Array []}
          error={Object {}}
          historicalProfiles={Array []}
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "canGo": [Function],
              "createHref": [Function],
              "entries": Array [
                Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              ],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "index": 0,
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
          location={
            Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            }
          }
          match={
            Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            }
          }
          systems={Array []}
          updateReferenceId={
            [MockFunction] {
              "calls": Array [
                Array [
                  undefined,
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            }
          }
        >
          <DriftTable
            addSystemModalOpened={false}
            baselines={Array []}
            emptyState={false}
            error={Object {}}
            expandRow={[Function]}
            expandedRows={Array []}
            fetchCompare={[Function]}
            fullCompareData={Array []}
            historicalProfiles={Array []}
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            loading={false}
            location={
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              }
            }
            match={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
            selectHistoricProfiles={[Function]}
            setSelectedBaselines={[Function]}
            systems={Array []}
            toggleFactSort={[Function]}
            toggleStateSort={[Function]}
            updateReferenceId={
              [MockFunction] {
                "calls": Array [
                  Array [
                    undefined,
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              }
            }
          >
            <Connect(AddSystemModal)
              confirmModal={[Function]}
              selectedSystemIds={Array []}
            >
              <AddSystemModal
                addSystemModalOpened={false}
                confirmModal={[Function]}
                selectActiveTab={[Function]}
                selectBaseline={[Function]}
                selectHistoricProfiles={[Function]}
                selectedBaselineIds={Array []}
                selectedHSPIds={Array []}
                selectedSystemIds={Array []}
                setSelectedSystemIds={[Function]}
                toggleAddSystemModal={[Function]}
              >
                <Modal
                  actions={
                    Array [
                      <Button
                        isDisabled={true}
                        onClick={[Function]}
                        ouiaId="add-to-comparison-submit-button"
                        variant="primary"
                      >
                        Submit
                      </Button>,
                      <Button
                        onClick={[Function]}
                        ouiaId="add-to-comparison-cancel-button"
                        variant="link"
                      >
                        Cancel
                      </Button>,
                    ]
                  }
                  appendTo={[Function]}
                  aria-describedby=""
                  aria-label=""
                  aria-labelledby=""
                  className="drift"
                  hasNoBodyWrapper={false}
                  isOpen={false}
                  onClose={[Function]}
                  ouiaId="add-to-comparison-modal"
                  ouiaSafe={true}
                  showClose={true}
                  title="Add to comparison"
                  titleIconVariant={null}
                  titleLabel=""
                  variant="default"
                  width="950px"
                >
                  <Portal
                    containerInfo={<div />}
                  >
                    <ModalContent
                      actions={
                        Array [
                          <Button
                            isDisabled={true}
                            onClick={[Function]}
                            ouiaId="add-to-comparison-submit-button"
                            variant="primary"
                          >
                            Submit
                          </Button>,
                          <Button
                            onClick={[Function]}
                            ouiaId="add-to-comparison-cancel-button"
                            variant="link"
                          >
                            Cancel
                          </Button>,
                        ]
                      }
                      aria-describedby=""
                      aria-label=""
                      aria-labelledby=""
                      boxId="pf-modal-part-0"
                      className="drift"
                      descriptorId="pf-modal-part-2"
                      hasNoBodyWrapper={false}
                      isOpen={false}
                      labelId="pf-modal-part-1"
                      onClose={[Function]}
                      ouiaId="add-to-comparison-modal"
                      ouiaSafe={true}
                      showClose={true}
                      title="Add to comparison"
                      titleIconVariant={null}
                      titleLabel=""
                      variant="default"
                      width="950px"
                    />
                  </Portal>
                </Modal>
              </AddSystemModal>
            </Connect(AddSystemModal)>
            <div
              className="drift-table-wrapper"
            >
              <table
                className="pf-c-table pf-m-compact drift-table"
                data-ouia-component-id="comparison-table"
                data-ouia-component-type="PF4/Table"
              >
                <thead>
                  <ComparisonHeader
                    fetchCompare={[Function]}
                    masterList={Array []}
                    removeSystem={[Function]}
                    selectHistoricProfiles={[Function]}
                    systemIds={Array []}
                    toggleFactSort={[Function]}
                    toggleStateSort={[Function]}
                    updateReferenceId={[Function]}
                  >
                    <tr
                      className="sticky-column-header"
                      data-ouia-component-id="comparison-table-header-row"
                      data-ouia-component-type="PF4/TableRow"
                    >
                      <th
                        className="fact-header sticky-column fixed-column-1 pointer"
                        data-ouia-component-id="fact-sort-button"
                        data-ouia-component-type="PF4/Button"
                        key="fact-header"
                        onClick={[Function]}
                      >
                        <div
                          className="active-blue"
                        >
                          Fact 
                          <ArrowsAltVIcon
                            className="not-active"
                            color="currentColor"
                            noVerticalAlign={false}
                            size="sm"
                          >
                            <svg
                              aria-hidden={true}
                              aria-labelledby={null}
                              className="not-active"
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style={
                                Object {
                                  "verticalAlign": "-0.125em",
                                }
                              }
                              viewBox="0 0 256 512"
                              width="1em"
                            >
                              <path
                                d="M214.059 377.941H168V134.059h46.059c21.382 0 32.09-25.851 16.971-40.971L144.971 7.029c-9.373-9.373-24.568-9.373-33.941 0L24.971 93.088c-15.119 15.119-4.411 40.971 16.971 40.971H88v243.882H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.568 9.373 33.941 0l86.059-86.059c15.12-15.119 4.412-40.971-16.97-40.971z"
                              />
                            </svg>
                          </ArrowsAltVIcon>
                        </div>
                      </th>
                      <th
                        className="state-header sticky-column fixed-column-2 pointer"
                        data-ouia-component-id="state-sort-button"
                        data-ouia-component-type="PF4/Button"
                        id="disabled"
                        key="state-header"
                        onClick={[Function]}
                      >
                        <div
                          className="active-blue"
                        >
                          State 
                          <ArrowsAltVIcon
                            className="not-active"
                            color="currentColor"
                            noVerticalAlign={false}
                            size="sm"
                          >
                            <svg
                              aria-hidden={true}
                              aria-labelledby={null}
                              className="not-active"
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style={
                                Object {
                                  "verticalAlign": "-0.125em",
                                }
                              }
                              viewBox="0 0 256 512"
                              width="1em"
                            >
                              <path
                                d="M214.059 377.941H168V134.059h46.059c21.382 0 32.09-25.851 16.971-40.971L144.971 7.029c-9.373-9.373-24.568-9.373-33.941 0L24.971 93.088c-15.119 15.119-4.411 40.971 16.971 40.971H88v243.882H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.568 9.373 33.941 0l86.059-86.059c15.12-15.119 4.412-40.971-16.97-40.971z"
                              />
                            </svg>
                          </ArrowsAltVIcon>
                        </div>
                      </th>
                    </tr>
                  </ComparisonHeader>
                </thead>
                <tbody />
              </table>
            </div>
          </DriftTable>
        </Connect(DriftTable)>
      </withRouter(Connect(DriftTable))>
    </Provider>
  </Router>
</MemoryRouter>
`;

exports[`ConnectedDriftTable should render loading rows 1`] = `
<MemoryRouter
  keyLength={0}
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <withRouter(Connect(DriftTable))
        baselines={Array []}
        error={Object {}}
        historicalProfiles={Array []}
        systems={Array []}
        updateReferenceId={
          [MockFunction] {
            "calls": Array [
              Array [
                undefined,
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          }
        }
      >
        <Connect(DriftTable)
          baselines={Array []}
          error={Object {}}
          historicalProfiles={Array []}
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "canGo": [Function],
              "createHref": [Function],
              "entries": Array [
                Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              ],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "index": 0,
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
          location={
            Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            }
          }
          match={
            Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            }
          }
          systems={Array []}
          updateReferenceId={
            [MockFunction] {
              "calls": Array [
                Array [
                  undefined,
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            }
          }
        >
          <DriftTable
            addSystemModalOpened={false}
            baselines={Array []}
            emptyState={false}
            error={Object {}}
            expandRow={[Function]}
            expandedRows={Array []}
            fetchCompare={[Function]}
            fullCompareData={Array []}
            historicalProfiles={Array []}
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            loading={true}
            location={
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              }
            }
            match={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
            selectHistoricProfiles={[Function]}
            setSelectedBaselines={[Function]}
            systems={Array []}
            toggleFactSort={[Function]}
            toggleStateSort={[Function]}
            updateReferenceId={
              [MockFunction] {
                "calls": Array [
                  Array [
                    undefined,
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              }
            }
          >
            <Connect(AddSystemModal)
              confirmModal={[Function]}
              selectedSystemIds={Array []}
            >
              <AddSystemModal
                addSystemModalOpened={false}
                confirmModal={[Function]}
                selectActiveTab={[Function]}
                selectBaseline={[Function]}
                selectHistoricProfiles={[Function]}
                selectedBaselineIds={Array []}
                selectedHSPIds={Array []}
                selectedSystemIds={Array []}
                setSelectedSystemIds={[Function]}
                toggleAddSystemModal={[Function]}
              >
                <Modal
                  actions={
                    Array [
                      <Button
                        isDisabled={true}
                        onClick={[Function]}
                        ouiaId="add-to-comparison-submit-button"
                        variant="primary"
                      >
                        Submit
                      </Button>,
                      <Button
                        onClick={[Function]}
                        ouiaId="add-to-comparison-cancel-button"
                        variant="link"
                      >
                        Cancel
                      </Button>,
                    ]
                  }
                  appendTo={[Function]}
                  aria-describedby=""
                  aria-label=""
                  aria-labelledby=""
                  className="drift"
                  hasNoBodyWrapper={false}
                  isOpen={false}
                  onClose={[Function]}
                  ouiaId="add-to-comparison-modal"
                  ouiaSafe={true}
                  showClose={true}
                  title="Add to comparison"
                  titleIconVariant={null}
                  titleLabel=""
                  variant="default"
                  width="950px"
                >
                  <Portal
                    containerInfo={<div />}
                  >
                    <ModalContent
                      actions={
                        Array [
                          <Button
                            isDisabled={true}
                            onClick={[Function]}
                            ouiaId="add-to-comparison-submit-button"
                            variant="primary"
                          >
                            Submit
                          </Button>,
                          <Button
                            onClick={[Function]}
                            ouiaId="add-to-comparison-cancel-button"
                            variant="link"
                          >
                            Cancel
                          </Button>,
                        ]
                      }
                      aria-describedby=""
                      aria-label=""
                      aria-labelledby=""
                      boxId="pf-modal-part-3"
                      className="drift"
                      descriptorId="pf-modal-part-5"
                      hasNoBodyWrapper={false}
                      isOpen={false}
                      labelId="pf-modal-part-4"
                      onClose={[Function]}
                      ouiaId="add-to-comparison-modal"
                      ouiaSafe={true}
                      showClose={true}
                      title="Add to comparison"
                      titleIconVariant={null}
                      titleLabel=""
                      variant="default"
                      width="950px"
                    />
                  </Portal>
                </Modal>
              </AddSystemModal>
            </Connect(AddSystemModal)>
            <div
              className="drift-table-wrapper"
            >
              <table
                className="pf-c-table pf-m-compact drift-table"
                data-ouia-component-id="comparison-table"
                data-ouia-component-type="PF4/Table"
              >
                <thead>
                  <ComparisonHeader
                    fetchCompare={[Function]}
                    masterList={Array []}
                    removeSystem={[Function]}
                    selectHistoricProfiles={[Function]}
                    systemIds={Array []}
                    toggleFactSort={[Function]}
                    toggleStateSort={[Function]}
                    updateReferenceId={[Function]}
                  >
                    <tr
                      className="sticky-column-header"
                      data-ouia-component-id="comparison-table-header-row"
                      data-ouia-component-type="PF4/TableRow"
                    >
                      <th
                        className="fact-header sticky-column fixed-column-1 pointer"
                        data-ouia-component-id="fact-sort-button"
                        data-ouia-component-type="PF4/Button"
                        key="fact-header"
                        onClick={[Function]}
                      >
                        <div
                          className="active-blue"
                        >
                          Fact 
                          <ArrowsAltVIcon
                            className="not-active"
                            color="currentColor"
                            noVerticalAlign={false}
                            size="sm"
                          >
                            <svg
                              aria-hidden={true}
                              aria-labelledby={null}
                              className="not-active"
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style={
                                Object {
                                  "verticalAlign": "-0.125em",
                                }
                              }
                              viewBox="0 0 256 512"
                              width="1em"
                            >
                              <path
                                d="M214.059 377.941H168V134.059h46.059c21.382 0 32.09-25.851 16.971-40.971L144.971 7.029c-9.373-9.373-24.568-9.373-33.941 0L24.971 93.088c-15.119 15.119-4.411 40.971 16.971 40.971H88v243.882H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.568 9.373 33.941 0l86.059-86.059c15.12-15.119 4.412-40.971-16.97-40.971z"
                              />
                            </svg>
                          </ArrowsAltVIcon>
                        </div>
                      </th>
                      <th
                        className="state-header sticky-column fixed-column-2 pointer"
                        data-ouia-component-id="state-sort-button"
                        data-ouia-component-type="PF4/Button"
                        id="disabled"
                        key="state-header"
                        onClick={[Function]}
                      >
                        <div
                          className="active-blue"
                        >
                          State 
                          <ArrowsAltVIcon
                            className="not-active"
                            color="currentColor"
                            noVerticalAlign={false}
                            size="sm"
                          >
                            <svg
                              aria-hidden={true}
                              aria-labelledby={null}
                              className="not-active"
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style={
                                Object {
                                  "verticalAlign": "-0.125em",
                                }
                              }
                              viewBox="0 0 256 512"
                              width="1em"
                            >
                              <path
                                d="M214.059 377.941H168V134.059h46.059c21.382 0 32.09-25.851 16.971-40.971L144.971 7.029c-9.373-9.373-24.568-9.373-33.941 0L24.971 93.088c-15.119 15.119-4.411 40.971 16.971 40.971H88v243.882H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.568 9.373 33.941 0l86.059-86.059c15.12-15.119 4.412-40.971-16.97-40.971z"
                              />
                            </svg>
                          </ArrowsAltVIcon>
                        </div>
                      </th>
                    </tr>
                  </ComparisonHeader>
                </thead>
                <tbody>
                  <tr>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
          </DriftTable>
        </Connect(DriftTable)>
      </withRouter(Connect(DriftTable))>
    </Provider>
  </Router>
</MemoryRouter>
`;

exports[`ConnectedDriftTable should render multi fact values 1`] = `
<MemoryRouter
  keyLength={0}
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <withRouter(Connect(DriftTable))
        baselines={
          Array [
            Object {
              "display_name": "baseline1",
              "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
              "last_updated": "2019-01-15T14:53:15.886891Z",
              "type": "baseline",
            },
            Object {
              "display_name": "baseline2",
              "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
              "last_updated": "2019-01-15T15:25:16.304899Z",
              "type": "baseline",
            },
          ]
        }
        historicalProfiles={
          Array [
            Object {
              "display_name": "system1",
              "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
              "last_updated": "2019-01-15T14:53:15.886891Z",
              "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
              "type": "historical-system-profile",
            },
            Object {
              "display_name": "system1",
              "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
              "last_updated": "2019-01-15T15:25:16.304899Z",
              "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
              "type": "historical-system-profile",
            },
          ]
        }
        systems={
          Array [
            Object {
              "display_name": "sgi-xe500-01.rhts.eng.bos.redhat.com",
              "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
              "last_updated": "2019-01-15T14:53:15.886891Z",
              "type": "system",
            },
            Object {
              "display_name": "ibm-x3650m4-03-vm03.lab.eng.brq.redhat.com",
              "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
              "last_updated": "2019-01-15T15:25:16.304899Z",
              "type": "system",
            },
          ]
        }
        updateReferenceId={
          [MockFunction] {
            "calls": Array [
              Array [
                undefined,
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          }
        }
      >
        <Connect(DriftTable)
          baselines={
            Array [
              Object {
                "display_name": "baseline1",
                "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                "last_updated": "2019-01-15T14:53:15.886891Z",
                "type": "baseline",
              },
              Object {
                "display_name": "baseline2",
                "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                "last_updated": "2019-01-15T15:25:16.304899Z",
                "type": "baseline",
              },
            ]
          }
          historicalProfiles={
            Array [
              Object {
                "display_name": "system1",
                "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                "last_updated": "2019-01-15T14:53:15.886891Z",
                "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                "type": "historical-system-profile",
              },
              Object {
                "display_name": "system1",
                "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                "last_updated": "2019-01-15T15:25:16.304899Z",
                "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                "type": "historical-system-profile",
              },
            ]
          }
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "canGo": [Function],
              "createHref": [Function],
              "entries": Array [
                Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              ],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "index": 0,
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
          location={
            Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            }
          }
          match={
            Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            }
          }
          systems={
            Array [
              Object {
                "display_name": "sgi-xe500-01.rhts.eng.bos.redhat.com",
                "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                "last_updated": "2019-01-15T14:53:15.886891Z",
                "type": "system",
              },
              Object {
                "display_name": "ibm-x3650m4-03-vm03.lab.eng.brq.redhat.com",
                "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                "last_updated": "2019-01-15T15:25:16.304899Z",
                "type": "system",
              },
            ]
          }
          updateReferenceId={
            [MockFunction] {
              "calls": Array [
                Array [
                  undefined,
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            }
          }
        >
          <DriftTable
            addSystemModalOpened={false}
            baselines={
              Array [
                Object {
                  "display_name": "baseline1",
                  "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                  "last_updated": "2019-01-15T14:53:15.886891Z",
                  "type": "baseline",
                },
                Object {
                  "display_name": "baseline2",
                  "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                  "last_updated": "2019-01-15T15:25:16.304899Z",
                  "type": "baseline",
                },
              ]
            }
            emptyState={false}
            expandRow={[Function]}
            expandedRows={
              Array [
                "cpu_flags",
                "abc",
              ]
            }
            fetchCompare={[Function]}
            filteredCompareData={
              Array [
                Object {
                  "name": "cpus",
                  "state": "DIFFERENT",
                  "systems": Array [
                    Object {
                      "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                      "value": "4",
                    },
                    Object {
                      "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                      "value": "3",
                    },
                    Object {
                      "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                      "value": "3",
                    },
                    Object {
                      "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                      "value": "4",
                    },
                    Object {
                      "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                      "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                      "value": "4",
                    },
                    Object {
                      "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                      "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                      "value": "3",
                    },
                  ],
                  "tooltip": "Different - At least one system fact value in this row differs.",
                },
                Object {
                  "name": "bios_uuid",
                  "state": "SAME",
                  "systems": Array [
                    Object {
                      "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                      "value": "FAKE-BIOS",
                    },
                    Object {
                      "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                      "value": "FAKE-BIOS",
                    },
                    Object {
                      "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                      "value": "FAKE-BIOS",
                    },
                    Object {
                      "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                      "value": "FAKE-BIOS",
                    },
                    Object {
                      "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                      "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                      "value": "FAKE-BIOS",
                    },
                    Object {
                      "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                      "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                      "value": "FAKE-BIOS",
                    },
                  ],
                },
                Object {
                  "name": "display_name",
                  "state": "SAME",
                  "systems": Array [
                    Object {
                      "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                      "value": "PC-NAME",
                    },
                    Object {
                      "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                      "value": "PC-NAME",
                    },
                    Object {
                      "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                      "value": "PC-NAME",
                    },
                    Object {
                      "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                      "value": "PC-NAME",
                    },
                    Object {
                      "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                      "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                      "value": "PC-NAME",
                    },
                    Object {
                      "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                      "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                      "value": "PC-NAME",
                    },
                  ],
                },
                Object {
                  "comparisons": Array [
                    Object {
                      "name": "abm",
                      "state": "SAME",
                      "systems": Array [
                        Object {
                          "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                          "value": "enabled",
                        },
                        Object {
                          "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                          "value": "enabled",
                        },
                        Object {
                          "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                          "value": "enabled",
                        },
                        Object {
                          "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                          "value": "enabled",
                        },
                        Object {
                          "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                          "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                          "value": "enabled",
                        },
                        Object {
                          "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                          "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                          "value": "enabled",
                        },
                      ],
                    },
                    Object {
                      "name": "adx",
                      "state": "INCOMPLETE_DATA",
                      "systems": Array [
                        Object {
                          "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                          "value": "disabled",
                        },
                        Object {
                          "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                          "value": undefined,
                        },
                        Object {
                          "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                          "value": "disabled",
                        },
                        Object {
                          "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                          "value": undefined,
                        },
                        Object {
                          "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                          "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                          "value": "disabled",
                        },
                        Object {
                          "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                          "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                          "value": "disabled",
                        },
                      ],
                    },
                    Object {
                      "multivalues": Array [
                        Object {
                          "state": "SAME",
                          "systems": Array [
                            Object {
                              "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                              "value": "blah1",
                            },
                            Object {
                              "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                              "value": "blah1",
                            },
                            Object {
                              "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                              "value": "blah1",
                            },
                            Object {
                              "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                              "value": "blah1",
                            },
                            Object {
                              "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                              "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                              "value": "blah1",
                            },
                            Object {
                              "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                              "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                              "value": "blah1",
                            },
                          ],
                        },
                        Object {
                          "state": "INCOMPLETE_DATA",
                          "systems": Array [
                            Object {
                              "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                              "value": undefined,
                            },
                            Object {
                              "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                              "value": "blah2",
                            },
                            Object {
                              "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                              "value": "blah2",
                            },
                            Object {
                              "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                              "value": "blah2",
                            },
                            Object {
                              "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                              "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                              "value": undefined,
                            },
                            Object {
                              "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                              "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                              "value": undefined,
                            },
                          ],
                        },
                      ],
                      "name": "abc",
                      "state": "INCOMPLETE_DATA",
                    },
                  ],
                  "name": "cpu_flags",
                  "state": "DIFFERENT",
                },
              ]
            }
            fullCompareData={
              Array [
                Object {
                  "name": "cpus",
                  "state": "DIFFERENT",
                  "systems": Array [
                    Object {
                      "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                      "value": "4",
                    },
                    Object {
                      "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                      "value": "3",
                    },
                    Object {
                      "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                      "value": "3",
                    },
                    Object {
                      "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                      "value": "4",
                    },
                    Object {
                      "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                      "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                      "value": "4",
                    },
                    Object {
                      "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                      "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                      "value": "3",
                    },
                  ],
                  "tooltip": "Different - At least one system fact value in this row differs.",
                },
                Object {
                  "name": "bios_uuid",
                  "state": "SAME",
                  "systems": Array [
                    Object {
                      "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                      "value": "FAKE-BIOS",
                    },
                    Object {
                      "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                      "value": "FAKE-BIOS",
                    },
                    Object {
                      "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                      "value": "FAKE-BIOS",
                    },
                    Object {
                      "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                      "value": "FAKE-BIOS",
                    },
                    Object {
                      "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                      "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                      "value": "FAKE-BIOS",
                    },
                    Object {
                      "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                      "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                      "value": "FAKE-BIOS",
                    },
                  ],
                },
                Object {
                  "name": "display_name",
                  "state": "SAME",
                  "systems": Array [
                    Object {
                      "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                      "value": "PC-NAME",
                    },
                    Object {
                      "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                      "value": "PC-NAME",
                    },
                    Object {
                      "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                      "value": "PC-NAME",
                    },
                    Object {
                      "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                      "value": "PC-NAME",
                    },
                    Object {
                      "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                      "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                      "value": "PC-NAME",
                    },
                    Object {
                      "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                      "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                      "value": "PC-NAME",
                    },
                  ],
                },
                Object {
                  "comparisons": Array [
                    Object {
                      "name": "abm",
                      "state": "SAME",
                      "systems": Array [
                        Object {
                          "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                          "value": "enabled",
                        },
                        Object {
                          "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                          "value": "enabled",
                        },
                        Object {
                          "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                          "value": "enabled",
                        },
                        Object {
                          "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                          "value": "enabled",
                        },
                        Object {
                          "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                          "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                          "value": "enabled",
                        },
                        Object {
                          "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                          "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                          "value": "enabled",
                        },
                      ],
                    },
                    Object {
                      "name": "adx",
                      "state": "INCOMPLETE_DATA",
                      "systems": Array [
                        Object {
                          "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                          "value": "disabled",
                        },
                        Object {
                          "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                          "value": undefined,
                        },
                        Object {
                          "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                          "value": "disabled",
                        },
                        Object {
                          "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                          "value": undefined,
                        },
                        Object {
                          "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                          "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                          "value": "disabled",
                        },
                        Object {
                          "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                          "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                          "value": "disabled",
                        },
                      ],
                    },
                    Object {
                      "multivalues": Array [
                        Object {
                          "state": "SAME",
                          "systems": Array [
                            Object {
                              "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                              "value": "blah1",
                            },
                            Object {
                              "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                              "value": "blah1",
                            },
                            Object {
                              "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                              "value": "blah1",
                            },
                            Object {
                              "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                              "value": "blah1",
                            },
                            Object {
                              "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                              "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                              "value": "blah1",
                            },
                            Object {
                              "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                              "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                              "value": "blah1",
                            },
                          ],
                        },
                        Object {
                          "state": "INCOMPLETE_DATA",
                          "systems": Array [
                            Object {
                              "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                              "value": undefined,
                            },
                            Object {
                              "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                              "value": "blah2",
                            },
                            Object {
                              "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                              "value": "blah2",
                            },
                            Object {
                              "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                              "value": "blah2",
                            },
                            Object {
                              "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                              "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                              "value": undefined,
                            },
                            Object {
                              "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                              "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                              "value": undefined,
                            },
                          ],
                        },
                      ],
                      "name": "abc",
                      "state": "INCOMPLETE_DATA",
                    },
                  ],
                  "name": "cpu_flags",
                  "state": "DIFFERENT",
                },
              ]
            }
            historicalProfiles={
              Array [
                Object {
                  "display_name": "system1",
                  "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                  "last_updated": "2019-01-15T14:53:15.886891Z",
                  "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                  "type": "historical-system-profile",
                },
                Object {
                  "display_name": "system1",
                  "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                  "last_updated": "2019-01-15T15:25:16.304899Z",
                  "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                  "type": "historical-system-profile",
                },
              ]
            }
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            loading={false}
            location={
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              }
            }
            match={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
            selectHistoricProfiles={[Function]}
            setSelectedBaselines={[Function]}
            systems={
              Array [
                Object {
                  "display_name": "sgi-xe500-01.rhts.eng.bos.redhat.com",
                  "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                  "last_updated": "2019-01-15T14:53:15.886891Z",
                  "type": "system",
                },
                Object {
                  "display_name": "ibm-x3650m4-03-vm03.lab.eng.brq.redhat.com",
                  "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                  "last_updated": "2019-01-15T15:25:16.304899Z",
                  "type": "system",
                },
              ]
            }
            toggleFactSort={[Function]}
            toggleStateSort={[Function]}
            updateReferenceId={
              [MockFunction] {
                "calls": Array [
                  Array [
                    undefined,
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              }
            }
          >
            <Connect(AddSystemModal)
              confirmModal={[Function]}
              selectedSystemIds={
                Array [
                  "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                  "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                ]
              }
            >
              <AddSystemModal
                addSystemModalOpened={false}
                confirmModal={[Function]}
                selectActiveTab={[Function]}
                selectBaseline={[Function]}
                selectHistoricProfiles={[Function]}
                selectedBaselineIds={Array []}
                selectedHSPIds={Array []}
                selectedSystemIds={
                  Array [
                    "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                    "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                  ]
                }
                setSelectedSystemIds={[Function]}
                toggleAddSystemModal={[Function]}
              >
                <Modal
                  actions={
                    Array [
                      <Button
                        isDisabled={false}
                        onClick={[Function]}
                        ouiaId="add-to-comparison-submit-button"
                        variant="primary"
                      >
                        Submit
                      </Button>,
                      <Button
                        onClick={[Function]}
                        ouiaId="add-to-comparison-cancel-button"
                        variant="link"
                      >
                        Cancel
                      </Button>,
                    ]
                  }
                  appendTo={[Function]}
                  aria-describedby=""
                  aria-label=""
                  aria-labelledby=""
                  className="drift"
                  hasNoBodyWrapper={false}
                  isOpen={false}
                  onClose={[Function]}
                  ouiaId="add-to-comparison-modal"
                  ouiaSafe={true}
                  showClose={true}
                  title="Add to comparison"
                  titleIconVariant={null}
                  titleLabel=""
                  variant="default"
                  width="950px"
                >
                  <Portal
                    containerInfo={<div />}
                  >
                    <ModalContent
                      actions={
                        Array [
                          <Button
                            isDisabled={false}
                            onClick={[Function]}
                            ouiaId="add-to-comparison-submit-button"
                            variant="primary"
                          >
                            Submit
                          </Button>,
                          <Button
                            onClick={[Function]}
                            ouiaId="add-to-comparison-cancel-button"
                            variant="link"
                          >
                            Cancel
                          </Button>,
                        ]
                      }
                      aria-describedby=""
                      aria-label=""
                      aria-labelledby=""
                      boxId="pf-modal-part-2"
                      className="drift"
                      descriptorId="pf-modal-part-4"
                      hasNoBodyWrapper={false}
                      isOpen={false}
                      labelId="pf-modal-part-3"
                      onClose={[Function]}
                      ouiaId="add-to-comparison-modal"
                      ouiaSafe={true}
                      showClose={true}
                      title="Add to comparison"
                      titleIconVariant={null}
                      titleLabel=""
                      variant="default"
                      width="950px"
                    />
                  </Portal>
                </Modal>
              </AddSystemModal>
            </Connect(AddSystemModal)>
            <div
              className="drift-table-wrapper"
            >
              <table
                className="pf-c-table pf-m-compact drift-table"
                data-ouia-component-id="comparison-table"
                data-ouia-component-type="PF4/Table"
              >
                <thead>
                  <ComparisonHeader
                    fetchCompare={[Function]}
                    masterList={
                      Array [
                        Object {
                          "display_name": "baseline1",
                          "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                          "last_updated": "2019-01-15T14:53:15.886891Z",
                          "type": "baseline",
                        },
                        Object {
                          "display_name": "baseline2",
                          "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                          "last_updated": "2019-01-15T15:25:16.304899Z",
                          "type": "baseline",
                        },
                        Object {
                          "display_name": "sgi-xe500-01.rhts.eng.bos.redhat.com",
                          "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                          "last_updated": "2019-01-15T14:53:15.886891Z",
                          "type": "system",
                        },
                        Object {
                          "display_name": "system1",
                          "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                          "last_updated": "2019-01-15T14:53:15.886891Z",
                          "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                          "type": "historical-system-profile",
                        },
                        Object {
                          "display_name": "system1",
                          "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                          "last_updated": "2019-01-15T15:25:16.304899Z",
                          "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                          "type": "historical-system-profile",
                        },
                        Object {
                          "display_name": "ibm-x3650m4-03-vm03.lab.eng.brq.redhat.com",
                          "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                          "last_updated": "2019-01-15T15:25:16.304899Z",
                          "type": "system",
                        },
                      ]
                    }
                    removeSystem={[Function]}
                    selectHistoricProfiles={[Function]}
                    systemIds={Array []}
                    toggleFactSort={[Function]}
                    toggleStateSort={[Function]}
                    updateReferenceId={[Function]}
                  >
                    <tr
                      className="sticky-column-header"
                      data-ouia-component-id="comparison-table-header-row"
                      data-ouia-component-type="PF4/TableRow"
                    >
                      <th
                        className="fact-header sticky-column fixed-column-1 pointer"
                        data-ouia-component-id="fact-sort-button"
                        data-ouia-component-type="PF4/Button"
                        key="fact-header"
                        onClick={[Function]}
                      >
                        <div
                          className="active-blue"
                        >
                          Fact 
                          <ArrowsAltVIcon
                            className="not-active"
                            color="currentColor"
                            noVerticalAlign={false}
                            size="sm"
                          >
                            <svg
                              aria-hidden={true}
                              aria-labelledby={null}
                              className="not-active"
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style={
                                Object {
                                  "verticalAlign": "-0.125em",
                                }
                              }
                              viewBox="0 0 256 512"
                              width="1em"
                            >
                              <path
                                d="M214.059 377.941H168V134.059h46.059c21.382 0 32.09-25.851 16.971-40.971L144.971 7.029c-9.373-9.373-24.568-9.373-33.941 0L24.971 93.088c-15.119 15.119-4.411 40.971 16.971 40.971H88v243.882H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.568 9.373 33.941 0l86.059-86.059c15.12-15.119 4.412-40.971-16.97-40.971z"
                              />
                            </svg>
                          </ArrowsAltVIcon>
                        </div>
                      </th>
                      <th
                        className="state-header sticky-column fixed-column-2 pointer"
                        data-ouia-component-id="state-sort-button"
                        data-ouia-component-type="PF4/Button"
                        id="disabled"
                        key="state-header"
                        onClick={[Function]}
                      >
                        <div
                          className="active-blue"
                        >
                          State 
                          <ArrowsAltVIcon
                            className="not-active"
                            color="currentColor"
                            noVerticalAlign={false}
                            size="sm"
                          >
                            <svg
                              aria-hidden={true}
                              aria-labelledby={null}
                              className="not-active"
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style={
                                Object {
                                  "verticalAlign": "-0.125em",
                                }
                              }
                              viewBox="0 0 256 512"
                              width="1em"
                            >
                              <path
                                d="M214.059 377.941H168V134.059h46.059c21.382 0 32.09-25.851 16.971-40.971L144.971 7.029c-9.373-9.373-24.568-9.373-33.941 0L24.971 93.088c-15.119 15.119-4.411 40.971 16.971 40.971H88v243.882H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.568 9.373 33.941 0l86.059-86.059c15.12-15.119 4.412-40.971-16.97-40.971z"
                              />
                            </svg>
                          </ArrowsAltVIcon>
                        </div>
                      </th>
                      <th
                        className="drift-header baseline-header"
                        header-id="9bbbefcc-8f23-4d97-07f2-142asdl234e9"
                        key="9bbbefcc-8f23-4d97-07f2-142asdl234e9"
                      >
                        <div>
                          <a
                            className="remove-system-icon"
                            data-ouia-component-id="remove-system-button-9bbbefcc-8f23-4d97-07f2-142asdl234e9"
                            data-ouia-component-type="PF4/Button"
                            onClick={[Function]}
                          >
                            <TimesIcon
                              color="currentColor"
                              noVerticalAlign={false}
                              size="sm"
                            >
                              <svg
                                aria-hidden={true}
                                aria-labelledby={null}
                                fill="currentColor"
                                height="1em"
                                role="img"
                                style={
                                  Object {
                                    "verticalAlign": "-0.125em",
                                  }
                                }
                                viewBox="0 0 352 512"
                                width="1em"
                              >
                                <path
                                  d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                                />
                              </svg>
                            </TimesIcon>
                          </a>
                        </div>
                        <div
                          className="comparison-header"
                        >
                          <div
                            className="drift-header-icon"
                          >
                            <Tooltip
                              content={
                                <div>
                                  Baseline
                                </div>
                              }
                              position="top"
                            >
                              <Popper
                                appendTo={[Function]}
                                distance={15}
                                enableFlip={true}
                                flipBehavior={
                                  Array [
                                    "top",
                                    "right",
                                    "bottom",
                                    "left",
                                    "top",
                                    "right",
                                    "bottom",
                                  ]
                                }
                                isVisible={false}
                                onBlur={[Function]}
                                onDocumentClick={false}
                                onDocumentKeyDown={[Function]}
                                onFocus={[Function]}
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                                onTriggerEnter={[Function]}
                                placement="top"
                                popper={
                                  <div
                                    className="pf-c-tooltip"
                                    id="pf-tooltip-16"
                                    role="tooltip"
                                    style={
                                      Object {
                                        "maxWidth": null,
                                        "opacity": 0,
                                        "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                      }
                                    }
                                  >
                                    <TooltipArrow />
                                    <TooltipContent
                                      isLeftAligned={false}
                                    >
                                      <div>
                                        Baseline
                                      </div>
                                    </TooltipContent>
                                  </div>
                                }
                                popperMatchesTriggerWidth={false}
                                positionModifiers={
                                  Object {
                                    "bottom": "pf-m-bottom",
                                    "left": "pf-m-left",
                                    "right": "pf-m-right",
                                    "top": "pf-m-top",
                                  }
                                }
                                trigger={
                                  <BlueprintIcon
                                    aria-describedby="pf-tooltip-16"
                                    color="currentColor"
                                    noVerticalAlign={false}
                                    size="sm"
                                  />
                                }
                                zIndex={9999}
                              >
                                <FindRefWrapper
                                  onFoundRef={[Function]}
                                >
                                  <BlueprintIcon
                                    aria-describedby="pf-tooltip-16"
                                    color="currentColor"
                                    noVerticalAlign={false}
                                    size="sm"
                                  >
                                    <svg
                                      aria-describedby="pf-tooltip-16"
                                      aria-hidden={true}
                                      aria-labelledby={null}
                                      fill="currentColor"
                                      height="1em"
                                      role="img"
                                      style={
                                        Object {
                                          "verticalAlign": "-0.125em",
                                        }
                                      }
                                      viewBox="0 0 1024 1024"
                                      width="1em"
                                    >
                                      <path
                                        d="M0,767.3 L0,640 L64,640 L64,752.3 C64,760.584271 70.7157288,767.3 79,767.3 L128,768.1 L128,832.1 L64,831.3 C28.6674863,831.266922 0.0330777378,802.632514 0,767.3 Z M64,0 L191.3,0 L191.3,64 L79,64 C70.7157288,64 64,70.7157288 64,79 L64,192 L0,192 L0,64 C0.0330777378,28.6674863 28.6674863,0.0330777378 64,0 Z M0,384 L64,384 L64,256 L0,256 L0,384 Z M0,576 L64,576 L64,448 L0,448 L0,576 Z M832,64.7 L832,128 L768,128 L768,79.7 C768,71.4157288 761.284271,64.7 753,64.7 L640,64.7 L640,0.7 L768,0.7 C803.332514,0.733077738 831.966922,29.3674863 832,64.7 Z M448,64.7 L576,64.7 L576,0.7 L448,0.7 L448,64.7 Z M256,64.7 L384,64.7 L384,0.7 L256,0.7 L256,64.7 Z M960,192 L256,192 C220.667486,192.033078 192.033078,220.667486 192,256 L192,960 C192.033078,995.332514 220.667486,1023.96692 256,1024 L960,1024 C995.332514,1023.96692 1023.96692,995.332514 1024,960 L1024,256 C1023.96692,220.667486 995.332514,192.033078 960,192 Z M960,945 C960,953.284271 953.284271,960 945,960 L271,960 C262.715729,960 256,953.284271 256,945 L256,271 C256,262.715729 262.715729,256 271,256 L945,256 C953.284271,256 960,262.715729 960,271 L960,945 Z"
                                      />
                                    </svg>
                                  </BlueprintIcon>
                                </FindRefWrapper>
                              </Popper>
                            </Tooltip>
                          </div>
                          <div
                            className="system-name"
                          >
                            baseline1
                          </div>
                          <div
                            className="system-updated-and-reference"
                          >
                            <ReferenceSelector
                              isReference={false}
                              item={
                                Object {
                                  "display_name": "baseline1",
                                  "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                                  "last_updated": "2019-01-15T14:53:15.886891Z",
                                  "type": "baseline",
                                }
                              }
                              updateReferenceId={[Function]}
                            >
                              <Tooltip
                                content={
                                  <div>
                                    Use this 
                                    baseline
                                     as a reference to compare.
                                  </div>
                                }
                                position="top"
                              >
                                <Popper
                                  appendTo={[Function]}
                                  distance={15}
                                  enableFlip={true}
                                  flipBehavior={
                                    Array [
                                      "top",
                                      "right",
                                      "bottom",
                                      "left",
                                      "top",
                                      "right",
                                      "bottom",
                                    ]
                                  }
                                  isVisible={false}
                                  onBlur={[Function]}
                                  onDocumentClick={false}
                                  onDocumentKeyDown={[Function]}
                                  onFocus={[Function]}
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                  onTriggerEnter={[Function]}
                                  placement="top"
                                  popper={
                                    <div
                                      className="pf-c-tooltip"
                                      id="pf-tooltip-17"
                                      role="tooltip"
                                      style={
                                        Object {
                                          "maxWidth": null,
                                          "opacity": 0,
                                          "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                        }
                                      }
                                    >
                                      <TooltipArrow />
                                      <TooltipContent
                                        isLeftAligned={false}
                                      >
                                        <div>
                                          Use this 
                                          baseline
                                           as a reference to compare.
                                        </div>
                                      </TooltipContent>
                                    </div>
                                  }
                                  popperMatchesTriggerWidth={false}
                                  positionModifiers={
                                    Object {
                                      "bottom": "pf-m-bottom",
                                      "left": "pf-m-left",
                                      "right": "pf-m-right",
                                      "top": "pf-m-top",
                                    }
                                  }
                                  trigger={
                                    <OutlinedStarIcon
                                      aria-describedby="pf-tooltip-17"
                                      className="reference-selector pointer"
                                      color="currentColor"
                                      data-ouia-component-id="reference-selector-9bbbefcc-8f23-4d97-07f2-142asdl234e9"
                                      data-ouia-component-type="PF4/Button"
                                      noVerticalAlign={false}
                                      onClick={[Function]}
                                      size="sm"
                                    />
                                  }
                                  zIndex={9999}
                                >
                                  <FindRefWrapper
                                    onFoundRef={[Function]}
                                  >
                                    <OutlinedStarIcon
                                      aria-describedby="pf-tooltip-17"
                                      className="reference-selector pointer"
                                      color="currentColor"
                                      data-ouia-component-id="reference-selector-9bbbefcc-8f23-4d97-07f2-142asdl234e9"
                                      data-ouia-component-type="PF4/Button"
                                      noVerticalAlign={false}
                                      onClick={[Function]}
                                      size="sm"
                                    >
                                      <svg
                                        aria-describedby="pf-tooltip-17"
                                        aria-hidden={true}
                                        aria-labelledby={null}
                                        className="reference-selector pointer"
                                        data-ouia-component-id="reference-selector-9bbbefcc-8f23-4d97-07f2-142asdl234e9"
                                        data-ouia-component-type="PF4/Button"
                                        fill="currentColor"
                                        height="1em"
                                        onClick={[Function]}
                                        role="img"
                                        style={
                                          Object {
                                            "verticalAlign": "-0.125em",
                                          }
                                        }
                                        viewBox="0 0 576 512"
                                        width="1em"
                                      >
                                        <path
                                          d="M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z"
                                        />
                                      </svg>
                                    </OutlinedStarIcon>
                                  </FindRefWrapper>
                                </Popper>
                              </Tooltip>
                            </ReferenceSelector>
                            15 Jan 2019, 14:53 UTC
                          </div>
                        </div>
                      </th>
                      <th
                        className="drift-header baseline-header"
                        header-id="fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29"
                        key="fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29"
                      >
                        <div>
                          <a
                            className="remove-system-icon"
                            data-ouia-component-id="remove-system-button-fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29"
                            data-ouia-component-type="PF4/Button"
                            onClick={[Function]}
                          >
                            <TimesIcon
                              color="currentColor"
                              noVerticalAlign={false}
                              size="sm"
                            >
                              <svg
                                aria-hidden={true}
                                aria-labelledby={null}
                                fill="currentColor"
                                height="1em"
                                role="img"
                                style={
                                  Object {
                                    "verticalAlign": "-0.125em",
                                  }
                                }
                                viewBox="0 0 352 512"
                                width="1em"
                              >
                                <path
                                  d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                                />
                              </svg>
                            </TimesIcon>
                          </a>
                        </div>
                        <div
                          className="comparison-header"
                        >
                          <div
                            className="drift-header-icon"
                          >
                            <Tooltip
                              content={
                                <div>
                                  Baseline
                                </div>
                              }
                              position="top"
                            >
                              <Popper
                                appendTo={[Function]}
                                distance={15}
                                enableFlip={true}
                                flipBehavior={
                                  Array [
                                    "top",
                                    "right",
                                    "bottom",
                                    "left",
                                    "top",
                                    "right",
                                    "bottom",
                                  ]
                                }
                                isVisible={false}
                                onBlur={[Function]}
                                onDocumentClick={false}
                                onDocumentKeyDown={[Function]}
                                onFocus={[Function]}
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                                onTriggerEnter={[Function]}
                                placement="top"
                                popper={
                                  <div
                                    className="pf-c-tooltip"
                                    id="pf-tooltip-18"
                                    role="tooltip"
                                    style={
                                      Object {
                                        "maxWidth": null,
                                        "opacity": 0,
                                        "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                      }
                                    }
                                  >
                                    <TooltipArrow />
                                    <TooltipContent
                                      isLeftAligned={false}
                                    >
                                      <div>
                                        Baseline
                                      </div>
                                    </TooltipContent>
                                  </div>
                                }
                                popperMatchesTriggerWidth={false}
                                positionModifiers={
                                  Object {
                                    "bottom": "pf-m-bottom",
                                    "left": "pf-m-left",
                                    "right": "pf-m-right",
                                    "top": "pf-m-top",
                                  }
                                }
                                trigger={
                                  <BlueprintIcon
                                    aria-describedby="pf-tooltip-18"
                                    color="currentColor"
                                    noVerticalAlign={false}
                                    size="sm"
                                  />
                                }
                                zIndex={9999}
                              >
                                <FindRefWrapper
                                  onFoundRef={[Function]}
                                >
                                  <BlueprintIcon
                                    aria-describedby="pf-tooltip-18"
                                    color="currentColor"
                                    noVerticalAlign={false}
                                    size="sm"
                                  >
                                    <svg
                                      aria-describedby="pf-tooltip-18"
                                      aria-hidden={true}
                                      aria-labelledby={null}
                                      fill="currentColor"
                                      height="1em"
                                      role="img"
                                      style={
                                        Object {
                                          "verticalAlign": "-0.125em",
                                        }
                                      }
                                      viewBox="0 0 1024 1024"
                                      width="1em"
                                    >
                                      <path
                                        d="M0,767.3 L0,640 L64,640 L64,752.3 C64,760.584271 70.7157288,767.3 79,767.3 L128,768.1 L128,832.1 L64,831.3 C28.6674863,831.266922 0.0330777378,802.632514 0,767.3 Z M64,0 L191.3,0 L191.3,64 L79,64 C70.7157288,64 64,70.7157288 64,79 L64,192 L0,192 L0,64 C0.0330777378,28.6674863 28.6674863,0.0330777378 64,0 Z M0,384 L64,384 L64,256 L0,256 L0,384 Z M0,576 L64,576 L64,448 L0,448 L0,576 Z M832,64.7 L832,128 L768,128 L768,79.7 C768,71.4157288 761.284271,64.7 753,64.7 L640,64.7 L640,0.7 L768,0.7 C803.332514,0.733077738 831.966922,29.3674863 832,64.7 Z M448,64.7 L576,64.7 L576,0.7 L448,0.7 L448,64.7 Z M256,64.7 L384,64.7 L384,0.7 L256,0.7 L256,64.7 Z M960,192 L256,192 C220.667486,192.033078 192.033078,220.667486 192,256 L192,960 C192.033078,995.332514 220.667486,1023.96692 256,1024 L960,1024 C995.332514,1023.96692 1023.96692,995.332514 1024,960 L1024,256 C1023.96692,220.667486 995.332514,192.033078 960,192 Z M960,945 C960,953.284271 953.284271,960 945,960 L271,960 C262.715729,960 256,953.284271 256,945 L256,271 C256,262.715729 262.715729,256 271,256 L945,256 C953.284271,256 960,262.715729 960,271 L960,945 Z"
                                      />
                                    </svg>
                                  </BlueprintIcon>
                                </FindRefWrapper>
                              </Popper>
                            </Tooltip>
                          </div>
                          <div
                            className="system-name"
                          >
                            baseline2
                          </div>
                          <div
                            className="system-updated-and-reference"
                          >
                            <ReferenceSelector
                              isReference={false}
                              item={
                                Object {
                                  "display_name": "baseline2",
                                  "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                                  "last_updated": "2019-01-15T15:25:16.304899Z",
                                  "type": "baseline",
                                }
                              }
                              updateReferenceId={[Function]}
                            >
                              <Tooltip
                                content={
                                  <div>
                                    Use this 
                                    baseline
                                     as a reference to compare.
                                  </div>
                                }
                                position="top"
                              >
                                <Popper
                                  appendTo={[Function]}
                                  distance={15}
                                  enableFlip={true}
                                  flipBehavior={
                                    Array [
                                      "top",
                                      "right",
                                      "bottom",
                                      "left",
                                      "top",
                                      "right",
                                      "bottom",
                                    ]
                                  }
                                  isVisible={false}
                                  onBlur={[Function]}
                                  onDocumentClick={false}
                                  onDocumentKeyDown={[Function]}
                                  onFocus={[Function]}
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                  onTriggerEnter={[Function]}
                                  placement="top"
                                  popper={
                                    <div
                                      className="pf-c-tooltip"
                                      id="pf-tooltip-19"
                                      role="tooltip"
                                      style={
                                        Object {
                                          "maxWidth": null,
                                          "opacity": 0,
                                          "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                        }
                                      }
                                    >
                                      <TooltipArrow />
                                      <TooltipContent
                                        isLeftAligned={false}
                                      >
                                        <div>
                                          Use this 
                                          baseline
                                           as a reference to compare.
                                        </div>
                                      </TooltipContent>
                                    </div>
                                  }
                                  popperMatchesTriggerWidth={false}
                                  positionModifiers={
                                    Object {
                                      "bottom": "pf-m-bottom",
                                      "left": "pf-m-left",
                                      "right": "pf-m-right",
                                      "top": "pf-m-top",
                                    }
                                  }
                                  trigger={
                                    <OutlinedStarIcon
                                      aria-describedby="pf-tooltip-19"
                                      className="reference-selector pointer"
                                      color="currentColor"
                                      data-ouia-component-id="reference-selector-fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29"
                                      data-ouia-component-type="PF4/Button"
                                      noVerticalAlign={false}
                                      onClick={[Function]}
                                      size="sm"
                                    />
                                  }
                                  zIndex={9999}
                                >
                                  <FindRefWrapper
                                    onFoundRef={[Function]}
                                  >
                                    <OutlinedStarIcon
                                      aria-describedby="pf-tooltip-19"
                                      className="reference-selector pointer"
                                      color="currentColor"
                                      data-ouia-component-id="reference-selector-fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29"
                                      data-ouia-component-type="PF4/Button"
                                      noVerticalAlign={false}
                                      onClick={[Function]}
                                      size="sm"
                                    >
                                      <svg
                                        aria-describedby="pf-tooltip-19"
                                        aria-hidden={true}
                                        aria-labelledby={null}
                                        className="reference-selector pointer"
                                        data-ouia-component-id="reference-selector-fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29"
                                        data-ouia-component-type="PF4/Button"
                                        fill="currentColor"
                                        height="1em"
                                        onClick={[Function]}
                                        role="img"
                                        style={
                                          Object {
                                            "verticalAlign": "-0.125em",
                                          }
                                        }
                                        viewBox="0 0 576 512"
                                        width="1em"
                                      >
                                        <path
                                          d="M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z"
                                        />
                                      </svg>
                                    </OutlinedStarIcon>
                                  </FindRefWrapper>
                                </Popper>
                              </Tooltip>
                            </ReferenceSelector>
                            15 Jan 2019, 15:25 UTC
                          </div>
                        </div>
                      </th>
                      <th
                        className="drift-header system-header"
                        header-id="9c79efcc-8f9a-47c7-b0f2-142ff52e89e9"
                        key="9c79efcc-8f9a-47c7-b0f2-142ff52e89e9"
                      >
                        <div>
                          <a
                            className="remove-system-icon"
                            data-ouia-component-id="remove-system-button-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9"
                            data-ouia-component-type="PF4/Button"
                            onClick={[Function]}
                          >
                            <TimesIcon
                              color="currentColor"
                              noVerticalAlign={false}
                              size="sm"
                            >
                              <svg
                                aria-hidden={true}
                                aria-labelledby={null}
                                fill="currentColor"
                                height="1em"
                                role="img"
                                style={
                                  Object {
                                    "verticalAlign": "-0.125em",
                                  }
                                }
                                viewBox="0 0 352 512"
                                width="1em"
                              >
                                <path
                                  d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                                />
                              </svg>
                            </TimesIcon>
                          </a>
                        </div>
                        <div
                          className="comparison-header"
                        >
                          <div
                            className="drift-header-icon"
                          >
                            <Tooltip
                              content={
                                <div>
                                  System
                                </div>
                              }
                              position="top"
                            >
                              <Popper
                                appendTo={[Function]}
                                distance={15}
                                enableFlip={true}
                                flipBehavior={
                                  Array [
                                    "top",
                                    "right",
                                    "bottom",
                                    "left",
                                    "top",
                                    "right",
                                    "bottom",
                                  ]
                                }
                                isVisible={false}
                                onBlur={[Function]}
                                onDocumentClick={false}
                                onDocumentKeyDown={[Function]}
                                onFocus={[Function]}
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                                onTriggerEnter={[Function]}
                                placement="top"
                                popper={
                                  <div
                                    className="pf-c-tooltip"
                                    id="pf-tooltip-20"
                                    role="tooltip"
                                    style={
                                      Object {
                                        "maxWidth": null,
                                        "opacity": 0,
                                        "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                      }
                                    }
                                  >
                                    <TooltipArrow />
                                    <TooltipContent
                                      isLeftAligned={false}
                                    >
                                      <div>
                                        System
                                      </div>
                                    </TooltipContent>
                                  </div>
                                }
                                popperMatchesTriggerWidth={false}
                                positionModifiers={
                                  Object {
                                    "bottom": "pf-m-bottom",
                                    "left": "pf-m-left",
                                    "right": "pf-m-right",
                                    "top": "pf-m-top",
                                  }
                                }
                                trigger={
                                  <ServerIcon
                                    aria-describedby="pf-tooltip-20"
                                    color="currentColor"
                                    noVerticalAlign={false}
                                    size="sm"
                                  />
                                }
                                zIndex={9999}
                              >
                                <FindRefWrapper
                                  onFoundRef={[Function]}
                                >
                                  <ServerIcon
                                    aria-describedby="pf-tooltip-20"
                                    color="currentColor"
                                    noVerticalAlign={false}
                                    size="sm"
                                  >
                                    <svg
                                      aria-describedby="pf-tooltip-20"
                                      aria-hidden={true}
                                      aria-labelledby={null}
                                      fill="currentColor"
                                      height="1em"
                                      role="img"
                                      style={
                                        Object {
                                          "verticalAlign": "-0.125em",
                                        }
                                      }
                                      viewBox="0 0 512 512"
                                      width="1em"
                                    >
                                      <path
                                        d="M480 160H32c-17.673 0-32-14.327-32-32V64c0-17.673 14.327-32 32-32h448c17.673 0 32 14.327 32 32v64c0 17.673-14.327 32-32 32zm-48-88c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm-64 0c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm112 248H32c-17.673 0-32-14.327-32-32v-64c0-17.673 14.327-32 32-32h448c17.673 0 32 14.327 32 32v64c0 17.673-14.327 32-32 32zm-48-88c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm-64 0c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm112 248H32c-17.673 0-32-14.327-32-32v-64c0-17.673 14.327-32 32-32h448c17.673 0 32 14.327 32 32v64c0 17.673-14.327 32-32 32zm-48-88c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm-64 0c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24z"
                                      />
                                    </svg>
                                  </ServerIcon>
                                </FindRefWrapper>
                              </Popper>
                            </Tooltip>
                          </div>
                          <div
                            className="system-name"
                          >
                            sgi-xe500-01.rhts.eng.bos.redhat.com
                          </div>
                          <div
                            className="system-updated-and-reference"
                          >
                            <ReferenceSelector
                              isReference={false}
                              item={
                                Object {
                                  "display_name": "sgi-xe500-01.rhts.eng.bos.redhat.com",
                                  "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                  "last_updated": "2019-01-15T14:53:15.886891Z",
                                  "type": "system",
                                }
                              }
                              updateReferenceId={[Function]}
                            >
                              <Tooltip
                                content={
                                  <div>
                                    Use this 
                                    system
                                     as a reference to compare.
                                  </div>
                                }
                                position="top"
                              >
                                <Popper
                                  appendTo={[Function]}
                                  distance={15}
                                  enableFlip={true}
                                  flipBehavior={
                                    Array [
                                      "top",
                                      "right",
                                      "bottom",
                                      "left",
                                      "top",
                                      "right",
                                      "bottom",
                                    ]
                                  }
                                  isVisible={false}
                                  onBlur={[Function]}
                                  onDocumentClick={false}
                                  onDocumentKeyDown={[Function]}
                                  onFocus={[Function]}
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                  onTriggerEnter={[Function]}
                                  placement="top"
                                  popper={
                                    <div
                                      className="pf-c-tooltip"
                                      id="pf-tooltip-21"
                                      role="tooltip"
                                      style={
                                        Object {
                                          "maxWidth": null,
                                          "opacity": 0,
                                          "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                        }
                                      }
                                    >
                                      <TooltipArrow />
                                      <TooltipContent
                                        isLeftAligned={false}
                                      >
                                        <div>
                                          Use this 
                                          system
                                           as a reference to compare.
                                        </div>
                                      </TooltipContent>
                                    </div>
                                  }
                                  popperMatchesTriggerWidth={false}
                                  positionModifiers={
                                    Object {
                                      "bottom": "pf-m-bottom",
                                      "left": "pf-m-left",
                                      "right": "pf-m-right",
                                      "top": "pf-m-top",
                                    }
                                  }
                                  trigger={
                                    <OutlinedStarIcon
                                      aria-describedby="pf-tooltip-21"
                                      className="reference-selector pointer"
                                      color="currentColor"
                                      data-ouia-component-id="reference-selector-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9"
                                      data-ouia-component-type="PF4/Button"
                                      noVerticalAlign={false}
                                      onClick={[Function]}
                                      size="sm"
                                    />
                                  }
                                  zIndex={9999}
                                >
                                  <FindRefWrapper
                                    onFoundRef={[Function]}
                                  >
                                    <OutlinedStarIcon
                                      aria-describedby="pf-tooltip-21"
                                      className="reference-selector pointer"
                                      color="currentColor"
                                      data-ouia-component-id="reference-selector-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9"
                                      data-ouia-component-type="PF4/Button"
                                      noVerticalAlign={false}
                                      onClick={[Function]}
                                      size="sm"
                                    >
                                      <svg
                                        aria-describedby="pf-tooltip-21"
                                        aria-hidden={true}
                                        aria-labelledby={null}
                                        className="reference-selector pointer"
                                        data-ouia-component-id="reference-selector-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9"
                                        data-ouia-component-type="PF4/Button"
                                        fill="currentColor"
                                        height="1em"
                                        onClick={[Function]}
                                        role="img"
                                        style={
                                          Object {
                                            "verticalAlign": "-0.125em",
                                          }
                                        }
                                        viewBox="0 0 576 512"
                                        width="1em"
                                      >
                                        <path
                                          d="M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z"
                                        />
                                      </svg>
                                    </OutlinedStarIcon>
                                  </FindRefWrapper>
                                </Popper>
                              </Tooltip>
                            </ReferenceSelector>
                            15 Jan 2019, 14:53 UTC
                            <withRouter(Connect(HistoricalProfilesPopover))
                              fetchCompare={[Function]}
                              hasCompareButton={true}
                              hasMultiSelect={true}
                              selectHistoricProfiles={[Function]}
                              system={
                                Object {
                                  "display_name": "sgi-xe500-01.rhts.eng.bos.redhat.com",
                                  "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                  "last_updated": "2019-01-15T14:53:15.886891Z",
                                  "type": "system",
                                }
                              }
                              systemIds={Array []}
                            >
                              <Connect(HistoricalProfilesPopover)
                                fetchCompare={[Function]}
                                hasCompareButton={true}
                                hasMultiSelect={true}
                                history={
                                  Object {
                                    "action": "POP",
                                    "block": [Function],
                                    "canGo": [Function],
                                    "createHref": [Function],
                                    "entries": Array [
                                      Object {
                                        "hash": "",
                                        "pathname": "/",
                                        "search": "",
                                        "state": undefined,
                                      },
                                    ],
                                    "go": [Function],
                                    "goBack": [Function],
                                    "goForward": [Function],
                                    "index": 0,
                                    "length": 1,
                                    "listen": [Function],
                                    "location": Object {
                                      "hash": "",
                                      "pathname": "/",
                                      "search": "",
                                      "state": undefined,
                                    },
                                    "push": [Function],
                                    "replace": [Function],
                                  }
                                }
                                location={
                                  Object {
                                    "hash": "",
                                    "pathname": "/",
                                    "search": "",
                                    "state": undefined,
                                  }
                                }
                                match={
                                  Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/",
                                    "url": "/",
                                  }
                                }
                                selectHistoricProfiles={[Function]}
                                system={
                                  Object {
                                    "display_name": "sgi-xe500-01.rhts.eng.bos.redhat.com",
                                    "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                    "last_updated": "2019-01-15T14:53:15.886891Z",
                                    "type": "system",
                                  }
                                }
                                systemIds={Array []}
                              >
                                <HistoricalProfilesPopover
                                  fetchCompare={[Function]}
                                  hasCompareButton={true}
                                  hasMultiSelect={true}
                                  history={
                                    Object {
                                      "action": "POP",
                                      "block": [Function],
                                      "canGo": [Function],
                                      "createHref": [Function],
                                      "entries": Array [
                                        Object {
                                          "hash": "",
                                          "pathname": "/",
                                          "search": "",
                                          "state": undefined,
                                        },
                                      ],
                                      "go": [Function],
                                      "goBack": [Function],
                                      "goForward": [Function],
                                      "index": 0,
                                      "length": 1,
                                      "listen": [Function],
                                      "location": Object {
                                        "hash": "",
                                        "pathname": "/",
                                        "search": "",
                                        "state": undefined,
                                      },
                                      "push": [Function],
                                      "replace": [Function],
                                    }
                                  }
                                  location={
                                    Object {
                                      "hash": "",
                                      "pathname": "/",
                                      "search": "",
                                      "state": undefined,
                                    }
                                  }
                                  match={
                                    Object {
                                      "isExact": true,
                                      "params": Object {},
                                      "path": "/",
                                      "url": "/",
                                    }
                                  }
                                  selectHistoricProfiles={[Function]}
                                  selectSingleHSP={[Function]}
                                  selectSystem={[Function]}
                                  selectedBaselineIds={Array []}
                                  selectedHSPIds={Array []}
                                  system={
                                    Object {
                                      "display_name": "sgi-xe500-01.rhts.eng.bos.redhat.com",
                                      "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                      "last_updated": "2019-01-15T14:53:15.886891Z",
                                      "type": "system",
                                    }
                                  }
                                  systemIds={Array []}
                                  updateColumns={[Function]}
                                >
                                  <span
                                    className="hsp-icon-padding historical-system-profile-popover"
                                    data-ouia-component-id="hsp-popover-toggle-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9"
                                    data-ouia-component-type="PF4/Button"
                                  >
                                    <Popover
                                      bodyContent={
                                        Array [
                                          <Skeleton
                                            className="hsp-dropdown-loading"
                                            isDark={false}
                                            size="sm"
                                          />,
                                          <Skeleton
                                            className="hsp-dropdown-loading"
                                            isDark={false}
                                            size="sm"
                                          />,
                                          <Skeleton
                                            className="hsp-dropdown-loading"
                                            isDark={false}
                                            size="sm"
                                          />,
                                        ]
                                      }
                                      footerContent={
                                        <Button
                                          onClick={[Function]}
                                          ouiaId="hsp-popover-compare"
                                          variant="primary"
                                        >
                                          Compare
                                        </Button>
                                      }
                                      headerContent={
                                        <div>
                                          Historical profiles for this system
                                        </div>
                                      }
                                      id="hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9"
                                      isVisible={false}
                                      shouldClose={[Function]}
                                    >
                                      <Popper
                                        appendTo={[Function]}
                                        distance={25}
                                        enableFlip={true}
                                        flipBehavior={
                                          Array [
                                            "top",
                                            "right",
                                            "bottom",
                                            "left",
                                            "top",
                                            "right",
                                            "bottom",
                                          ]
                                        }
                                        isVisible={false}
                                        onDocumentClick={[Function]}
                                        onDocumentKeyDown={[Function]}
                                        onTriggerClick={[Function]}
                                        onTriggerEnter={[Function]}
                                        placement="top"
                                        popper={
                                          <FocusTrap
                                            active={false}
                                            aria-describedby="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-body"
                                            aria-labelledby="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-header"
                                            aria-modal="true"
                                            className="pf-c-popover"
                                            focusTrapOptions={
                                              Object {
                                                "clickOutsideDeactivates": true,
                                                "returnFocusOnDeactivate": true,
                                              }
                                            }
                                            onMouseDown={[Function]}
                                            paused={false}
                                            role="dialog"
                                            style={
                                              Object {
                                                "maxWidth": null,
                                                "minWidth": null,
                                                "opacity": 0,
                                                "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                              }
                                            }
                                          >
                                            <PopoverArrow />
                                            <PopoverContent>
                                              <PopoverCloseButton
                                                aria-label="Close"
                                                onClose={[Function]}
                                              />
                                              <PopoverHeader
                                                id="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-header"
                                              >
                                                <div>
                                                  Historical profiles for this system
                                                </div>
                                              </PopoverHeader>
                                              <PopoverBody
                                                id="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-body"
                                              >
                                                <Skeleton
                                                  className="hsp-dropdown-loading"
                                                  isDark={false}
                                                  size="sm"
                                                />
                                                <Skeleton
                                                  className="hsp-dropdown-loading"
                                                  isDark={false}
                                                  size="sm"
                                                />
                                                <Skeleton
                                                  className="hsp-dropdown-loading"
                                                  isDark={false}
                                                  size="sm"
                                                />
                                              </PopoverBody>
                                              <PopoverFooter
                                                id="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-footer"
                                              >
                                                <Button
                                                  onClick={[Function]}
                                                  ouiaId="hsp-popover-compare"
                                                  variant="primary"
                                                >
                                                  Compare
                                                </Button>
                                              </PopoverFooter>
                                            </PopoverContent>
                                          </FocusTrap>
                                        }
                                        popperMatchesTriggerWidth={false}
                                        positionModifiers={
                                          Object {
                                            "bottom": "pf-m-bottom",
                                            "left": "pf-m-left",
                                            "right": "pf-m-right",
                                            "top": "pf-m-top",
                                          }
                                        }
                                        trigger={
                                          <HistoryIcon
                                            className="hsp-dropdown-icon"
                                            color="currentColor"
                                            noVerticalAlign={false}
                                            onClick={[Function]}
                                            size="sm"
                                          />
                                        }
                                        zIndex={9999}
                                      >
                                        <FindRefWrapper
                                          onFoundRef={[Function]}
                                        >
                                          <HistoryIcon
                                            className="hsp-dropdown-icon"
                                            color="currentColor"
                                            noVerticalAlign={false}
                                            onClick={[Function]}
                                            size="sm"
                                          >
                                            <svg
                                              aria-hidden={true}
                                              aria-labelledby={null}
                                              className="hsp-dropdown-icon"
                                              fill="currentColor"
                                              height="1em"
                                              onClick={[Function]}
                                              role="img"
                                              style={
                                                Object {
                                                  "verticalAlign": "-0.125em",
                                                }
                                              }
                                              viewBox="0 0 512 512"
                                              width="1em"
                                            >
                                              <path
                                                d="M504 255.531c.253 136.64-111.18 248.372-247.82 248.468-59.015.042-113.223-20.53-155.822-54.911-11.077-8.94-11.905-25.541-1.839-35.607l11.267-11.267c8.609-8.609 22.353-9.551 31.891-1.984C173.062 425.135 212.781 440 256 440c101.705 0 184-82.311 184-184 0-101.705-82.311-184-184-184-48.814 0-93.149 18.969-126.068 49.932l50.754 50.754c10.08 10.08 2.941 27.314-11.313 27.314H24c-8.837 0-16-7.163-16-16V38.627c0-14.254 17.234-21.393 27.314-11.314l49.372 49.372C129.209 34.136 189.552 8 256 8c136.81 0 247.747 110.78 248 247.531zm-180.912 78.784l9.823-12.63c8.138-10.463 6.253-25.542-4.21-33.679L288 256.349V152c0-13.255-10.745-24-24-24h-16c-13.255 0-24 10.745-24 24v135.651l65.409 50.874c10.463 8.137 25.541 6.253 33.679-4.21z"
                                              />
                                            </svg>
                                          </HistoryIcon>
                                        </FindRefWrapper>
                                      </Popper>
                                    </Popover>
                                  </span>
                                </HistoricalProfilesPopover>
                              </Connect(HistoricalProfilesPopover)>
                            </withRouter(Connect(HistoricalProfilesPopover))>
                          </div>
                        </div>
                      </th>
                      <th
                        className="drift-header historical-system-profile-header"
                        header-id="9bbbefcc-8f23-4d97-07f2-142asdl234e8"
                        key="9bbbefcc-8f23-4d97-07f2-142asdl234e8"
                      >
                        <div>
                          <a
                            className="remove-system-icon"
                            data-ouia-component-id="remove-system-button-9bbbefcc-8f23-4d97-07f2-142asdl234e8"
                            data-ouia-component-type="PF4/Button"
                            onClick={[Function]}
                          >
                            <TimesIcon
                              color="currentColor"
                              noVerticalAlign={false}
                              size="sm"
                            >
                              <svg
                                aria-hidden={true}
                                aria-labelledby={null}
                                fill="currentColor"
                                height="1em"
                                role="img"
                                style={
                                  Object {
                                    "verticalAlign": "-0.125em",
                                  }
                                }
                                viewBox="0 0 352 512"
                                width="1em"
                              >
                                <path
                                  d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                                />
                              </svg>
                            </TimesIcon>
                          </a>
                        </div>
                        <div
                          className="comparison-header"
                        >
                          <div
                            className="drift-header-icon"
                          >
                            <Tooltip
                              content={
                                <div>
                                  Historical system
                                </div>
                              }
                              position="top"
                            >
                              <Popper
                                appendTo={[Function]}
                                distance={15}
                                enableFlip={true}
                                flipBehavior={
                                  Array [
                                    "top",
                                    "right",
                                    "bottom",
                                    "left",
                                    "top",
                                    "right",
                                    "bottom",
                                  ]
                                }
                                isVisible={false}
                                onBlur={[Function]}
                                onDocumentClick={false}
                                onDocumentKeyDown={[Function]}
                                onFocus={[Function]}
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                                onTriggerEnter={[Function]}
                                placement="top"
                                popper={
                                  <div
                                    className="pf-c-tooltip"
                                    id="pf-tooltip-22"
                                    role="tooltip"
                                    style={
                                      Object {
                                        "maxWidth": null,
                                        "opacity": 0,
                                        "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                      }
                                    }
                                  >
                                    <TooltipArrow />
                                    <TooltipContent
                                      isLeftAligned={false}
                                    >
                                      <div>
                                        Historical system
                                      </div>
                                    </TooltipContent>
                                  </div>
                                }
                                popperMatchesTriggerWidth={false}
                                positionModifiers={
                                  Object {
                                    "bottom": "pf-m-bottom",
                                    "left": "pf-m-left",
                                    "right": "pf-m-right",
                                    "top": "pf-m-top",
                                  }
                                }
                                trigger={
                                  <ClockIcon
                                    aria-describedby="pf-tooltip-22"
                                    color="currentColor"
                                    noVerticalAlign={false}
                                    size="sm"
                                  />
                                }
                                zIndex={9999}
                              >
                                <FindRefWrapper
                                  onFoundRef={[Function]}
                                >
                                  <ClockIcon
                                    aria-describedby="pf-tooltip-22"
                                    color="currentColor"
                                    noVerticalAlign={false}
                                    size="sm"
                                  >
                                    <svg
                                      aria-describedby="pf-tooltip-22"
                                      aria-hidden={true}
                                      aria-labelledby={null}
                                      fill="currentColor"
                                      height="1em"
                                      role="img"
                                      style={
                                        Object {
                                          "verticalAlign": "-0.125em",
                                        }
                                      }
                                      viewBox="0 0 512 512"
                                      width="1em"
                                    >
                                      <path
                                        d="M256,8C119,8,8,119,8,256S119,504,256,504,504,393,504,256,393,8,256,8Zm92.49,313h0l-20,25a16,16,0,0,1-22.49,2.5h0l-67-49.72a40,40,0,0,1-15-31.23V112a16,16,0,0,1,16-16h32a16,16,0,0,1,16,16V256l58,42.5A16,16,0,0,1,348.49,321Z"
                                      />
                                    </svg>
                                  </ClockIcon>
                                </FindRefWrapper>
                              </Popper>
                            </Tooltip>
                          </div>
                          <div
                            className="system-name"
                          >
                            system1
                          </div>
                          <div
                            className="system-updated-and-reference"
                          >
                            <ReferenceSelector
                              isReference={false}
                              item={
                                Object {
                                  "display_name": "system1",
                                  "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                                  "last_updated": "2019-01-15T14:53:15.886891Z",
                                  "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                  "type": "historical-system-profile",
                                }
                              }
                              updateReferenceId={[Function]}
                            >
                              <Tooltip
                                content={
                                  <div>
                                    Use this 
                                    historical system
                                     as a reference to compare.
                                  </div>
                                }
                                position="top"
                              >
                                <Popper
                                  appendTo={[Function]}
                                  distance={15}
                                  enableFlip={true}
                                  flipBehavior={
                                    Array [
                                      "top",
                                      "right",
                                      "bottom",
                                      "left",
                                      "top",
                                      "right",
                                      "bottom",
                                    ]
                                  }
                                  isVisible={false}
                                  onBlur={[Function]}
                                  onDocumentClick={false}
                                  onDocumentKeyDown={[Function]}
                                  onFocus={[Function]}
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                  onTriggerEnter={[Function]}
                                  placement="top"
                                  popper={
                                    <div
                                      className="pf-c-tooltip"
                                      id="pf-tooltip-23"
                                      role="tooltip"
                                      style={
                                        Object {
                                          "maxWidth": null,
                                          "opacity": 0,
                                          "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                        }
                                      }
                                    >
                                      <TooltipArrow />
                                      <TooltipContent
                                        isLeftAligned={false}
                                      >
                                        <div>
                                          Use this 
                                          historical system
                                           as a reference to compare.
                                        </div>
                                      </TooltipContent>
                                    </div>
                                  }
                                  popperMatchesTriggerWidth={false}
                                  positionModifiers={
                                    Object {
                                      "bottom": "pf-m-bottom",
                                      "left": "pf-m-left",
                                      "right": "pf-m-right",
                                      "top": "pf-m-top",
                                    }
                                  }
                                  trigger={
                                    <OutlinedStarIcon
                                      aria-describedby="pf-tooltip-23"
                                      className="reference-selector pointer"
                                      color="currentColor"
                                      data-ouia-component-id="reference-selector-9bbbefcc-8f23-4d97-07f2-142asdl234e8"
                                      data-ouia-component-type="PF4/Button"
                                      noVerticalAlign={false}
                                      onClick={[Function]}
                                      size="sm"
                                    />
                                  }
                                  zIndex={9999}
                                >
                                  <FindRefWrapper
                                    onFoundRef={[Function]}
                                  >
                                    <OutlinedStarIcon
                                      aria-describedby="pf-tooltip-23"
                                      className="reference-selector pointer"
                                      color="currentColor"
                                      data-ouia-component-id="reference-selector-9bbbefcc-8f23-4d97-07f2-142asdl234e8"
                                      data-ouia-component-type="PF4/Button"
                                      noVerticalAlign={false}
                                      onClick={[Function]}
                                      size="sm"
                                    >
                                      <svg
                                        aria-describedby="pf-tooltip-23"
                                        aria-hidden={true}
                                        aria-labelledby={null}
                                        className="reference-selector pointer"
                                        data-ouia-component-id="reference-selector-9bbbefcc-8f23-4d97-07f2-142asdl234e8"
                                        data-ouia-component-type="PF4/Button"
                                        fill="currentColor"
                                        height="1em"
                                        onClick={[Function]}
                                        role="img"
                                        style={
                                          Object {
                                            "verticalAlign": "-0.125em",
                                          }
                                        }
                                        viewBox="0 0 576 512"
                                        width="1em"
                                      >
                                        <path
                                          d="M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z"
                                        />
                                      </svg>
                                    </OutlinedStarIcon>
                                  </FindRefWrapper>
                                </Popper>
                              </Tooltip>
                            </ReferenceSelector>
                            15 Jan 2019, 14:53 UTC
                            <withRouter(Connect(HistoricalProfilesPopover))
                              fetchCompare={[Function]}
                              hasCompareButton={true}
                              hasMultiSelect={true}
                              selectHistoricProfiles={[Function]}
                              system={
                                Object {
                                  "display_name": "system1",
                                  "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                                  "last_updated": "2019-01-15T14:53:15.886891Z",
                                  "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                  "type": "historical-system-profile",
                                }
                              }
                              systemIds={Array []}
                            >
                              <Connect(HistoricalProfilesPopover)
                                fetchCompare={[Function]}
                                hasCompareButton={true}
                                hasMultiSelect={true}
                                history={
                                  Object {
                                    "action": "POP",
                                    "block": [Function],
                                    "canGo": [Function],
                                    "createHref": [Function],
                                    "entries": Array [
                                      Object {
                                        "hash": "",
                                        "pathname": "/",
                                        "search": "",
                                        "state": undefined,
                                      },
                                    ],
                                    "go": [Function],
                                    "goBack": [Function],
                                    "goForward": [Function],
                                    "index": 0,
                                    "length": 1,
                                    "listen": [Function],
                                    "location": Object {
                                      "hash": "",
                                      "pathname": "/",
                                      "search": "",
                                      "state": undefined,
                                    },
                                    "push": [Function],
                                    "replace": [Function],
                                  }
                                }
                                location={
                                  Object {
                                    "hash": "",
                                    "pathname": "/",
                                    "search": "",
                                    "state": undefined,
                                  }
                                }
                                match={
                                  Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/",
                                    "url": "/",
                                  }
                                }
                                selectHistoricProfiles={[Function]}
                                system={
                                  Object {
                                    "display_name": "system1",
                                    "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                                    "last_updated": "2019-01-15T14:53:15.886891Z",
                                    "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                    "type": "historical-system-profile",
                                  }
                                }
                                systemIds={Array []}
                              >
                                <HistoricalProfilesPopover
                                  fetchCompare={[Function]}
                                  hasCompareButton={true}
                                  hasMultiSelect={true}
                                  history={
                                    Object {
                                      "action": "POP",
                                      "block": [Function],
                                      "canGo": [Function],
                                      "createHref": [Function],
                                      "entries": Array [
                                        Object {
                                          "hash": "",
                                          "pathname": "/",
                                          "search": "",
                                          "state": undefined,
                                        },
                                      ],
                                      "go": [Function],
                                      "goBack": [Function],
                                      "goForward": [Function],
                                      "index": 0,
                                      "length": 1,
                                      "listen": [Function],
                                      "location": Object {
                                        "hash": "",
                                        "pathname": "/",
                                        "search": "",
                                        "state": undefined,
                                      },
                                      "push": [Function],
                                      "replace": [Function],
                                    }
                                  }
                                  location={
                                    Object {
                                      "hash": "",
                                      "pathname": "/",
                                      "search": "",
                                      "state": undefined,
                                    }
                                  }
                                  match={
                                    Object {
                                      "isExact": true,
                                      "params": Object {},
                                      "path": "/",
                                      "url": "/",
                                    }
                                  }
                                  selectHistoricProfiles={[Function]}
                                  selectSingleHSP={[Function]}
                                  selectSystem={[Function]}
                                  selectedBaselineIds={Array []}
                                  selectedHSPIds={Array []}
                                  system={
                                    Object {
                                      "display_name": "system1",
                                      "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                                      "last_updated": "2019-01-15T14:53:15.886891Z",
                                      "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                      "type": "historical-system-profile",
                                    }
                                  }
                                  systemIds={Array []}
                                  updateColumns={[Function]}
                                >
                                  <span
                                    className="hsp-icon-padding historical-system-profile-popover"
                                    data-ouia-component-id="hsp-popover-toggle-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9"
                                    data-ouia-component-type="PF4/Button"
                                  >
                                    <Popover
                                      bodyContent={
                                        Array [
                                          <Skeleton
                                            className="hsp-dropdown-loading"
                                            isDark={false}
                                            size="sm"
                                          />,
                                          <Skeleton
                                            className="hsp-dropdown-loading"
                                            isDark={false}
                                            size="sm"
                                          />,
                                          <Skeleton
                                            className="hsp-dropdown-loading"
                                            isDark={false}
                                            size="sm"
                                          />,
                                        ]
                                      }
                                      footerContent={
                                        <Button
                                          onClick={[Function]}
                                          ouiaId="hsp-popover-compare"
                                          variant="primary"
                                        >
                                          Compare
                                        </Button>
                                      }
                                      headerContent={
                                        <div>
                                          Historical profiles for this system
                                        </div>
                                      }
                                      id="hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9"
                                      isVisible={false}
                                      shouldClose={[Function]}
                                    >
                                      <Popper
                                        appendTo={[Function]}
                                        distance={25}
                                        enableFlip={true}
                                        flipBehavior={
                                          Array [
                                            "top",
                                            "right",
                                            "bottom",
                                            "left",
                                            "top",
                                            "right",
                                            "bottom",
                                          ]
                                        }
                                        isVisible={false}
                                        onDocumentClick={[Function]}
                                        onDocumentKeyDown={[Function]}
                                        onTriggerClick={[Function]}
                                        onTriggerEnter={[Function]}
                                        placement="top"
                                        popper={
                                          <FocusTrap
                                            active={false}
                                            aria-describedby="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-body"
                                            aria-labelledby="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-header"
                                            aria-modal="true"
                                            className="pf-c-popover"
                                            focusTrapOptions={
                                              Object {
                                                "clickOutsideDeactivates": true,
                                                "returnFocusOnDeactivate": true,
                                              }
                                            }
                                            onMouseDown={[Function]}
                                            paused={false}
                                            role="dialog"
                                            style={
                                              Object {
                                                "maxWidth": null,
                                                "minWidth": null,
                                                "opacity": 0,
                                                "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                              }
                                            }
                                          >
                                            <PopoverArrow />
                                            <PopoverContent>
                                              <PopoverCloseButton
                                                aria-label="Close"
                                                onClose={[Function]}
                                              />
                                              <PopoverHeader
                                                id="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-header"
                                              >
                                                <div>
                                                  Historical profiles for this system
                                                </div>
                                              </PopoverHeader>
                                              <PopoverBody
                                                id="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-body"
                                              >
                                                <Skeleton
                                                  className="hsp-dropdown-loading"
                                                  isDark={false}
                                                  size="sm"
                                                />
                                                <Skeleton
                                                  className="hsp-dropdown-loading"
                                                  isDark={false}
                                                  size="sm"
                                                />
                                                <Skeleton
                                                  className="hsp-dropdown-loading"
                                                  isDark={false}
                                                  size="sm"
                                                />
                                              </PopoverBody>
                                              <PopoverFooter
                                                id="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-footer"
                                              >
                                                <Button
                                                  onClick={[Function]}
                                                  ouiaId="hsp-popover-compare"
                                                  variant="primary"
                                                >
                                                  Compare
                                                </Button>
                                              </PopoverFooter>
                                            </PopoverContent>
                                          </FocusTrap>
                                        }
                                        popperMatchesTriggerWidth={false}
                                        positionModifiers={
                                          Object {
                                            "bottom": "pf-m-bottom",
                                            "left": "pf-m-left",
                                            "right": "pf-m-right",
                                            "top": "pf-m-top",
                                          }
                                        }
                                        trigger={
                                          <HistoryIcon
                                            className="hsp-dropdown-icon"
                                            color="currentColor"
                                            noVerticalAlign={false}
                                            onClick={[Function]}
                                            size="sm"
                                          />
                                        }
                                        zIndex={9999}
                                      >
                                        <FindRefWrapper
                                          onFoundRef={[Function]}
                                        >
                                          <HistoryIcon
                                            className="hsp-dropdown-icon"
                                            color="currentColor"
                                            noVerticalAlign={false}
                                            onClick={[Function]}
                                            size="sm"
                                          >
                                            <svg
                                              aria-hidden={true}
                                              aria-labelledby={null}
                                              className="hsp-dropdown-icon"
                                              fill="currentColor"
                                              height="1em"
                                              onClick={[Function]}
                                              role="img"
                                              style={
                                                Object {
                                                  "verticalAlign": "-0.125em",
                                                }
                                              }
                                              viewBox="0 0 512 512"
                                              width="1em"
                                            >
                                              <path
                                                d="M504 255.531c.253 136.64-111.18 248.372-247.82 248.468-59.015.042-113.223-20.53-155.822-54.911-11.077-8.94-11.905-25.541-1.839-35.607l11.267-11.267c8.609-8.609 22.353-9.551 31.891-1.984C173.062 425.135 212.781 440 256 440c101.705 0 184-82.311 184-184 0-101.705-82.311-184-184-184-48.814 0-93.149 18.969-126.068 49.932l50.754 50.754c10.08 10.08 2.941 27.314-11.313 27.314H24c-8.837 0-16-7.163-16-16V38.627c0-14.254 17.234-21.393 27.314-11.314l49.372 49.372C129.209 34.136 189.552 8 256 8c136.81 0 247.747 110.78 248 247.531zm-180.912 78.784l9.823-12.63c8.138-10.463 6.253-25.542-4.21-33.679L288 256.349V152c0-13.255-10.745-24-24-24h-16c-13.255 0-24 10.745-24 24v135.651l65.409 50.874c10.463 8.137 25.541 6.253 33.679-4.21z"
                                              />
                                            </svg>
                                          </HistoryIcon>
                                        </FindRefWrapper>
                                      </Popper>
                                    </Popover>
                                  </span>
                                </HistoricalProfilesPopover>
                              </Connect(HistoricalProfilesPopover)>
                            </withRouter(Connect(HistoricalProfilesPopover))>
                          </div>
                        </div>
                      </th>
                      <th
                        className="drift-header historical-system-profile-header"
                        header-id="edmk59dj-fn42-dfjk-alv3-bmn2854mnn27"
                        key="edmk59dj-fn42-dfjk-alv3-bmn2854mnn27"
                      >
                        <div>
                          <a
                            className="remove-system-icon"
                            data-ouia-component-id="remove-system-button-edmk59dj-fn42-dfjk-alv3-bmn2854mnn27"
                            data-ouia-component-type="PF4/Button"
                            onClick={[Function]}
                          >
                            <TimesIcon
                              color="currentColor"
                              noVerticalAlign={false}
                              size="sm"
                            >
                              <svg
                                aria-hidden={true}
                                aria-labelledby={null}
                                fill="currentColor"
                                height="1em"
                                role="img"
                                style={
                                  Object {
                                    "verticalAlign": "-0.125em",
                                  }
                                }
                                viewBox="0 0 352 512"
                                width="1em"
                              >
                                <path
                                  d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                                />
                              </svg>
                            </TimesIcon>
                          </a>
                        </div>
                        <div
                          className="comparison-header"
                        >
                          <div
                            className="drift-header-icon"
                          >
                            <Tooltip
                              content={
                                <div>
                                  Historical system
                                </div>
                              }
                              position="top"
                            >
                              <Popper
                                appendTo={[Function]}
                                distance={15}
                                enableFlip={true}
                                flipBehavior={
                                  Array [
                                    "top",
                                    "right",
                                    "bottom",
                                    "left",
                                    "top",
                                    "right",
                                    "bottom",
                                  ]
                                }
                                isVisible={false}
                                onBlur={[Function]}
                                onDocumentClick={false}
                                onDocumentKeyDown={[Function]}
                                onFocus={[Function]}
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                                onTriggerEnter={[Function]}
                                placement="top"
                                popper={
                                  <div
                                    className="pf-c-tooltip"
                                    id="pf-tooltip-24"
                                    role="tooltip"
                                    style={
                                      Object {
                                        "maxWidth": null,
                                        "opacity": 0,
                                        "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                      }
                                    }
                                  >
                                    <TooltipArrow />
                                    <TooltipContent
                                      isLeftAligned={false}
                                    >
                                      <div>
                                        Historical system
                                      </div>
                                    </TooltipContent>
                                  </div>
                                }
                                popperMatchesTriggerWidth={false}
                                positionModifiers={
                                  Object {
                                    "bottom": "pf-m-bottom",
                                    "left": "pf-m-left",
                                    "right": "pf-m-right",
                                    "top": "pf-m-top",
                                  }
                                }
                                trigger={
                                  <ClockIcon
                                    aria-describedby="pf-tooltip-24"
                                    color="currentColor"
                                    noVerticalAlign={false}
                                    size="sm"
                                  />
                                }
                                zIndex={9999}
                              >
                                <FindRefWrapper
                                  onFoundRef={[Function]}
                                >
                                  <ClockIcon
                                    aria-describedby="pf-tooltip-24"
                                    color="currentColor"
                                    noVerticalAlign={false}
                                    size="sm"
                                  >
                                    <svg
                                      aria-describedby="pf-tooltip-24"
                                      aria-hidden={true}
                                      aria-labelledby={null}
                                      fill="currentColor"
                                      height="1em"
                                      role="img"
                                      style={
                                        Object {
                                          "verticalAlign": "-0.125em",
                                        }
                                      }
                                      viewBox="0 0 512 512"
                                      width="1em"
                                    >
                                      <path
                                        d="M256,8C119,8,8,119,8,256S119,504,256,504,504,393,504,256,393,8,256,8Zm92.49,313h0l-20,25a16,16,0,0,1-22.49,2.5h0l-67-49.72a40,40,0,0,1-15-31.23V112a16,16,0,0,1,16-16h32a16,16,0,0,1,16,16V256l58,42.5A16,16,0,0,1,348.49,321Z"
                                      />
                                    </svg>
                                  </ClockIcon>
                                </FindRefWrapper>
                              </Popper>
                            </Tooltip>
                          </div>
                          <div
                            className="system-name"
                          >
                            system1
                          </div>
                          <div
                            className="system-updated-and-reference"
                          >
                            <ReferenceSelector
                              isReference={false}
                              item={
                                Object {
                                  "display_name": "system1",
                                  "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                                  "last_updated": "2019-01-15T15:25:16.304899Z",
                                  "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                  "type": "historical-system-profile",
                                }
                              }
                              updateReferenceId={[Function]}
                            >
                              <Tooltip
                                content={
                                  <div>
                                    Use this 
                                    historical system
                                     as a reference to compare.
                                  </div>
                                }
                                position="top"
                              >
                                <Popper
                                  appendTo={[Function]}
                                  distance={15}
                                  enableFlip={true}
                                  flipBehavior={
                                    Array [
                                      "top",
                                      "right",
                                      "bottom",
                                      "left",
                                      "top",
                                      "right",
                                      "bottom",
                                    ]
                                  }
                                  isVisible={false}
                                  onBlur={[Function]}
                                  onDocumentClick={false}
                                  onDocumentKeyDown={[Function]}
                                  onFocus={[Function]}
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                  onTriggerEnter={[Function]}
                                  placement="top"
                                  popper={
                                    <div
                                      className="pf-c-tooltip"
                                      id="pf-tooltip-25"
                                      role="tooltip"
                                      style={
                                        Object {
                                          "maxWidth": null,
                                          "opacity": 0,
                                          "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                        }
                                      }
                                    >
                                      <TooltipArrow />
                                      <TooltipContent
                                        isLeftAligned={false}
                                      >
                                        <div>
                                          Use this 
                                          historical system
                                           as a reference to compare.
                                        </div>
                                      </TooltipContent>
                                    </div>
                                  }
                                  popperMatchesTriggerWidth={false}
                                  positionModifiers={
                                    Object {
                                      "bottom": "pf-m-bottom",
                                      "left": "pf-m-left",
                                      "right": "pf-m-right",
                                      "top": "pf-m-top",
                                    }
                                  }
                                  trigger={
                                    <OutlinedStarIcon
                                      aria-describedby="pf-tooltip-25"
                                      className="reference-selector pointer"
                                      color="currentColor"
                                      data-ouia-component-id="reference-selector-edmk59dj-fn42-dfjk-alv3-bmn2854mnn27"
                                      data-ouia-component-type="PF4/Button"
                                      noVerticalAlign={false}
                                      onClick={[Function]}
                                      size="sm"
                                    />
                                  }
                                  zIndex={9999}
                                >
                                  <FindRefWrapper
                                    onFoundRef={[Function]}
                                  >
                                    <OutlinedStarIcon
                                      aria-describedby="pf-tooltip-25"
                                      className="reference-selector pointer"
                                      color="currentColor"
                                      data-ouia-component-id="reference-selector-edmk59dj-fn42-dfjk-alv3-bmn2854mnn27"
                                      data-ouia-component-type="PF4/Button"
                                      noVerticalAlign={false}
                                      onClick={[Function]}
                                      size="sm"
                                    >
                                      <svg
                                        aria-describedby="pf-tooltip-25"
                                        aria-hidden={true}
                                        aria-labelledby={null}
                                        className="reference-selector pointer"
                                        data-ouia-component-id="reference-selector-edmk59dj-fn42-dfjk-alv3-bmn2854mnn27"
                                        data-ouia-component-type="PF4/Button"
                                        fill="currentColor"
                                        height="1em"
                                        onClick={[Function]}
                                        role="img"
                                        style={
                                          Object {
                                            "verticalAlign": "-0.125em",
                                          }
                                        }
                                        viewBox="0 0 576 512"
                                        width="1em"
                                      >
                                        <path
                                          d="M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z"
                                        />
                                      </svg>
                                    </OutlinedStarIcon>
                                  </FindRefWrapper>
                                </Popper>
                              </Tooltip>
                            </ReferenceSelector>
                            15 Jan 2019, 15:25 UTC
                            <withRouter(Connect(HistoricalProfilesPopover))
                              fetchCompare={[Function]}
                              hasCompareButton={true}
                              hasMultiSelect={true}
                              selectHistoricProfiles={[Function]}
                              system={
                                Object {
                                  "display_name": "system1",
                                  "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                                  "last_updated": "2019-01-15T15:25:16.304899Z",
                                  "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                  "type": "historical-system-profile",
                                }
                              }
                              systemIds={Array []}
                            >
                              <Connect(HistoricalProfilesPopover)
                                fetchCompare={[Function]}
                                hasCompareButton={true}
                                hasMultiSelect={true}
                                history={
                                  Object {
                                    "action": "POP",
                                    "block": [Function],
                                    "canGo": [Function],
                                    "createHref": [Function],
                                    "entries": Array [
                                      Object {
                                        "hash": "",
                                        "pathname": "/",
                                        "search": "",
                                        "state": undefined,
                                      },
                                    ],
                                    "go": [Function],
                                    "goBack": [Function],
                                    "goForward": [Function],
                                    "index": 0,
                                    "length": 1,
                                    "listen": [Function],
                                    "location": Object {
                                      "hash": "",
                                      "pathname": "/",
                                      "search": "",
                                      "state": undefined,
                                    },
                                    "push": [Function],
                                    "replace": [Function],
                                  }
                                }
                                location={
                                  Object {
                                    "hash": "",
                                    "pathname": "/",
                                    "search": "",
                                    "state": undefined,
                                  }
                                }
                                match={
                                  Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/",
                                    "url": "/",
                                  }
                                }
                                selectHistoricProfiles={[Function]}
                                system={
                                  Object {
                                    "display_name": "system1",
                                    "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                                    "last_updated": "2019-01-15T15:25:16.304899Z",
                                    "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                    "type": "historical-system-profile",
                                  }
                                }
                                systemIds={Array []}
                              >
                                <HistoricalProfilesPopover
                                  fetchCompare={[Function]}
                                  hasCompareButton={true}
                                  hasMultiSelect={true}
                                  history={
                                    Object {
                                      "action": "POP",
                                      "block": [Function],
                                      "canGo": [Function],
                                      "createHref": [Function],
                                      "entries": Array [
                                        Object {
                                          "hash": "",
                                          "pathname": "/",
                                          "search": "",
                                          "state": undefined,
                                        },
                                      ],
                                      "go": [Function],
                                      "goBack": [Function],
                                      "goForward": [Function],
                                      "index": 0,
                                      "length": 1,
                                      "listen": [Function],
                                      "location": Object {
                                        "hash": "",
                                        "pathname": "/",
                                        "search": "",
                                        "state": undefined,
                                      },
                                      "push": [Function],
                                      "replace": [Function],
                                    }
                                  }
                                  location={
                                    Object {
                                      "hash": "",
                                      "pathname": "/",
                                      "search": "",
                                      "state": undefined,
                                    }
                                  }
                                  match={
                                    Object {
                                      "isExact": true,
                                      "params": Object {},
                                      "path": "/",
                                      "url": "/",
                                    }
                                  }
                                  selectHistoricProfiles={[Function]}
                                  selectSingleHSP={[Function]}
                                  selectSystem={[Function]}
                                  selectedBaselineIds={Array []}
                                  selectedHSPIds={Array []}
                                  system={
                                    Object {
                                      "display_name": "system1",
                                      "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                                      "last_updated": "2019-01-15T15:25:16.304899Z",
                                      "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                      "type": "historical-system-profile",
                                    }
                                  }
                                  systemIds={Array []}
                                  updateColumns={[Function]}
                                >
                                  <span
                                    className="hsp-icon-padding historical-system-profile-popover"
                                    data-ouia-component-id="hsp-popover-toggle-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9"
                                    data-ouia-component-type="PF4/Button"
                                  >
                                    <Popover
                                      bodyContent={
                                        Array [
                                          <Skeleton
                                            className="hsp-dropdown-loading"
                                            isDark={false}
                                            size="sm"
                                          />,
                                          <Skeleton
                                            className="hsp-dropdown-loading"
                                            isDark={false}
                                            size="sm"
                                          />,
                                          <Skeleton
                                            className="hsp-dropdown-loading"
                                            isDark={false}
                                            size="sm"
                                          />,
                                        ]
                                      }
                                      footerContent={
                                        <Button
                                          onClick={[Function]}
                                          ouiaId="hsp-popover-compare"
                                          variant="primary"
                                        >
                                          Compare
                                        </Button>
                                      }
                                      headerContent={
                                        <div>
                                          Historical profiles for this system
                                        </div>
                                      }
                                      id="hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9"
                                      isVisible={false}
                                      shouldClose={[Function]}
                                    >
                                      <Popper
                                        appendTo={[Function]}
                                        distance={25}
                                        enableFlip={true}
                                        flipBehavior={
                                          Array [
                                            "top",
                                            "right",
                                            "bottom",
                                            "left",
                                            "top",
                                            "right",
                                            "bottom",
                                          ]
                                        }
                                        isVisible={false}
                                        onDocumentClick={[Function]}
                                        onDocumentKeyDown={[Function]}
                                        onTriggerClick={[Function]}
                                        onTriggerEnter={[Function]}
                                        placement="top"
                                        popper={
                                          <FocusTrap
                                            active={false}
                                            aria-describedby="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-body"
                                            aria-labelledby="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-header"
                                            aria-modal="true"
                                            className="pf-c-popover"
                                            focusTrapOptions={
                                              Object {
                                                "clickOutsideDeactivates": true,
                                                "returnFocusOnDeactivate": true,
                                              }
                                            }
                                            onMouseDown={[Function]}
                                            paused={false}
                                            role="dialog"
                                            style={
                                              Object {
                                                "maxWidth": null,
                                                "minWidth": null,
                                                "opacity": 0,
                                                "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                              }
                                            }
                                          >
                                            <PopoverArrow />
                                            <PopoverContent>
                                              <PopoverCloseButton
                                                aria-label="Close"
                                                onClose={[Function]}
                                              />
                                              <PopoverHeader
                                                id="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-header"
                                              >
                                                <div>
                                                  Historical profiles for this system
                                                </div>
                                              </PopoverHeader>
                                              <PopoverBody
                                                id="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-body"
                                              >
                                                <Skeleton
                                                  className="hsp-dropdown-loading"
                                                  isDark={false}
                                                  size="sm"
                                                />
                                                <Skeleton
                                                  className="hsp-dropdown-loading"
                                                  isDark={false}
                                                  size="sm"
                                                />
                                                <Skeleton
                                                  className="hsp-dropdown-loading"
                                                  isDark={false}
                                                  size="sm"
                                                />
                                              </PopoverBody>
                                              <PopoverFooter
                                                id="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-footer"
                                              >
                                                <Button
                                                  onClick={[Function]}
                                                  ouiaId="hsp-popover-compare"
                                                  variant="primary"
                                                >
                                                  Compare
                                                </Button>
                                              </PopoverFooter>
                                            </PopoverContent>
                                          </FocusTrap>
                                        }
                                        popperMatchesTriggerWidth={false}
                                        positionModifiers={
                                          Object {
                                            "bottom": "pf-m-bottom",
                                            "left": "pf-m-left",
                                            "right": "pf-m-right",
                                            "top": "pf-m-top",
                                          }
                                        }
                                        trigger={
                                          <HistoryIcon
                                            className="hsp-dropdown-icon"
                                            color="currentColor"
                                            noVerticalAlign={false}
                                            onClick={[Function]}
                                            size="sm"
                                          />
                                        }
                                        zIndex={9999}
                                      >
                                        <FindRefWrapper
                                          onFoundRef={[Function]}
                                        >
                                          <HistoryIcon
                                            className="hsp-dropdown-icon"
                                            color="currentColor"
                                            noVerticalAlign={false}
                                            onClick={[Function]}
                                            size="sm"
                                          >
                                            <svg
                                              aria-hidden={true}
                                              aria-labelledby={null}
                                              className="hsp-dropdown-icon"
                                              fill="currentColor"
                                              height="1em"
                                              onClick={[Function]}
                                              role="img"
                                              style={
                                                Object {
                                                  "verticalAlign": "-0.125em",
                                                }
                                              }
                                              viewBox="0 0 512 512"
                                              width="1em"
                                            >
                                              <path
                                                d="M504 255.531c.253 136.64-111.18 248.372-247.82 248.468-59.015.042-113.223-20.53-155.822-54.911-11.077-8.94-11.905-25.541-1.839-35.607l11.267-11.267c8.609-8.609 22.353-9.551 31.891-1.984C173.062 425.135 212.781 440 256 440c101.705 0 184-82.311 184-184 0-101.705-82.311-184-184-184-48.814 0-93.149 18.969-126.068 49.932l50.754 50.754c10.08 10.08 2.941 27.314-11.313 27.314H24c-8.837 0-16-7.163-16-16V38.627c0-14.254 17.234-21.393 27.314-11.314l49.372 49.372C129.209 34.136 189.552 8 256 8c136.81 0 247.747 110.78 248 247.531zm-180.912 78.784l9.823-12.63c8.138-10.463 6.253-25.542-4.21-33.679L288 256.349V152c0-13.255-10.745-24-24-24h-16c-13.255 0-24 10.745-24 24v135.651l65.409 50.874c10.463 8.137 25.541 6.253 33.679-4.21z"
                                              />
                                            </svg>
                                          </HistoryIcon>
                                        </FindRefWrapper>
                                      </Popper>
                                    </Popover>
                                  </span>
                                </HistoricalProfilesPopover>
                              </Connect(HistoricalProfilesPopover)>
                            </withRouter(Connect(HistoricalProfilesPopover))>
                          </div>
                        </div>
                      </th>
                      <th
                        className="drift-header system-header"
                        header-id="f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2"
                        key="f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2"
                      >
                        <div>
                          <a
                            className="remove-system-icon"
                            data-ouia-component-id="remove-system-button-f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2"
                            data-ouia-component-type="PF4/Button"
                            onClick={[Function]}
                          >
                            <TimesIcon
                              color="currentColor"
                              noVerticalAlign={false}
                              size="sm"
                            >
                              <svg
                                aria-hidden={true}
                                aria-labelledby={null}
                                fill="currentColor"
                                height="1em"
                                role="img"
                                style={
                                  Object {
                                    "verticalAlign": "-0.125em",
                                  }
                                }
                                viewBox="0 0 352 512"
                                width="1em"
                              >
                                <path
                                  d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                                />
                              </svg>
                            </TimesIcon>
                          </a>
                        </div>
                        <div
                          className="comparison-header"
                        >
                          <div
                            className="drift-header-icon"
                          >
                            <Tooltip
                              content={
                                <div>
                                  System
                                </div>
                              }
                              position="top"
                            >
                              <Popper
                                appendTo={[Function]}
                                distance={15}
                                enableFlip={true}
                                flipBehavior={
                                  Array [
                                    "top",
                                    "right",
                                    "bottom",
                                    "left",
                                    "top",
                                    "right",
                                    "bottom",
                                  ]
                                }
                                isVisible={false}
                                onBlur={[Function]}
                                onDocumentClick={false}
                                onDocumentKeyDown={[Function]}
                                onFocus={[Function]}
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                                onTriggerEnter={[Function]}
                                placement="top"
                                popper={
                                  <div
                                    className="pf-c-tooltip"
                                    id="pf-tooltip-26"
                                    role="tooltip"
                                    style={
                                      Object {
                                        "maxWidth": null,
                                        "opacity": 0,
                                        "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                      }
                                    }
                                  >
                                    <TooltipArrow />
                                    <TooltipContent
                                      isLeftAligned={false}
                                    >
                                      <div>
                                        System
                                      </div>
                                    </TooltipContent>
                                  </div>
                                }
                                popperMatchesTriggerWidth={false}
                                positionModifiers={
                                  Object {
                                    "bottom": "pf-m-bottom",
                                    "left": "pf-m-left",
                                    "right": "pf-m-right",
                                    "top": "pf-m-top",
                                  }
                                }
                                trigger={
                                  <ServerIcon
                                    aria-describedby="pf-tooltip-26"
                                    color="currentColor"
                                    noVerticalAlign={false}
                                    size="sm"
                                  />
                                }
                                zIndex={9999}
                              >
                                <FindRefWrapper
                                  onFoundRef={[Function]}
                                >
                                  <ServerIcon
                                    aria-describedby="pf-tooltip-26"
                                    color="currentColor"
                                    noVerticalAlign={false}
                                    size="sm"
                                  >
                                    <svg
                                      aria-describedby="pf-tooltip-26"
                                      aria-hidden={true}
                                      aria-labelledby={null}
                                      fill="currentColor"
                                      height="1em"
                                      role="img"
                                      style={
                                        Object {
                                          "verticalAlign": "-0.125em",
                                        }
                                      }
                                      viewBox="0 0 512 512"
                                      width="1em"
                                    >
                                      <path
                                        d="M480 160H32c-17.673 0-32-14.327-32-32V64c0-17.673 14.327-32 32-32h448c17.673 0 32 14.327 32 32v64c0 17.673-14.327 32-32 32zm-48-88c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm-64 0c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm112 248H32c-17.673 0-32-14.327-32-32v-64c0-17.673 14.327-32 32-32h448c17.673 0 32 14.327 32 32v64c0 17.673-14.327 32-32 32zm-48-88c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm-64 0c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm112 248H32c-17.673 0-32-14.327-32-32v-64c0-17.673 14.327-32 32-32h448c17.673 0 32 14.327 32 32v64c0 17.673-14.327 32-32 32zm-48-88c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm-64 0c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24z"
                                      />
                                    </svg>
                                  </ServerIcon>
                                </FindRefWrapper>
                              </Popper>
                            </Tooltip>
                          </div>
                          <div
                            className="system-name"
                          >
                            ibm-x3650m4-03-vm03.lab.eng.brq.redhat.com
                          </div>
                          <div
                            className="system-updated-and-reference"
                          >
                            <ReferenceSelector
                              isReference={false}
                              item={
                                Object {
                                  "display_name": "ibm-x3650m4-03-vm03.lab.eng.brq.redhat.com",
                                  "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                                  "last_updated": "2019-01-15T15:25:16.304899Z",
                                  "type": "system",
                                }
                              }
                              updateReferenceId={[Function]}
                            >
                              <Tooltip
                                content={
                                  <div>
                                    Use this 
                                    system
                                     as a reference to compare.
                                  </div>
                                }
                                position="top"
                              >
                                <Popper
                                  appendTo={[Function]}
                                  distance={15}
                                  enableFlip={true}
                                  flipBehavior={
                                    Array [
                                      "top",
                                      "right",
                                      "bottom",
                                      "left",
                                      "top",
                                      "right",
                                      "bottom",
                                    ]
                                  }
                                  isVisible={false}
                                  onBlur={[Function]}
                                  onDocumentClick={false}
                                  onDocumentKeyDown={[Function]}
                                  onFocus={[Function]}
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                  onTriggerEnter={[Function]}
                                  placement="top"
                                  popper={
                                    <div
                                      className="pf-c-tooltip"
                                      id="pf-tooltip-27"
                                      role="tooltip"
                                      style={
                                        Object {
                                          "maxWidth": null,
                                          "opacity": 0,
                                          "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                        }
                                      }
                                    >
                                      <TooltipArrow />
                                      <TooltipContent
                                        isLeftAligned={false}
                                      >
                                        <div>
                                          Use this 
                                          system
                                           as a reference to compare.
                                        </div>
                                      </TooltipContent>
                                    </div>
                                  }
                                  popperMatchesTriggerWidth={false}
                                  positionModifiers={
                                    Object {
                                      "bottom": "pf-m-bottom",
                                      "left": "pf-m-left",
                                      "right": "pf-m-right",
                                      "top": "pf-m-top",
                                    }
                                  }
                                  trigger={
                                    <OutlinedStarIcon
                                      aria-describedby="pf-tooltip-27"
                                      className="reference-selector pointer"
                                      color="currentColor"
                                      data-ouia-component-id="reference-selector-f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2"
                                      data-ouia-component-type="PF4/Button"
                                      noVerticalAlign={false}
                                      onClick={[Function]}
                                      size="sm"
                                    />
                                  }
                                  zIndex={9999}
                                >
                                  <FindRefWrapper
                                    onFoundRef={[Function]}
                                  >
                                    <OutlinedStarIcon
                                      aria-describedby="pf-tooltip-27"
                                      className="reference-selector pointer"
                                      color="currentColor"
                                      data-ouia-component-id="reference-selector-f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2"
                                      data-ouia-component-type="PF4/Button"
                                      noVerticalAlign={false}
                                      onClick={[Function]}
                                      size="sm"
                                    >
                                      <svg
                                        aria-describedby="pf-tooltip-27"
                                        aria-hidden={true}
                                        aria-labelledby={null}
                                        className="reference-selector pointer"
                                        data-ouia-component-id="reference-selector-f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2"
                                        data-ouia-component-type="PF4/Button"
                                        fill="currentColor"
                                        height="1em"
                                        onClick={[Function]}
                                        role="img"
                                        style={
                                          Object {
                                            "verticalAlign": "-0.125em",
                                          }
                                        }
                                        viewBox="0 0 576 512"
                                        width="1em"
                                      >
                                        <path
                                          d="M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z"
                                        />
                                      </svg>
                                    </OutlinedStarIcon>
                                  </FindRefWrapper>
                                </Popper>
                              </Tooltip>
                            </ReferenceSelector>
                            15 Jan 2019, 15:25 UTC
                            <withRouter(Connect(HistoricalProfilesPopover))
                              fetchCompare={[Function]}
                              hasCompareButton={true}
                              hasMultiSelect={true}
                              selectHistoricProfiles={[Function]}
                              system={
                                Object {
                                  "display_name": "ibm-x3650m4-03-vm03.lab.eng.brq.redhat.com",
                                  "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                                  "last_updated": "2019-01-15T15:25:16.304899Z",
                                  "type": "system",
                                }
                              }
                              systemIds={Array []}
                            >
                              <Connect(HistoricalProfilesPopover)
                                fetchCompare={[Function]}
                                hasCompareButton={true}
                                hasMultiSelect={true}
                                history={
                                  Object {
                                    "action": "POP",
                                    "block": [Function],
                                    "canGo": [Function],
                                    "createHref": [Function],
                                    "entries": Array [
                                      Object {
                                        "hash": "",
                                        "pathname": "/",
                                        "search": "",
                                        "state": undefined,
                                      },
                                    ],
                                    "go": [Function],
                                    "goBack": [Function],
                                    "goForward": [Function],
                                    "index": 0,
                                    "length": 1,
                                    "listen": [Function],
                                    "location": Object {
                                      "hash": "",
                                      "pathname": "/",
                                      "search": "",
                                      "state": undefined,
                                    },
                                    "push": [Function],
                                    "replace": [Function],
                                  }
                                }
                                location={
                                  Object {
                                    "hash": "",
                                    "pathname": "/",
                                    "search": "",
                                    "state": undefined,
                                  }
                                }
                                match={
                                  Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/",
                                    "url": "/",
                                  }
                                }
                                selectHistoricProfiles={[Function]}
                                system={
                                  Object {
                                    "display_name": "ibm-x3650m4-03-vm03.lab.eng.brq.redhat.com",
                                    "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                                    "last_updated": "2019-01-15T15:25:16.304899Z",
                                    "type": "system",
                                  }
                                }
                                systemIds={Array []}
                              >
                                <HistoricalProfilesPopover
                                  fetchCompare={[Function]}
                                  hasCompareButton={true}
                                  hasMultiSelect={true}
                                  history={
                                    Object {
                                      "action": "POP",
                                      "block": [Function],
                                      "canGo": [Function],
                                      "createHref": [Function],
                                      "entries": Array [
                                        Object {
                                          "hash": "",
                                          "pathname": "/",
                                          "search": "",
                                          "state": undefined,
                                        },
                                      ],
                                      "go": [Function],
                                      "goBack": [Function],
                                      "goForward": [Function],
                                      "index": 0,
                                      "length": 1,
                                      "listen": [Function],
                                      "location": Object {
                                        "hash": "",
                                        "pathname": "/",
                                        "search": "",
                                        "state": undefined,
                                      },
                                      "push": [Function],
                                      "replace": [Function],
                                    }
                                  }
                                  location={
                                    Object {
                                      "hash": "",
                                      "pathname": "/",
                                      "search": "",
                                      "state": undefined,
                                    }
                                  }
                                  match={
                                    Object {
                                      "isExact": true,
                                      "params": Object {},
                                      "path": "/",
                                      "url": "/",
                                    }
                                  }
                                  selectHistoricProfiles={[Function]}
                                  selectSingleHSP={[Function]}
                                  selectSystem={[Function]}
                                  selectedBaselineIds={Array []}
                                  selectedHSPIds={Array []}
                                  system={
                                    Object {
                                      "display_name": "ibm-x3650m4-03-vm03.lab.eng.brq.redhat.com",
                                      "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                                      "last_updated": "2019-01-15T15:25:16.304899Z",
                                      "type": "system",
                                    }
                                  }
                                  systemIds={Array []}
                                  updateColumns={[Function]}
                                >
                                  <span
                                    className="hsp-icon-padding historical-system-profile-popover"
                                    data-ouia-component-id="hsp-popover-toggle-f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2"
                                    data-ouia-component-type="PF4/Button"
                                  >
                                    <Popover
                                      bodyContent={
                                        Array [
                                          <Skeleton
                                            className="hsp-dropdown-loading"
                                            isDark={false}
                                            size="sm"
                                          />,
                                          <Skeleton
                                            className="hsp-dropdown-loading"
                                            isDark={false}
                                            size="sm"
                                          />,
                                          <Skeleton
                                            className="hsp-dropdown-loading"
                                            isDark={false}
                                            size="sm"
                                          />,
                                        ]
                                      }
                                      footerContent={
                                        <Button
                                          onClick={[Function]}
                                          ouiaId="hsp-popover-compare"
                                          variant="primary"
                                        >
                                          Compare
                                        </Button>
                                      }
                                      headerContent={
                                        <div>
                                          Historical profiles for this system
                                        </div>
                                      }
                                      id="hsp-popover-f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2"
                                      isVisible={false}
                                      shouldClose={[Function]}
                                    >
                                      <Popper
                                        appendTo={[Function]}
                                        distance={25}
                                        enableFlip={true}
                                        flipBehavior={
                                          Array [
                                            "top",
                                            "right",
                                            "bottom",
                                            "left",
                                            "top",
                                            "right",
                                            "bottom",
                                          ]
                                        }
                                        isVisible={false}
                                        onDocumentClick={[Function]}
                                        onDocumentKeyDown={[Function]}
                                        onTriggerClick={[Function]}
                                        onTriggerEnter={[Function]}
                                        placement="top"
                                        popper={
                                          <FocusTrap
                                            active={false}
                                            aria-describedby="popover-hsp-popover-f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2-body"
                                            aria-labelledby="popover-hsp-popover-f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2-header"
                                            aria-modal="true"
                                            className="pf-c-popover"
                                            focusTrapOptions={
                                              Object {
                                                "clickOutsideDeactivates": true,
                                                "returnFocusOnDeactivate": true,
                                              }
                                            }
                                            onMouseDown={[Function]}
                                            paused={false}
                                            role="dialog"
                                            style={
                                              Object {
                                                "maxWidth": null,
                                                "minWidth": null,
                                                "opacity": 0,
                                                "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                              }
                                            }
                                          >
                                            <PopoverArrow />
                                            <PopoverContent>
                                              <PopoverCloseButton
                                                aria-label="Close"
                                                onClose={[Function]}
                                              />
                                              <PopoverHeader
                                                id="popover-hsp-popover-f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2-header"
                                              >
                                                <div>
                                                  Historical profiles for this system
                                                </div>
                                              </PopoverHeader>
                                              <PopoverBody
                                                id="popover-hsp-popover-f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2-body"
                                              >
                                                <Skeleton
                                                  className="hsp-dropdown-loading"
                                                  isDark={false}
                                                  size="sm"
                                                />
                                                <Skeleton
                                                  className="hsp-dropdown-loading"
                                                  isDark={false}
                                                  size="sm"
                                                />
                                                <Skeleton
                                                  className="hsp-dropdown-loading"
                                                  isDark={false}
                                                  size="sm"
                                                />
                                              </PopoverBody>
                                              <PopoverFooter
                                                id="popover-hsp-popover-f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2-footer"
                                              >
                                                <Button
                                                  onClick={[Function]}
                                                  ouiaId="hsp-popover-compare"
                                                  variant="primary"
                                                >
                                                  Compare
                                                </Button>
                                              </PopoverFooter>
                                            </PopoverContent>
                                          </FocusTrap>
                                        }
                                        popperMatchesTriggerWidth={false}
                                        positionModifiers={
                                          Object {
                                            "bottom": "pf-m-bottom",
                                            "left": "pf-m-left",
                                            "right": "pf-m-right",
                                            "top": "pf-m-top",
                                          }
                                        }
                                        trigger={
                                          <HistoryIcon
                                            className="hsp-dropdown-icon"
                                            color="currentColor"
                                            noVerticalAlign={false}
                                            onClick={[Function]}
                                            size="sm"
                                          />
                                        }
                                        zIndex={9999}
                                      >
                                        <FindRefWrapper
                                          onFoundRef={[Function]}
                                        >
                                          <HistoryIcon
                                            className="hsp-dropdown-icon"
                                            color="currentColor"
                                            noVerticalAlign={false}
                                            onClick={[Function]}
                                            size="sm"
                                          >
                                            <svg
                                              aria-hidden={true}
                                              aria-labelledby={null}
                                              className="hsp-dropdown-icon"
                                              fill="currentColor"
                                              height="1em"
                                              onClick={[Function]}
                                              role="img"
                                              style={
                                                Object {
                                                  "verticalAlign": "-0.125em",
                                                }
                                              }
                                              viewBox="0 0 512 512"
                                              width="1em"
                                            >
                                              <path
                                                d="M504 255.531c.253 136.64-111.18 248.372-247.82 248.468-59.015.042-113.223-20.53-155.822-54.911-11.077-8.94-11.905-25.541-1.839-35.607l11.267-11.267c8.609-8.609 22.353-9.551 31.891-1.984C173.062 425.135 212.781 440 256 440c101.705 0 184-82.311 184-184 0-101.705-82.311-184-184-184-48.814 0-93.149 18.969-126.068 49.932l50.754 50.754c10.08 10.08 2.941 27.314-11.313 27.314H24c-8.837 0-16-7.163-16-16V38.627c0-14.254 17.234-21.393 27.314-11.314l49.372 49.372C129.209 34.136 189.552 8 256 8c136.81 0 247.747 110.78 248 247.531zm-180.912 78.784l9.823-12.63c8.138-10.463 6.253-25.542-4.21-33.679L288 256.349V152c0-13.255-10.745-24-24-24h-16c-13.255 0-24 10.745-24 24v135.651l65.409 50.874c10.463 8.137 25.541 6.253 33.679-4.21z"
                                              />
                                            </svg>
                                          </HistoryIcon>
                                        </FindRefWrapper>
                                      </Popper>
                                    </Popover>
                                  </span>
                                </HistoricalProfilesPopover>
                              </Connect(HistoricalProfilesPopover)>
                            </withRouter(Connect(HistoricalProfilesPopover))>
                          </div>
                        </div>
                      </th>
                    </tr>
                  </ComparisonHeader>
                </thead>
                <tbody>
                  <tr
                    className="unexpected-row"
                    data-ouia-component-id="comparison-table-row-cpus"
                    data-ouia-component-type="PF4/TableRow"
                  >
                    <td
                      className="sticky-column fixed-column-1"
                    >
                      cpus
                    </td>
                    <td
                      className="fact-state sticky-column fixed-column-2"
                    >
                      <StateIcon
                        fact={
                          Object {
                            "name": "cpus",
                            "state": "DIFFERENT",
                            "systems": Array [
                              Object {
                                "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                "value": "4",
                              },
                              Object {
                                "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                                "value": "3",
                              },
                              Object {
                                "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                                "value": "3",
                              },
                              Object {
                                "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                                "value": "4",
                              },
                              Object {
                                "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                                "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                "value": "4",
                              },
                              Object {
                                "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                                "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                "value": "3",
                              },
                            ],
                            "tooltip": "Different - At least one system fact value in this row differs.",
                          }
                        }
                      >
                        <Tooltip
                          content={
                            <div>
                              Different - At least one system fact value in this row differs.
                            </div>
                          }
                          key="cpus-undefined"
                          position="top"
                        >
                          <Popper
                            appendTo={[Function]}
                            distance={15}
                            enableFlip={true}
                            flipBehavior={
                              Array [
                                "top",
                                "right",
                                "bottom",
                                "left",
                                "top",
                                "right",
                                "bottom",
                              ]
                            }
                            isVisible={false}
                            onBlur={[Function]}
                            onDocumentClick={false}
                            onDocumentKeyDown={[Function]}
                            onFocus={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            onTriggerEnter={[Function]}
                            placement="top"
                            popper={
                              <div
                                className="pf-c-tooltip"
                                id="pf-tooltip-28"
                                role="tooltip"
                                style={
                                  Object {
                                    "maxWidth": null,
                                    "opacity": 0,
                                    "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                  }
                                }
                              >
                                <TooltipArrow />
                                <TooltipContent
                                  isLeftAligned={false}
                                >
                                  <div>
                                    Different - At least one system fact value in this row differs.
                                  </div>
                                </TooltipContent>
                              </div>
                            }
                            popperMatchesTriggerWidth={false}
                            positionModifiers={
                              Object {
                                "bottom": "pf-m-bottom",
                                "left": "pf-m-left",
                                "right": "pf-m-right",
                                "top": "pf-m-top",
                              }
                            }
                            trigger={
                              <ExclamationCircleIcon
                                aria-describedby="pf-tooltip-28"
                                color="#C9190B"
                                height="16px"
                                noVerticalAlign={false}
                                size="sm"
                                width="16px"
                              />
                            }
                            zIndex={9999}
                          >
                            <FindRefWrapper
                              onFoundRef={[Function]}
                            >
                              <ExclamationCircleIcon
                                aria-describedby="pf-tooltip-28"
                                color="#C9190B"
                                height="16px"
                                noVerticalAlign={false}
                                size="sm"
                                width="16px"
                              >
                                <svg
                                  aria-describedby="pf-tooltip-28"
                                  aria-hidden={true}
                                  aria-labelledby={null}
                                  fill="#C9190B"
                                  height="16px"
                                  role="img"
                                  style={
                                    Object {
                                      "verticalAlign": "-0.125em",
                                    }
                                  }
                                  viewBox="0 0 512 512"
                                  width="16px"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                  />
                                </svg>
                              </ExclamationCircleIcon>
                            </FindRefWrapper>
                          </Popper>
                        </Tooltip>
                      </StateIcon>
                    </td>
                    <td
                      className="comparison-cell highlight"
                    >
                      3
                    </td>
                    <td
                      className="comparison-cell highlight"
                    >
                      4
                    </td>
                    <td
                      className="comparison-cell highlight"
                    >
                      4
                    </td>
                    <td
                      className="comparison-cell highlight"
                    >
                      4
                    </td>
                    <td
                      className="comparison-cell highlight"
                    >
                      3
                    </td>
                    <td
                      className="comparison-cell highlight"
                    >
                      3
                    </td>
                  </tr>
                  <tr
                    className=""
                    data-ouia-component-id="comparison-table-row-bios_uuid"
                    data-ouia-component-type="PF4/TableRow"
                  >
                    <td
                      className="sticky-column fixed-column-1"
                    >
                      bios_uuid
                    </td>
                    <td
                      className="fact-state sticky-column fixed-column-2"
                    >
                      <StateIcon
                        fact={
                          Object {
                            "name": "bios_uuid",
                            "state": "SAME",
                            "systems": Array [
                              Object {
                                "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                "value": "FAKE-BIOS",
                              },
                              Object {
                                "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                                "value": "FAKE-BIOS",
                              },
                              Object {
                                "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                                "value": "FAKE-BIOS",
                              },
                              Object {
                                "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                                "value": "FAKE-BIOS",
                              },
                              Object {
                                "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                                "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                "value": "FAKE-BIOS",
                              },
                              Object {
                                "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                                "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                "value": "FAKE-BIOS",
                              },
                            ],
                          }
                        }
                      >
                        <Tooltip
                          content={<div />}
                          key="bios_uuid-undefined"
                          position="top"
                        >
                          <Popper
                            appendTo={[Function]}
                            distance={15}
                            enableFlip={true}
                            flipBehavior={
                              Array [
                                "top",
                                "right",
                                "bottom",
                                "left",
                                "top",
                                "right",
                                "bottom",
                              ]
                            }
                            isVisible={false}
                            onBlur={[Function]}
                            onDocumentClick={false}
                            onDocumentKeyDown={[Function]}
                            onFocus={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            onTriggerEnter={[Function]}
                            placement="top"
                            popper={
                              <div
                                className="pf-c-tooltip"
                                id="pf-tooltip-29"
                                role="tooltip"
                                style={
                                  Object {
                                    "maxWidth": null,
                                    "opacity": 0,
                                    "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                  }
                                }
                              >
                                <TooltipArrow />
                                <TooltipContent
                                  isLeftAligned={false}
                                >
                                  <div />
                                </TooltipContent>
                              </div>
                            }
                            popperMatchesTriggerWidth={false}
                            positionModifiers={
                              Object {
                                "bottom": "pf-m-bottom",
                                "left": "pf-m-left",
                                "right": "pf-m-right",
                                "top": "pf-m-top",
                              }
                            }
                            trigger={
                              <CheckCircleIcon
                                aria-describedby="pf-tooltip-29"
                                color="#3E8635"
                                height="16px"
                                noVerticalAlign={false}
                                size="sm"
                                width="16px"
                              />
                            }
                            zIndex={9999}
                          >
                            <FindRefWrapper
                              onFoundRef={[Function]}
                            >
                              <CheckCircleIcon
                                aria-describedby="pf-tooltip-29"
                                color="#3E8635"
                                height="16px"
                                noVerticalAlign={false}
                                size="sm"
                                width="16px"
                              >
                                <svg
                                  aria-describedby="pf-tooltip-29"
                                  aria-hidden={true}
                                  aria-labelledby={null}
                                  fill="#3E8635"
                                  height="16px"
                                  role="img"
                                  style={
                                    Object {
                                      "verticalAlign": "-0.125em",
                                    }
                                  }
                                  viewBox="0 0 512 512"
                                  width="16px"
                                >
                                  <path
                                    d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                                  />
                                </svg>
                              </CheckCircleIcon>
                            </FindRefWrapper>
                          </Popper>
                        </Tooltip>
                      </StateIcon>
                    </td>
                    <td
                      className="comparison-cell"
                    >
                      FAKE-BIOS
                    </td>
                    <td
                      className="comparison-cell"
                    >
                      FAKE-BIOS
                    </td>
                    <td
                      className="comparison-cell"
                    >
                      FAKE-BIOS
                    </td>
                    <td
                      className="comparison-cell"
                    >
                      FAKE-BIOS
                    </td>
                    <td
                      className="comparison-cell"
                    >
                      FAKE-BIOS
                    </td>
                    <td
                      className="comparison-cell"
                    >
                      FAKE-BIOS
                    </td>
                  </tr>
                  <tr
                    className=""
                    data-ouia-component-id="comparison-table-row-display_name"
                    data-ouia-component-type="PF4/TableRow"
                  >
                    <td
                      className="sticky-column fixed-column-1"
                    >
                      display_name
                    </td>
                    <td
                      className="fact-state sticky-column fixed-column-2"
                    >
                      <StateIcon
                        fact={
                          Object {
                            "name": "display_name",
                            "state": "SAME",
                            "systems": Array [
                              Object {
                                "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                "value": "PC-NAME",
                              },
                              Object {
                                "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                                "value": "PC-NAME",
                              },
                              Object {
                                "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                                "value": "PC-NAME",
                              },
                              Object {
                                "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                                "value": "PC-NAME",
                              },
                              Object {
                                "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                                "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                "value": "PC-NAME",
                              },
                              Object {
                                "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                                "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                "value": "PC-NAME",
                              },
                            ],
                          }
                        }
                      >
                        <Tooltip
                          content={<div />}
                          key="display_name-undefined"
                          position="top"
                        >
                          <Popper
                            appendTo={[Function]}
                            distance={15}
                            enableFlip={true}
                            flipBehavior={
                              Array [
                                "top",
                                "right",
                                "bottom",
                                "left",
                                "top",
                                "right",
                                "bottom",
                              ]
                            }
                            isVisible={false}
                            onBlur={[Function]}
                            onDocumentClick={false}
                            onDocumentKeyDown={[Function]}
                            onFocus={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            onTriggerEnter={[Function]}
                            placement="top"
                            popper={
                              <div
                                className="pf-c-tooltip"
                                id="pf-tooltip-30"
                                role="tooltip"
                                style={
                                  Object {
                                    "maxWidth": null,
                                    "opacity": 0,
                                    "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                  }
                                }
                              >
                                <TooltipArrow />
                                <TooltipContent
                                  isLeftAligned={false}
                                >
                                  <div />
                                </TooltipContent>
                              </div>
                            }
                            popperMatchesTriggerWidth={false}
                            positionModifiers={
                              Object {
                                "bottom": "pf-m-bottom",
                                "left": "pf-m-left",
                                "right": "pf-m-right",
                                "top": "pf-m-top",
                              }
                            }
                            trigger={
                              <CheckCircleIcon
                                aria-describedby="pf-tooltip-30"
                                color="#3E8635"
                                height="16px"
                                noVerticalAlign={false}
                                size="sm"
                                width="16px"
                              />
                            }
                            zIndex={9999}
                          >
                            <FindRefWrapper
                              onFoundRef={[Function]}
                            >
                              <CheckCircleIcon
                                aria-describedby="pf-tooltip-30"
                                color="#3E8635"
                                height="16px"
                                noVerticalAlign={false}
                                size="sm"
                                width="16px"
                              >
                                <svg
                                  aria-describedby="pf-tooltip-30"
                                  aria-hidden={true}
                                  aria-labelledby={null}
                                  fill="#3E8635"
                                  height="16px"
                                  role="img"
                                  style={
                                    Object {
                                      "verticalAlign": "-0.125em",
                                    }
                                  }
                                  viewBox="0 0 512 512"
                                  width="16px"
                                >
                                  <path
                                    d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                                  />
                                </svg>
                              </CheckCircleIcon>
                            </FindRefWrapper>
                          </Popper>
                        </Tooltip>
                      </StateIcon>
                    </td>
                    <td
                      className="comparison-cell"
                    >
                      PC-NAME
                    </td>
                    <td
                      className="comparison-cell"
                    >
                      PC-NAME
                    </td>
                    <td
                      className="comparison-cell"
                    >
                      PC-NAME
                    </td>
                    <td
                      className="comparison-cell"
                    >
                      PC-NAME
                    </td>
                    <td
                      className="comparison-cell"
                    >
                      PC-NAME
                    </td>
                    <td
                      className="comparison-cell"
                    >
                      PC-NAME
                    </td>
                  </tr>
                  <tr
                    data-ouia-component-id="comparison-table-row-cpu_flags"
                    data-ouia-component-type="PF4/TableRow"
                  >
                    <td
                      className="nested-fact sticky-column fixed-column-1"
                    >
                      <AngleDownIcon
                        className="carat-margin pointer active-bluenull"
                        color="currentColor"
                        data-ouia-component-id="expand-category-button-cpu_flags"
                        data-ouia-component-type="PF4/Button"
                        noVerticalAlign={false}
                        onClick={[Function]}
                        size="sm"
                      >
                        <svg
                          aria-hidden={true}
                          aria-labelledby={null}
                          className="carat-margin pointer active-bluenull"
                          data-ouia-component-id="expand-category-button-cpu_flags"
                          data-ouia-component-type="PF4/Button"
                          fill="currentColor"
                          height="1em"
                          onClick={[Function]}
                          role="img"
                          style={
                            Object {
                              "verticalAlign": "-0.125em",
                            }
                          }
                          viewBox="0 0 320 512"
                          width="1em"
                        >
                          <path
                            d="M143 352.3L7 216.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.2 9.4-24.4 9.4-33.8 0z"
                          />
                        </svg>
                      </AngleDownIcon>
                       
                      cpu_flags
                    </td>
                    <td
                      className="fact-state sticky-column fixed-column-2"
                    >
                      <StateIcon
                        fact={
                          Object {
                            "comparisons": Array [
                              Object {
                                "name": "abm",
                                "state": "SAME",
                                "systems": Array [
                                  Object {
                                    "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                    "value": "enabled",
                                  },
                                  Object {
                                    "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                                    "value": "enabled",
                                  },
                                  Object {
                                    "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                                    "value": "enabled",
                                  },
                                  Object {
                                    "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                                    "value": "enabled",
                                  },
                                  Object {
                                    "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                                    "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                    "value": "enabled",
                                  },
                                  Object {
                                    "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                                    "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                    "value": "enabled",
                                  },
                                ],
                              },
                              Object {
                                "name": "adx",
                                "state": "INCOMPLETE_DATA",
                                "systems": Array [
                                  Object {
                                    "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                    "value": "disabled",
                                  },
                                  Object {
                                    "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                                    "value": undefined,
                                  },
                                  Object {
                                    "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                                    "value": "disabled",
                                  },
                                  Object {
                                    "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                                    "value": undefined,
                                  },
                                  Object {
                                    "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                                    "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                    "value": "disabled",
                                  },
                                  Object {
                                    "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                                    "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                    "value": "disabled",
                                  },
                                ],
                              },
                              Object {
                                "multivalues": Array [
                                  Object {
                                    "state": "SAME",
                                    "systems": Array [
                                      Object {
                                        "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                        "value": "blah1",
                                      },
                                      Object {
                                        "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                                        "value": "blah1",
                                      },
                                      Object {
                                        "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                                        "value": "blah1",
                                      },
                                      Object {
                                        "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                                        "value": "blah1",
                                      },
                                      Object {
                                        "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                                        "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                        "value": "blah1",
                                      },
                                      Object {
                                        "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                                        "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                        "value": "blah1",
                                      },
                                    ],
                                  },
                                  Object {
                                    "state": "INCOMPLETE_DATA",
                                    "systems": Array [
                                      Object {
                                        "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                        "value": undefined,
                                      },
                                      Object {
                                        "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                                        "value": "blah2",
                                      },
                                      Object {
                                        "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                                        "value": "blah2",
                                      },
                                      Object {
                                        "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                                        "value": "blah2",
                                      },
                                      Object {
                                        "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                                        "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                        "value": undefined,
                                      },
                                      Object {
                                        "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                                        "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                ],
                                "name": "abc",
                                "state": "INCOMPLETE_DATA",
                              },
                            ],
                            "name": "cpu_flags",
                            "state": "DIFFERENT",
                          }
                        }
                        stateSort={null}
                      >
                        <Tooltip
                          content={<div />}
                          key="cpu_flags-null"
                          position="top"
                        >
                          <Popper
                            appendTo={[Function]}
                            distance={15}
                            enableFlip={true}
                            flipBehavior={
                              Array [
                                "top",
                                "right",
                                "bottom",
                                "left",
                                "top",
                                "right",
                                "bottom",
                              ]
                            }
                            isVisible={false}
                            onBlur={[Function]}
                            onDocumentClick={false}
                            onDocumentKeyDown={[Function]}
                            onFocus={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            onTriggerEnter={[Function]}
                            placement="top"
                            popper={
                              <div
                                className="pf-c-tooltip"
                                id="pf-tooltip-31"
                                role="tooltip"
                                style={
                                  Object {
                                    "maxWidth": null,
                                    "opacity": 0,
                                    "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                  }
                                }
                              >
                                <TooltipArrow />
                                <TooltipContent
                                  isLeftAligned={false}
                                >
                                  <div />
                                </TooltipContent>
                              </div>
                            }
                            popperMatchesTriggerWidth={false}
                            positionModifiers={
                              Object {
                                "bottom": "pf-m-bottom",
                                "left": "pf-m-left",
                                "right": "pf-m-right",
                                "top": "pf-m-top",
                              }
                            }
                            trigger={
                              <ExclamationCircleIcon
                                aria-describedby="pf-tooltip-31"
                                color="#C9190B"
                                height="16px"
                                noVerticalAlign={false}
                                size="sm"
                                width="16px"
                              />
                            }
                            zIndex={9999}
                          >
                            <FindRefWrapper
                              onFoundRef={[Function]}
                            >
                              <ExclamationCircleIcon
                                aria-describedby="pf-tooltip-31"
                                color="#C9190B"
                                height="16px"
                                noVerticalAlign={false}
                                size="sm"
                                width="16px"
                              >
                                <svg
                                  aria-describedby="pf-tooltip-31"
                                  aria-hidden={true}
                                  aria-labelledby={null}
                                  fill="#C9190B"
                                  height="16px"
                                  role="img"
                                  style={
                                    Object {
                                      "verticalAlign": "-0.125em",
                                    }
                                  }
                                  viewBox="0 0 512 512"
                                  width="16px"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                  />
                                </svg>
                              </ExclamationCircleIcon>
                            </FindRefWrapper>
                          </Popper>
                        </Tooltip>
                      </StateIcon>
                    </td>
                    <td
                      className="comparison-cell"
                    />
                    <td
                      className="comparison-cell"
                    />
                    <td
                      className="comparison-cell"
                    />
                    <td
                      className="comparison-cell"
                    />
                    <td
                      className="comparison-cell"
                    />
                    <td
                      className="comparison-cell"
                    />
                  </tr>
                  <tr
                    category="cpu_flags"
                    className=""
                    data-ouia-component-id="comparison-table-row-abm"
                    data-ouia-component-type="PF4/TableRow"
                  >
                    <td
                      className="nested-fact sticky-column fixed-column-1"
                    >
                      <p
                        className="child-row"
                      >
                        abm
                      </p>
                    </td>
                    <td
                      className="fact-state sticky-column fixed-column-2"
                    >
                      <StateIcon
                        fact={
                          Object {
                            "name": "abm",
                            "state": "SAME",
                            "systems": Array [
                              Object {
                                "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                "value": "enabled",
                              },
                              Object {
                                "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                                "value": "enabled",
                              },
                              Object {
                                "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                                "value": "enabled",
                              },
                              Object {
                                "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                                "value": "enabled",
                              },
                              Object {
                                "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                                "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                "value": "enabled",
                              },
                              Object {
                                "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                                "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                "value": "enabled",
                              },
                            ],
                          }
                        }
                      >
                        <Tooltip
                          content={<div />}
                          key="abm-undefined"
                          position="top"
                        >
                          <Popper
                            appendTo={[Function]}
                            distance={15}
                            enableFlip={true}
                            flipBehavior={
                              Array [
                                "top",
                                "right",
                                "bottom",
                                "left",
                                "top",
                                "right",
                                "bottom",
                              ]
                            }
                            isVisible={false}
                            onBlur={[Function]}
                            onDocumentClick={false}
                            onDocumentKeyDown={[Function]}
                            onFocus={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            onTriggerEnter={[Function]}
                            placement="top"
                            popper={
                              <div
                                className="pf-c-tooltip"
                                id="pf-tooltip-32"
                                role="tooltip"
                                style={
                                  Object {
                                    "maxWidth": null,
                                    "opacity": 0,
                                    "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                  }
                                }
                              >
                                <TooltipArrow />
                                <TooltipContent
                                  isLeftAligned={false}
                                >
                                  <div />
                                </TooltipContent>
                              </div>
                            }
                            popperMatchesTriggerWidth={false}
                            positionModifiers={
                              Object {
                                "bottom": "pf-m-bottom",
                                "left": "pf-m-left",
                                "right": "pf-m-right",
                                "top": "pf-m-top",
                              }
                            }
                            trigger={
                              <CheckCircleIcon
                                aria-describedby="pf-tooltip-32"
                                color="#3E8635"
                                height="16px"
                                noVerticalAlign={false}
                                size="sm"
                                width="16px"
                              />
                            }
                            zIndex={9999}
                          >
                            <FindRefWrapper
                              onFoundRef={[Function]}
                            >
                              <CheckCircleIcon
                                aria-describedby="pf-tooltip-32"
                                color="#3E8635"
                                height="16px"
                                noVerticalAlign={false}
                                size="sm"
                                width="16px"
                              >
                                <svg
                                  aria-describedby="pf-tooltip-32"
                                  aria-hidden={true}
                                  aria-labelledby={null}
                                  fill="#3E8635"
                                  height="16px"
                                  role="img"
                                  style={
                                    Object {
                                      "verticalAlign": "-0.125em",
                                    }
                                  }
                                  viewBox="0 0 512 512"
                                  width="16px"
                                >
                                  <path
                                    d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                                  />
                                </svg>
                              </CheckCircleIcon>
                            </FindRefWrapper>
                          </Popper>
                        </Tooltip>
                      </StateIcon>
                    </td>
                    <td
                      className="comparison-cell"
                    >
                      enabled
                    </td>
                    <td
                      className="comparison-cell"
                    >
                      enabled
                    </td>
                    <td
                      className="comparison-cell"
                    >
                      enabled
                    </td>
                    <td
                      className="comparison-cell"
                    >
                      enabled
                    </td>
                    <td
                      className="comparison-cell"
                    >
                      enabled
                    </td>
                    <td
                      className="comparison-cell"
                    >
                      enabled
                    </td>
                  </tr>
                  <tr
                    category="cpu_flags"
                    className=""
                    data-ouia-component-id="comparison-table-row-adx"
                    data-ouia-component-type="PF4/TableRow"
                  >
                    <td
                      className="nested-fact sticky-column fixed-column-1"
                    >
                      <p
                        className="child-row"
                      >
                        adx
                      </p>
                    </td>
                    <td
                      className="fact-state sticky-column fixed-column-2"
                    >
                      <StateIcon
                        fact={
                          Object {
                            "name": "adx",
                            "state": "INCOMPLETE_DATA",
                            "systems": Array [
                              Object {
                                "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                "value": "disabled",
                              },
                              Object {
                                "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                                "value": undefined,
                              },
                              Object {
                                "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                                "value": "disabled",
                              },
                              Object {
                                "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                                "value": undefined,
                              },
                              Object {
                                "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                                "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                "value": "disabled",
                              },
                              Object {
                                "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                                "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                "value": "disabled",
                              },
                            ],
                          }
                        }
                      >
                        <Tooltip
                          content={<div />}
                          key="adx-undefined"
                          position="top"
                        >
                          <Popper
                            appendTo={[Function]}
                            distance={15}
                            enableFlip={true}
                            flipBehavior={
                              Array [
                                "top",
                                "right",
                                "bottom",
                                "left",
                                "top",
                                "right",
                                "bottom",
                              ]
                            }
                            isVisible={false}
                            onBlur={[Function]}
                            onDocumentClick={false}
                            onDocumentKeyDown={[Function]}
                            onFocus={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            onTriggerEnter={[Function]}
                            placement="top"
                            popper={
                              <div
                                className="pf-c-tooltip"
                                id="pf-tooltip-33"
                                role="tooltip"
                                style={
                                  Object {
                                    "maxWidth": null,
                                    "opacity": 0,
                                    "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                  }
                                }
                              >
                                <TooltipArrow />
                                <TooltipContent
                                  isLeftAligned={false}
                                >
                                  <div />
                                </TooltipContent>
                              </div>
                            }
                            popperMatchesTriggerWidth={false}
                            positionModifiers={
                              Object {
                                "bottom": "pf-m-bottom",
                                "left": "pf-m-left",
                                "right": "pf-m-right",
                                "top": "pf-m-top",
                              }
                            }
                            trigger={
                              <QuestionCircleIcon
                                aria-describedby="pf-tooltip-33"
                                color="#151515"
                                height="16px"
                                noVerticalAlign={false}
                                size="sm"
                                width="16px"
                              />
                            }
                            zIndex={9999}
                          >
                            <FindRefWrapper
                              onFoundRef={[Function]}
                            >
                              <QuestionCircleIcon
                                aria-describedby="pf-tooltip-33"
                                color="#151515"
                                height="16px"
                                noVerticalAlign={false}
                                size="sm"
                                width="16px"
                              >
                                <svg
                                  aria-describedby="pf-tooltip-33"
                                  aria-hidden={true}
                                  aria-labelledby={null}
                                  fill="#151515"
                                  height="16px"
                                  role="img"
                                  style={
                                    Object {
                                      "verticalAlign": "-0.125em",
                                    }
                                  }
                                  viewBox="0 0 512 512"
                                  width="16px"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                  />
                                </svg>
                              </QuestionCircleIcon>
                            </FindRefWrapper>
                          </Popper>
                        </Tooltip>
                      </StateIcon>
                    </td>
                    <td
                      className="comparison-cell"
                    >
                      disabled
                    </td>
                    <td
                      className="comparison-cell"
                    />
                    <td
                      className="comparison-cell"
                    >
                      disabled
                    </td>
                    <td
                      className="comparison-cell"
                    >
                      disabled
                    </td>
                    <td
                      className="comparison-cell"
                    >
                      disabled
                    </td>
                    <td
                      className="comparison-cell"
                    />
                  </tr>
                  <tr
                    category="cpu_flags"
                    className=""
                    data-ouia-component-id="comparison-table-row-abc"
                    data-ouia-component-type="PF4/TableRow"
                  >
                    <td
                      className="nested-fact sticky-column fixed-column-1"
                    >
                      <AngleDownIcon
                        className="carat-margin pointer active-blue child-row"
                        color="currentColor"
                        data-ouia-component-id="expand-category-button-abc"
                        data-ouia-component-type="PF4/Button"
                        noVerticalAlign={false}
                        onClick={[Function]}
                        size="sm"
                      >
                        <svg
                          aria-hidden={true}
                          aria-labelledby={null}
                          className="carat-margin pointer active-blue child-row"
                          data-ouia-component-id="expand-category-button-abc"
                          data-ouia-component-type="PF4/Button"
                          fill="currentColor"
                          height="1em"
                          onClick={[Function]}
                          role="img"
                          style={
                            Object {
                              "verticalAlign": "-0.125em",
                            }
                          }
                          viewBox="0 0 320 512"
                          width="1em"
                        >
                          <path
                            d="M143 352.3L7 216.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.2 9.4-24.4 9.4-33.8 0z"
                          />
                        </svg>
                      </AngleDownIcon>
                       
                      abc
                    </td>
                    <td
                      className="fact-state sticky-column fixed-column-2"
                    >
                      <StateIcon
                        fact={
                          Object {
                            "multivalues": Array [
                              Object {
                                "state": "SAME",
                                "systems": Array [
                                  Object {
                                    "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                    "value": "blah1",
                                  },
                                  Object {
                                    "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                                    "value": "blah1",
                                  },
                                  Object {
                                    "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                                    "value": "blah1",
                                  },
                                  Object {
                                    "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                                    "value": "blah1",
                                  },
                                  Object {
                                    "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                                    "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                    "value": "blah1",
                                  },
                                  Object {
                                    "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                                    "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                    "value": "blah1",
                                  },
                                ],
                              },
                              Object {
                                "state": "INCOMPLETE_DATA",
                                "systems": Array [
                                  Object {
                                    "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                    "value": undefined,
                                  },
                                  Object {
                                    "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                                    "value": "blah2",
                                  },
                                  Object {
                                    "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                                    "value": "blah2",
                                  },
                                  Object {
                                    "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                                    "value": "blah2",
                                  },
                                  Object {
                                    "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                                    "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                    "value": undefined,
                                  },
                                  Object {
                                    "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                                    "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                    "value": undefined,
                                  },
                                ],
                              },
                            ],
                            "name": "abc",
                            "state": "INCOMPLETE_DATA",
                          }
                        }
                        stateSort={null}
                      >
                        <Tooltip
                          content={<div />}
                          key="abc-null"
                          position="top"
                        >
                          <Popper
                            appendTo={[Function]}
                            distance={15}
                            enableFlip={true}
                            flipBehavior={
                              Array [
                                "top",
                                "right",
                                "bottom",
                                "left",
                                "top",
                                "right",
                                "bottom",
                              ]
                            }
                            isVisible={false}
                            onBlur={[Function]}
                            onDocumentClick={false}
                            onDocumentKeyDown={[Function]}
                            onFocus={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            onTriggerEnter={[Function]}
                            placement="top"
                            popper={
                              <div
                                className="pf-c-tooltip"
                                id="pf-tooltip-34"
                                role="tooltip"
                                style={
                                  Object {
                                    "maxWidth": null,
                                    "opacity": 0,
                                    "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                  }
                                }
                              >
                                <TooltipArrow />
                                <TooltipContent
                                  isLeftAligned={false}
                                >
                                  <div />
                                </TooltipContent>
                              </div>
                            }
                            popperMatchesTriggerWidth={false}
                            positionModifiers={
                              Object {
                                "bottom": "pf-m-bottom",
                                "left": "pf-m-left",
                                "right": "pf-m-right",
                                "top": "pf-m-top",
                              }
                            }
                            trigger={
                              <QuestionCircleIcon
                                aria-describedby="pf-tooltip-34"
                                color="#151515"
                                height="16px"
                                noVerticalAlign={false}
                                size="sm"
                                width="16px"
                              />
                            }
                            zIndex={9999}
                          >
                            <FindRefWrapper
                              onFoundRef={[Function]}
                            >
                              <QuestionCircleIcon
                                aria-describedby="pf-tooltip-34"
                                color="#151515"
                                height="16px"
                                noVerticalAlign={false}
                                size="sm"
                                width="16px"
                              >
                                <svg
                                  aria-describedby="pf-tooltip-34"
                                  aria-hidden={true}
                                  aria-labelledby={null}
                                  fill="#151515"
                                  height="16px"
                                  role="img"
                                  style={
                                    Object {
                                      "verticalAlign": "-0.125em",
                                    }
                                  }
                                  viewBox="0 0 512 512"
                                  width="16px"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                  />
                                </svg>
                              </QuestionCircleIcon>
                            </FindRefWrapper>
                          </Popper>
                        </Tooltip>
                      </StateIcon>
                    </td>
                    <td
                      className="comparison-cell"
                    />
                    <td
                      className="comparison-cell"
                    />
                    <td
                      className="comparison-cell"
                    />
                    <td
                      className="comparison-cell"
                    />
                    <td
                      className="comparison-cell"
                    />
                    <td
                      className="comparison-cell"
                    />
                  </tr>
                  <tr
                    className=""
                    data-ouia-component-id="comparison-table-row-multivalue-abc-blah1"
                    data-ouia-component-type="PF4/TableRow"
                  >
                    <td
                      className="nested-fact sticky-column fixed-column-1"
                    >
                      <p
                        className="child-row"
                      />
                    </td>
                    <td
                      className="fact-state sticky-column fixed-column-2"
                    >
                      <StateIcon
                        fact={
                          Object {
                            "state": "SAME",
                            "systems": Array [
                              Object {
                                "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                "value": "blah1",
                              },
                              Object {
                                "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                                "value": "blah1",
                              },
                              Object {
                                "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                                "value": "blah1",
                              },
                              Object {
                                "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                                "value": "blah1",
                              },
                              Object {
                                "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                                "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                "value": "blah1",
                              },
                              Object {
                                "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                                "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                "value": "blah1",
                              },
                            ],
                          }
                        }
                      >
                        <Tooltip
                          content={<div />}
                          key="undefined-undefined"
                          position="top"
                        >
                          <Popper
                            appendTo={[Function]}
                            distance={15}
                            enableFlip={true}
                            flipBehavior={
                              Array [
                                "top",
                                "right",
                                "bottom",
                                "left",
                                "top",
                                "right",
                                "bottom",
                              ]
                            }
                            isVisible={false}
                            onBlur={[Function]}
                            onDocumentClick={false}
                            onDocumentKeyDown={[Function]}
                            onFocus={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            onTriggerEnter={[Function]}
                            placement="top"
                            popper={
                              <div
                                className="pf-c-tooltip"
                                id="pf-tooltip-35"
                                role="tooltip"
                                style={
                                  Object {
                                    "maxWidth": null,
                                    "opacity": 0,
                                    "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                  }
                                }
                              >
                                <TooltipArrow />
                                <TooltipContent
                                  isLeftAligned={false}
                                >
                                  <div />
                                </TooltipContent>
                              </div>
                            }
                            popperMatchesTriggerWidth={false}
                            positionModifiers={
                              Object {
                                "bottom": "pf-m-bottom",
                                "left": "pf-m-left",
                                "right": "pf-m-right",
                                "top": "pf-m-top",
                              }
                            }
                            trigger={
                              <CheckCircleIcon
                                aria-describedby="pf-tooltip-35"
                                color="#3E8635"
                                height="16px"
                                noVerticalAlign={false}
                                size="sm"
                                width="16px"
                              />
                            }
                            zIndex={9999}
                          >
                            <FindRefWrapper
                              onFoundRef={[Function]}
                            >
                              <CheckCircleIcon
                                aria-describedby="pf-tooltip-35"
                                color="#3E8635"
                                height="16px"
                                noVerticalAlign={false}
                                size="sm"
                                width="16px"
                              >
                                <svg
                                  aria-describedby="pf-tooltip-35"
                                  aria-hidden={true}
                                  aria-labelledby={null}
                                  fill="#3E8635"
                                  height="16px"
                                  role="img"
                                  style={
                                    Object {
                                      "verticalAlign": "-0.125em",
                                    }
                                  }
                                  viewBox="0 0 512 512"
                                  width="16px"
                                >
                                  <path
                                    d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                                  />
                                </svg>
                              </CheckCircleIcon>
                            </FindRefWrapper>
                          </Popper>
                        </Tooltip>
                      </StateIcon>
                    </td>
                    <td
                      className="comparison-cell"
                    >
                      blah1
                    </td>
                    <td
                      className="comparison-cell"
                    >
                      blah1
                    </td>
                    <td
                      className="comparison-cell"
                    >
                      blah1
                    </td>
                    <td
                      className="comparison-cell"
                    >
                      blah1
                    </td>
                    <td
                      className="comparison-cell"
                    >
                      blah1
                    </td>
                    <td
                      className="comparison-cell"
                    >
                      blah1
                    </td>
                  </tr>
                  <tr
                    className=""
                    data-ouia-component-id="comparison-table-row-multivalue-abc-undefined"
                    data-ouia-component-type="PF4/TableRow"
                  >
                    <td
                      className="nested-fact sticky-column fixed-column-1"
                    >
                      <p
                        className="child-row"
                      />
                    </td>
                    <td
                      className="fact-state sticky-column fixed-column-2"
                    >
                      <StateIcon
                        fact={
                          Object {
                            "state": "INCOMPLETE_DATA",
                            "systems": Array [
                              Object {
                                "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                "value": undefined,
                              },
                              Object {
                                "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                                "value": "blah2",
                              },
                              Object {
                                "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                                "value": "blah2",
                              },
                              Object {
                                "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                                "value": "blah2",
                              },
                              Object {
                                "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                                "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                "value": undefined,
                              },
                              Object {
                                "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                                "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                "value": undefined,
                              },
                            ],
                          }
                        }
                      >
                        <Tooltip
                          content={<div />}
                          key="undefined-undefined"
                          position="top"
                        >
                          <Popper
                            appendTo={[Function]}
                            distance={15}
                            enableFlip={true}
                            flipBehavior={
                              Array [
                                "top",
                                "right",
                                "bottom",
                                "left",
                                "top",
                                "right",
                                "bottom",
                              ]
                            }
                            isVisible={false}
                            onBlur={[Function]}
                            onDocumentClick={false}
                            onDocumentKeyDown={[Function]}
                            onFocus={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            onTriggerEnter={[Function]}
                            placement="top"
                            popper={
                              <div
                                className="pf-c-tooltip"
                                id="pf-tooltip-36"
                                role="tooltip"
                                style={
                                  Object {
                                    "maxWidth": null,
                                    "opacity": 0,
                                    "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                  }
                                }
                              >
                                <TooltipArrow />
                                <TooltipContent
                                  isLeftAligned={false}
                                >
                                  <div />
                                </TooltipContent>
                              </div>
                            }
                            popperMatchesTriggerWidth={false}
                            positionModifiers={
                              Object {
                                "bottom": "pf-m-bottom",
                                "left": "pf-m-left",
                                "right": "pf-m-right",
                                "top": "pf-m-top",
                              }
                            }
                            trigger={
                              <QuestionCircleIcon
                                aria-describedby="pf-tooltip-36"
                                color="#151515"
                                height="16px"
                                noVerticalAlign={false}
                                size="sm"
                                width="16px"
                              />
                            }
                            zIndex={9999}
                          >
                            <FindRefWrapper
                              onFoundRef={[Function]}
                            >
                              <QuestionCircleIcon
                                aria-describedby="pf-tooltip-36"
                                color="#151515"
                                height="16px"
                                noVerticalAlign={false}
                                size="sm"
                                width="16px"
                              >
                                <svg
                                  aria-describedby="pf-tooltip-36"
                                  aria-hidden={true}
                                  aria-labelledby={null}
                                  fill="#151515"
                                  height="16px"
                                  role="img"
                                  style={
                                    Object {
                                      "verticalAlign": "-0.125em",
                                    }
                                  }
                                  viewBox="0 0 512 512"
                                  width="16px"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                  />
                                </svg>
                              </QuestionCircleIcon>
                            </FindRefWrapper>
                          </Popper>
                        </Tooltip>
                      </StateIcon>
                    </td>
                    <td
                      className="comparison-cell"
                    >
                      blah2
                    </td>
                    <td
                      className="comparison-cell"
                    >
                      blah2
                    </td>
                    <td
                      className="comparison-cell"
                    />
                    <td
                      className="comparison-cell"
                    />
                    <td
                      className="comparison-cell"
                    />
                    <td
                      className="comparison-cell"
                    >
                      blah2
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
          </DriftTable>
        </Connect(DriftTable)>
      </withRouter(Connect(DriftTable))>
    </Provider>
  </Router>
</MemoryRouter>
`;

exports[`ConnectedDriftTable should render systems, baselines and historicalProfiles 1`] = `
<MemoryRouter
  keyLength={0}
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <withRouter(Connect(DriftTable))
        baselines={
          Array [
            Object {
              "display_name": "baseline1",
              "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
              "last_updated": "2019-01-15T14:53:15.886891Z",
              "type": "baseline",
            },
            Object {
              "display_name": "baseline2",
              "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
              "last_updated": "2019-01-15T15:25:16.304899Z",
              "type": "baseline",
            },
          ]
        }
        historicalProfiles={
          Array [
            Object {
              "display_name": "system1",
              "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
              "last_updated": "2019-01-15T14:53:15.886891Z",
              "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
              "type": "historical-system-profile",
            },
            Object {
              "display_name": "system1",
              "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
              "last_updated": "2019-01-15T15:25:16.304899Z",
              "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
              "type": "historical-system-profile",
            },
          ]
        }
        systems={
          Array [
            Object {
              "display_name": "sgi-xe500-01.rhts.eng.bos.redhat.com",
              "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
              "last_updated": "2019-01-15T14:53:15.886891Z",
              "type": "system",
            },
            Object {
              "display_name": "ibm-x3650m4-03-vm03.lab.eng.brq.redhat.com",
              "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
              "last_updated": "2019-01-15T15:25:16.304899Z",
              "type": "system",
            },
          ]
        }
        updateReferenceId={
          [MockFunction] {
            "calls": Array [
              Array [
                undefined,
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          }
        }
      >
        <Connect(DriftTable)
          baselines={
            Array [
              Object {
                "display_name": "baseline1",
                "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                "last_updated": "2019-01-15T14:53:15.886891Z",
                "type": "baseline",
              },
              Object {
                "display_name": "baseline2",
                "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                "last_updated": "2019-01-15T15:25:16.304899Z",
                "type": "baseline",
              },
            ]
          }
          historicalProfiles={
            Array [
              Object {
                "display_name": "system1",
                "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                "last_updated": "2019-01-15T14:53:15.886891Z",
                "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                "type": "historical-system-profile",
              },
              Object {
                "display_name": "system1",
                "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                "last_updated": "2019-01-15T15:25:16.304899Z",
                "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                "type": "historical-system-profile",
              },
            ]
          }
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "canGo": [Function],
              "createHref": [Function],
              "entries": Array [
                Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              ],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "index": 0,
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
          location={
            Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            }
          }
          match={
            Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            }
          }
          systems={
            Array [
              Object {
                "display_name": "sgi-xe500-01.rhts.eng.bos.redhat.com",
                "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                "last_updated": "2019-01-15T14:53:15.886891Z",
                "type": "system",
              },
              Object {
                "display_name": "ibm-x3650m4-03-vm03.lab.eng.brq.redhat.com",
                "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                "last_updated": "2019-01-15T15:25:16.304899Z",
                "type": "system",
              },
            ]
          }
          updateReferenceId={
            [MockFunction] {
              "calls": Array [
                Array [
                  undefined,
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            }
          }
        >
          <DriftTable
            addSystemModalOpened={false}
            baselines={
              Array [
                Object {
                  "display_name": "baseline1",
                  "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                  "last_updated": "2019-01-15T14:53:15.886891Z",
                  "type": "baseline",
                },
                Object {
                  "display_name": "baseline2",
                  "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                  "last_updated": "2019-01-15T15:25:16.304899Z",
                  "type": "baseline",
                },
              ]
            }
            emptyState={false}
            expandRow={[Function]}
            expandedRows={Array []}
            fetchCompare={[Function]}
            filteredCompareData={
              Array [
                Object {
                  "name": "cpus",
                  "state": "DIFFERENT",
                  "systems": Array [
                    Object {
                      "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                      "value": "4",
                    },
                    Object {
                      "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                      "value": "3",
                    },
                  ],
                  "tooltip": "Different - At least one system fact value in this row differs.",
                },
                Object {
                  "name": "bios_uuid",
                  "state": "SAME",
                  "systems": Array [
                    Object {
                      "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                      "value": "FAKE-BIOS",
                    },
                    Object {
                      "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                      "value": "FAKE-BIOS",
                    },
                  ],
                },
                Object {
                  "name": "display_name",
                  "state": "SAME",
                  "systems": Array [
                    Object {
                      "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                      "value": "PC-NAME",
                    },
                    Object {
                      "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                      "value": "PC-NAME",
                    },
                  ],
                },
              ]
            }
            fullCompareData={
              Array [
                Object {
                  "name": "cpus",
                  "state": "DIFFERENT",
                  "systems": Array [
                    Object {
                      "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                      "value": "4",
                    },
                    Object {
                      "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                      "value": "3",
                    },
                  ],
                  "tooltip": "Different - At least one system fact value in this row differs.",
                },
                Object {
                  "name": "bios_uuid",
                  "state": "SAME",
                  "systems": Array [
                    Object {
                      "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                      "value": "FAKE-BIOS",
                    },
                    Object {
                      "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                      "value": "FAKE-BIOS",
                    },
                  ],
                },
                Object {
                  "name": "display_name",
                  "state": "SAME",
                  "systems": Array [
                    Object {
                      "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                      "value": "PC-NAME",
                    },
                    Object {
                      "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                      "value": "PC-NAME",
                    },
                  ],
                },
              ]
            }
            historicalProfiles={
              Array [
                Object {
                  "display_name": "system1",
                  "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                  "last_updated": "2019-01-15T14:53:15.886891Z",
                  "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                  "type": "historical-system-profile",
                },
                Object {
                  "display_name": "system1",
                  "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                  "last_updated": "2019-01-15T15:25:16.304899Z",
                  "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                  "type": "historical-system-profile",
                },
              ]
            }
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            loading={false}
            location={
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              }
            }
            match={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
            selectHistoricProfiles={[Function]}
            setSelectedBaselines={[Function]}
            systems={
              Array [
                Object {
                  "display_name": "sgi-xe500-01.rhts.eng.bos.redhat.com",
                  "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                  "last_updated": "2019-01-15T14:53:15.886891Z",
                  "type": "system",
                },
                Object {
                  "display_name": "ibm-x3650m4-03-vm03.lab.eng.brq.redhat.com",
                  "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                  "last_updated": "2019-01-15T15:25:16.304899Z",
                  "type": "system",
                },
              ]
            }
            toggleFactSort={[Function]}
            toggleStateSort={[Function]}
            updateReferenceId={
              [MockFunction] {
                "calls": Array [
                  Array [
                    undefined,
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              }
            }
          >
            <Connect(AddSystemModal)
              confirmModal={[Function]}
              selectedSystemIds={
                Array [
                  "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                  "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                ]
              }
            >
              <AddSystemModal
                addSystemModalOpened={false}
                confirmModal={[Function]}
                selectActiveTab={[Function]}
                selectBaseline={[Function]}
                selectHistoricProfiles={[Function]}
                selectedBaselineIds={Array []}
                selectedHSPIds={Array []}
                selectedSystemIds={
                  Array [
                    "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                    "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                  ]
                }
                setSelectedSystemIds={[Function]}
                toggleAddSystemModal={[Function]}
              >
                <Modal
                  actions={
                    Array [
                      <Button
                        isDisabled={false}
                        onClick={[Function]}
                        ouiaId="add-to-comparison-submit-button"
                        variant="primary"
                      >
                        Submit
                      </Button>,
                      <Button
                        onClick={[Function]}
                        ouiaId="add-to-comparison-cancel-button"
                        variant="link"
                      >
                        Cancel
                      </Button>,
                    ]
                  }
                  appendTo={[Function]}
                  aria-describedby=""
                  aria-label=""
                  aria-labelledby=""
                  className="drift"
                  hasNoBodyWrapper={false}
                  isOpen={false}
                  onClose={[Function]}
                  ouiaId="add-to-comparison-modal"
                  ouiaSafe={true}
                  showClose={true}
                  title="Add to comparison"
                  titleIconVariant={null}
                  titleLabel=""
                  variant="default"
                  width="950px"
                >
                  <Portal
                    containerInfo={<div />}
                  >
                    <ModalContent
                      actions={
                        Array [
                          <Button
                            isDisabled={false}
                            onClick={[Function]}
                            ouiaId="add-to-comparison-submit-button"
                            variant="primary"
                          >
                            Submit
                          </Button>,
                          <Button
                            onClick={[Function]}
                            ouiaId="add-to-comparison-cancel-button"
                            variant="link"
                          >
                            Cancel
                          </Button>,
                        ]
                      }
                      aria-describedby=""
                      aria-label=""
                      aria-labelledby=""
                      boxId="pf-modal-part-1"
                      className="drift"
                      descriptorId="pf-modal-part-3"
                      hasNoBodyWrapper={false}
                      isOpen={false}
                      labelId="pf-modal-part-2"
                      onClose={[Function]}
                      ouiaId="add-to-comparison-modal"
                      ouiaSafe={true}
                      showClose={true}
                      title="Add to comparison"
                      titleIconVariant={null}
                      titleLabel=""
                      variant="default"
                      width="950px"
                    />
                  </Portal>
                </Modal>
              </AddSystemModal>
            </Connect(AddSystemModal)>
            <div
              className="drift-table-wrapper"
            >
              <table
                className="pf-c-table pf-m-compact drift-table"
                data-ouia-component-id="comparison-table"
                data-ouia-component-type="PF4/Table"
              >
                <thead>
                  <ComparisonHeader
                    fetchCompare={[Function]}
                    masterList={
                      Array [
                        Object {
                          "display_name": "baseline1",
                          "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                          "last_updated": "2019-01-15T14:53:15.886891Z",
                          "type": "baseline",
                        },
                        Object {
                          "display_name": "baseline2",
                          "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                          "last_updated": "2019-01-15T15:25:16.304899Z",
                          "type": "baseline",
                        },
                        Object {
                          "display_name": "sgi-xe500-01.rhts.eng.bos.redhat.com",
                          "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                          "last_updated": "2019-01-15T14:53:15.886891Z",
                          "type": "system",
                        },
                        Object {
                          "display_name": "system1",
                          "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                          "last_updated": "2019-01-15T14:53:15.886891Z",
                          "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                          "type": "historical-system-profile",
                        },
                        Object {
                          "display_name": "system1",
                          "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                          "last_updated": "2019-01-15T15:25:16.304899Z",
                          "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                          "type": "historical-system-profile",
                        },
                        Object {
                          "display_name": "ibm-x3650m4-03-vm03.lab.eng.brq.redhat.com",
                          "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                          "last_updated": "2019-01-15T15:25:16.304899Z",
                          "type": "system",
                        },
                      ]
                    }
                    removeSystem={[Function]}
                    selectHistoricProfiles={[Function]}
                    systemIds={Array []}
                    toggleFactSort={[Function]}
                    toggleStateSort={[Function]}
                    updateReferenceId={[Function]}
                  >
                    <tr
                      className="sticky-column-header"
                      data-ouia-component-id="comparison-table-header-row"
                      data-ouia-component-type="PF4/TableRow"
                    >
                      <th
                        className="fact-header sticky-column fixed-column-1 pointer"
                        data-ouia-component-id="fact-sort-button"
                        data-ouia-component-type="PF4/Button"
                        key="fact-header"
                        onClick={[Function]}
                      >
                        <div
                          className="active-blue"
                        >
                          Fact 
                          <ArrowsAltVIcon
                            className="not-active"
                            color="currentColor"
                            noVerticalAlign={false}
                            size="sm"
                          >
                            <svg
                              aria-hidden={true}
                              aria-labelledby={null}
                              className="not-active"
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style={
                                Object {
                                  "verticalAlign": "-0.125em",
                                }
                              }
                              viewBox="0 0 256 512"
                              width="1em"
                            >
                              <path
                                d="M214.059 377.941H168V134.059h46.059c21.382 0 32.09-25.851 16.971-40.971L144.971 7.029c-9.373-9.373-24.568-9.373-33.941 0L24.971 93.088c-15.119 15.119-4.411 40.971 16.971 40.971H88v243.882H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.568 9.373 33.941 0l86.059-86.059c15.12-15.119 4.412-40.971-16.97-40.971z"
                              />
                            </svg>
                          </ArrowsAltVIcon>
                        </div>
                      </th>
                      <th
                        className="state-header sticky-column fixed-column-2 pointer"
                        data-ouia-component-id="state-sort-button"
                        data-ouia-component-type="PF4/Button"
                        id="disabled"
                        key="state-header"
                        onClick={[Function]}
                      >
                        <div
                          className="active-blue"
                        >
                          State 
                          <ArrowsAltVIcon
                            className="not-active"
                            color="currentColor"
                            noVerticalAlign={false}
                            size="sm"
                          >
                            <svg
                              aria-hidden={true}
                              aria-labelledby={null}
                              className="not-active"
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style={
                                Object {
                                  "verticalAlign": "-0.125em",
                                }
                              }
                              viewBox="0 0 256 512"
                              width="1em"
                            >
                              <path
                                d="M214.059 377.941H168V134.059h46.059c21.382 0 32.09-25.851 16.971-40.971L144.971 7.029c-9.373-9.373-24.568-9.373-33.941 0L24.971 93.088c-15.119 15.119-4.411 40.971 16.971 40.971H88v243.882H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.568 9.373 33.941 0l86.059-86.059c15.12-15.119 4.412-40.971-16.97-40.971z"
                              />
                            </svg>
                          </ArrowsAltVIcon>
                        </div>
                      </th>
                      <th
                        className="drift-header baseline-header"
                        header-id="9bbbefcc-8f23-4d97-07f2-142asdl234e9"
                        key="9bbbefcc-8f23-4d97-07f2-142asdl234e9"
                      >
                        <div>
                          <a
                            className="remove-system-icon"
                            data-ouia-component-id="remove-system-button-9bbbefcc-8f23-4d97-07f2-142asdl234e9"
                            data-ouia-component-type="PF4/Button"
                            onClick={[Function]}
                          >
                            <TimesIcon
                              color="currentColor"
                              noVerticalAlign={false}
                              size="sm"
                            >
                              <svg
                                aria-hidden={true}
                                aria-labelledby={null}
                                fill="currentColor"
                                height="1em"
                                role="img"
                                style={
                                  Object {
                                    "verticalAlign": "-0.125em",
                                  }
                                }
                                viewBox="0 0 352 512"
                                width="1em"
                              >
                                <path
                                  d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                                />
                              </svg>
                            </TimesIcon>
                          </a>
                        </div>
                        <div
                          className="comparison-header"
                        >
                          <div
                            className="drift-header-icon"
                          >
                            <Tooltip
                              content={
                                <div>
                                  Baseline
                                </div>
                              }
                              position="top"
                            >
                              <Popper
                                appendTo={[Function]}
                                distance={15}
                                enableFlip={true}
                                flipBehavior={
                                  Array [
                                    "top",
                                    "right",
                                    "bottom",
                                    "left",
                                    "top",
                                    "right",
                                    "bottom",
                                  ]
                                }
                                isVisible={false}
                                onBlur={[Function]}
                                onDocumentClick={false}
                                onDocumentKeyDown={[Function]}
                                onFocus={[Function]}
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                                onTriggerEnter={[Function]}
                                placement="top"
                                popper={
                                  <div
                                    className="pf-c-tooltip"
                                    id="pf-tooltip-1"
                                    role="tooltip"
                                    style={
                                      Object {
                                        "maxWidth": null,
                                        "opacity": 0,
                                        "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                      }
                                    }
                                  >
                                    <TooltipArrow />
                                    <TooltipContent
                                      isLeftAligned={false}
                                    >
                                      <div>
                                        Baseline
                                      </div>
                                    </TooltipContent>
                                  </div>
                                }
                                popperMatchesTriggerWidth={false}
                                positionModifiers={
                                  Object {
                                    "bottom": "pf-m-bottom",
                                    "left": "pf-m-left",
                                    "right": "pf-m-right",
                                    "top": "pf-m-top",
                                  }
                                }
                                trigger={
                                  <BlueprintIcon
                                    aria-describedby="pf-tooltip-1"
                                    color="currentColor"
                                    noVerticalAlign={false}
                                    size="sm"
                                  />
                                }
                                zIndex={9999}
                              >
                                <FindRefWrapper
                                  onFoundRef={[Function]}
                                >
                                  <BlueprintIcon
                                    aria-describedby="pf-tooltip-1"
                                    color="currentColor"
                                    noVerticalAlign={false}
                                    size="sm"
                                  >
                                    <svg
                                      aria-describedby="pf-tooltip-1"
                                      aria-hidden={true}
                                      aria-labelledby={null}
                                      fill="currentColor"
                                      height="1em"
                                      role="img"
                                      style={
                                        Object {
                                          "verticalAlign": "-0.125em",
                                        }
                                      }
                                      viewBox="0 0 1024 1024"
                                      width="1em"
                                    >
                                      <path
                                        d="M0,767.3 L0,640 L64,640 L64,752.3 C64,760.584271 70.7157288,767.3 79,767.3 L128,768.1 L128,832.1 L64,831.3 C28.6674863,831.266922 0.0330777378,802.632514 0,767.3 Z M64,0 L191.3,0 L191.3,64 L79,64 C70.7157288,64 64,70.7157288 64,79 L64,192 L0,192 L0,64 C0.0330777378,28.6674863 28.6674863,0.0330777378 64,0 Z M0,384 L64,384 L64,256 L0,256 L0,384 Z M0,576 L64,576 L64,448 L0,448 L0,576 Z M832,64.7 L832,128 L768,128 L768,79.7 C768,71.4157288 761.284271,64.7 753,64.7 L640,64.7 L640,0.7 L768,0.7 C803.332514,0.733077738 831.966922,29.3674863 832,64.7 Z M448,64.7 L576,64.7 L576,0.7 L448,0.7 L448,64.7 Z M256,64.7 L384,64.7 L384,0.7 L256,0.7 L256,64.7 Z M960,192 L256,192 C220.667486,192.033078 192.033078,220.667486 192,256 L192,960 C192.033078,995.332514 220.667486,1023.96692 256,1024 L960,1024 C995.332514,1023.96692 1023.96692,995.332514 1024,960 L1024,256 C1023.96692,220.667486 995.332514,192.033078 960,192 Z M960,945 C960,953.284271 953.284271,960 945,960 L271,960 C262.715729,960 256,953.284271 256,945 L256,271 C256,262.715729 262.715729,256 271,256 L945,256 C953.284271,256 960,262.715729 960,271 L960,945 Z"
                                      />
                                    </svg>
                                  </BlueprintIcon>
                                </FindRefWrapper>
                              </Popper>
                            </Tooltip>
                          </div>
                          <div
                            className="system-name"
                          >
                            baseline1
                          </div>
                          <div
                            className="system-updated-and-reference"
                          >
                            <ReferenceSelector
                              isReference={false}
                              item={
                                Object {
                                  "display_name": "baseline1",
                                  "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                                  "last_updated": "2019-01-15T14:53:15.886891Z",
                                  "type": "baseline",
                                }
                              }
                              updateReferenceId={[Function]}
                            >
                              <Tooltip
                                content={
                                  <div>
                                    Use this 
                                    baseline
                                     as a reference to compare.
                                  </div>
                                }
                                position="top"
                              >
                                <Popper
                                  appendTo={[Function]}
                                  distance={15}
                                  enableFlip={true}
                                  flipBehavior={
                                    Array [
                                      "top",
                                      "right",
                                      "bottom",
                                      "left",
                                      "top",
                                      "right",
                                      "bottom",
                                    ]
                                  }
                                  isVisible={false}
                                  onBlur={[Function]}
                                  onDocumentClick={false}
                                  onDocumentKeyDown={[Function]}
                                  onFocus={[Function]}
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                  onTriggerEnter={[Function]}
                                  placement="top"
                                  popper={
                                    <div
                                      className="pf-c-tooltip"
                                      id="pf-tooltip-2"
                                      role="tooltip"
                                      style={
                                        Object {
                                          "maxWidth": null,
                                          "opacity": 0,
                                          "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                        }
                                      }
                                    >
                                      <TooltipArrow />
                                      <TooltipContent
                                        isLeftAligned={false}
                                      >
                                        <div>
                                          Use this 
                                          baseline
                                           as a reference to compare.
                                        </div>
                                      </TooltipContent>
                                    </div>
                                  }
                                  popperMatchesTriggerWidth={false}
                                  positionModifiers={
                                    Object {
                                      "bottom": "pf-m-bottom",
                                      "left": "pf-m-left",
                                      "right": "pf-m-right",
                                      "top": "pf-m-top",
                                    }
                                  }
                                  trigger={
                                    <OutlinedStarIcon
                                      aria-describedby="pf-tooltip-2"
                                      className="reference-selector pointer"
                                      color="currentColor"
                                      data-ouia-component-id="reference-selector-9bbbefcc-8f23-4d97-07f2-142asdl234e9"
                                      data-ouia-component-type="PF4/Button"
                                      noVerticalAlign={false}
                                      onClick={[Function]}
                                      size="sm"
                                    />
                                  }
                                  zIndex={9999}
                                >
                                  <FindRefWrapper
                                    onFoundRef={[Function]}
                                  >
                                    <OutlinedStarIcon
                                      aria-describedby="pf-tooltip-2"
                                      className="reference-selector pointer"
                                      color="currentColor"
                                      data-ouia-component-id="reference-selector-9bbbefcc-8f23-4d97-07f2-142asdl234e9"
                                      data-ouia-component-type="PF4/Button"
                                      noVerticalAlign={false}
                                      onClick={[Function]}
                                      size="sm"
                                    >
                                      <svg
                                        aria-describedby="pf-tooltip-2"
                                        aria-hidden={true}
                                        aria-labelledby={null}
                                        className="reference-selector pointer"
                                        data-ouia-component-id="reference-selector-9bbbefcc-8f23-4d97-07f2-142asdl234e9"
                                        data-ouia-component-type="PF4/Button"
                                        fill="currentColor"
                                        height="1em"
                                        onClick={[Function]}
                                        role="img"
                                        style={
                                          Object {
                                            "verticalAlign": "-0.125em",
                                          }
                                        }
                                        viewBox="0 0 576 512"
                                        width="1em"
                                      >
                                        <path
                                          d="M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z"
                                        />
                                      </svg>
                                    </OutlinedStarIcon>
                                  </FindRefWrapper>
                                </Popper>
                              </Tooltip>
                            </ReferenceSelector>
                            15 Jan 2019, 14:53 UTC
                          </div>
                        </div>
                      </th>
                      <th
                        className="drift-header baseline-header"
                        header-id="fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29"
                        key="fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29"
                      >
                        <div>
                          <a
                            className="remove-system-icon"
                            data-ouia-component-id="remove-system-button-fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29"
                            data-ouia-component-type="PF4/Button"
                            onClick={[Function]}
                          >
                            <TimesIcon
                              color="currentColor"
                              noVerticalAlign={false}
                              size="sm"
                            >
                              <svg
                                aria-hidden={true}
                                aria-labelledby={null}
                                fill="currentColor"
                                height="1em"
                                role="img"
                                style={
                                  Object {
                                    "verticalAlign": "-0.125em",
                                  }
                                }
                                viewBox="0 0 352 512"
                                width="1em"
                              >
                                <path
                                  d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                                />
                              </svg>
                            </TimesIcon>
                          </a>
                        </div>
                        <div
                          className="comparison-header"
                        >
                          <div
                            className="drift-header-icon"
                          >
                            <Tooltip
                              content={
                                <div>
                                  Baseline
                                </div>
                              }
                              position="top"
                            >
                              <Popper
                                appendTo={[Function]}
                                distance={15}
                                enableFlip={true}
                                flipBehavior={
                                  Array [
                                    "top",
                                    "right",
                                    "bottom",
                                    "left",
                                    "top",
                                    "right",
                                    "bottom",
                                  ]
                                }
                                isVisible={false}
                                onBlur={[Function]}
                                onDocumentClick={false}
                                onDocumentKeyDown={[Function]}
                                onFocus={[Function]}
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                                onTriggerEnter={[Function]}
                                placement="top"
                                popper={
                                  <div
                                    className="pf-c-tooltip"
                                    id="pf-tooltip-3"
                                    role="tooltip"
                                    style={
                                      Object {
                                        "maxWidth": null,
                                        "opacity": 0,
                                        "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                      }
                                    }
                                  >
                                    <TooltipArrow />
                                    <TooltipContent
                                      isLeftAligned={false}
                                    >
                                      <div>
                                        Baseline
                                      </div>
                                    </TooltipContent>
                                  </div>
                                }
                                popperMatchesTriggerWidth={false}
                                positionModifiers={
                                  Object {
                                    "bottom": "pf-m-bottom",
                                    "left": "pf-m-left",
                                    "right": "pf-m-right",
                                    "top": "pf-m-top",
                                  }
                                }
                                trigger={
                                  <BlueprintIcon
                                    aria-describedby="pf-tooltip-3"
                                    color="currentColor"
                                    noVerticalAlign={false}
                                    size="sm"
                                  />
                                }
                                zIndex={9999}
                              >
                                <FindRefWrapper
                                  onFoundRef={[Function]}
                                >
                                  <BlueprintIcon
                                    aria-describedby="pf-tooltip-3"
                                    color="currentColor"
                                    noVerticalAlign={false}
                                    size="sm"
                                  >
                                    <svg
                                      aria-describedby="pf-tooltip-3"
                                      aria-hidden={true}
                                      aria-labelledby={null}
                                      fill="currentColor"
                                      height="1em"
                                      role="img"
                                      style={
                                        Object {
                                          "verticalAlign": "-0.125em",
                                        }
                                      }
                                      viewBox="0 0 1024 1024"
                                      width="1em"
                                    >
                                      <path
                                        d="M0,767.3 L0,640 L64,640 L64,752.3 C64,760.584271 70.7157288,767.3 79,767.3 L128,768.1 L128,832.1 L64,831.3 C28.6674863,831.266922 0.0330777378,802.632514 0,767.3 Z M64,0 L191.3,0 L191.3,64 L79,64 C70.7157288,64 64,70.7157288 64,79 L64,192 L0,192 L0,64 C0.0330777378,28.6674863 28.6674863,0.0330777378 64,0 Z M0,384 L64,384 L64,256 L0,256 L0,384 Z M0,576 L64,576 L64,448 L0,448 L0,576 Z M832,64.7 L832,128 L768,128 L768,79.7 C768,71.4157288 761.284271,64.7 753,64.7 L640,64.7 L640,0.7 L768,0.7 C803.332514,0.733077738 831.966922,29.3674863 832,64.7 Z M448,64.7 L576,64.7 L576,0.7 L448,0.7 L448,64.7 Z M256,64.7 L384,64.7 L384,0.7 L256,0.7 L256,64.7 Z M960,192 L256,192 C220.667486,192.033078 192.033078,220.667486 192,256 L192,960 C192.033078,995.332514 220.667486,1023.96692 256,1024 L960,1024 C995.332514,1023.96692 1023.96692,995.332514 1024,960 L1024,256 C1023.96692,220.667486 995.332514,192.033078 960,192 Z M960,945 C960,953.284271 953.284271,960 945,960 L271,960 C262.715729,960 256,953.284271 256,945 L256,271 C256,262.715729 262.715729,256 271,256 L945,256 C953.284271,256 960,262.715729 960,271 L960,945 Z"
                                      />
                                    </svg>
                                  </BlueprintIcon>
                                </FindRefWrapper>
                              </Popper>
                            </Tooltip>
                          </div>
                          <div
                            className="system-name"
                          >
                            baseline2
                          </div>
                          <div
                            className="system-updated-and-reference"
                          >
                            <ReferenceSelector
                              isReference={false}
                              item={
                                Object {
                                  "display_name": "baseline2",
                                  "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                                  "last_updated": "2019-01-15T15:25:16.304899Z",
                                  "type": "baseline",
                                }
                              }
                              updateReferenceId={[Function]}
                            >
                              <Tooltip
                                content={
                                  <div>
                                    Use this 
                                    baseline
                                     as a reference to compare.
                                  </div>
                                }
                                position="top"
                              >
                                <Popper
                                  appendTo={[Function]}
                                  distance={15}
                                  enableFlip={true}
                                  flipBehavior={
                                    Array [
                                      "top",
                                      "right",
                                      "bottom",
                                      "left",
                                      "top",
                                      "right",
                                      "bottom",
                                    ]
                                  }
                                  isVisible={false}
                                  onBlur={[Function]}
                                  onDocumentClick={false}
                                  onDocumentKeyDown={[Function]}
                                  onFocus={[Function]}
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                  onTriggerEnter={[Function]}
                                  placement="top"
                                  popper={
                                    <div
                                      className="pf-c-tooltip"
                                      id="pf-tooltip-4"
                                      role="tooltip"
                                      style={
                                        Object {
                                          "maxWidth": null,
                                          "opacity": 0,
                                          "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                        }
                                      }
                                    >
                                      <TooltipArrow />
                                      <TooltipContent
                                        isLeftAligned={false}
                                      >
                                        <div>
                                          Use this 
                                          baseline
                                           as a reference to compare.
                                        </div>
                                      </TooltipContent>
                                    </div>
                                  }
                                  popperMatchesTriggerWidth={false}
                                  positionModifiers={
                                    Object {
                                      "bottom": "pf-m-bottom",
                                      "left": "pf-m-left",
                                      "right": "pf-m-right",
                                      "top": "pf-m-top",
                                    }
                                  }
                                  trigger={
                                    <OutlinedStarIcon
                                      aria-describedby="pf-tooltip-4"
                                      className="reference-selector pointer"
                                      color="currentColor"
                                      data-ouia-component-id="reference-selector-fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29"
                                      data-ouia-component-type="PF4/Button"
                                      noVerticalAlign={false}
                                      onClick={[Function]}
                                      size="sm"
                                    />
                                  }
                                  zIndex={9999}
                                >
                                  <FindRefWrapper
                                    onFoundRef={[Function]}
                                  >
                                    <OutlinedStarIcon
                                      aria-describedby="pf-tooltip-4"
                                      className="reference-selector pointer"
                                      color="currentColor"
                                      data-ouia-component-id="reference-selector-fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29"
                                      data-ouia-component-type="PF4/Button"
                                      noVerticalAlign={false}
                                      onClick={[Function]}
                                      size="sm"
                                    >
                                      <svg
                                        aria-describedby="pf-tooltip-4"
                                        aria-hidden={true}
                                        aria-labelledby={null}
                                        className="reference-selector pointer"
                                        data-ouia-component-id="reference-selector-fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29"
                                        data-ouia-component-type="PF4/Button"
                                        fill="currentColor"
                                        height="1em"
                                        onClick={[Function]}
                                        role="img"
                                        style={
                                          Object {
                                            "verticalAlign": "-0.125em",
                                          }
                                        }
                                        viewBox="0 0 576 512"
                                        width="1em"
                                      >
                                        <path
                                          d="M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z"
                                        />
                                      </svg>
                                    </OutlinedStarIcon>
                                  </FindRefWrapper>
                                </Popper>
                              </Tooltip>
                            </ReferenceSelector>
                            15 Jan 2019, 15:25 UTC
                          </div>
                        </div>
                      </th>
                      <th
                        className="drift-header system-header"
                        header-id="9c79efcc-8f9a-47c7-b0f2-142ff52e89e9"
                        key="9c79efcc-8f9a-47c7-b0f2-142ff52e89e9"
                      >
                        <div>
                          <a
                            className="remove-system-icon"
                            data-ouia-component-id="remove-system-button-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9"
                            data-ouia-component-type="PF4/Button"
                            onClick={[Function]}
                          >
                            <TimesIcon
                              color="currentColor"
                              noVerticalAlign={false}
                              size="sm"
                            >
                              <svg
                                aria-hidden={true}
                                aria-labelledby={null}
                                fill="currentColor"
                                height="1em"
                                role="img"
                                style={
                                  Object {
                                    "verticalAlign": "-0.125em",
                                  }
                                }
                                viewBox="0 0 352 512"
                                width="1em"
                              >
                                <path
                                  d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                                />
                              </svg>
                            </TimesIcon>
                          </a>
                        </div>
                        <div
                          className="comparison-header"
                        >
                          <div
                            className="drift-header-icon"
                          >
                            <Tooltip
                              content={
                                <div>
                                  System
                                </div>
                              }
                              position="top"
                            >
                              <Popper
                                appendTo={[Function]}
                                distance={15}
                                enableFlip={true}
                                flipBehavior={
                                  Array [
                                    "top",
                                    "right",
                                    "bottom",
                                    "left",
                                    "top",
                                    "right",
                                    "bottom",
                                  ]
                                }
                                isVisible={false}
                                onBlur={[Function]}
                                onDocumentClick={false}
                                onDocumentKeyDown={[Function]}
                                onFocus={[Function]}
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                                onTriggerEnter={[Function]}
                                placement="top"
                                popper={
                                  <div
                                    className="pf-c-tooltip"
                                    id="pf-tooltip-5"
                                    role="tooltip"
                                    style={
                                      Object {
                                        "maxWidth": null,
                                        "opacity": 0,
                                        "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                      }
                                    }
                                  >
                                    <TooltipArrow />
                                    <TooltipContent
                                      isLeftAligned={false}
                                    >
                                      <div>
                                        System
                                      </div>
                                    </TooltipContent>
                                  </div>
                                }
                                popperMatchesTriggerWidth={false}
                                positionModifiers={
                                  Object {
                                    "bottom": "pf-m-bottom",
                                    "left": "pf-m-left",
                                    "right": "pf-m-right",
                                    "top": "pf-m-top",
                                  }
                                }
                                trigger={
                                  <ServerIcon
                                    aria-describedby="pf-tooltip-5"
                                    color="currentColor"
                                    noVerticalAlign={false}
                                    size="sm"
                                  />
                                }
                                zIndex={9999}
                              >
                                <FindRefWrapper
                                  onFoundRef={[Function]}
                                >
                                  <ServerIcon
                                    aria-describedby="pf-tooltip-5"
                                    color="currentColor"
                                    noVerticalAlign={false}
                                    size="sm"
                                  >
                                    <svg
                                      aria-describedby="pf-tooltip-5"
                                      aria-hidden={true}
                                      aria-labelledby={null}
                                      fill="currentColor"
                                      height="1em"
                                      role="img"
                                      style={
                                        Object {
                                          "verticalAlign": "-0.125em",
                                        }
                                      }
                                      viewBox="0 0 512 512"
                                      width="1em"
                                    >
                                      <path
                                        d="M480 160H32c-17.673 0-32-14.327-32-32V64c0-17.673 14.327-32 32-32h448c17.673 0 32 14.327 32 32v64c0 17.673-14.327 32-32 32zm-48-88c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm-64 0c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm112 248H32c-17.673 0-32-14.327-32-32v-64c0-17.673 14.327-32 32-32h448c17.673 0 32 14.327 32 32v64c0 17.673-14.327 32-32 32zm-48-88c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm-64 0c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm112 248H32c-17.673 0-32-14.327-32-32v-64c0-17.673 14.327-32 32-32h448c17.673 0 32 14.327 32 32v64c0 17.673-14.327 32-32 32zm-48-88c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm-64 0c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24z"
                                      />
                                    </svg>
                                  </ServerIcon>
                                </FindRefWrapper>
                              </Popper>
                            </Tooltip>
                          </div>
                          <div
                            className="system-name"
                          >
                            sgi-xe500-01.rhts.eng.bos.redhat.com
                          </div>
                          <div
                            className="system-updated-and-reference"
                          >
                            <ReferenceSelector
                              isReference={false}
                              item={
                                Object {
                                  "display_name": "sgi-xe500-01.rhts.eng.bos.redhat.com",
                                  "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                  "last_updated": "2019-01-15T14:53:15.886891Z",
                                  "type": "system",
                                }
                              }
                              updateReferenceId={[Function]}
                            >
                              <Tooltip
                                content={
                                  <div>
                                    Use this 
                                    system
                                     as a reference to compare.
                                  </div>
                                }
                                position="top"
                              >
                                <Popper
                                  appendTo={[Function]}
                                  distance={15}
                                  enableFlip={true}
                                  flipBehavior={
                                    Array [
                                      "top",
                                      "right",
                                      "bottom",
                                      "left",
                                      "top",
                                      "right",
                                      "bottom",
                                    ]
                                  }
                                  isVisible={false}
                                  onBlur={[Function]}
                                  onDocumentClick={false}
                                  onDocumentKeyDown={[Function]}
                                  onFocus={[Function]}
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                  onTriggerEnter={[Function]}
                                  placement="top"
                                  popper={
                                    <div
                                      className="pf-c-tooltip"
                                      id="pf-tooltip-6"
                                      role="tooltip"
                                      style={
                                        Object {
                                          "maxWidth": null,
                                          "opacity": 0,
                                          "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                        }
                                      }
                                    >
                                      <TooltipArrow />
                                      <TooltipContent
                                        isLeftAligned={false}
                                      >
                                        <div>
                                          Use this 
                                          system
                                           as a reference to compare.
                                        </div>
                                      </TooltipContent>
                                    </div>
                                  }
                                  popperMatchesTriggerWidth={false}
                                  positionModifiers={
                                    Object {
                                      "bottom": "pf-m-bottom",
                                      "left": "pf-m-left",
                                      "right": "pf-m-right",
                                      "top": "pf-m-top",
                                    }
                                  }
                                  trigger={
                                    <OutlinedStarIcon
                                      aria-describedby="pf-tooltip-6"
                                      className="reference-selector pointer"
                                      color="currentColor"
                                      data-ouia-component-id="reference-selector-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9"
                                      data-ouia-component-type="PF4/Button"
                                      noVerticalAlign={false}
                                      onClick={[Function]}
                                      size="sm"
                                    />
                                  }
                                  zIndex={9999}
                                >
                                  <FindRefWrapper
                                    onFoundRef={[Function]}
                                  >
                                    <OutlinedStarIcon
                                      aria-describedby="pf-tooltip-6"
                                      className="reference-selector pointer"
                                      color="currentColor"
                                      data-ouia-component-id="reference-selector-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9"
                                      data-ouia-component-type="PF4/Button"
                                      noVerticalAlign={false}
                                      onClick={[Function]}
                                      size="sm"
                                    >
                                      <svg
                                        aria-describedby="pf-tooltip-6"
                                        aria-hidden={true}
                                        aria-labelledby={null}
                                        className="reference-selector pointer"
                                        data-ouia-component-id="reference-selector-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9"
                                        data-ouia-component-type="PF4/Button"
                                        fill="currentColor"
                                        height="1em"
                                        onClick={[Function]}
                                        role="img"
                                        style={
                                          Object {
                                            "verticalAlign": "-0.125em",
                                          }
                                        }
                                        viewBox="0 0 576 512"
                                        width="1em"
                                      >
                                        <path
                                          d="M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z"
                                        />
                                      </svg>
                                    </OutlinedStarIcon>
                                  </FindRefWrapper>
                                </Popper>
                              </Tooltip>
                            </ReferenceSelector>
                            15 Jan 2019, 14:53 UTC
                            <withRouter(Connect(HistoricalProfilesPopover))
                              fetchCompare={[Function]}
                              hasCompareButton={true}
                              hasMultiSelect={true}
                              selectHistoricProfiles={[Function]}
                              system={
                                Object {
                                  "display_name": "sgi-xe500-01.rhts.eng.bos.redhat.com",
                                  "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                  "last_updated": "2019-01-15T14:53:15.886891Z",
                                  "type": "system",
                                }
                              }
                              systemIds={Array []}
                            >
                              <Connect(HistoricalProfilesPopover)
                                fetchCompare={[Function]}
                                hasCompareButton={true}
                                hasMultiSelect={true}
                                history={
                                  Object {
                                    "action": "POP",
                                    "block": [Function],
                                    "canGo": [Function],
                                    "createHref": [Function],
                                    "entries": Array [
                                      Object {
                                        "hash": "",
                                        "pathname": "/",
                                        "search": "",
                                        "state": undefined,
                                      },
                                    ],
                                    "go": [Function],
                                    "goBack": [Function],
                                    "goForward": [Function],
                                    "index": 0,
                                    "length": 1,
                                    "listen": [Function],
                                    "location": Object {
                                      "hash": "",
                                      "pathname": "/",
                                      "search": "",
                                      "state": undefined,
                                    },
                                    "push": [Function],
                                    "replace": [Function],
                                  }
                                }
                                location={
                                  Object {
                                    "hash": "",
                                    "pathname": "/",
                                    "search": "",
                                    "state": undefined,
                                  }
                                }
                                match={
                                  Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/",
                                    "url": "/",
                                  }
                                }
                                selectHistoricProfiles={[Function]}
                                system={
                                  Object {
                                    "display_name": "sgi-xe500-01.rhts.eng.bos.redhat.com",
                                    "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                    "last_updated": "2019-01-15T14:53:15.886891Z",
                                    "type": "system",
                                  }
                                }
                                systemIds={Array []}
                              >
                                <HistoricalProfilesPopover
                                  fetchCompare={[Function]}
                                  hasCompareButton={true}
                                  hasMultiSelect={true}
                                  history={
                                    Object {
                                      "action": "POP",
                                      "block": [Function],
                                      "canGo": [Function],
                                      "createHref": [Function],
                                      "entries": Array [
                                        Object {
                                          "hash": "",
                                          "pathname": "/",
                                          "search": "",
                                          "state": undefined,
                                        },
                                      ],
                                      "go": [Function],
                                      "goBack": [Function],
                                      "goForward": [Function],
                                      "index": 0,
                                      "length": 1,
                                      "listen": [Function],
                                      "location": Object {
                                        "hash": "",
                                        "pathname": "/",
                                        "search": "",
                                        "state": undefined,
                                      },
                                      "push": [Function],
                                      "replace": [Function],
                                    }
                                  }
                                  location={
                                    Object {
                                      "hash": "",
                                      "pathname": "/",
                                      "search": "",
                                      "state": undefined,
                                    }
                                  }
                                  match={
                                    Object {
                                      "isExact": true,
                                      "params": Object {},
                                      "path": "/",
                                      "url": "/",
                                    }
                                  }
                                  selectHistoricProfiles={[Function]}
                                  selectSingleHSP={[Function]}
                                  selectSystem={[Function]}
                                  selectedBaselineIds={Array []}
                                  selectedHSPIds={Array []}
                                  system={
                                    Object {
                                      "display_name": "sgi-xe500-01.rhts.eng.bos.redhat.com",
                                      "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                      "last_updated": "2019-01-15T14:53:15.886891Z",
                                      "type": "system",
                                    }
                                  }
                                  systemIds={Array []}
                                  updateColumns={[Function]}
                                >
                                  <span
                                    className="hsp-icon-padding historical-system-profile-popover"
                                    data-ouia-component-id="hsp-popover-toggle-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9"
                                    data-ouia-component-type="PF4/Button"
                                  >
                                    <Popover
                                      bodyContent={
                                        Array [
                                          <Skeleton
                                            className="hsp-dropdown-loading"
                                            isDark={false}
                                            size="sm"
                                          />,
                                          <Skeleton
                                            className="hsp-dropdown-loading"
                                            isDark={false}
                                            size="sm"
                                          />,
                                          <Skeleton
                                            className="hsp-dropdown-loading"
                                            isDark={false}
                                            size="sm"
                                          />,
                                        ]
                                      }
                                      footerContent={
                                        <Button
                                          onClick={[Function]}
                                          ouiaId="hsp-popover-compare"
                                          variant="primary"
                                        >
                                          Compare
                                        </Button>
                                      }
                                      headerContent={
                                        <div>
                                          Historical profiles for this system
                                        </div>
                                      }
                                      id="hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9"
                                      isVisible={false}
                                      shouldClose={[Function]}
                                    >
                                      <Popper
                                        appendTo={[Function]}
                                        distance={25}
                                        enableFlip={true}
                                        flipBehavior={
                                          Array [
                                            "top",
                                            "right",
                                            "bottom",
                                            "left",
                                            "top",
                                            "right",
                                            "bottom",
                                          ]
                                        }
                                        isVisible={false}
                                        onDocumentClick={[Function]}
                                        onDocumentKeyDown={[Function]}
                                        onTriggerClick={[Function]}
                                        onTriggerEnter={[Function]}
                                        placement="top"
                                        popper={
                                          <FocusTrap
                                            active={false}
                                            aria-describedby="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-body"
                                            aria-labelledby="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-header"
                                            aria-modal="true"
                                            className="pf-c-popover"
                                            focusTrapOptions={
                                              Object {
                                                "clickOutsideDeactivates": true,
                                                "returnFocusOnDeactivate": true,
                                              }
                                            }
                                            onMouseDown={[Function]}
                                            paused={false}
                                            role="dialog"
                                            style={
                                              Object {
                                                "maxWidth": null,
                                                "minWidth": null,
                                                "opacity": 0,
                                                "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                              }
                                            }
                                          >
                                            <PopoverArrow />
                                            <PopoverContent>
                                              <PopoverCloseButton
                                                aria-label="Close"
                                                onClose={[Function]}
                                              />
                                              <PopoverHeader
                                                id="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-header"
                                              >
                                                <div>
                                                  Historical profiles for this system
                                                </div>
                                              </PopoverHeader>
                                              <PopoverBody
                                                id="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-body"
                                              >
                                                <Skeleton
                                                  className="hsp-dropdown-loading"
                                                  isDark={false}
                                                  size="sm"
                                                />
                                                <Skeleton
                                                  className="hsp-dropdown-loading"
                                                  isDark={false}
                                                  size="sm"
                                                />
                                                <Skeleton
                                                  className="hsp-dropdown-loading"
                                                  isDark={false}
                                                  size="sm"
                                                />
                                              </PopoverBody>
                                              <PopoverFooter
                                                id="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-footer"
                                              >
                                                <Button
                                                  onClick={[Function]}
                                                  ouiaId="hsp-popover-compare"
                                                  variant="primary"
                                                >
                                                  Compare
                                                </Button>
                                              </PopoverFooter>
                                            </PopoverContent>
                                          </FocusTrap>
                                        }
                                        popperMatchesTriggerWidth={false}
                                        positionModifiers={
                                          Object {
                                            "bottom": "pf-m-bottom",
                                            "left": "pf-m-left",
                                            "right": "pf-m-right",
                                            "top": "pf-m-top",
                                          }
                                        }
                                        trigger={
                                          <HistoryIcon
                                            className="hsp-dropdown-icon"
                                            color="currentColor"
                                            noVerticalAlign={false}
                                            onClick={[Function]}
                                            size="sm"
                                          />
                                        }
                                        zIndex={9999}
                                      >
                                        <FindRefWrapper
                                          onFoundRef={[Function]}
                                        >
                                          <HistoryIcon
                                            className="hsp-dropdown-icon"
                                            color="currentColor"
                                            noVerticalAlign={false}
                                            onClick={[Function]}
                                            size="sm"
                                          >
                                            <svg
                                              aria-hidden={true}
                                              aria-labelledby={null}
                                              className="hsp-dropdown-icon"
                                              fill="currentColor"
                                              height="1em"
                                              onClick={[Function]}
                                              role="img"
                                              style={
                                                Object {
                                                  "verticalAlign": "-0.125em",
                                                }
                                              }
                                              viewBox="0 0 512 512"
                                              width="1em"
                                            >
                                              <path
                                                d="M504 255.531c.253 136.64-111.18 248.372-247.82 248.468-59.015.042-113.223-20.53-155.822-54.911-11.077-8.94-11.905-25.541-1.839-35.607l11.267-11.267c8.609-8.609 22.353-9.551 31.891-1.984C173.062 425.135 212.781 440 256 440c101.705 0 184-82.311 184-184 0-101.705-82.311-184-184-184-48.814 0-93.149 18.969-126.068 49.932l50.754 50.754c10.08 10.08 2.941 27.314-11.313 27.314H24c-8.837 0-16-7.163-16-16V38.627c0-14.254 17.234-21.393 27.314-11.314l49.372 49.372C129.209 34.136 189.552 8 256 8c136.81 0 247.747 110.78 248 247.531zm-180.912 78.784l9.823-12.63c8.138-10.463 6.253-25.542-4.21-33.679L288 256.349V152c0-13.255-10.745-24-24-24h-16c-13.255 0-24 10.745-24 24v135.651l65.409 50.874c10.463 8.137 25.541 6.253 33.679-4.21z"
                                              />
                                            </svg>
                                          </HistoryIcon>
                                        </FindRefWrapper>
                                      </Popper>
                                    </Popover>
                                  </span>
                                </HistoricalProfilesPopover>
                              </Connect(HistoricalProfilesPopover)>
                            </withRouter(Connect(HistoricalProfilesPopover))>
                          </div>
                        </div>
                      </th>
                      <th
                        className="drift-header historical-system-profile-header"
                        header-id="9bbbefcc-8f23-4d97-07f2-142asdl234e8"
                        key="9bbbefcc-8f23-4d97-07f2-142asdl234e8"
                      >
                        <div>
                          <a
                            className="remove-system-icon"
                            data-ouia-component-id="remove-system-button-9bbbefcc-8f23-4d97-07f2-142asdl234e8"
                            data-ouia-component-type="PF4/Button"
                            onClick={[Function]}
                          >
                            <TimesIcon
                              color="currentColor"
                              noVerticalAlign={false}
                              size="sm"
                            >
                              <svg
                                aria-hidden={true}
                                aria-labelledby={null}
                                fill="currentColor"
                                height="1em"
                                role="img"
                                style={
                                  Object {
                                    "verticalAlign": "-0.125em",
                                  }
                                }
                                viewBox="0 0 352 512"
                                width="1em"
                              >
                                <path
                                  d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                                />
                              </svg>
                            </TimesIcon>
                          </a>
                        </div>
                        <div
                          className="comparison-header"
                        >
                          <div
                            className="drift-header-icon"
                          >
                            <Tooltip
                              content={
                                <div>
                                  Historical system
                                </div>
                              }
                              position="top"
                            >
                              <Popper
                                appendTo={[Function]}
                                distance={15}
                                enableFlip={true}
                                flipBehavior={
                                  Array [
                                    "top",
                                    "right",
                                    "bottom",
                                    "left",
                                    "top",
                                    "right",
                                    "bottom",
                                  ]
                                }
                                isVisible={false}
                                onBlur={[Function]}
                                onDocumentClick={false}
                                onDocumentKeyDown={[Function]}
                                onFocus={[Function]}
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                                onTriggerEnter={[Function]}
                                placement="top"
                                popper={
                                  <div
                                    className="pf-c-tooltip"
                                    id="pf-tooltip-7"
                                    role="tooltip"
                                    style={
                                      Object {
                                        "maxWidth": null,
                                        "opacity": 0,
                                        "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                      }
                                    }
                                  >
                                    <TooltipArrow />
                                    <TooltipContent
                                      isLeftAligned={false}
                                    >
                                      <div>
                                        Historical system
                                      </div>
                                    </TooltipContent>
                                  </div>
                                }
                                popperMatchesTriggerWidth={false}
                                positionModifiers={
                                  Object {
                                    "bottom": "pf-m-bottom",
                                    "left": "pf-m-left",
                                    "right": "pf-m-right",
                                    "top": "pf-m-top",
                                  }
                                }
                                trigger={
                                  <ClockIcon
                                    aria-describedby="pf-tooltip-7"
                                    color="currentColor"
                                    noVerticalAlign={false}
                                    size="sm"
                                  />
                                }
                                zIndex={9999}
                              >
                                <FindRefWrapper
                                  onFoundRef={[Function]}
                                >
                                  <ClockIcon
                                    aria-describedby="pf-tooltip-7"
                                    color="currentColor"
                                    noVerticalAlign={false}
                                    size="sm"
                                  >
                                    <svg
                                      aria-describedby="pf-tooltip-7"
                                      aria-hidden={true}
                                      aria-labelledby={null}
                                      fill="currentColor"
                                      height="1em"
                                      role="img"
                                      style={
                                        Object {
                                          "verticalAlign": "-0.125em",
                                        }
                                      }
                                      viewBox="0 0 512 512"
                                      width="1em"
                                    >
                                      <path
                                        d="M256,8C119,8,8,119,8,256S119,504,256,504,504,393,504,256,393,8,256,8Zm92.49,313h0l-20,25a16,16,0,0,1-22.49,2.5h0l-67-49.72a40,40,0,0,1-15-31.23V112a16,16,0,0,1,16-16h32a16,16,0,0,1,16,16V256l58,42.5A16,16,0,0,1,348.49,321Z"
                                      />
                                    </svg>
                                  </ClockIcon>
                                </FindRefWrapper>
                              </Popper>
                            </Tooltip>
                          </div>
                          <div
                            className="system-name"
                          >
                            system1
                          </div>
                          <div
                            className="system-updated-and-reference"
                          >
                            <ReferenceSelector
                              isReference={false}
                              item={
                                Object {
                                  "display_name": "system1",
                                  "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                                  "last_updated": "2019-01-15T14:53:15.886891Z",
                                  "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                  "type": "historical-system-profile",
                                }
                              }
                              updateReferenceId={[Function]}
                            >
                              <Tooltip
                                content={
                                  <div>
                                    Use this 
                                    historical system
                                     as a reference to compare.
                                  </div>
                                }
                                position="top"
                              >
                                <Popper
                                  appendTo={[Function]}
                                  distance={15}
                                  enableFlip={true}
                                  flipBehavior={
                                    Array [
                                      "top",
                                      "right",
                                      "bottom",
                                      "left",
                                      "top",
                                      "right",
                                      "bottom",
                                    ]
                                  }
                                  isVisible={false}
                                  onBlur={[Function]}
                                  onDocumentClick={false}
                                  onDocumentKeyDown={[Function]}
                                  onFocus={[Function]}
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                  onTriggerEnter={[Function]}
                                  placement="top"
                                  popper={
                                    <div
                                      className="pf-c-tooltip"
                                      id="pf-tooltip-8"
                                      role="tooltip"
                                      style={
                                        Object {
                                          "maxWidth": null,
                                          "opacity": 0,
                                          "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                        }
                                      }
                                    >
                                      <TooltipArrow />
                                      <TooltipContent
                                        isLeftAligned={false}
                                      >
                                        <div>
                                          Use this 
                                          historical system
                                           as a reference to compare.
                                        </div>
                                      </TooltipContent>
                                    </div>
                                  }
                                  popperMatchesTriggerWidth={false}
                                  positionModifiers={
                                    Object {
                                      "bottom": "pf-m-bottom",
                                      "left": "pf-m-left",
                                      "right": "pf-m-right",
                                      "top": "pf-m-top",
                                    }
                                  }
                                  trigger={
                                    <OutlinedStarIcon
                                      aria-describedby="pf-tooltip-8"
                                      className="reference-selector pointer"
                                      color="currentColor"
                                      data-ouia-component-id="reference-selector-9bbbefcc-8f23-4d97-07f2-142asdl234e8"
                                      data-ouia-component-type="PF4/Button"
                                      noVerticalAlign={false}
                                      onClick={[Function]}
                                      size="sm"
                                    />
                                  }
                                  zIndex={9999}
                                >
                                  <FindRefWrapper
                                    onFoundRef={[Function]}
                                  >
                                    <OutlinedStarIcon
                                      aria-describedby="pf-tooltip-8"
                                      className="reference-selector pointer"
                                      color="currentColor"
                                      data-ouia-component-id="reference-selector-9bbbefcc-8f23-4d97-07f2-142asdl234e8"
                                      data-ouia-component-type="PF4/Button"
                                      noVerticalAlign={false}
                                      onClick={[Function]}
                                      size="sm"
                                    >
                                      <svg
                                        aria-describedby="pf-tooltip-8"
                                        aria-hidden={true}
                                        aria-labelledby={null}
                                        className="reference-selector pointer"
                                        data-ouia-component-id="reference-selector-9bbbefcc-8f23-4d97-07f2-142asdl234e8"
                                        data-ouia-component-type="PF4/Button"
                                        fill="currentColor"
                                        height="1em"
                                        onClick={[Function]}
                                        role="img"
                                        style={
                                          Object {
                                            "verticalAlign": "-0.125em",
                                          }
                                        }
                                        viewBox="0 0 576 512"
                                        width="1em"
                                      >
                                        <path
                                          d="M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z"
                                        />
                                      </svg>
                                    </OutlinedStarIcon>
                                  </FindRefWrapper>
                                </Popper>
                              </Tooltip>
                            </ReferenceSelector>
                            15 Jan 2019, 14:53 UTC
                            <withRouter(Connect(HistoricalProfilesPopover))
                              fetchCompare={[Function]}
                              hasCompareButton={true}
                              hasMultiSelect={true}
                              selectHistoricProfiles={[Function]}
                              system={
                                Object {
                                  "display_name": "system1",
                                  "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                                  "last_updated": "2019-01-15T14:53:15.886891Z",
                                  "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                  "type": "historical-system-profile",
                                }
                              }
                              systemIds={Array []}
                            >
                              <Connect(HistoricalProfilesPopover)
                                fetchCompare={[Function]}
                                hasCompareButton={true}
                                hasMultiSelect={true}
                                history={
                                  Object {
                                    "action": "POP",
                                    "block": [Function],
                                    "canGo": [Function],
                                    "createHref": [Function],
                                    "entries": Array [
                                      Object {
                                        "hash": "",
                                        "pathname": "/",
                                        "search": "",
                                        "state": undefined,
                                      },
                                    ],
                                    "go": [Function],
                                    "goBack": [Function],
                                    "goForward": [Function],
                                    "index": 0,
                                    "length": 1,
                                    "listen": [Function],
                                    "location": Object {
                                      "hash": "",
                                      "pathname": "/",
                                      "search": "",
                                      "state": undefined,
                                    },
                                    "push": [Function],
                                    "replace": [Function],
                                  }
                                }
                                location={
                                  Object {
                                    "hash": "",
                                    "pathname": "/",
                                    "search": "",
                                    "state": undefined,
                                  }
                                }
                                match={
                                  Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/",
                                    "url": "/",
                                  }
                                }
                                selectHistoricProfiles={[Function]}
                                system={
                                  Object {
                                    "display_name": "system1",
                                    "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                                    "last_updated": "2019-01-15T14:53:15.886891Z",
                                    "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                    "type": "historical-system-profile",
                                  }
                                }
                                systemIds={Array []}
                              >
                                <HistoricalProfilesPopover
                                  fetchCompare={[Function]}
                                  hasCompareButton={true}
                                  hasMultiSelect={true}
                                  history={
                                    Object {
                                      "action": "POP",
                                      "block": [Function],
                                      "canGo": [Function],
                                      "createHref": [Function],
                                      "entries": Array [
                                        Object {
                                          "hash": "",
                                          "pathname": "/",
                                          "search": "",
                                          "state": undefined,
                                        },
                                      ],
                                      "go": [Function],
                                      "goBack": [Function],
                                      "goForward": [Function],
                                      "index": 0,
                                      "length": 1,
                                      "listen": [Function],
                                      "location": Object {
                                        "hash": "",
                                        "pathname": "/",
                                        "search": "",
                                        "state": undefined,
                                      },
                                      "push": [Function],
                                      "replace": [Function],
                                    }
                                  }
                                  location={
                                    Object {
                                      "hash": "",
                                      "pathname": "/",
                                      "search": "",
                                      "state": undefined,
                                    }
                                  }
                                  match={
                                    Object {
                                      "isExact": true,
                                      "params": Object {},
                                      "path": "/",
                                      "url": "/",
                                    }
                                  }
                                  selectHistoricProfiles={[Function]}
                                  selectSingleHSP={[Function]}
                                  selectSystem={[Function]}
                                  selectedBaselineIds={Array []}
                                  selectedHSPIds={Array []}
                                  system={
                                    Object {
                                      "display_name": "system1",
                                      "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                                      "last_updated": "2019-01-15T14:53:15.886891Z",
                                      "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                      "type": "historical-system-profile",
                                    }
                                  }
                                  systemIds={Array []}
                                  updateColumns={[Function]}
                                >
                                  <span
                                    className="hsp-icon-padding historical-system-profile-popover"
                                    data-ouia-component-id="hsp-popover-toggle-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9"
                                    data-ouia-component-type="PF4/Button"
                                  >
                                    <Popover
                                      bodyContent={
                                        Array [
                                          <Skeleton
                                            className="hsp-dropdown-loading"
                                            isDark={false}
                                            size="sm"
                                          />,
                                          <Skeleton
                                            className="hsp-dropdown-loading"
                                            isDark={false}
                                            size="sm"
                                          />,
                                          <Skeleton
                                            className="hsp-dropdown-loading"
                                            isDark={false}
                                            size="sm"
                                          />,
                                        ]
                                      }
                                      footerContent={
                                        <Button
                                          onClick={[Function]}
                                          ouiaId="hsp-popover-compare"
                                          variant="primary"
                                        >
                                          Compare
                                        </Button>
                                      }
                                      headerContent={
                                        <div>
                                          Historical profiles for this system
                                        </div>
                                      }
                                      id="hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9"
                                      isVisible={false}
                                      shouldClose={[Function]}
                                    >
                                      <Popper
                                        appendTo={[Function]}
                                        distance={25}
                                        enableFlip={true}
                                        flipBehavior={
                                          Array [
                                            "top",
                                            "right",
                                            "bottom",
                                            "left",
                                            "top",
                                            "right",
                                            "bottom",
                                          ]
                                        }
                                        isVisible={false}
                                        onDocumentClick={[Function]}
                                        onDocumentKeyDown={[Function]}
                                        onTriggerClick={[Function]}
                                        onTriggerEnter={[Function]}
                                        placement="top"
                                        popper={
                                          <FocusTrap
                                            active={false}
                                            aria-describedby="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-body"
                                            aria-labelledby="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-header"
                                            aria-modal="true"
                                            className="pf-c-popover"
                                            focusTrapOptions={
                                              Object {
                                                "clickOutsideDeactivates": true,
                                                "returnFocusOnDeactivate": true,
                                              }
                                            }
                                            onMouseDown={[Function]}
                                            paused={false}
                                            role="dialog"
                                            style={
                                              Object {
                                                "maxWidth": null,
                                                "minWidth": null,
                                                "opacity": 0,
                                                "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                              }
                                            }
                                          >
                                            <PopoverArrow />
                                            <PopoverContent>
                                              <PopoverCloseButton
                                                aria-label="Close"
                                                onClose={[Function]}
                                              />
                                              <PopoverHeader
                                                id="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-header"
                                              >
                                                <div>
                                                  Historical profiles for this system
                                                </div>
                                              </PopoverHeader>
                                              <PopoverBody
                                                id="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-body"
                                              >
                                                <Skeleton
                                                  className="hsp-dropdown-loading"
                                                  isDark={false}
                                                  size="sm"
                                                />
                                                <Skeleton
                                                  className="hsp-dropdown-loading"
                                                  isDark={false}
                                                  size="sm"
                                                />
                                                <Skeleton
                                                  className="hsp-dropdown-loading"
                                                  isDark={false}
                                                  size="sm"
                                                />
                                              </PopoverBody>
                                              <PopoverFooter
                                                id="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-footer"
                                              >
                                                <Button
                                                  onClick={[Function]}
                                                  ouiaId="hsp-popover-compare"
                                                  variant="primary"
                                                >
                                                  Compare
                                                </Button>
                                              </PopoverFooter>
                                            </PopoverContent>
                                          </FocusTrap>
                                        }
                                        popperMatchesTriggerWidth={false}
                                        positionModifiers={
                                          Object {
                                            "bottom": "pf-m-bottom",
                                            "left": "pf-m-left",
                                            "right": "pf-m-right",
                                            "top": "pf-m-top",
                                          }
                                        }
                                        trigger={
                                          <HistoryIcon
                                            className="hsp-dropdown-icon"
                                            color="currentColor"
                                            noVerticalAlign={false}
                                            onClick={[Function]}
                                            size="sm"
                                          />
                                        }
                                        zIndex={9999}
                                      >
                                        <FindRefWrapper
                                          onFoundRef={[Function]}
                                        >
                                          <HistoryIcon
                                            className="hsp-dropdown-icon"
                                            color="currentColor"
                                            noVerticalAlign={false}
                                            onClick={[Function]}
                                            size="sm"
                                          >
                                            <svg
                                              aria-hidden={true}
                                              aria-labelledby={null}
                                              className="hsp-dropdown-icon"
                                              fill="currentColor"
                                              height="1em"
                                              onClick={[Function]}
                                              role="img"
                                              style={
                                                Object {
                                                  "verticalAlign": "-0.125em",
                                                }
                                              }
                                              viewBox="0 0 512 512"
                                              width="1em"
                                            >
                                              <path
                                                d="M504 255.531c.253 136.64-111.18 248.372-247.82 248.468-59.015.042-113.223-20.53-155.822-54.911-11.077-8.94-11.905-25.541-1.839-35.607l11.267-11.267c8.609-8.609 22.353-9.551 31.891-1.984C173.062 425.135 212.781 440 256 440c101.705 0 184-82.311 184-184 0-101.705-82.311-184-184-184-48.814 0-93.149 18.969-126.068 49.932l50.754 50.754c10.08 10.08 2.941 27.314-11.313 27.314H24c-8.837 0-16-7.163-16-16V38.627c0-14.254 17.234-21.393 27.314-11.314l49.372 49.372C129.209 34.136 189.552 8 256 8c136.81 0 247.747 110.78 248 247.531zm-180.912 78.784l9.823-12.63c8.138-10.463 6.253-25.542-4.21-33.679L288 256.349V152c0-13.255-10.745-24-24-24h-16c-13.255 0-24 10.745-24 24v135.651l65.409 50.874c10.463 8.137 25.541 6.253 33.679-4.21z"
                                              />
                                            </svg>
                                          </HistoryIcon>
                                        </FindRefWrapper>
                                      </Popper>
                                    </Popover>
                                  </span>
                                </HistoricalProfilesPopover>
                              </Connect(HistoricalProfilesPopover)>
                            </withRouter(Connect(HistoricalProfilesPopover))>
                          </div>
                        </div>
                      </th>
                      <th
                        className="drift-header historical-system-profile-header"
                        header-id="edmk59dj-fn42-dfjk-alv3-bmn2854mnn27"
                        key="edmk59dj-fn42-dfjk-alv3-bmn2854mnn27"
                      >
                        <div>
                          <a
                            className="remove-system-icon"
                            data-ouia-component-id="remove-system-button-edmk59dj-fn42-dfjk-alv3-bmn2854mnn27"
                            data-ouia-component-type="PF4/Button"
                            onClick={[Function]}
                          >
                            <TimesIcon
                              color="currentColor"
                              noVerticalAlign={false}
                              size="sm"
                            >
                              <svg
                                aria-hidden={true}
                                aria-labelledby={null}
                                fill="currentColor"
                                height="1em"
                                role="img"
                                style={
                                  Object {
                                    "verticalAlign": "-0.125em",
                                  }
                                }
                                viewBox="0 0 352 512"
                                width="1em"
                              >
                                <path
                                  d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                                />
                              </svg>
                            </TimesIcon>
                          </a>
                        </div>
                        <div
                          className="comparison-header"
                        >
                          <div
                            className="drift-header-icon"
                          >
                            <Tooltip
                              content={
                                <div>
                                  Historical system
                                </div>
                              }
                              position="top"
                            >
                              <Popper
                                appendTo={[Function]}
                                distance={15}
                                enableFlip={true}
                                flipBehavior={
                                  Array [
                                    "top",
                                    "right",
                                    "bottom",
                                    "left",
                                    "top",
                                    "right",
                                    "bottom",
                                  ]
                                }
                                isVisible={false}
                                onBlur={[Function]}
                                onDocumentClick={false}
                                onDocumentKeyDown={[Function]}
                                onFocus={[Function]}
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                                onTriggerEnter={[Function]}
                                placement="top"
                                popper={
                                  <div
                                    className="pf-c-tooltip"
                                    id="pf-tooltip-9"
                                    role="tooltip"
                                    style={
                                      Object {
                                        "maxWidth": null,
                                        "opacity": 0,
                                        "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                      }
                                    }
                                  >
                                    <TooltipArrow />
                                    <TooltipContent
                                      isLeftAligned={false}
                                    >
                                      <div>
                                        Historical system
                                      </div>
                                    </TooltipContent>
                                  </div>
                                }
                                popperMatchesTriggerWidth={false}
                                positionModifiers={
                                  Object {
                                    "bottom": "pf-m-bottom",
                                    "left": "pf-m-left",
                                    "right": "pf-m-right",
                                    "top": "pf-m-top",
                                  }
                                }
                                trigger={
                                  <ClockIcon
                                    aria-describedby="pf-tooltip-9"
                                    color="currentColor"
                                    noVerticalAlign={false}
                                    size="sm"
                                  />
                                }
                                zIndex={9999}
                              >
                                <FindRefWrapper
                                  onFoundRef={[Function]}
                                >
                                  <ClockIcon
                                    aria-describedby="pf-tooltip-9"
                                    color="currentColor"
                                    noVerticalAlign={false}
                                    size="sm"
                                  >
                                    <svg
                                      aria-describedby="pf-tooltip-9"
                                      aria-hidden={true}
                                      aria-labelledby={null}
                                      fill="currentColor"
                                      height="1em"
                                      role="img"
                                      style={
                                        Object {
                                          "verticalAlign": "-0.125em",
                                        }
                                      }
                                      viewBox="0 0 512 512"
                                      width="1em"
                                    >
                                      <path
                                        d="M256,8C119,8,8,119,8,256S119,504,256,504,504,393,504,256,393,8,256,8Zm92.49,313h0l-20,25a16,16,0,0,1-22.49,2.5h0l-67-49.72a40,40,0,0,1-15-31.23V112a16,16,0,0,1,16-16h32a16,16,0,0,1,16,16V256l58,42.5A16,16,0,0,1,348.49,321Z"
                                      />
                                    </svg>
                                  </ClockIcon>
                                </FindRefWrapper>
                              </Popper>
                            </Tooltip>
                          </div>
                          <div
                            className="system-name"
                          >
                            system1
                          </div>
                          <div
                            className="system-updated-and-reference"
                          >
                            <ReferenceSelector
                              isReference={false}
                              item={
                                Object {
                                  "display_name": "system1",
                                  "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                                  "last_updated": "2019-01-15T15:25:16.304899Z",
                                  "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                  "type": "historical-system-profile",
                                }
                              }
                              updateReferenceId={[Function]}
                            >
                              <Tooltip
                                content={
                                  <div>
                                    Use this 
                                    historical system
                                     as a reference to compare.
                                  </div>
                                }
                                position="top"
                              >
                                <Popper
                                  appendTo={[Function]}
                                  distance={15}
                                  enableFlip={true}
                                  flipBehavior={
                                    Array [
                                      "top",
                                      "right",
                                      "bottom",
                                      "left",
                                      "top",
                                      "right",
                                      "bottom",
                                    ]
                                  }
                                  isVisible={false}
                                  onBlur={[Function]}
                                  onDocumentClick={false}
                                  onDocumentKeyDown={[Function]}
                                  onFocus={[Function]}
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                  onTriggerEnter={[Function]}
                                  placement="top"
                                  popper={
                                    <div
                                      className="pf-c-tooltip"
                                      id="pf-tooltip-10"
                                      role="tooltip"
                                      style={
                                        Object {
                                          "maxWidth": null,
                                          "opacity": 0,
                                          "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                        }
                                      }
                                    >
                                      <TooltipArrow />
                                      <TooltipContent
                                        isLeftAligned={false}
                                      >
                                        <div>
                                          Use this 
                                          historical system
                                           as a reference to compare.
                                        </div>
                                      </TooltipContent>
                                    </div>
                                  }
                                  popperMatchesTriggerWidth={false}
                                  positionModifiers={
                                    Object {
                                      "bottom": "pf-m-bottom",
                                      "left": "pf-m-left",
                                      "right": "pf-m-right",
                                      "top": "pf-m-top",
                                    }
                                  }
                                  trigger={
                                    <OutlinedStarIcon
                                      aria-describedby="pf-tooltip-10"
                                      className="reference-selector pointer"
                                      color="currentColor"
                                      data-ouia-component-id="reference-selector-edmk59dj-fn42-dfjk-alv3-bmn2854mnn27"
                                      data-ouia-component-type="PF4/Button"
                                      noVerticalAlign={false}
                                      onClick={[Function]}
                                      size="sm"
                                    />
                                  }
                                  zIndex={9999}
                                >
                                  <FindRefWrapper
                                    onFoundRef={[Function]}
                                  >
                                    <OutlinedStarIcon
                                      aria-describedby="pf-tooltip-10"
                                      className="reference-selector pointer"
                                      color="currentColor"
                                      data-ouia-component-id="reference-selector-edmk59dj-fn42-dfjk-alv3-bmn2854mnn27"
                                      data-ouia-component-type="PF4/Button"
                                      noVerticalAlign={false}
                                      onClick={[Function]}
                                      size="sm"
                                    >
                                      <svg
                                        aria-describedby="pf-tooltip-10"
                                        aria-hidden={true}
                                        aria-labelledby={null}
                                        className="reference-selector pointer"
                                        data-ouia-component-id="reference-selector-edmk59dj-fn42-dfjk-alv3-bmn2854mnn27"
                                        data-ouia-component-type="PF4/Button"
                                        fill="currentColor"
                                        height="1em"
                                        onClick={[Function]}
                                        role="img"
                                        style={
                                          Object {
                                            "verticalAlign": "-0.125em",
                                          }
                                        }
                                        viewBox="0 0 576 512"
                                        width="1em"
                                      >
                                        <path
                                          d="M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z"
                                        />
                                      </svg>
                                    </OutlinedStarIcon>
                                  </FindRefWrapper>
                                </Popper>
                              </Tooltip>
                            </ReferenceSelector>
                            15 Jan 2019, 15:25 UTC
                            <withRouter(Connect(HistoricalProfilesPopover))
                              fetchCompare={[Function]}
                              hasCompareButton={true}
                              hasMultiSelect={true}
                              selectHistoricProfiles={[Function]}
                              system={
                                Object {
                                  "display_name": "system1",
                                  "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                                  "last_updated": "2019-01-15T15:25:16.304899Z",
                                  "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                  "type": "historical-system-profile",
                                }
                              }
                              systemIds={Array []}
                            >
                              <Connect(HistoricalProfilesPopover)
                                fetchCompare={[Function]}
                                hasCompareButton={true}
                                hasMultiSelect={true}
                                history={
                                  Object {
                                    "action": "POP",
                                    "block": [Function],
                                    "canGo": [Function],
                                    "createHref": [Function],
                                    "entries": Array [
                                      Object {
                                        "hash": "",
                                        "pathname": "/",
                                        "search": "",
                                        "state": undefined,
                                      },
                                    ],
                                    "go": [Function],
                                    "goBack": [Function],
                                    "goForward": [Function],
                                    "index": 0,
                                    "length": 1,
                                    "listen": [Function],
                                    "location": Object {
                                      "hash": "",
                                      "pathname": "/",
                                      "search": "",
                                      "state": undefined,
                                    },
                                    "push": [Function],
                                    "replace": [Function],
                                  }
                                }
                                location={
                                  Object {
                                    "hash": "",
                                    "pathname": "/",
                                    "search": "",
                                    "state": undefined,
                                  }
                                }
                                match={
                                  Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/",
                                    "url": "/",
                                  }
                                }
                                selectHistoricProfiles={[Function]}
                                system={
                                  Object {
                                    "display_name": "system1",
                                    "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                                    "last_updated": "2019-01-15T15:25:16.304899Z",
                                    "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                    "type": "historical-system-profile",
                                  }
                                }
                                systemIds={Array []}
                              >
                                <HistoricalProfilesPopover
                                  fetchCompare={[Function]}
                                  hasCompareButton={true}
                                  hasMultiSelect={true}
                                  history={
                                    Object {
                                      "action": "POP",
                                      "block": [Function],
                                      "canGo": [Function],
                                      "createHref": [Function],
                                      "entries": Array [
                                        Object {
                                          "hash": "",
                                          "pathname": "/",
                                          "search": "",
                                          "state": undefined,
                                        },
                                      ],
                                      "go": [Function],
                                      "goBack": [Function],
                                      "goForward": [Function],
                                      "index": 0,
                                      "length": 1,
                                      "listen": [Function],
                                      "location": Object {
                                        "hash": "",
                                        "pathname": "/",
                                        "search": "",
                                        "state": undefined,
                                      },
                                      "push": [Function],
                                      "replace": [Function],
                                    }
                                  }
                                  location={
                                    Object {
                                      "hash": "",
                                      "pathname": "/",
                                      "search": "",
                                      "state": undefined,
                                    }
                                  }
                                  match={
                                    Object {
                                      "isExact": true,
                                      "params": Object {},
                                      "path": "/",
                                      "url": "/",
                                    }
                                  }
                                  selectHistoricProfiles={[Function]}
                                  selectSingleHSP={[Function]}
                                  selectSystem={[Function]}
                                  selectedBaselineIds={Array []}
                                  selectedHSPIds={Array []}
                                  system={
                                    Object {
                                      "display_name": "system1",
                                      "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                                      "last_updated": "2019-01-15T15:25:16.304899Z",
                                      "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                      "type": "historical-system-profile",
                                    }
                                  }
                                  systemIds={Array []}
                                  updateColumns={[Function]}
                                >
                                  <span
                                    className="hsp-icon-padding historical-system-profile-popover"
                                    data-ouia-component-id="hsp-popover-toggle-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9"
                                    data-ouia-component-type="PF4/Button"
                                  >
                                    <Popover
                                      bodyContent={
                                        Array [
                                          <Skeleton
                                            className="hsp-dropdown-loading"
                                            isDark={false}
                                            size="sm"
                                          />,
                                          <Skeleton
                                            className="hsp-dropdown-loading"
                                            isDark={false}
                                            size="sm"
                                          />,
                                          <Skeleton
                                            className="hsp-dropdown-loading"
                                            isDark={false}
                                            size="sm"
                                          />,
                                        ]
                                      }
                                      footerContent={
                                        <Button
                                          onClick={[Function]}
                                          ouiaId="hsp-popover-compare"
                                          variant="primary"
                                        >
                                          Compare
                                        </Button>
                                      }
                                      headerContent={
                                        <div>
                                          Historical profiles for this system
                                        </div>
                                      }
                                      id="hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9"
                                      isVisible={false}
                                      shouldClose={[Function]}
                                    >
                                      <Popper
                                        appendTo={[Function]}
                                        distance={25}
                                        enableFlip={true}
                                        flipBehavior={
                                          Array [
                                            "top",
                                            "right",
                                            "bottom",
                                            "left",
                                            "top",
                                            "right",
                                            "bottom",
                                          ]
                                        }
                                        isVisible={false}
                                        onDocumentClick={[Function]}
                                        onDocumentKeyDown={[Function]}
                                        onTriggerClick={[Function]}
                                        onTriggerEnter={[Function]}
                                        placement="top"
                                        popper={
                                          <FocusTrap
                                            active={false}
                                            aria-describedby="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-body"
                                            aria-labelledby="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-header"
                                            aria-modal="true"
                                            className="pf-c-popover"
                                            focusTrapOptions={
                                              Object {
                                                "clickOutsideDeactivates": true,
                                                "returnFocusOnDeactivate": true,
                                              }
                                            }
                                            onMouseDown={[Function]}
                                            paused={false}
                                            role="dialog"
                                            style={
                                              Object {
                                                "maxWidth": null,
                                                "minWidth": null,
                                                "opacity": 0,
                                                "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                              }
                                            }
                                          >
                                            <PopoverArrow />
                                            <PopoverContent>
                                              <PopoverCloseButton
                                                aria-label="Close"
                                                onClose={[Function]}
                                              />
                                              <PopoverHeader
                                                id="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-header"
                                              >
                                                <div>
                                                  Historical profiles for this system
                                                </div>
                                              </PopoverHeader>
                                              <PopoverBody
                                                id="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-body"
                                              >
                                                <Skeleton
                                                  className="hsp-dropdown-loading"
                                                  isDark={false}
                                                  size="sm"
                                                />
                                                <Skeleton
                                                  className="hsp-dropdown-loading"
                                                  isDark={false}
                                                  size="sm"
                                                />
                                                <Skeleton
                                                  className="hsp-dropdown-loading"
                                                  isDark={false}
                                                  size="sm"
                                                />
                                              </PopoverBody>
                                              <PopoverFooter
                                                id="popover-hsp-popover-9c79efcc-8f9a-47c7-b0f2-142ff52e89e9-footer"
                                              >
                                                <Button
                                                  onClick={[Function]}
                                                  ouiaId="hsp-popover-compare"
                                                  variant="primary"
                                                >
                                                  Compare
                                                </Button>
                                              </PopoverFooter>
                                            </PopoverContent>
                                          </FocusTrap>
                                        }
                                        popperMatchesTriggerWidth={false}
                                        positionModifiers={
                                          Object {
                                            "bottom": "pf-m-bottom",
                                            "left": "pf-m-left",
                                            "right": "pf-m-right",
                                            "top": "pf-m-top",
                                          }
                                        }
                                        trigger={
                                          <HistoryIcon
                                            className="hsp-dropdown-icon"
                                            color="currentColor"
                                            noVerticalAlign={false}
                                            onClick={[Function]}
                                            size="sm"
                                          />
                                        }
                                        zIndex={9999}
                                      >
                                        <FindRefWrapper
                                          onFoundRef={[Function]}
                                        >
                                          <HistoryIcon
                                            className="hsp-dropdown-icon"
                                            color="currentColor"
                                            noVerticalAlign={false}
                                            onClick={[Function]}
                                            size="sm"
                                          >
                                            <svg
                                              aria-hidden={true}
                                              aria-labelledby={null}
                                              className="hsp-dropdown-icon"
                                              fill="currentColor"
                                              height="1em"
                                              onClick={[Function]}
                                              role="img"
                                              style={
                                                Object {
                                                  "verticalAlign": "-0.125em",
                                                }
                                              }
                                              viewBox="0 0 512 512"
                                              width="1em"
                                            >
                                              <path
                                                d="M504 255.531c.253 136.64-111.18 248.372-247.82 248.468-59.015.042-113.223-20.53-155.822-54.911-11.077-8.94-11.905-25.541-1.839-35.607l11.267-11.267c8.609-8.609 22.353-9.551 31.891-1.984C173.062 425.135 212.781 440 256 440c101.705 0 184-82.311 184-184 0-101.705-82.311-184-184-184-48.814 0-93.149 18.969-126.068 49.932l50.754 50.754c10.08 10.08 2.941 27.314-11.313 27.314H24c-8.837 0-16-7.163-16-16V38.627c0-14.254 17.234-21.393 27.314-11.314l49.372 49.372C129.209 34.136 189.552 8 256 8c136.81 0 247.747 110.78 248 247.531zm-180.912 78.784l9.823-12.63c8.138-10.463 6.253-25.542-4.21-33.679L288 256.349V152c0-13.255-10.745-24-24-24h-16c-13.255 0-24 10.745-24 24v135.651l65.409 50.874c10.463 8.137 25.541 6.253 33.679-4.21z"
                                              />
                                            </svg>
                                          </HistoryIcon>
                                        </FindRefWrapper>
                                      </Popper>
                                    </Popover>
                                  </span>
                                </HistoricalProfilesPopover>
                              </Connect(HistoricalProfilesPopover)>
                            </withRouter(Connect(HistoricalProfilesPopover))>
                          </div>
                        </div>
                      </th>
                      <th
                        className="drift-header system-header"
                        header-id="f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2"
                        key="f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2"
                      >
                        <div>
                          <a
                            className="remove-system-icon"
                            data-ouia-component-id="remove-system-button-f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2"
                            data-ouia-component-type="PF4/Button"
                            onClick={[Function]}
                          >
                            <TimesIcon
                              color="currentColor"
                              noVerticalAlign={false}
                              size="sm"
                            >
                              <svg
                                aria-hidden={true}
                                aria-labelledby={null}
                                fill="currentColor"
                                height="1em"
                                role="img"
                                style={
                                  Object {
                                    "verticalAlign": "-0.125em",
                                  }
                                }
                                viewBox="0 0 352 512"
                                width="1em"
                              >
                                <path
                                  d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                                />
                              </svg>
                            </TimesIcon>
                          </a>
                        </div>
                        <div
                          className="comparison-header"
                        >
                          <div
                            className="drift-header-icon"
                          >
                            <Tooltip
                              content={
                                <div>
                                  System
                                </div>
                              }
                              position="top"
                            >
                              <Popper
                                appendTo={[Function]}
                                distance={15}
                                enableFlip={true}
                                flipBehavior={
                                  Array [
                                    "top",
                                    "right",
                                    "bottom",
                                    "left",
                                    "top",
                                    "right",
                                    "bottom",
                                  ]
                                }
                                isVisible={false}
                                onBlur={[Function]}
                                onDocumentClick={false}
                                onDocumentKeyDown={[Function]}
                                onFocus={[Function]}
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                                onTriggerEnter={[Function]}
                                placement="top"
                                popper={
                                  <div
                                    className="pf-c-tooltip"
                                    id="pf-tooltip-11"
                                    role="tooltip"
                                    style={
                                      Object {
                                        "maxWidth": null,
                                        "opacity": 0,
                                        "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                      }
                                    }
                                  >
                                    <TooltipArrow />
                                    <TooltipContent
                                      isLeftAligned={false}
                                    >
                                      <div>
                                        System
                                      </div>
                                    </TooltipContent>
                                  </div>
                                }
                                popperMatchesTriggerWidth={false}
                                positionModifiers={
                                  Object {
                                    "bottom": "pf-m-bottom",
                                    "left": "pf-m-left",
                                    "right": "pf-m-right",
                                    "top": "pf-m-top",
                                  }
                                }
                                trigger={
                                  <ServerIcon
                                    aria-describedby="pf-tooltip-11"
                                    color="currentColor"
                                    noVerticalAlign={false}
                                    size="sm"
                                  />
                                }
                                zIndex={9999}
                              >
                                <FindRefWrapper
                                  onFoundRef={[Function]}
                                >
                                  <ServerIcon
                                    aria-describedby="pf-tooltip-11"
                                    color="currentColor"
                                    noVerticalAlign={false}
                                    size="sm"
                                  >
                                    <svg
                                      aria-describedby="pf-tooltip-11"
                                      aria-hidden={true}
                                      aria-labelledby={null}
                                      fill="currentColor"
                                      height="1em"
                                      role="img"
                                      style={
                                        Object {
                                          "verticalAlign": "-0.125em",
                                        }
                                      }
                                      viewBox="0 0 512 512"
                                      width="1em"
                                    >
                                      <path
                                        d="M480 160H32c-17.673 0-32-14.327-32-32V64c0-17.673 14.327-32 32-32h448c17.673 0 32 14.327 32 32v64c0 17.673-14.327 32-32 32zm-48-88c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm-64 0c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm112 248H32c-17.673 0-32-14.327-32-32v-64c0-17.673 14.327-32 32-32h448c17.673 0 32 14.327 32 32v64c0 17.673-14.327 32-32 32zm-48-88c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm-64 0c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm112 248H32c-17.673 0-32-14.327-32-32v-64c0-17.673 14.327-32 32-32h448c17.673 0 32 14.327 32 32v64c0 17.673-14.327 32-32 32zm-48-88c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm-64 0c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24z"
                                      />
                                    </svg>
                                  </ServerIcon>
                                </FindRefWrapper>
                              </Popper>
                            </Tooltip>
                          </div>
                          <div
                            className="system-name"
                          >
                            ibm-x3650m4-03-vm03.lab.eng.brq.redhat.com
                          </div>
                          <div
                            className="system-updated-and-reference"
                          >
                            <ReferenceSelector
                              isReference={false}
                              item={
                                Object {
                                  "display_name": "ibm-x3650m4-03-vm03.lab.eng.brq.redhat.com",
                                  "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                                  "last_updated": "2019-01-15T15:25:16.304899Z",
                                  "type": "system",
                                }
                              }
                              updateReferenceId={[Function]}
                            >
                              <Tooltip
                                content={
                                  <div>
                                    Use this 
                                    system
                                     as a reference to compare.
                                  </div>
                                }
                                position="top"
                              >
                                <Popper
                                  appendTo={[Function]}
                                  distance={15}
                                  enableFlip={true}
                                  flipBehavior={
                                    Array [
                                      "top",
                                      "right",
                                      "bottom",
                                      "left",
                                      "top",
                                      "right",
                                      "bottom",
                                    ]
                                  }
                                  isVisible={false}
                                  onBlur={[Function]}
                                  onDocumentClick={false}
                                  onDocumentKeyDown={[Function]}
                                  onFocus={[Function]}
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                  onTriggerEnter={[Function]}
                                  placement="top"
                                  popper={
                                    <div
                                      className="pf-c-tooltip"
                                      id="pf-tooltip-12"
                                      role="tooltip"
                                      style={
                                        Object {
                                          "maxWidth": null,
                                          "opacity": 0,
                                          "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                        }
                                      }
                                    >
                                      <TooltipArrow />
                                      <TooltipContent
                                        isLeftAligned={false}
                                      >
                                        <div>
                                          Use this 
                                          system
                                           as a reference to compare.
                                        </div>
                                      </TooltipContent>
                                    </div>
                                  }
                                  popperMatchesTriggerWidth={false}
                                  positionModifiers={
                                    Object {
                                      "bottom": "pf-m-bottom",
                                      "left": "pf-m-left",
                                      "right": "pf-m-right",
                                      "top": "pf-m-top",
                                    }
                                  }
                                  trigger={
                                    <OutlinedStarIcon
                                      aria-describedby="pf-tooltip-12"
                                      className="reference-selector pointer"
                                      color="currentColor"
                                      data-ouia-component-id="reference-selector-f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2"
                                      data-ouia-component-type="PF4/Button"
                                      noVerticalAlign={false}
                                      onClick={[Function]}
                                      size="sm"
                                    />
                                  }
                                  zIndex={9999}
                                >
                                  <FindRefWrapper
                                    onFoundRef={[Function]}
                                  >
                                    <OutlinedStarIcon
                                      aria-describedby="pf-tooltip-12"
                                      className="reference-selector pointer"
                                      color="currentColor"
                                      data-ouia-component-id="reference-selector-f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2"
                                      data-ouia-component-type="PF4/Button"
                                      noVerticalAlign={false}
                                      onClick={[Function]}
                                      size="sm"
                                    >
                                      <svg
                                        aria-describedby="pf-tooltip-12"
                                        aria-hidden={true}
                                        aria-labelledby={null}
                                        className="reference-selector pointer"
                                        data-ouia-component-id="reference-selector-f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2"
                                        data-ouia-component-type="PF4/Button"
                                        fill="currentColor"
                                        height="1em"
                                        onClick={[Function]}
                                        role="img"
                                        style={
                                          Object {
                                            "verticalAlign": "-0.125em",
                                          }
                                        }
                                        viewBox="0 0 576 512"
                                        width="1em"
                                      >
                                        <path
                                          d="M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z"
                                        />
                                      </svg>
                                    </OutlinedStarIcon>
                                  </FindRefWrapper>
                                </Popper>
                              </Tooltip>
                            </ReferenceSelector>
                            15 Jan 2019, 15:25 UTC
                            <withRouter(Connect(HistoricalProfilesPopover))
                              fetchCompare={[Function]}
                              hasCompareButton={true}
                              hasMultiSelect={true}
                              selectHistoricProfiles={[Function]}
                              system={
                                Object {
                                  "display_name": "ibm-x3650m4-03-vm03.lab.eng.brq.redhat.com",
                                  "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                                  "last_updated": "2019-01-15T15:25:16.304899Z",
                                  "type": "system",
                                }
                              }
                              systemIds={Array []}
                            >
                              <Connect(HistoricalProfilesPopover)
                                fetchCompare={[Function]}
                                hasCompareButton={true}
                                hasMultiSelect={true}
                                history={
                                  Object {
                                    "action": "POP",
                                    "block": [Function],
                                    "canGo": [Function],
                                    "createHref": [Function],
                                    "entries": Array [
                                      Object {
                                        "hash": "",
                                        "pathname": "/",
                                        "search": "",
                                        "state": undefined,
                                      },
                                    ],
                                    "go": [Function],
                                    "goBack": [Function],
                                    "goForward": [Function],
                                    "index": 0,
                                    "length": 1,
                                    "listen": [Function],
                                    "location": Object {
                                      "hash": "",
                                      "pathname": "/",
                                      "search": "",
                                      "state": undefined,
                                    },
                                    "push": [Function],
                                    "replace": [Function],
                                  }
                                }
                                location={
                                  Object {
                                    "hash": "",
                                    "pathname": "/",
                                    "search": "",
                                    "state": undefined,
                                  }
                                }
                                match={
                                  Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/",
                                    "url": "/",
                                  }
                                }
                                selectHistoricProfiles={[Function]}
                                system={
                                  Object {
                                    "display_name": "ibm-x3650m4-03-vm03.lab.eng.brq.redhat.com",
                                    "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                                    "last_updated": "2019-01-15T15:25:16.304899Z",
                                    "type": "system",
                                  }
                                }
                                systemIds={Array []}
                              >
                                <HistoricalProfilesPopover
                                  fetchCompare={[Function]}
                                  hasCompareButton={true}
                                  hasMultiSelect={true}
                                  history={
                                    Object {
                                      "action": "POP",
                                      "block": [Function],
                                      "canGo": [Function],
                                      "createHref": [Function],
                                      "entries": Array [
                                        Object {
                                          "hash": "",
                                          "pathname": "/",
                                          "search": "",
                                          "state": undefined,
                                        },
                                      ],
                                      "go": [Function],
                                      "goBack": [Function],
                                      "goForward": [Function],
                                      "index": 0,
                                      "length": 1,
                                      "listen": [Function],
                                      "location": Object {
                                        "hash": "",
                                        "pathname": "/",
                                        "search": "",
                                        "state": undefined,
                                      },
                                      "push": [Function],
                                      "replace": [Function],
                                    }
                                  }
                                  location={
                                    Object {
                                      "hash": "",
                                      "pathname": "/",
                                      "search": "",
                                      "state": undefined,
                                    }
                                  }
                                  match={
                                    Object {
                                      "isExact": true,
                                      "params": Object {},
                                      "path": "/",
                                      "url": "/",
                                    }
                                  }
                                  selectHistoricProfiles={[Function]}
                                  selectSingleHSP={[Function]}
                                  selectSystem={[Function]}
                                  selectedBaselineIds={Array []}
                                  selectedHSPIds={Array []}
                                  system={
                                    Object {
                                      "display_name": "ibm-x3650m4-03-vm03.lab.eng.brq.redhat.com",
                                      "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                                      "last_updated": "2019-01-15T15:25:16.304899Z",
                                      "type": "system",
                                    }
                                  }
                                  systemIds={Array []}
                                  updateColumns={[Function]}
                                >
                                  <span
                                    className="hsp-icon-padding historical-system-profile-popover"
                                    data-ouia-component-id="hsp-popover-toggle-f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2"
                                    data-ouia-component-type="PF4/Button"
                                  >
                                    <Popover
                                      bodyContent={
                                        Array [
                                          <Skeleton
                                            className="hsp-dropdown-loading"
                                            isDark={false}
                                            size="sm"
                                          />,
                                          <Skeleton
                                            className="hsp-dropdown-loading"
                                            isDark={false}
                                            size="sm"
                                          />,
                                          <Skeleton
                                            className="hsp-dropdown-loading"
                                            isDark={false}
                                            size="sm"
                                          />,
                                        ]
                                      }
                                      footerContent={
                                        <Button
                                          onClick={[Function]}
                                          ouiaId="hsp-popover-compare"
                                          variant="primary"
                                        >
                                          Compare
                                        </Button>
                                      }
                                      headerContent={
                                        <div>
                                          Historical profiles for this system
                                        </div>
                                      }
                                      id="hsp-popover-f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2"
                                      isVisible={false}
                                      shouldClose={[Function]}
                                    >
                                      <Popper
                                        appendTo={[Function]}
                                        distance={25}
                                        enableFlip={true}
                                        flipBehavior={
                                          Array [
                                            "top",
                                            "right",
                                            "bottom",
                                            "left",
                                            "top",
                                            "right",
                                            "bottom",
                                          ]
                                        }
                                        isVisible={false}
                                        onDocumentClick={[Function]}
                                        onDocumentKeyDown={[Function]}
                                        onTriggerClick={[Function]}
                                        onTriggerEnter={[Function]}
                                        placement="top"
                                        popper={
                                          <FocusTrap
                                            active={false}
                                            aria-describedby="popover-hsp-popover-f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2-body"
                                            aria-labelledby="popover-hsp-popover-f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2-header"
                                            aria-modal="true"
                                            className="pf-c-popover"
                                            focusTrapOptions={
                                              Object {
                                                "clickOutsideDeactivates": true,
                                                "returnFocusOnDeactivate": true,
                                              }
                                            }
                                            onMouseDown={[Function]}
                                            paused={false}
                                            role="dialog"
                                            style={
                                              Object {
                                                "maxWidth": null,
                                                "minWidth": null,
                                                "opacity": 0,
                                                "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                              }
                                            }
                                          >
                                            <PopoverArrow />
                                            <PopoverContent>
                                              <PopoverCloseButton
                                                aria-label="Close"
                                                onClose={[Function]}
                                              />
                                              <PopoverHeader
                                                id="popover-hsp-popover-f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2-header"
                                              >
                                                <div>
                                                  Historical profiles for this system
                                                </div>
                                              </PopoverHeader>
                                              <PopoverBody
                                                id="popover-hsp-popover-f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2-body"
                                              >
                                                <Skeleton
                                                  className="hsp-dropdown-loading"
                                                  isDark={false}
                                                  size="sm"
                                                />
                                                <Skeleton
                                                  className="hsp-dropdown-loading"
                                                  isDark={false}
                                                  size="sm"
                                                />
                                                <Skeleton
                                                  className="hsp-dropdown-loading"
                                                  isDark={false}
                                                  size="sm"
                                                />
                                              </PopoverBody>
                                              <PopoverFooter
                                                id="popover-hsp-popover-f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2-footer"
                                              >
                                                <Button
                                                  onClick={[Function]}
                                                  ouiaId="hsp-popover-compare"
                                                  variant="primary"
                                                >
                                                  Compare
                                                </Button>
                                              </PopoverFooter>
                                            </PopoverContent>
                                          </FocusTrap>
                                        }
                                        popperMatchesTriggerWidth={false}
                                        positionModifiers={
                                          Object {
                                            "bottom": "pf-m-bottom",
                                            "left": "pf-m-left",
                                            "right": "pf-m-right",
                                            "top": "pf-m-top",
                                          }
                                        }
                                        trigger={
                                          <HistoryIcon
                                            className="hsp-dropdown-icon"
                                            color="currentColor"
                                            noVerticalAlign={false}
                                            onClick={[Function]}
                                            size="sm"
                                          />
                                        }
                                        zIndex={9999}
                                      >
                                        <FindRefWrapper
                                          onFoundRef={[Function]}
                                        >
                                          <HistoryIcon
                                            className="hsp-dropdown-icon"
                                            color="currentColor"
                                            noVerticalAlign={false}
                                            onClick={[Function]}
                                            size="sm"
                                          >
                                            <svg
                                              aria-hidden={true}
                                              aria-labelledby={null}
                                              className="hsp-dropdown-icon"
                                              fill="currentColor"
                                              height="1em"
                                              onClick={[Function]}
                                              role="img"
                                              style={
                                                Object {
                                                  "verticalAlign": "-0.125em",
                                                }
                                              }
                                              viewBox="0 0 512 512"
                                              width="1em"
                                            >
                                              <path
                                                d="M504 255.531c.253 136.64-111.18 248.372-247.82 248.468-59.015.042-113.223-20.53-155.822-54.911-11.077-8.94-11.905-25.541-1.839-35.607l11.267-11.267c8.609-8.609 22.353-9.551 31.891-1.984C173.062 425.135 212.781 440 256 440c101.705 0 184-82.311 184-184 0-101.705-82.311-184-184-184-48.814 0-93.149 18.969-126.068 49.932l50.754 50.754c10.08 10.08 2.941 27.314-11.313 27.314H24c-8.837 0-16-7.163-16-16V38.627c0-14.254 17.234-21.393 27.314-11.314l49.372 49.372C129.209 34.136 189.552 8 256 8c136.81 0 247.747 110.78 248 247.531zm-180.912 78.784l9.823-12.63c8.138-10.463 6.253-25.542-4.21-33.679L288 256.349V152c0-13.255-10.745-24-24-24h-16c-13.255 0-24 10.745-24 24v135.651l65.409 50.874c10.463 8.137 25.541 6.253 33.679-4.21z"
                                              />
                                            </svg>
                                          </HistoryIcon>
                                        </FindRefWrapper>
                                      </Popper>
                                    </Popover>
                                  </span>
                                </HistoricalProfilesPopover>
                              </Connect(HistoricalProfilesPopover)>
                            </withRouter(Connect(HistoricalProfilesPopover))>
                          </div>
                        </div>
                      </th>
                    </tr>
                  </ComparisonHeader>
                </thead>
                <tbody>
                  <tr
                    className="unexpected-row"
                    data-ouia-component-id="comparison-table-row-cpus"
                    data-ouia-component-type="PF4/TableRow"
                  >
                    <td
                      className="sticky-column fixed-column-1"
                    >
                      cpus
                    </td>
                    <td
                      className="fact-state sticky-column fixed-column-2"
                    >
                      <StateIcon
                        fact={
                          Object {
                            "name": "cpus",
                            "state": "DIFFERENT",
                            "systems": Array [
                              Object {
                                "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                "value": "4",
                              },
                              Object {
                                "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                                "value": "3",
                              },
                            ],
                            "tooltip": "Different - At least one system fact value in this row differs.",
                          }
                        }
                      >
                        <Tooltip
                          content={
                            <div>
                              Different - At least one system fact value in this row differs.
                            </div>
                          }
                          key="cpus-undefined"
                          position="top"
                        >
                          <Popper
                            appendTo={[Function]}
                            distance={15}
                            enableFlip={true}
                            flipBehavior={
                              Array [
                                "top",
                                "right",
                                "bottom",
                                "left",
                                "top",
                                "right",
                                "bottom",
                              ]
                            }
                            isVisible={false}
                            onBlur={[Function]}
                            onDocumentClick={false}
                            onDocumentKeyDown={[Function]}
                            onFocus={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            onTriggerEnter={[Function]}
                            placement="top"
                            popper={
                              <div
                                className="pf-c-tooltip"
                                id="pf-tooltip-13"
                                role="tooltip"
                                style={
                                  Object {
                                    "maxWidth": null,
                                    "opacity": 0,
                                    "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                  }
                                }
                              >
                                <TooltipArrow />
                                <TooltipContent
                                  isLeftAligned={false}
                                >
                                  <div>
                                    Different - At least one system fact value in this row differs.
                                  </div>
                                </TooltipContent>
                              </div>
                            }
                            popperMatchesTriggerWidth={false}
                            positionModifiers={
                              Object {
                                "bottom": "pf-m-bottom",
                                "left": "pf-m-left",
                                "right": "pf-m-right",
                                "top": "pf-m-top",
                              }
                            }
                            trigger={
                              <ExclamationCircleIcon
                                aria-describedby="pf-tooltip-13"
                                color="#C9190B"
                                height="16px"
                                noVerticalAlign={false}
                                size="sm"
                                width="16px"
                              />
                            }
                            zIndex={9999}
                          >
                            <FindRefWrapper
                              onFoundRef={[Function]}
                            >
                              <ExclamationCircleIcon
                                aria-describedby="pf-tooltip-13"
                                color="#C9190B"
                                height="16px"
                                noVerticalAlign={false}
                                size="sm"
                                width="16px"
                              >
                                <svg
                                  aria-describedby="pf-tooltip-13"
                                  aria-hidden={true}
                                  aria-labelledby={null}
                                  fill="#C9190B"
                                  height="16px"
                                  role="img"
                                  style={
                                    Object {
                                      "verticalAlign": "-0.125em",
                                    }
                                  }
                                  viewBox="0 0 512 512"
                                  width="16px"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                  />
                                </svg>
                              </ExclamationCircleIcon>
                            </FindRefWrapper>
                          </Popper>
                        </Tooltip>
                      </StateIcon>
                    </td>
                    <td
                      className="comparison-cell highlight"
                    />
                    <td
                      className="comparison-cell highlight"
                    />
                    <td
                      className="comparison-cell highlight"
                    >
                      4
                    </td>
                    <td
                      className="comparison-cell highlight"
                    />
                    <td
                      className="comparison-cell highlight"
                    />
                    <td
                      className="comparison-cell highlight"
                    >
                      3
                    </td>
                  </tr>
                  <tr
                    className=""
                    data-ouia-component-id="comparison-table-row-bios_uuid"
                    data-ouia-component-type="PF4/TableRow"
                  >
                    <td
                      className="sticky-column fixed-column-1"
                    >
                      bios_uuid
                    </td>
                    <td
                      className="fact-state sticky-column fixed-column-2"
                    >
                      <StateIcon
                        fact={
                          Object {
                            "name": "bios_uuid",
                            "state": "SAME",
                            "systems": Array [
                              Object {
                                "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                "value": "FAKE-BIOS",
                              },
                              Object {
                                "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                                "value": "FAKE-BIOS",
                              },
                            ],
                          }
                        }
                      >
                        <Tooltip
                          content={<div />}
                          key="bios_uuid-undefined"
                          position="top"
                        >
                          <Popper
                            appendTo={[Function]}
                            distance={15}
                            enableFlip={true}
                            flipBehavior={
                              Array [
                                "top",
                                "right",
                                "bottom",
                                "left",
                                "top",
                                "right",
                                "bottom",
                              ]
                            }
                            isVisible={false}
                            onBlur={[Function]}
                            onDocumentClick={false}
                            onDocumentKeyDown={[Function]}
                            onFocus={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            onTriggerEnter={[Function]}
                            placement="top"
                            popper={
                              <div
                                className="pf-c-tooltip"
                                id="pf-tooltip-14"
                                role="tooltip"
                                style={
                                  Object {
                                    "maxWidth": null,
                                    "opacity": 0,
                                    "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                  }
                                }
                              >
                                <TooltipArrow />
                                <TooltipContent
                                  isLeftAligned={false}
                                >
                                  <div />
                                </TooltipContent>
                              </div>
                            }
                            popperMatchesTriggerWidth={false}
                            positionModifiers={
                              Object {
                                "bottom": "pf-m-bottom",
                                "left": "pf-m-left",
                                "right": "pf-m-right",
                                "top": "pf-m-top",
                              }
                            }
                            trigger={
                              <CheckCircleIcon
                                aria-describedby="pf-tooltip-14"
                                color="#3E8635"
                                height="16px"
                                noVerticalAlign={false}
                                size="sm"
                                width="16px"
                              />
                            }
                            zIndex={9999}
                          >
                            <FindRefWrapper
                              onFoundRef={[Function]}
                            >
                              <CheckCircleIcon
                                aria-describedby="pf-tooltip-14"
                                color="#3E8635"
                                height="16px"
                                noVerticalAlign={false}
                                size="sm"
                                width="16px"
                              >
                                <svg
                                  aria-describedby="pf-tooltip-14"
                                  aria-hidden={true}
                                  aria-labelledby={null}
                                  fill="#3E8635"
                                  height="16px"
                                  role="img"
                                  style={
                                    Object {
                                      "verticalAlign": "-0.125em",
                                    }
                                  }
                                  viewBox="0 0 512 512"
                                  width="16px"
                                >
                                  <path
                                    d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                                  />
                                </svg>
                              </CheckCircleIcon>
                            </FindRefWrapper>
                          </Popper>
                        </Tooltip>
                      </StateIcon>
                    </td>
                    <td
                      className="comparison-cell"
                    />
                    <td
                      className="comparison-cell"
                    />
                    <td
                      className="comparison-cell"
                    >
                      FAKE-BIOS
                    </td>
                    <td
                      className="comparison-cell"
                    />
                    <td
                      className="comparison-cell"
                    />
                    <td
                      className="comparison-cell"
                    >
                      FAKE-BIOS
                    </td>
                  </tr>
                  <tr
                    className=""
                    data-ouia-component-id="comparison-table-row-display_name"
                    data-ouia-component-type="PF4/TableRow"
                  >
                    <td
                      className="sticky-column fixed-column-1"
                    >
                      display_name
                    </td>
                    <td
                      className="fact-state sticky-column fixed-column-2"
                    >
                      <StateIcon
                        fact={
                          Object {
                            "name": "display_name",
                            "state": "SAME",
                            "systems": Array [
                              Object {
                                "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                "value": "PC-NAME",
                              },
                              Object {
                                "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                                "value": "PC-NAME",
                              },
                            ],
                          }
                        }
                      >
                        <Tooltip
                          content={<div />}
                          key="display_name-undefined"
                          position="top"
                        >
                          <Popper
                            appendTo={[Function]}
                            distance={15}
                            enableFlip={true}
                            flipBehavior={
                              Array [
                                "top",
                                "right",
                                "bottom",
                                "left",
                                "top",
                                "right",
                                "bottom",
                              ]
                            }
                            isVisible={false}
                            onBlur={[Function]}
                            onDocumentClick={false}
                            onDocumentKeyDown={[Function]}
                            onFocus={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            onTriggerEnter={[Function]}
                            placement="top"
                            popper={
                              <div
                                className="pf-c-tooltip"
                                id="pf-tooltip-15"
                                role="tooltip"
                                style={
                                  Object {
                                    "maxWidth": null,
                                    "opacity": 0,
                                    "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                  }
                                }
                              >
                                <TooltipArrow />
                                <TooltipContent
                                  isLeftAligned={false}
                                >
                                  <div />
                                </TooltipContent>
                              </div>
                            }
                            popperMatchesTriggerWidth={false}
                            positionModifiers={
                              Object {
                                "bottom": "pf-m-bottom",
                                "left": "pf-m-left",
                                "right": "pf-m-right",
                                "top": "pf-m-top",
                              }
                            }
                            trigger={
                              <CheckCircleIcon
                                aria-describedby="pf-tooltip-15"
                                color="#3E8635"
                                height="16px"
                                noVerticalAlign={false}
                                size="sm"
                                width="16px"
                              />
                            }
                            zIndex={9999}
                          >
                            <FindRefWrapper
                              onFoundRef={[Function]}
                            >
                              <CheckCircleIcon
                                aria-describedby="pf-tooltip-15"
                                color="#3E8635"
                                height="16px"
                                noVerticalAlign={false}
                                size="sm"
                                width="16px"
                              >
                                <svg
                                  aria-describedby="pf-tooltip-15"
                                  aria-hidden={true}
                                  aria-labelledby={null}
                                  fill="#3E8635"
                                  height="16px"
                                  role="img"
                                  style={
                                    Object {
                                      "verticalAlign": "-0.125em",
                                    }
                                  }
                                  viewBox="0 0 512 512"
                                  width="16px"
                                >
                                  <path
                                    d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                                  />
                                </svg>
                              </CheckCircleIcon>
                            </FindRefWrapper>
                          </Popper>
                        </Tooltip>
                      </StateIcon>
                    </td>
                    <td
                      className="comparison-cell"
                    />
                    <td
                      className="comparison-cell"
                    />
                    <td
                      className="comparison-cell"
                    >
                      PC-NAME
                    </td>
                    <td
                      className="comparison-cell"
                    />
                    <td
                      className="comparison-cell"
                    />
                    <td
                      className="comparison-cell"
                    >
                      PC-NAME
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
          </DriftTable>
        </Connect(DriftTable)>
      </withRouter(Connect(DriftTable))>
    </Provider>
  </Router>
</MemoryRouter>
`;

exports[`DriftTable should render correctly 1`] = `
<Fragment>
  <Connect(AddSystemModal)
    confirmModal={[Function]}
    selectedSystemIds={Array []}
  />
  <div
    className="drift-table-wrapper"
  >
    <table
      className="pf-c-table pf-m-compact drift-table"
      data-ouia-component-id="comparison-table"
      data-ouia-component-type="PF4/Table"
    >
      <thead>
        <ComparisonHeader
          factSort="asc"
          fetchCompare={[Function]}
          masterList={Array []}
          removeSystem={[Function]}
          selectHistoricProfiles={
            [MockFunction] {
              "calls": Array [
                Array [
                  Array [],
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            }
          }
          setHistory={[MockFunction]}
          stateSort="desc"
          systemIds={Array []}
          toggleFactSort={[MockFunction]}
          toggleStateSort={[MockFunction]}
          updateReferenceId={[Function]}
        />
      </thead>
      <tbody />
    </table>
  </div>
</Fragment>
`;
