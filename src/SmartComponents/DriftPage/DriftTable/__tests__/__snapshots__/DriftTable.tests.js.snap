// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ConnectedDriftTable should render correctly 1`] = `
<MemoryRouter
  keyLength={0}
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <withRouter(Connect(DriftTable))
        error={Object {}}
        updateReferenceId={
          [MockFunction] {
            "calls": Array [
              Array [
                undefined,
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          }
        }
      >
        <Connect(DriftTable)
          error={Object {}}
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "canGo": [Function],
              "createHref": [Function],
              "entries": Array [
                Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              ],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "index": 0,
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
          location={
            Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            }
          }
          match={
            Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            }
          }
          updateReferenceId={
            [MockFunction] {
              "calls": Array [
                Array [
                  undefined,
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            }
          }
        >
          <DriftTable
            addSystemModalOpened={false}
            baselines={Array []}
            emptyState={false}
            error={Object {}}
            expandRow={[Function]}
            fetchCompare={[Function]}
            fullCompareData={Array []}
            historicalProfiles={Array []}
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            loading={false}
            location={
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              }
            }
            match={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
            selectHistoricProfiles={[Function]}
            setSelectedBaselines={[Function]}
            systems={Array []}
            toggleFactSort={[Function]}
            toggleStateSort={[Function]}
            updateReferenceId={
              [MockFunction] {
                "calls": Array [
                  Array [
                    undefined,
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              }
            }
          >
            <Connect(AddSystemModal)
              confirmModal={[Function]}
              selectedSystemIds={Array []}
            >
              <AddSystemModal
                addSystemModalOpened={false}
                baselines={Array []}
                confirmModal={[Function]}
                historicalProfiles={Array []}
                selectActiveTab={[Function]}
                selectBaseline={[Function]}
                selectedBaselineIds={Array []}
                selectedHSPIds={Array []}
                selectedSystemIds={Array []}
                systems={Array []}
                toggleModal={[Function]}
              >
                <Modal
                  actions={
                    Array [
                      <Button
                        isDisabled={true}
                        onClick={[Function]}
                        variant="primary"
                      >
                        Submit
                      </Button>,
                    ]
                  }
                  appendTo={[Function]}
                  aria-describedby=""
                  aria-label=""
                  aria-labelledby=""
                  className=""
                  hasNoBodyWrapper={false}
                  isOpen={false}
                  onClose={[Function]}
                  ouiaSafe={true}
                  showClose={true}
                  title="Add to comparison"
                  variant="default"
                  width="950px"
                >
                  <Portal
                    containerInfo={<div />}
                  >
                    <ModalContent
                      actions={
                        Array [
                          <Button
                            isDisabled={true}
                            onClick={[Function]}
                            variant="primary"
                          >
                            Submit
                          </Button>,
                        ]
                      }
                      aria-describedby=""
                      aria-label=""
                      aria-labelledby=""
                      boxId="pf-modal-part-0"
                      className=""
                      descriptorId="pf-modal-part-2"
                      hasNoBodyWrapper={false}
                      isOpen={false}
                      labelId="pf-modal-part-1"
                      onClose={[Function]}
                      ouiaSafe={true}
                      showClose={true}
                      title="Add to comparison"
                      variant="default"
                      width="950px"
                    />
                  </Portal>
                </Modal>
              </AddSystemModal>
            </Connect(AddSystemModal)>
            <div
              className="drift-table-wrapper"
            >
              <table
                className="pf-c-table pf-m-compact drift-table"
              >
                <thead>
                  <ComparisonHeader
                    fetchCompare={[Function]}
                    masterList={Array []}
                    removeSystem={[Function]}
                    systemIds={Array []}
                    toggleFactSort={[Function]}
                    toggleStateSort={[Function]}
                    updateReferenceId={[Function]}
                  >
                    <tr
                      className="sticky-column-header"
                    >
                      <th
                        className="fact-header sticky-column fixed-column-1 pointer"
                        key="fact-header"
                        onClick={[Function]}
                      >
                        <div
                          className="active-blue"
                        >
                          Fact 
                          <ArrowsAltVIcon
                            className="not-active"
                            color="currentColor"
                            noVerticalAlign={false}
                            size="sm"
                          >
                            <svg
                              aria-hidden={true}
                              aria-labelledby={null}
                              className="not-active"
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style={
                                Object {
                                  "verticalAlign": "-0.125em",
                                }
                              }
                              viewBox="0 0 256 512"
                              width="1em"
                            >
                              <path
                                d="M214.059 377.941H168V134.059h46.059c21.382 0 32.09-25.851 16.971-40.971L144.971 7.029c-9.373-9.373-24.568-9.373-33.941 0L24.971 93.088c-15.119 15.119-4.411 40.971 16.971 40.971H88v243.882H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.568 9.373 33.941 0l86.059-86.059c15.12-15.119 4.412-40.971-16.97-40.971z"
                              />
                            </svg>
                          </ArrowsAltVIcon>
                        </div>
                      </th>
                      <th
                        className="state-header sticky-column fixed-column-2 pointer"
                        id="disabled"
                        key="state-header"
                        onClick={[Function]}
                      >
                        <div
                          className="active-blue"
                        >
                          State 
                          <ArrowsAltVIcon
                            className="not-active"
                            color="currentColor"
                            noVerticalAlign={false}
                            size="sm"
                          >
                            <svg
                              aria-hidden={true}
                              aria-labelledby={null}
                              className="not-active"
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style={
                                Object {
                                  "verticalAlign": "-0.125em",
                                }
                              }
                              viewBox="0 0 256 512"
                              width="1em"
                            >
                              <path
                                d="M214.059 377.941H168V134.059h46.059c21.382 0 32.09-25.851 16.971-40.971L144.971 7.029c-9.373-9.373-24.568-9.373-33.941 0L24.971 93.088c-15.119 15.119-4.411 40.971 16.971 40.971H88v243.882H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.568 9.373 33.941 0l86.059-86.059c15.12-15.119 4.412-40.971-16.97-40.971z"
                              />
                            </svg>
                          </ArrowsAltVIcon>
                        </div>
                      </th>
                    </tr>
                  </ComparisonHeader>
                </thead>
                <tbody />
              </table>
            </div>
          </DriftTable>
        </Connect(DriftTable)>
      </withRouter(Connect(DriftTable))>
    </Provider>
  </Router>
</MemoryRouter>
`;

exports[`ConnectedDriftTable should render loading rows 1`] = `
<MemoryRouter
  keyLength={0}
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <withRouter(Connect(DriftTable))
        error={Object {}}
        updateReferenceId={
          [MockFunction] {
            "calls": Array [
              Array [
                undefined,
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          }
        }
      >
        <Connect(DriftTable)
          error={Object {}}
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "canGo": [Function],
              "createHref": [Function],
              "entries": Array [
                Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              ],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "index": 0,
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
          location={
            Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            }
          }
          match={
            Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            }
          }
          updateReferenceId={
            [MockFunction] {
              "calls": Array [
                Array [
                  undefined,
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            }
          }
        >
          <DriftTable
            addSystemModalOpened={false}
            baselines={Array []}
            emptyState={false}
            error={Object {}}
            expandRow={[Function]}
            fetchCompare={[Function]}
            fullCompareData={Array []}
            historicalProfiles={Array []}
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            loading={true}
            location={
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              }
            }
            match={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
            selectHistoricProfiles={[Function]}
            setSelectedBaselines={[Function]}
            systems={Array []}
            toggleFactSort={[Function]}
            toggleStateSort={[Function]}
            updateReferenceId={
              [MockFunction] {
                "calls": Array [
                  Array [
                    undefined,
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              }
            }
          >
            <Connect(AddSystemModal)
              confirmModal={[Function]}
              selectedSystemIds={Array []}
            >
              <AddSystemModal
                addSystemModalOpened={false}
                baselines={Array []}
                confirmModal={[Function]}
                historicalProfiles={Array []}
                selectActiveTab={[Function]}
                selectBaseline={[Function]}
                selectedBaselineIds={Array []}
                selectedHSPIds={Array []}
                selectedSystemIds={Array []}
                systems={Array []}
                toggleModal={[Function]}
              >
                <Modal
                  actions={
                    Array [
                      <Button
                        isDisabled={true}
                        onClick={[Function]}
                        variant="primary"
                      >
                        Submit
                      </Button>,
                    ]
                  }
                  appendTo={[Function]}
                  aria-describedby=""
                  aria-label=""
                  aria-labelledby=""
                  className=""
                  hasNoBodyWrapper={false}
                  isOpen={false}
                  onClose={[Function]}
                  ouiaSafe={true}
                  showClose={true}
                  title="Add to comparison"
                  variant="default"
                  width="950px"
                >
                  <Portal
                    containerInfo={<div />}
                  >
                    <ModalContent
                      actions={
                        Array [
                          <Button
                            isDisabled={true}
                            onClick={[Function]}
                            variant="primary"
                          >
                            Submit
                          </Button>,
                        ]
                      }
                      aria-describedby=""
                      aria-label=""
                      aria-labelledby=""
                      boxId="pf-modal-part-2"
                      className=""
                      descriptorId="pf-modal-part-4"
                      hasNoBodyWrapper={false}
                      isOpen={false}
                      labelId="pf-modal-part-3"
                      onClose={[Function]}
                      ouiaSafe={true}
                      showClose={true}
                      title="Add to comparison"
                      variant="default"
                      width="950px"
                    />
                  </Portal>
                </Modal>
              </AddSystemModal>
            </Connect(AddSystemModal)>
            <div
              className="drift-table-wrapper"
            >
              <table
                className="pf-c-table pf-m-compact drift-table"
              >
                <thead>
                  <ComparisonHeader
                    fetchCompare={[Function]}
                    masterList={Array []}
                    removeSystem={[Function]}
                    systemIds={Array []}
                    toggleFactSort={[Function]}
                    toggleStateSort={[Function]}
                    updateReferenceId={[Function]}
                  >
                    <tr
                      className="sticky-column-header"
                    >
                      <th
                        className="fact-header sticky-column fixed-column-1 pointer"
                        key="fact-header"
                        onClick={[Function]}
                      >
                        <div
                          className="active-blue"
                        >
                          Fact 
                          <ArrowsAltVIcon
                            className="not-active"
                            color="currentColor"
                            noVerticalAlign={false}
                            size="sm"
                          >
                            <svg
                              aria-hidden={true}
                              aria-labelledby={null}
                              className="not-active"
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style={
                                Object {
                                  "verticalAlign": "-0.125em",
                                }
                              }
                              viewBox="0 0 256 512"
                              width="1em"
                            >
                              <path
                                d="M214.059 377.941H168V134.059h46.059c21.382 0 32.09-25.851 16.971-40.971L144.971 7.029c-9.373-9.373-24.568-9.373-33.941 0L24.971 93.088c-15.119 15.119-4.411 40.971 16.971 40.971H88v243.882H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.568 9.373 33.941 0l86.059-86.059c15.12-15.119 4.412-40.971-16.97-40.971z"
                              />
                            </svg>
                          </ArrowsAltVIcon>
                        </div>
                      </th>
                      <th
                        className="state-header sticky-column fixed-column-2 pointer"
                        id="disabled"
                        key="state-header"
                        onClick={[Function]}
                      >
                        <div
                          className="active-blue"
                        >
                          State 
                          <ArrowsAltVIcon
                            className="not-active"
                            color="currentColor"
                            noVerticalAlign={false}
                            size="sm"
                          >
                            <svg
                              aria-hidden={true}
                              aria-labelledby={null}
                              className="not-active"
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style={
                                Object {
                                  "verticalAlign": "-0.125em",
                                }
                              }
                              viewBox="0 0 256 512"
                              width="1em"
                            >
                              <path
                                d="M214.059 377.941H168V134.059h46.059c21.382 0 32.09-25.851 16.971-40.971L144.971 7.029c-9.373-9.373-24.568-9.373-33.941 0L24.971 93.088c-15.119 15.119-4.411 40.971 16.971 40.971H88v243.882H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.568 9.373 33.941 0l86.059-86.059c15.12-15.119 4.412-40.971-16.97-40.971z"
                              />
                            </svg>
                          </ArrowsAltVIcon>
                        </div>
                      </th>
                    </tr>
                  </ComparisonHeader>
                </thead>
                <tbody>
                  <tr>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                    <td>
                      <Skeleton
                        isDark={false}
                        size="md"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__md"
                        >
                           
                        </div>
                      </Skeleton>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
          </DriftTable>
        </Connect(DriftTable)>
      </withRouter(Connect(DriftTable))>
    </Provider>
  </Router>
</MemoryRouter>
`;

exports[`ConnectedDriftTable should render systems, baselines and historicalProfiles 1`] = `
<MemoryRouter
  keyLength={0}
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <withRouter(Connect(DriftTable))
        updateReferenceId={
          [MockFunction] {
            "calls": Array [
              Array [
                undefined,
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          }
        }
      >
        <Connect(DriftTable)
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "canGo": [Function],
              "createHref": [Function],
              "entries": Array [
                Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              ],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "index": 0,
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
          location={
            Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            }
          }
          match={
            Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            }
          }
          updateReferenceId={
            [MockFunction] {
              "calls": Array [
                Array [
                  undefined,
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            }
          }
        >
          <DriftTable
            addSystemModalOpened={false}
            baselines={
              Array [
                Object {
                  "display_name": "baseline1",
                  "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                  "last_updated": "2019-01-15T14:53:15.886891Z",
                  "type": "baseline",
                },
                Object {
                  "display_name": "baseline2",
                  "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                  "last_updated": "2019-01-15T15:25:16.304899Z",
                  "type": "baseline",
                },
              ]
            }
            emptyState={false}
            expandRow={[Function]}
            fetchCompare={[Function]}
            fullCompareData={
              Array [
                Object {
                  "name": "cpus",
                  "state": "DIFFERENT",
                  "systems": Array [
                    Object {
                      "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                      "value": "4",
                    },
                    Object {
                      "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                      "value": "3",
                    },
                  ],
                },
                Object {
                  "name": "bios_uuid",
                  "state": "SAME",
                  "systems": Array [
                    Object {
                      "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                      "value": "FAKE-BIOS",
                    },
                    Object {
                      "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                      "value": "FAKE-BIOS",
                    },
                  ],
                },
                Object {
                  "name": "display_name",
                  "state": "SAME",
                  "systems": Array [
                    Object {
                      "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                      "value": "PC-NAME",
                    },
                    Object {
                      "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                      "value": "PC-NAME",
                    },
                  ],
                },
              ]
            }
            historicalProfiles={
              Array [
                Object {
                  "display_name": "system1",
                  "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                  "last_updated": "2019-01-15T14:53:15.886891Z",
                  "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                  "type": "historical-system-profile",
                },
                Object {
                  "display_name": "system1",
                  "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                  "last_updated": "2019-01-15T15:25:16.304899Z",
                  "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                  "type": "historical-system-profile",
                },
              ]
            }
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            loading={false}
            location={
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              }
            }
            match={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
            selectHistoricProfiles={[Function]}
            setSelectedBaselines={[Function]}
            systems={
              Array [
                Object {
                  "display_name": "sgi-xe500-01.rhts.eng.bos.redhat.com",
                  "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                  "last_updated": "2019-01-15T14:53:15.886891Z",
                  "type": "system",
                },
                Object {
                  "display_name": "ibm-x3650m4-03-vm03.lab.eng.brq.redhat.com",
                  "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                  "last_updated": "2019-01-15T15:25:16.304899Z",
                  "type": "system",
                },
              ]
            }
            toggleFactSort={[Function]}
            toggleStateSort={[Function]}
            updateReferenceId={
              [MockFunction] {
                "calls": Array [
                  Array [
                    undefined,
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              }
            }
          >
            <Connect(AddSystemModal)
              confirmModal={[Function]}
              selectedSystemIds={
                Array [
                  "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                  "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                ]
              }
            >
              <AddSystemModal
                addSystemModalOpened={false}
                baselines={
                  Array [
                    Object {
                      "display_name": "baseline1",
                      "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                      "last_updated": "2019-01-15T14:53:15.886891Z",
                      "type": "baseline",
                    },
                    Object {
                      "display_name": "baseline2",
                      "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                      "last_updated": "2019-01-15T15:25:16.304899Z",
                      "type": "baseline",
                    },
                  ]
                }
                confirmModal={[Function]}
                historicalProfiles={
                  Array [
                    Object {
                      "display_name": "system1",
                      "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                      "last_updated": "2019-01-15T14:53:15.886891Z",
                      "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                      "type": "historical-system-profile",
                    },
                    Object {
                      "display_name": "system1",
                      "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                      "last_updated": "2019-01-15T15:25:16.304899Z",
                      "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                      "type": "historical-system-profile",
                    },
                  ]
                }
                selectActiveTab={[Function]}
                selectBaseline={[Function]}
                selectedBaselineIds={Array []}
                selectedHSPIds={Array []}
                selectedSystemIds={
                  Array [
                    "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                    "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                  ]
                }
                systems={
                  Array [
                    Object {
                      "display_name": "sgi-xe500-01.rhts.eng.bos.redhat.com",
                      "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                      "last_updated": "2019-01-15T14:53:15.886891Z",
                      "type": "system",
                    },
                    Object {
                      "display_name": "ibm-x3650m4-03-vm03.lab.eng.brq.redhat.com",
                      "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                      "last_updated": "2019-01-15T15:25:16.304899Z",
                      "type": "system",
                    },
                  ]
                }
                toggleModal={[Function]}
              >
                <Modal
                  actions={
                    Array [
                      <Button
                        isDisabled={true}
                        onClick={[Function]}
                        variant="primary"
                      >
                        Submit
                      </Button>,
                    ]
                  }
                  appendTo={[Function]}
                  aria-describedby=""
                  aria-label=""
                  aria-labelledby=""
                  className=""
                  hasNoBodyWrapper={false}
                  isOpen={false}
                  onClose={[Function]}
                  ouiaSafe={true}
                  showClose={true}
                  title="Add to comparison"
                  variant="default"
                  width="950px"
                >
                  <Portal
                    containerInfo={<div />}
                  >
                    <ModalContent
                      actions={
                        Array [
                          <Button
                            isDisabled={true}
                            onClick={[Function]}
                            variant="primary"
                          >
                            Submit
                          </Button>,
                        ]
                      }
                      aria-describedby=""
                      aria-label=""
                      aria-labelledby=""
                      boxId="pf-modal-part-1"
                      className=""
                      descriptorId="pf-modal-part-3"
                      hasNoBodyWrapper={false}
                      isOpen={false}
                      labelId="pf-modal-part-2"
                      onClose={[Function]}
                      ouiaSafe={true}
                      showClose={true}
                      title="Add to comparison"
                      variant="default"
                      width="950px"
                    />
                  </Portal>
                </Modal>
              </AddSystemModal>
            </Connect(AddSystemModal)>
            <div
              className="drift-table-wrapper"
            >
              <table
                className="pf-c-table pf-m-compact drift-table"
              >
                <thead>
                  <ComparisonHeader
                    fetchCompare={[Function]}
                    masterList={
                      Array [
                        Object {
                          "display_name": "baseline1",
                          "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e9",
                          "last_updated": "2019-01-15T14:53:15.886891Z",
                          "type": "baseline",
                        },
                        Object {
                          "display_name": "baseline2",
                          "id": "fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29",
                          "last_updated": "2019-01-15T15:25:16.304899Z",
                          "type": "baseline",
                        },
                        Object {
                          "display_name": "sgi-xe500-01.rhts.eng.bos.redhat.com",
                          "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                          "last_updated": "2019-01-15T14:53:15.886891Z",
                          "type": "system",
                        },
                        Object {
                          "display_name": "system1",
                          "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                          "last_updated": "2019-01-15T14:53:15.886891Z",
                          "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                          "type": "historical-system-profile",
                        },
                        Object {
                          "display_name": "system1",
                          "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                          "last_updated": "2019-01-15T15:25:16.304899Z",
                          "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                          "type": "historical-system-profile",
                        },
                        Object {
                          "display_name": "ibm-x3650m4-03-vm03.lab.eng.brq.redhat.com",
                          "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                          "last_updated": "2019-01-15T15:25:16.304899Z",
                          "type": "system",
                        },
                      ]
                    }
                    removeSystem={[Function]}
                    systemIds={Array []}
                    toggleFactSort={[Function]}
                    toggleStateSort={[Function]}
                    updateReferenceId={[Function]}
                  >
                    <tr
                      className="sticky-column-header"
                    >
                      <th
                        className="fact-header sticky-column fixed-column-1 pointer"
                        key="fact-header"
                        onClick={[Function]}
                      >
                        <div
                          className="active-blue"
                        >
                          Fact 
                          <ArrowsAltVIcon
                            className="not-active"
                            color="currentColor"
                            noVerticalAlign={false}
                            size="sm"
                          >
                            <svg
                              aria-hidden={true}
                              aria-labelledby={null}
                              className="not-active"
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style={
                                Object {
                                  "verticalAlign": "-0.125em",
                                }
                              }
                              viewBox="0 0 256 512"
                              width="1em"
                            >
                              <path
                                d="M214.059 377.941H168V134.059h46.059c21.382 0 32.09-25.851 16.971-40.971L144.971 7.029c-9.373-9.373-24.568-9.373-33.941 0L24.971 93.088c-15.119 15.119-4.411 40.971 16.971 40.971H88v243.882H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.568 9.373 33.941 0l86.059-86.059c15.12-15.119 4.412-40.971-16.97-40.971z"
                              />
                            </svg>
                          </ArrowsAltVIcon>
                        </div>
                      </th>
                      <th
                        className="state-header sticky-column fixed-column-2 pointer"
                        id="disabled"
                        key="state-header"
                        onClick={[Function]}
                      >
                        <div
                          className="active-blue"
                        >
                          State 
                          <ArrowsAltVIcon
                            className="not-active"
                            color="currentColor"
                            noVerticalAlign={false}
                            size="sm"
                          >
                            <svg
                              aria-hidden={true}
                              aria-labelledby={null}
                              className="not-active"
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style={
                                Object {
                                  "verticalAlign": "-0.125em",
                                }
                              }
                              viewBox="0 0 256 512"
                              width="1em"
                            >
                              <path
                                d="M214.059 377.941H168V134.059h46.059c21.382 0 32.09-25.851 16.971-40.971L144.971 7.029c-9.373-9.373-24.568-9.373-33.941 0L24.971 93.088c-15.119 15.119-4.411 40.971 16.971 40.971H88v243.882H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.568 9.373 33.941 0l86.059-86.059c15.12-15.119 4.412-40.971-16.97-40.971z"
                              />
                            </svg>
                          </ArrowsAltVIcon>
                        </div>
                      </th>
                      <th
                        className="drift-header baseline-header"
                        header-id="9bbbefcc-8f23-4d97-07f2-142asdl234e9"
                        key="9bbbefcc-8f23-4d97-07f2-142asdl234e9"
                      >
                        <div>
                          <a
                            className="remove-system-icon"
                            onClick={[Function]}
                          >
                            <TimesIcon
                              color="currentColor"
                              noVerticalAlign={false}
                              size="sm"
                            >
                              <svg
                                aria-hidden={true}
                                aria-labelledby={null}
                                fill="currentColor"
                                height="1em"
                                role="img"
                                style={
                                  Object {
                                    "verticalAlign": "-0.125em",
                                  }
                                }
                                viewBox="0 0 352 512"
                                width="1em"
                              >
                                <path
                                  d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                                />
                              </svg>
                            </TimesIcon>
                          </a>
                        </div>
                        <div
                          className="comparison-header"
                        >
                          <div
                            className="drift-header-icon"
                          >
                            <BlueprintIcon
                              color="currentColor"
                              noVerticalAlign={false}
                              size="sm"
                            >
                              <svg
                                aria-hidden={true}
                                aria-labelledby={null}
                                fill="currentColor"
                                height="1em"
                                role="img"
                                style={
                                  Object {
                                    "verticalAlign": "-0.125em",
                                  }
                                }
                                viewBox="0 0 1024 1024"
                                width="1em"
                              >
                                <path
                                  d="M0,767.3 L0,640 L64,640 L64,752.3 C64,760.584271 70.7157288,767.3 79,767.3 L128,768.1 L128,832.1 L64,831.3 C28.6674863,831.266922 0.0330777378,802.632514 0,767.3 Z M64,0 L191.3,0 L191.3,64 L79,64 C70.7157288,64 64,70.7157288 64,79 L64,192 L0,192 L0,64 C0.0330777378,28.6674863 28.6674863,0.0330777378 64,0 Z M0,384 L64,384 L64,256 L0,256 L0,384 Z M0,576 L64,576 L64,448 L0,448 L0,576 Z M832,64.7 L832,128 L768,128 L768,79.7 C768,71.4157288 761.284271,64.7 753,64.7 L640,64.7 L640,0.7 L768,0.7 C803.332514,0.733077738 831.966922,29.3674863 832,64.7 Z M448,64.7 L576,64.7 L576,0.7 L448,0.7 L448,64.7 Z M256,64.7 L384,64.7 L384,0.7 L256,0.7 L256,64.7 Z M960,192 L256,192 C220.667486,192.033078 192.033078,220.667486 192,256 L192,960 C192.033078,995.332514 220.667486,1023.96692 256,1024 L960,1024 C995.332514,1023.96692 1023.96692,995.332514 1024,960 L1024,256 C1023.96692,220.667486 995.332514,192.033078 960,192 Z M960,945 C960,953.284271 953.284271,960 945,960 L271,960 C262.715729,960 256,953.284271 256,945 L256,271 C256,262.715729 262.715729,256 271,256 L945,256 C953.284271,256 960,262.715729 960,271 L960,945 Z"
                                />
                              </svg>
                            </BlueprintIcon>
                          </div>
                          <div
                            className="system-name"
                          >
                            baseline1
                          </div>
                          <div
                            className="system-updated-and-reference"
                          >
                            <ReferenceSelector
                              id="9bbbefcc-8f23-4d97-07f2-142asdl234e9"
                              isReference={false}
                              updateReferenceId={[Function]}
                            >
                              <OutlinedStarIcon
                                className="reference-selector pointer"
                                color="currentColor"
                                noVerticalAlign={false}
                                onClick={[Function]}
                                size="sm"
                              >
                                <svg
                                  aria-hidden={true}
                                  aria-labelledby={null}
                                  className="reference-selector pointer"
                                  fill="currentColor"
                                  height="1em"
                                  onClick={[Function]}
                                  role="img"
                                  style={
                                    Object {
                                      "verticalAlign": "-0.125em",
                                    }
                                  }
                                  viewBox="0 0 576 512"
                                  width="1em"
                                >
                                  <path
                                    d="M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z"
                                  />
                                </svg>
                              </OutlinedStarIcon>
                            </ReferenceSelector>
                            15 Jan 2019, 14:53 UTC
                          </div>
                        </div>
                      </th>
                      <th
                        className="drift-header baseline-header"
                        header-id="fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29"
                        key="fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29"
                      >
                        <div>
                          <a
                            className="remove-system-icon"
                            onClick={[Function]}
                          >
                            <TimesIcon
                              color="currentColor"
                              noVerticalAlign={false}
                              size="sm"
                            >
                              <svg
                                aria-hidden={true}
                                aria-labelledby={null}
                                fill="currentColor"
                                height="1em"
                                role="img"
                                style={
                                  Object {
                                    "verticalAlign": "-0.125em",
                                  }
                                }
                                viewBox="0 0 352 512"
                                width="1em"
                              >
                                <path
                                  d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                                />
                              </svg>
                            </TimesIcon>
                          </a>
                        </div>
                        <div
                          className="comparison-header"
                        >
                          <div
                            className="drift-header-icon"
                          >
                            <BlueprintIcon
                              color="currentColor"
                              noVerticalAlign={false}
                              size="sm"
                            >
                              <svg
                                aria-hidden={true}
                                aria-labelledby={null}
                                fill="currentColor"
                                height="1em"
                                role="img"
                                style={
                                  Object {
                                    "verticalAlign": "-0.125em",
                                  }
                                }
                                viewBox="0 0 1024 1024"
                                width="1em"
                              >
                                <path
                                  d="M0,767.3 L0,640 L64,640 L64,752.3 C64,760.584271 70.7157288,767.3 79,767.3 L128,768.1 L128,832.1 L64,831.3 C28.6674863,831.266922 0.0330777378,802.632514 0,767.3 Z M64,0 L191.3,0 L191.3,64 L79,64 C70.7157288,64 64,70.7157288 64,79 L64,192 L0,192 L0,64 C0.0330777378,28.6674863 28.6674863,0.0330777378 64,0 Z M0,384 L64,384 L64,256 L0,256 L0,384 Z M0,576 L64,576 L64,448 L0,448 L0,576 Z M832,64.7 L832,128 L768,128 L768,79.7 C768,71.4157288 761.284271,64.7 753,64.7 L640,64.7 L640,0.7 L768,0.7 C803.332514,0.733077738 831.966922,29.3674863 832,64.7 Z M448,64.7 L576,64.7 L576,0.7 L448,0.7 L448,64.7 Z M256,64.7 L384,64.7 L384,0.7 L256,0.7 L256,64.7 Z M960,192 L256,192 C220.667486,192.033078 192.033078,220.667486 192,256 L192,960 C192.033078,995.332514 220.667486,1023.96692 256,1024 L960,1024 C995.332514,1023.96692 1023.96692,995.332514 1024,960 L1024,256 C1023.96692,220.667486 995.332514,192.033078 960,192 Z M960,945 C960,953.284271 953.284271,960 945,960 L271,960 C262.715729,960 256,953.284271 256,945 L256,271 C256,262.715729 262.715729,256 271,256 L945,256 C953.284271,256 960,262.715729 960,271 L960,945 Z"
                                />
                              </svg>
                            </BlueprintIcon>
                          </div>
                          <div
                            className="system-name"
                          >
                            baseline2
                          </div>
                          <div
                            className="system-updated-and-reference"
                          >
                            <ReferenceSelector
                              id="fdmk59dj-fn42-dfjk-alv3-bmn2854mnn29"
                              isReference={false}
                              updateReferenceId={[Function]}
                            >
                              <OutlinedStarIcon
                                className="reference-selector pointer"
                                color="currentColor"
                                noVerticalAlign={false}
                                onClick={[Function]}
                                size="sm"
                              >
                                <svg
                                  aria-hidden={true}
                                  aria-labelledby={null}
                                  className="reference-selector pointer"
                                  fill="currentColor"
                                  height="1em"
                                  onClick={[Function]}
                                  role="img"
                                  style={
                                    Object {
                                      "verticalAlign": "-0.125em",
                                    }
                                  }
                                  viewBox="0 0 576 512"
                                  width="1em"
                                >
                                  <path
                                    d="M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z"
                                  />
                                </svg>
                              </OutlinedStarIcon>
                            </ReferenceSelector>
                            15 Jan 2019, 15:25 UTC
                          </div>
                        </div>
                      </th>
                      <th
                        className="drift-header system-header"
                        header-id="9c79efcc-8f9a-47c7-b0f2-142ff52e89e9"
                        key="9c79efcc-8f9a-47c7-b0f2-142ff52e89e9"
                      >
                        <div>
                          <a
                            className="remove-system-icon"
                            onClick={[Function]}
                          >
                            <TimesIcon
                              color="currentColor"
                              noVerticalAlign={false}
                              size="sm"
                            >
                              <svg
                                aria-hidden={true}
                                aria-labelledby={null}
                                fill="currentColor"
                                height="1em"
                                role="img"
                                style={
                                  Object {
                                    "verticalAlign": "-0.125em",
                                  }
                                }
                                viewBox="0 0 352 512"
                                width="1em"
                              >
                                <path
                                  d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                                />
                              </svg>
                            </TimesIcon>
                          </a>
                        </div>
                        <div
                          className="comparison-header"
                        >
                          <div
                            className="drift-header-icon"
                          >
                            <ServerIcon
                              color="currentColor"
                              noVerticalAlign={false}
                              size="sm"
                            >
                              <svg
                                aria-hidden={true}
                                aria-labelledby={null}
                                fill="currentColor"
                                height="1em"
                                role="img"
                                style={
                                  Object {
                                    "verticalAlign": "-0.125em",
                                  }
                                }
                                viewBox="0 0 512 512"
                                width="1em"
                              >
                                <path
                                  d="M480 160H32c-17.673 0-32-14.327-32-32V64c0-17.673 14.327-32 32-32h448c17.673 0 32 14.327 32 32v64c0 17.673-14.327 32-32 32zm-48-88c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm-64 0c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm112 248H32c-17.673 0-32-14.327-32-32v-64c0-17.673 14.327-32 32-32h448c17.673 0 32 14.327 32 32v64c0 17.673-14.327 32-32 32zm-48-88c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm-64 0c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm112 248H32c-17.673 0-32-14.327-32-32v-64c0-17.673 14.327-32 32-32h448c17.673 0 32 14.327 32 32v64c0 17.673-14.327 32-32 32zm-48-88c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm-64 0c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24z"
                                />
                              </svg>
                            </ServerIcon>
                          </div>
                          <div
                            className="system-name"
                          >
                            sgi-xe500-01.rhts.eng.bos.redhat.com
                          </div>
                          <div
                            className="system-updated-and-reference"
                          >
                            <ReferenceSelector
                              id="9c79efcc-8f9a-47c7-b0f2-142ff52e89e9"
                              isReference={false}
                              updateReferenceId={[Function]}
                            >
                              <OutlinedStarIcon
                                className="reference-selector pointer"
                                color="currentColor"
                                noVerticalAlign={false}
                                onClick={[Function]}
                                size="sm"
                              >
                                <svg
                                  aria-hidden={true}
                                  aria-labelledby={null}
                                  className="reference-selector pointer"
                                  fill="currentColor"
                                  height="1em"
                                  onClick={[Function]}
                                  role="img"
                                  style={
                                    Object {
                                      "verticalAlign": "-0.125em",
                                    }
                                  }
                                  viewBox="0 0 576 512"
                                  width="1em"
                                >
                                  <path
                                    d="M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z"
                                  />
                                </svg>
                              </OutlinedStarIcon>
                            </ReferenceSelector>
                            15 Jan 2019, 14:53 UTC
                            <withRouter(Connect(HistoricalProfilesDropdown))
                              dropdownDirection="down"
                              fetchCompare={[Function]}
                              hasCompareButton={true}
                              hasMultiSelect={true}
                              system={
                                Object {
                                  "display_name": "sgi-xe500-01.rhts.eng.bos.redhat.com",
                                  "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                  "last_updated": "2019-01-15T14:53:15.886891Z",
                                  "type": "system",
                                }
                              }
                              systemIds={Array []}
                            >
                              <Connect(HistoricalProfilesDropdown)
                                dropdownDirection="down"
                                fetchCompare={[Function]}
                                hasCompareButton={true}
                                hasMultiSelect={true}
                                history={
                                  Object {
                                    "action": "POP",
                                    "block": [Function],
                                    "canGo": [Function],
                                    "createHref": [Function],
                                    "entries": Array [
                                      Object {
                                        "hash": "",
                                        "pathname": "/",
                                        "search": "",
                                        "state": undefined,
                                      },
                                    ],
                                    "go": [Function],
                                    "goBack": [Function],
                                    "goForward": [Function],
                                    "index": 0,
                                    "length": 1,
                                    "listen": [Function],
                                    "location": Object {
                                      "hash": "",
                                      "pathname": "/",
                                      "search": "",
                                      "state": undefined,
                                    },
                                    "push": [Function],
                                    "replace": [Function],
                                  }
                                }
                                location={
                                  Object {
                                    "hash": "",
                                    "pathname": "/",
                                    "search": "",
                                    "state": undefined,
                                  }
                                }
                                match={
                                  Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/",
                                    "url": "/",
                                  }
                                }
                                system={
                                  Object {
                                    "display_name": "sgi-xe500-01.rhts.eng.bos.redhat.com",
                                    "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                    "last_updated": "2019-01-15T14:53:15.886891Z",
                                    "type": "system",
                                  }
                                }
                                systemIds={Array []}
                              >
                                <HistoricalProfilesDropdown
                                  dropdownDirection="down"
                                  fetchCompare={[Function]}
                                  hasCompareButton={true}
                                  hasMultiSelect={true}
                                  history={
                                    Object {
                                      "action": "POP",
                                      "block": [Function],
                                      "canGo": [Function],
                                      "createHref": [Function],
                                      "entries": Array [
                                        Object {
                                          "hash": "",
                                          "pathname": "/",
                                          "search": "",
                                          "state": undefined,
                                        },
                                      ],
                                      "go": [Function],
                                      "goBack": [Function],
                                      "goForward": [Function],
                                      "index": 0,
                                      "length": 1,
                                      "listen": [Function],
                                      "location": Object {
                                        "hash": "",
                                        "pathname": "/",
                                        "search": "",
                                        "state": undefined,
                                      },
                                      "push": [Function],
                                      "replace": [Function],
                                    }
                                  }
                                  location={
                                    Object {
                                      "hash": "",
                                      "pathname": "/",
                                      "search": "",
                                      "state": undefined,
                                    }
                                  }
                                  match={
                                    Object {
                                      "isExact": true,
                                      "params": Object {},
                                      "path": "/",
                                      "url": "/",
                                    }
                                  }
                                  selectHistoricProfiles={[Function]}
                                  selectSingleHSP={[Function]}
                                  selectSystem={[Function]}
                                  selectedBaselineIds={Array []}
                                  selectedHSPIds={Array []}
                                  system={
                                    Object {
                                      "display_name": "sgi-xe500-01.rhts.eng.bos.redhat.com",
                                      "id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                      "last_updated": "2019-01-15T14:53:15.886891Z",
                                      "type": "system",
                                    }
                                  }
                                  systemIds={Array []}
                                  updateColumns={[Function]}
                                >
                                  <Dropdown
                                    className="historical-system-profile-dropdown"
                                    direction="down"
                                    dropdownItems={
                                      Array [
                                        <Skeleton
                                          className="hsp-dropdown-loading"
                                          isDark={false}
                                          size="sm"
                                        />,
                                        <Skeleton
                                          className="hsp-dropdown-loading"
                                          isDark={false}
                                          size="sm"
                                        />,
                                        <Skeleton
                                          className="hsp-dropdown-loading"
                                          isDark={false}
                                          size="sm"
                                        />,
                                      ]
                                    }
                                    isOpen={false}
                                    isPlain={true}
                                    position="right"
                                    toggle={
                                      <DropdownToggle
                                        className="hsp-dropdown-icon"
                                        onToggle={[Function]}
                                        toggleIndicator={null}
                                      >
                                        <HistoryIcon
                                          color="currentColor"
                                          noVerticalAlign={false}
                                          size="sm"
                                        />
                                      </DropdownToggle>
                                    }
                                  >
                                    <DropdownWithContext
                                      autoFocus={true}
                                      className="historical-system-profile-dropdown"
                                      direction="down"
                                      dropdownItems={
                                        Array [
                                          <Skeleton
                                            className="hsp-dropdown-loading"
                                            isDark={false}
                                            size="sm"
                                          />,
                                          <Skeleton
                                            className="hsp-dropdown-loading"
                                            isDark={false}
                                            size="sm"
                                          />,
                                          <Skeleton
                                            className="hsp-dropdown-loading"
                                            isDark={false}
                                            size="sm"
                                          />,
                                        ]
                                      }
                                      isGrouped={false}
                                      isOpen={false}
                                      isPlain={true}
                                      menuAppendTo="inline"
                                      onSelect={[Function]}
                                      position="right"
                                      toggle={
                                        <DropdownToggle
                                          className="hsp-dropdown-icon"
                                          onToggle={[Function]}
                                          toggleIndicator={null}
                                        >
                                          <HistoryIcon
                                            color="currentColor"
                                            noVerticalAlign={false}
                                            size="sm"
                                          />
                                        </DropdownToggle>
                                      }
                                    >
                                      <div
                                        className="pf-c-dropdown pf-m-align-right historical-system-profile-dropdown"
                                        data-ouia-component-id={0}
                                        data-ouia-component-type="PF4/Dropdown"
                                        data-ouia-safe={true}
                                      >
                                        <DropdownToggle
                                          aria-haspopup={true}
                                          className="hsp-dropdown-icon"
                                          getMenuRef={[Function]}
                                          id="pf-dropdown-toggle-id-0"
                                          isOpen={false}
                                          isPlain={true}
                                          key=".0"
                                          onEnter={[Function]}
                                          onToggle={[Function]}
                                          parentRef={
                                            Object {
                                              "current": <div
                                                class="pf-c-dropdown pf-m-align-right historical-system-profile-dropdown"
                                                data-ouia-component-id="0"
                                                data-ouia-component-type="PF4/Dropdown"
                                                data-ouia-safe="true"
                                              >
                                                <button
                                                  aria-expanded="false"
                                                  aria-haspopup="true"
                                                  class="pf-c-dropdown__toggle pf-m-plain hsp-dropdown-icon"
                                                  id="pf-dropdown-toggle-id-0"
                                                  type="button"
                                                >
                                                  <span>
                                                    <svg
                                                      aria-hidden="true"
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style="vertical-align: -0.125em;"
                                                      viewBox="0 0 512 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M504 255.531c.253 136.64-111.18 248.372-247.82 248.468-59.015.042-113.223-20.53-155.822-54.911-11.077-8.94-11.905-25.541-1.839-35.607l11.267-11.267c8.609-8.609 22.353-9.551 31.891-1.984C173.062 425.135 212.781 440 256 440c101.705 0 184-82.311 184-184 0-101.705-82.311-184-184-184-48.814 0-93.149 18.969-126.068 49.932l50.754 50.754c10.08 10.08 2.941 27.314-11.313 27.314H24c-8.837 0-16-7.163-16-16V38.627c0-14.254 17.234-21.393 27.314-11.314l49.372 49.372C129.209 34.136 189.552 8 256 8c136.81 0 247.747 110.78 248 247.531zm-180.912 78.784l9.823-12.63c8.138-10.463 6.253-25.542-4.21-33.679L288 256.349V152c0-13.255-10.745-24-24-24h-16c-13.255 0-24 10.745-24 24v135.651l65.409 50.874c10.463 8.137 25.541 6.253 33.679-4.21z"
                                                      />
                                                    </svg>
                                                  </span>
                                                </button>
                                              </div>,
                                            }
                                          }
                                          toggleIndicator={null}
                                        >
                                          <Toggle
                                            aria-haspopup={true}
                                            bubbleEvent={false}
                                            className="hsp-dropdown-icon"
                                            getMenuRef={[Function]}
                                            id="pf-dropdown-toggle-id-0"
                                            isActive={false}
                                            isDisabled={false}
                                            isOpen={false}
                                            isPlain={true}
                                            isPrimary={false}
                                            isSplitButton={false}
                                            onEnter={[Function]}
                                            onToggle={[Function]}
                                            parentRef={
                                              Object {
                                                "current": <div
                                                  class="pf-c-dropdown pf-m-align-right historical-system-profile-dropdown"
                                                  data-ouia-component-id="0"
                                                  data-ouia-component-type="PF4/Dropdown"
                                                  data-ouia-safe="true"
                                                >
                                                  <button
                                                    aria-expanded="false"
                                                    aria-haspopup="true"
                                                    class="pf-c-dropdown__toggle pf-m-plain hsp-dropdown-icon"
                                                    id="pf-dropdown-toggle-id-0"
                                                    type="button"
                                                  >
                                                    <span>
                                                      <svg
                                                        aria-hidden="true"
                                                        fill="currentColor"
                                                        height="1em"
                                                        role="img"
                                                        style="vertical-align: -0.125em;"
                                                        viewBox="0 0 512 512"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M504 255.531c.253 136.64-111.18 248.372-247.82 248.468-59.015.042-113.223-20.53-155.822-54.911-11.077-8.94-11.905-25.541-1.839-35.607l11.267-11.267c8.609-8.609 22.353-9.551 31.891-1.984C173.062 425.135 212.781 440 256 440c101.705 0 184-82.311 184-184 0-101.705-82.311-184-184-184-48.814 0-93.149 18.969-126.068 49.932l50.754 50.754c10.08 10.08 2.941 27.314-11.313 27.314H24c-8.837 0-16-7.163-16-16V38.627c0-14.254 17.234-21.393 27.314-11.314l49.372 49.372C129.209 34.136 189.552 8 256 8c136.81 0 247.747 110.78 248 247.531zm-180.912 78.784l9.823-12.63c8.138-10.463 6.253-25.542-4.21-33.679L288 256.349V152c0-13.255-10.745-24-24-24h-16c-13.255 0-24 10.745-24 24v135.651l65.409 50.874c10.463 8.137 25.541 6.253 33.679-4.21z"
                                                        />
                                                      </svg>
                                                    </span>
                                                  </button>
                                                </div>,
                                              }
                                            }
                                          >
                                            <button
                                              aria-expanded={false}
                                              aria-haspopup={true}
                                              className="pf-c-dropdown__toggle pf-m-plain hsp-dropdown-icon"
                                              disabled={false}
                                              id="pf-dropdown-toggle-id-0"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              type="button"
                                            >
                                              <span
                                                className={null}
                                              >
                                                <HistoryIcon
                                                  color="currentColor"
                                                  noVerticalAlign={false}
                                                  size="sm"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    aria-labelledby={null}
                                                    fill="currentColor"
                                                    height="1em"
                                                    role="img"
                                                    style={
                                                      Object {
                                                        "verticalAlign": "-0.125em",
                                                      }
                                                    }
                                                    viewBox="0 0 512 512"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M504 255.531c.253 136.64-111.18 248.372-247.82 248.468-59.015.042-113.223-20.53-155.822-54.911-11.077-8.94-11.905-25.541-1.839-35.607l11.267-11.267c8.609-8.609 22.353-9.551 31.891-1.984C173.062 425.135 212.781 440 256 440c101.705 0 184-82.311 184-184 0-101.705-82.311-184-184-184-48.814 0-93.149 18.969-126.068 49.932l50.754 50.754c10.08 10.08 2.941 27.314-11.313 27.314H24c-8.837 0-16-7.163-16-16V38.627c0-14.254 17.234-21.393 27.314-11.314l49.372 49.372C129.209 34.136 189.552 8 256 8c136.81 0 247.747 110.78 248 247.531zm-180.912 78.784l9.823-12.63c8.138-10.463 6.253-25.542-4.21-33.679L288 256.349V152c0-13.255-10.745-24-24-24h-16c-13.255 0-24 10.745-24 24v135.651l65.409 50.874c10.463 8.137 25.541 6.253 33.679-4.21z"
                                                    />
                                                  </svg>
                                                </HistoryIcon>
                                              </span>
                                            </button>
                                          </Toggle>
                                        </DropdownToggle>
                                      </div>
                                    </DropdownWithContext>
                                  </Dropdown>
                                </HistoricalProfilesDropdown>
                              </Connect(HistoricalProfilesDropdown)>
                            </withRouter(Connect(HistoricalProfilesDropdown))>
                          </div>
                        </div>
                      </th>
                      <th
                        className="drift-header historical-system-profile-header"
                        header-id="9bbbefcc-8f23-4d97-07f2-142asdl234e8"
                        key="9bbbefcc-8f23-4d97-07f2-142asdl234e8"
                      >
                        <div>
                          <a
                            className="remove-system-icon"
                            onClick={[Function]}
                          >
                            <TimesIcon
                              color="currentColor"
                              noVerticalAlign={false}
                              size="sm"
                            >
                              <svg
                                aria-hidden={true}
                                aria-labelledby={null}
                                fill="currentColor"
                                height="1em"
                                role="img"
                                style={
                                  Object {
                                    "verticalAlign": "-0.125em",
                                  }
                                }
                                viewBox="0 0 352 512"
                                width="1em"
                              >
                                <path
                                  d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                                />
                              </svg>
                            </TimesIcon>
                          </a>
                        </div>
                        <div
                          className="comparison-header"
                        >
                          <div
                            className="drift-header-icon"
                          >
                            <ClockIcon
                              color="currentColor"
                              noVerticalAlign={false}
                              size="sm"
                            >
                              <svg
                                aria-hidden={true}
                                aria-labelledby={null}
                                fill="currentColor"
                                height="1em"
                                role="img"
                                style={
                                  Object {
                                    "verticalAlign": "-0.125em",
                                  }
                                }
                                viewBox="0 0 512 512"
                                width="1em"
                              >
                                <path
                                  d="M256,8C119,8,8,119,8,256S119,504,256,504,504,393,504,256,393,8,256,8Zm92.49,313h0l-20,25a16,16,0,0,1-22.49,2.5h0l-67-49.72a40,40,0,0,1-15-31.23V112a16,16,0,0,1,16-16h32a16,16,0,0,1,16,16V256l58,42.5A16,16,0,0,1,348.49,321Z"
                                />
                              </svg>
                            </ClockIcon>
                          </div>
                          <div
                            className="system-name"
                          >
                            system1
                          </div>
                          <div
                            className="system-updated-and-reference"
                          >
                            <ReferenceSelector
                              id="9bbbefcc-8f23-4d97-07f2-142asdl234e8"
                              isReference={false}
                              updateReferenceId={[Function]}
                            >
                              <OutlinedStarIcon
                                className="reference-selector pointer"
                                color="currentColor"
                                noVerticalAlign={false}
                                onClick={[Function]}
                                size="sm"
                              >
                                <svg
                                  aria-hidden={true}
                                  aria-labelledby={null}
                                  className="reference-selector pointer"
                                  fill="currentColor"
                                  height="1em"
                                  onClick={[Function]}
                                  role="img"
                                  style={
                                    Object {
                                      "verticalAlign": "-0.125em",
                                    }
                                  }
                                  viewBox="0 0 576 512"
                                  width="1em"
                                >
                                  <path
                                    d="M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z"
                                  />
                                </svg>
                              </OutlinedStarIcon>
                            </ReferenceSelector>
                            15 Jan 2019, 14:53 UTC
                            <withRouter(Connect(HistoricalProfilesDropdown))
                              dropdownDirection="down"
                              fetchCompare={[Function]}
                              hasCompareButton={true}
                              hasMultiSelect={true}
                              system={
                                Object {
                                  "display_name": "system1",
                                  "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                                  "last_updated": "2019-01-15T14:53:15.886891Z",
                                  "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                  "type": "historical-system-profile",
                                }
                              }
                              systemIds={Array []}
                            >
                              <Connect(HistoricalProfilesDropdown)
                                dropdownDirection="down"
                                fetchCompare={[Function]}
                                hasCompareButton={true}
                                hasMultiSelect={true}
                                history={
                                  Object {
                                    "action": "POP",
                                    "block": [Function],
                                    "canGo": [Function],
                                    "createHref": [Function],
                                    "entries": Array [
                                      Object {
                                        "hash": "",
                                        "pathname": "/",
                                        "search": "",
                                        "state": undefined,
                                      },
                                    ],
                                    "go": [Function],
                                    "goBack": [Function],
                                    "goForward": [Function],
                                    "index": 0,
                                    "length": 1,
                                    "listen": [Function],
                                    "location": Object {
                                      "hash": "",
                                      "pathname": "/",
                                      "search": "",
                                      "state": undefined,
                                    },
                                    "push": [Function],
                                    "replace": [Function],
                                  }
                                }
                                location={
                                  Object {
                                    "hash": "",
                                    "pathname": "/",
                                    "search": "",
                                    "state": undefined,
                                  }
                                }
                                match={
                                  Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/",
                                    "url": "/",
                                  }
                                }
                                system={
                                  Object {
                                    "display_name": "system1",
                                    "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                                    "last_updated": "2019-01-15T14:53:15.886891Z",
                                    "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                    "type": "historical-system-profile",
                                  }
                                }
                                systemIds={Array []}
                              >
                                <HistoricalProfilesDropdown
                                  dropdownDirection="down"
                                  fetchCompare={[Function]}
                                  hasCompareButton={true}
                                  hasMultiSelect={true}
                                  history={
                                    Object {
                                      "action": "POP",
                                      "block": [Function],
                                      "canGo": [Function],
                                      "createHref": [Function],
                                      "entries": Array [
                                        Object {
                                          "hash": "",
                                          "pathname": "/",
                                          "search": "",
                                          "state": undefined,
                                        },
                                      ],
                                      "go": [Function],
                                      "goBack": [Function],
                                      "goForward": [Function],
                                      "index": 0,
                                      "length": 1,
                                      "listen": [Function],
                                      "location": Object {
                                        "hash": "",
                                        "pathname": "/",
                                        "search": "",
                                        "state": undefined,
                                      },
                                      "push": [Function],
                                      "replace": [Function],
                                    }
                                  }
                                  location={
                                    Object {
                                      "hash": "",
                                      "pathname": "/",
                                      "search": "",
                                      "state": undefined,
                                    }
                                  }
                                  match={
                                    Object {
                                      "isExact": true,
                                      "params": Object {},
                                      "path": "/",
                                      "url": "/",
                                    }
                                  }
                                  selectHistoricProfiles={[Function]}
                                  selectSingleHSP={[Function]}
                                  selectSystem={[Function]}
                                  selectedBaselineIds={Array []}
                                  selectedHSPIds={Array []}
                                  system={
                                    Object {
                                      "display_name": "system1",
                                      "id": "9bbbefcc-8f23-4d97-07f2-142asdl234e8",
                                      "last_updated": "2019-01-15T14:53:15.886891Z",
                                      "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                      "type": "historical-system-profile",
                                    }
                                  }
                                  systemIds={Array []}
                                  updateColumns={[Function]}
                                >
                                  <Dropdown
                                    className="historical-system-profile-dropdown"
                                    direction="down"
                                    dropdownItems={
                                      Array [
                                        <Skeleton
                                          className="hsp-dropdown-loading"
                                          isDark={false}
                                          size="sm"
                                        />,
                                        <Skeleton
                                          className="hsp-dropdown-loading"
                                          isDark={false}
                                          size="sm"
                                        />,
                                        <Skeleton
                                          className="hsp-dropdown-loading"
                                          isDark={false}
                                          size="sm"
                                        />,
                                      ]
                                    }
                                    isOpen={false}
                                    isPlain={true}
                                    position="right"
                                    toggle={
                                      <DropdownToggle
                                        className="hsp-dropdown-icon"
                                        onToggle={[Function]}
                                        toggleIndicator={null}
                                      >
                                        <HistoryIcon
                                          color="currentColor"
                                          noVerticalAlign={false}
                                          size="sm"
                                        />
                                      </DropdownToggle>
                                    }
                                  >
                                    <DropdownWithContext
                                      autoFocus={true}
                                      className="historical-system-profile-dropdown"
                                      direction="down"
                                      dropdownItems={
                                        Array [
                                          <Skeleton
                                            className="hsp-dropdown-loading"
                                            isDark={false}
                                            size="sm"
                                          />,
                                          <Skeleton
                                            className="hsp-dropdown-loading"
                                            isDark={false}
                                            size="sm"
                                          />,
                                          <Skeleton
                                            className="hsp-dropdown-loading"
                                            isDark={false}
                                            size="sm"
                                          />,
                                        ]
                                      }
                                      isGrouped={false}
                                      isOpen={false}
                                      isPlain={true}
                                      menuAppendTo="inline"
                                      onSelect={[Function]}
                                      position="right"
                                      toggle={
                                        <DropdownToggle
                                          className="hsp-dropdown-icon"
                                          onToggle={[Function]}
                                          toggleIndicator={null}
                                        >
                                          <HistoryIcon
                                            color="currentColor"
                                            noVerticalAlign={false}
                                            size="sm"
                                          />
                                        </DropdownToggle>
                                      }
                                    >
                                      <div
                                        className="pf-c-dropdown pf-m-align-right historical-system-profile-dropdown"
                                        data-ouia-component-id={1}
                                        data-ouia-component-type="PF4/Dropdown"
                                        data-ouia-safe={true}
                                      >
                                        <DropdownToggle
                                          aria-haspopup={true}
                                          className="hsp-dropdown-icon"
                                          getMenuRef={[Function]}
                                          id="pf-dropdown-toggle-id-1"
                                          isOpen={false}
                                          isPlain={true}
                                          key=".0"
                                          onEnter={[Function]}
                                          onToggle={[Function]}
                                          parentRef={
                                            Object {
                                              "current": <div
                                                class="pf-c-dropdown pf-m-align-right historical-system-profile-dropdown"
                                                data-ouia-component-id="1"
                                                data-ouia-component-type="PF4/Dropdown"
                                                data-ouia-safe="true"
                                              >
                                                <button
                                                  aria-expanded="false"
                                                  aria-haspopup="true"
                                                  class="pf-c-dropdown__toggle pf-m-plain hsp-dropdown-icon"
                                                  id="pf-dropdown-toggle-id-1"
                                                  type="button"
                                                >
                                                  <span>
                                                    <svg
                                                      aria-hidden="true"
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style="vertical-align: -0.125em;"
                                                      viewBox="0 0 512 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M504 255.531c.253 136.64-111.18 248.372-247.82 248.468-59.015.042-113.223-20.53-155.822-54.911-11.077-8.94-11.905-25.541-1.839-35.607l11.267-11.267c8.609-8.609 22.353-9.551 31.891-1.984C173.062 425.135 212.781 440 256 440c101.705 0 184-82.311 184-184 0-101.705-82.311-184-184-184-48.814 0-93.149 18.969-126.068 49.932l50.754 50.754c10.08 10.08 2.941 27.314-11.313 27.314H24c-8.837 0-16-7.163-16-16V38.627c0-14.254 17.234-21.393 27.314-11.314l49.372 49.372C129.209 34.136 189.552 8 256 8c136.81 0 247.747 110.78 248 247.531zm-180.912 78.784l9.823-12.63c8.138-10.463 6.253-25.542-4.21-33.679L288 256.349V152c0-13.255-10.745-24-24-24h-16c-13.255 0-24 10.745-24 24v135.651l65.409 50.874c10.463 8.137 25.541 6.253 33.679-4.21z"
                                                      />
                                                    </svg>
                                                  </span>
                                                </button>
                                              </div>,
                                            }
                                          }
                                          toggleIndicator={null}
                                        >
                                          <Toggle
                                            aria-haspopup={true}
                                            bubbleEvent={false}
                                            className="hsp-dropdown-icon"
                                            getMenuRef={[Function]}
                                            id="pf-dropdown-toggle-id-1"
                                            isActive={false}
                                            isDisabled={false}
                                            isOpen={false}
                                            isPlain={true}
                                            isPrimary={false}
                                            isSplitButton={false}
                                            onEnter={[Function]}
                                            onToggle={[Function]}
                                            parentRef={
                                              Object {
                                                "current": <div
                                                  class="pf-c-dropdown pf-m-align-right historical-system-profile-dropdown"
                                                  data-ouia-component-id="1"
                                                  data-ouia-component-type="PF4/Dropdown"
                                                  data-ouia-safe="true"
                                                >
                                                  <button
                                                    aria-expanded="false"
                                                    aria-haspopup="true"
                                                    class="pf-c-dropdown__toggle pf-m-plain hsp-dropdown-icon"
                                                    id="pf-dropdown-toggle-id-1"
                                                    type="button"
                                                  >
                                                    <span>
                                                      <svg
                                                        aria-hidden="true"
                                                        fill="currentColor"
                                                        height="1em"
                                                        role="img"
                                                        style="vertical-align: -0.125em;"
                                                        viewBox="0 0 512 512"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M504 255.531c.253 136.64-111.18 248.372-247.82 248.468-59.015.042-113.223-20.53-155.822-54.911-11.077-8.94-11.905-25.541-1.839-35.607l11.267-11.267c8.609-8.609 22.353-9.551 31.891-1.984C173.062 425.135 212.781 440 256 440c101.705 0 184-82.311 184-184 0-101.705-82.311-184-184-184-48.814 0-93.149 18.969-126.068 49.932l50.754 50.754c10.08 10.08 2.941 27.314-11.313 27.314H24c-8.837 0-16-7.163-16-16V38.627c0-14.254 17.234-21.393 27.314-11.314l49.372 49.372C129.209 34.136 189.552 8 256 8c136.81 0 247.747 110.78 248 247.531zm-180.912 78.784l9.823-12.63c8.138-10.463 6.253-25.542-4.21-33.679L288 256.349V152c0-13.255-10.745-24-24-24h-16c-13.255 0-24 10.745-24 24v135.651l65.409 50.874c10.463 8.137 25.541 6.253 33.679-4.21z"
                                                        />
                                                      </svg>
                                                    </span>
                                                  </button>
                                                </div>,
                                              }
                                            }
                                          >
                                            <button
                                              aria-expanded={false}
                                              aria-haspopup={true}
                                              className="pf-c-dropdown__toggle pf-m-plain hsp-dropdown-icon"
                                              disabled={false}
                                              id="pf-dropdown-toggle-id-1"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              type="button"
                                            >
                                              <span
                                                className={null}
                                              >
                                                <HistoryIcon
                                                  color="currentColor"
                                                  noVerticalAlign={false}
                                                  size="sm"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    aria-labelledby={null}
                                                    fill="currentColor"
                                                    height="1em"
                                                    role="img"
                                                    style={
                                                      Object {
                                                        "verticalAlign": "-0.125em",
                                                      }
                                                    }
                                                    viewBox="0 0 512 512"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M504 255.531c.253 136.64-111.18 248.372-247.82 248.468-59.015.042-113.223-20.53-155.822-54.911-11.077-8.94-11.905-25.541-1.839-35.607l11.267-11.267c8.609-8.609 22.353-9.551 31.891-1.984C173.062 425.135 212.781 440 256 440c101.705 0 184-82.311 184-184 0-101.705-82.311-184-184-184-48.814 0-93.149 18.969-126.068 49.932l50.754 50.754c10.08 10.08 2.941 27.314-11.313 27.314H24c-8.837 0-16-7.163-16-16V38.627c0-14.254 17.234-21.393 27.314-11.314l49.372 49.372C129.209 34.136 189.552 8 256 8c136.81 0 247.747 110.78 248 247.531zm-180.912 78.784l9.823-12.63c8.138-10.463 6.253-25.542-4.21-33.679L288 256.349V152c0-13.255-10.745-24-24-24h-16c-13.255 0-24 10.745-24 24v135.651l65.409 50.874c10.463 8.137 25.541 6.253 33.679-4.21z"
                                                    />
                                                  </svg>
                                                </HistoryIcon>
                                              </span>
                                            </button>
                                          </Toggle>
                                        </DropdownToggle>
                                      </div>
                                    </DropdownWithContext>
                                  </Dropdown>
                                </HistoricalProfilesDropdown>
                              </Connect(HistoricalProfilesDropdown)>
                            </withRouter(Connect(HistoricalProfilesDropdown))>
                          </div>
                        </div>
                      </th>
                      <th
                        className="drift-header historical-system-profile-header"
                        header-id="edmk59dj-fn42-dfjk-alv3-bmn2854mnn27"
                        key="edmk59dj-fn42-dfjk-alv3-bmn2854mnn27"
                      >
                        <div>
                          <a
                            className="remove-system-icon"
                            onClick={[Function]}
                          >
                            <TimesIcon
                              color="currentColor"
                              noVerticalAlign={false}
                              size="sm"
                            >
                              <svg
                                aria-hidden={true}
                                aria-labelledby={null}
                                fill="currentColor"
                                height="1em"
                                role="img"
                                style={
                                  Object {
                                    "verticalAlign": "-0.125em",
                                  }
                                }
                                viewBox="0 0 352 512"
                                width="1em"
                              >
                                <path
                                  d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                                />
                              </svg>
                            </TimesIcon>
                          </a>
                        </div>
                        <div
                          className="comparison-header"
                        >
                          <div
                            className="drift-header-icon"
                          >
                            <ClockIcon
                              color="currentColor"
                              noVerticalAlign={false}
                              size="sm"
                            >
                              <svg
                                aria-hidden={true}
                                aria-labelledby={null}
                                fill="currentColor"
                                height="1em"
                                role="img"
                                style={
                                  Object {
                                    "verticalAlign": "-0.125em",
                                  }
                                }
                                viewBox="0 0 512 512"
                                width="1em"
                              >
                                <path
                                  d="M256,8C119,8,8,119,8,256S119,504,256,504,504,393,504,256,393,8,256,8Zm92.49,313h0l-20,25a16,16,0,0,1-22.49,2.5h0l-67-49.72a40,40,0,0,1-15-31.23V112a16,16,0,0,1,16-16h32a16,16,0,0,1,16,16V256l58,42.5A16,16,0,0,1,348.49,321Z"
                                />
                              </svg>
                            </ClockIcon>
                          </div>
                          <div
                            className="system-name"
                          >
                            system1
                          </div>
                          <div
                            className="system-updated-and-reference"
                          >
                            <ReferenceSelector
                              id="edmk59dj-fn42-dfjk-alv3-bmn2854mnn27"
                              isReference={false}
                              updateReferenceId={[Function]}
                            >
                              <OutlinedStarIcon
                                className="reference-selector pointer"
                                color="currentColor"
                                noVerticalAlign={false}
                                onClick={[Function]}
                                size="sm"
                              >
                                <svg
                                  aria-hidden={true}
                                  aria-labelledby={null}
                                  className="reference-selector pointer"
                                  fill="currentColor"
                                  height="1em"
                                  onClick={[Function]}
                                  role="img"
                                  style={
                                    Object {
                                      "verticalAlign": "-0.125em",
                                    }
                                  }
                                  viewBox="0 0 576 512"
                                  width="1em"
                                >
                                  <path
                                    d="M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z"
                                  />
                                </svg>
                              </OutlinedStarIcon>
                            </ReferenceSelector>
                            15 Jan 2019, 15:25 UTC
                            <withRouter(Connect(HistoricalProfilesDropdown))
                              dropdownDirection="down"
                              fetchCompare={[Function]}
                              hasCompareButton={true}
                              hasMultiSelect={true}
                              system={
                                Object {
                                  "display_name": "system1",
                                  "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                                  "last_updated": "2019-01-15T15:25:16.304899Z",
                                  "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                  "type": "historical-system-profile",
                                }
                              }
                              systemIds={Array []}
                            >
                              <Connect(HistoricalProfilesDropdown)
                                dropdownDirection="down"
                                fetchCompare={[Function]}
                                hasCompareButton={true}
                                hasMultiSelect={true}
                                history={
                                  Object {
                                    "action": "POP",
                                    "block": [Function],
                                    "canGo": [Function],
                                    "createHref": [Function],
                                    "entries": Array [
                                      Object {
                                        "hash": "",
                                        "pathname": "/",
                                        "search": "",
                                        "state": undefined,
                                      },
                                    ],
                                    "go": [Function],
                                    "goBack": [Function],
                                    "goForward": [Function],
                                    "index": 0,
                                    "length": 1,
                                    "listen": [Function],
                                    "location": Object {
                                      "hash": "",
                                      "pathname": "/",
                                      "search": "",
                                      "state": undefined,
                                    },
                                    "push": [Function],
                                    "replace": [Function],
                                  }
                                }
                                location={
                                  Object {
                                    "hash": "",
                                    "pathname": "/",
                                    "search": "",
                                    "state": undefined,
                                  }
                                }
                                match={
                                  Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/",
                                    "url": "/",
                                  }
                                }
                                system={
                                  Object {
                                    "display_name": "system1",
                                    "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                                    "last_updated": "2019-01-15T15:25:16.304899Z",
                                    "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                    "type": "historical-system-profile",
                                  }
                                }
                                systemIds={Array []}
                              >
                                <HistoricalProfilesDropdown
                                  dropdownDirection="down"
                                  fetchCompare={[Function]}
                                  hasCompareButton={true}
                                  hasMultiSelect={true}
                                  history={
                                    Object {
                                      "action": "POP",
                                      "block": [Function],
                                      "canGo": [Function],
                                      "createHref": [Function],
                                      "entries": Array [
                                        Object {
                                          "hash": "",
                                          "pathname": "/",
                                          "search": "",
                                          "state": undefined,
                                        },
                                      ],
                                      "go": [Function],
                                      "goBack": [Function],
                                      "goForward": [Function],
                                      "index": 0,
                                      "length": 1,
                                      "listen": [Function],
                                      "location": Object {
                                        "hash": "",
                                        "pathname": "/",
                                        "search": "",
                                        "state": undefined,
                                      },
                                      "push": [Function],
                                      "replace": [Function],
                                    }
                                  }
                                  location={
                                    Object {
                                      "hash": "",
                                      "pathname": "/",
                                      "search": "",
                                      "state": undefined,
                                    }
                                  }
                                  match={
                                    Object {
                                      "isExact": true,
                                      "params": Object {},
                                      "path": "/",
                                      "url": "/",
                                    }
                                  }
                                  selectHistoricProfiles={[Function]}
                                  selectSingleHSP={[Function]}
                                  selectSystem={[Function]}
                                  selectedBaselineIds={Array []}
                                  selectedHSPIds={Array []}
                                  system={
                                    Object {
                                      "display_name": "system1",
                                      "id": "edmk59dj-fn42-dfjk-alv3-bmn2854mnn27",
                                      "last_updated": "2019-01-15T15:25:16.304899Z",
                                      "system_id": "9c79efcc-8f9a-47c7-b0f2-142ff52e89e9",
                                      "type": "historical-system-profile",
                                    }
                                  }
                                  systemIds={Array []}
                                  updateColumns={[Function]}
                                >
                                  <Dropdown
                                    className="historical-system-profile-dropdown"
                                    direction="down"
                                    dropdownItems={
                                      Array [
                                        <Skeleton
                                          className="hsp-dropdown-loading"
                                          isDark={false}
                                          size="sm"
                                        />,
                                        <Skeleton
                                          className="hsp-dropdown-loading"
                                          isDark={false}
                                          size="sm"
                                        />,
                                        <Skeleton
                                          className="hsp-dropdown-loading"
                                          isDark={false}
                                          size="sm"
                                        />,
                                      ]
                                    }
                                    isOpen={false}
                                    isPlain={true}
                                    position="right"
                                    toggle={
                                      <DropdownToggle
                                        className="hsp-dropdown-icon"
                                        onToggle={[Function]}
                                        toggleIndicator={null}
                                      >
                                        <HistoryIcon
                                          color="currentColor"
                                          noVerticalAlign={false}
                                          size="sm"
                                        />
                                      </DropdownToggle>
                                    }
                                  >
                                    <DropdownWithContext
                                      autoFocus={true}
                                      className="historical-system-profile-dropdown"
                                      direction="down"
                                      dropdownItems={
                                        Array [
                                          <Skeleton
                                            className="hsp-dropdown-loading"
                                            isDark={false}
                                            size="sm"
                                          />,
                                          <Skeleton
                                            className="hsp-dropdown-loading"
                                            isDark={false}
                                            size="sm"
                                          />,
                                          <Skeleton
                                            className="hsp-dropdown-loading"
                                            isDark={false}
                                            size="sm"
                                          />,
                                        ]
                                      }
                                      isGrouped={false}
                                      isOpen={false}
                                      isPlain={true}
                                      menuAppendTo="inline"
                                      onSelect={[Function]}
                                      position="right"
                                      toggle={
                                        <DropdownToggle
                                          className="hsp-dropdown-icon"
                                          onToggle={[Function]}
                                          toggleIndicator={null}
                                        >
                                          <HistoryIcon
                                            color="currentColor"
                                            noVerticalAlign={false}
                                            size="sm"
                                          />
                                        </DropdownToggle>
                                      }
                                    >
                                      <div
                                        className="pf-c-dropdown pf-m-align-right historical-system-profile-dropdown"
                                        data-ouia-component-id={2}
                                        data-ouia-component-type="PF4/Dropdown"
                                        data-ouia-safe={true}
                                      >
                                        <DropdownToggle
                                          aria-haspopup={true}
                                          className="hsp-dropdown-icon"
                                          getMenuRef={[Function]}
                                          id="pf-dropdown-toggle-id-2"
                                          isOpen={false}
                                          isPlain={true}
                                          key=".0"
                                          onEnter={[Function]}
                                          onToggle={[Function]}
                                          parentRef={
                                            Object {
                                              "current": <div
                                                class="pf-c-dropdown pf-m-align-right historical-system-profile-dropdown"
                                                data-ouia-component-id="2"
                                                data-ouia-component-type="PF4/Dropdown"
                                                data-ouia-safe="true"
                                              >
                                                <button
                                                  aria-expanded="false"
                                                  aria-haspopup="true"
                                                  class="pf-c-dropdown__toggle pf-m-plain hsp-dropdown-icon"
                                                  id="pf-dropdown-toggle-id-2"
                                                  type="button"
                                                >
                                                  <span>
                                                    <svg
                                                      aria-hidden="true"
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style="vertical-align: -0.125em;"
                                                      viewBox="0 0 512 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M504 255.531c.253 136.64-111.18 248.372-247.82 248.468-59.015.042-113.223-20.53-155.822-54.911-11.077-8.94-11.905-25.541-1.839-35.607l11.267-11.267c8.609-8.609 22.353-9.551 31.891-1.984C173.062 425.135 212.781 440 256 440c101.705 0 184-82.311 184-184 0-101.705-82.311-184-184-184-48.814 0-93.149 18.969-126.068 49.932l50.754 50.754c10.08 10.08 2.941 27.314-11.313 27.314H24c-8.837 0-16-7.163-16-16V38.627c0-14.254 17.234-21.393 27.314-11.314l49.372 49.372C129.209 34.136 189.552 8 256 8c136.81 0 247.747 110.78 248 247.531zm-180.912 78.784l9.823-12.63c8.138-10.463 6.253-25.542-4.21-33.679L288 256.349V152c0-13.255-10.745-24-24-24h-16c-13.255 0-24 10.745-24 24v135.651l65.409 50.874c10.463 8.137 25.541 6.253 33.679-4.21z"
                                                      />
                                                    </svg>
                                                  </span>
                                                </button>
                                              </div>,
                                            }
                                          }
                                          toggleIndicator={null}
                                        >
                                          <Toggle
                                            aria-haspopup={true}
                                            bubbleEvent={false}
                                            className="hsp-dropdown-icon"
                                            getMenuRef={[Function]}
                                            id="pf-dropdown-toggle-id-2"
                                            isActive={false}
                                            isDisabled={false}
                                            isOpen={false}
                                            isPlain={true}
                                            isPrimary={false}
                                            isSplitButton={false}
                                            onEnter={[Function]}
                                            onToggle={[Function]}
                                            parentRef={
                                              Object {
                                                "current": <div
                                                  class="pf-c-dropdown pf-m-align-right historical-system-profile-dropdown"
                                                  data-ouia-component-id="2"
                                                  data-ouia-component-type="PF4/Dropdown"
                                                  data-ouia-safe="true"
                                                >
                                                  <button
                                                    aria-expanded="false"
                                                    aria-haspopup="true"
                                                    class="pf-c-dropdown__toggle pf-m-plain hsp-dropdown-icon"
                                                    id="pf-dropdown-toggle-id-2"
                                                    type="button"
                                                  >
                                                    <span>
                                                      <svg
                                                        aria-hidden="true"
                                                        fill="currentColor"
                                                        height="1em"
                                                        role="img"
                                                        style="vertical-align: -0.125em;"
                                                        viewBox="0 0 512 512"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M504 255.531c.253 136.64-111.18 248.372-247.82 248.468-59.015.042-113.223-20.53-155.822-54.911-11.077-8.94-11.905-25.541-1.839-35.607l11.267-11.267c8.609-8.609 22.353-9.551 31.891-1.984C173.062 425.135 212.781 440 256 440c101.705 0 184-82.311 184-184 0-101.705-82.311-184-184-184-48.814 0-93.149 18.969-126.068 49.932l50.754 50.754c10.08 10.08 2.941 27.314-11.313 27.314H24c-8.837 0-16-7.163-16-16V38.627c0-14.254 17.234-21.393 27.314-11.314l49.372 49.372C129.209 34.136 189.552 8 256 8c136.81 0 247.747 110.78 248 247.531zm-180.912 78.784l9.823-12.63c8.138-10.463 6.253-25.542-4.21-33.679L288 256.349V152c0-13.255-10.745-24-24-24h-16c-13.255 0-24 10.745-24 24v135.651l65.409 50.874c10.463 8.137 25.541 6.253 33.679-4.21z"
                                                        />
                                                      </svg>
                                                    </span>
                                                  </button>
                                                </div>,
                                              }
                                            }
                                          >
                                            <button
                                              aria-expanded={false}
                                              aria-haspopup={true}
                                              className="pf-c-dropdown__toggle pf-m-plain hsp-dropdown-icon"
                                              disabled={false}
                                              id="pf-dropdown-toggle-id-2"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              type="button"
                                            >
                                              <span
                                                className={null}
                                              >
                                                <HistoryIcon
                                                  color="currentColor"
                                                  noVerticalAlign={false}
                                                  size="sm"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    aria-labelledby={null}
                                                    fill="currentColor"
                                                    height="1em"
                                                    role="img"
                                                    style={
                                                      Object {
                                                        "verticalAlign": "-0.125em",
                                                      }
                                                    }
                                                    viewBox="0 0 512 512"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M504 255.531c.253 136.64-111.18 248.372-247.82 248.468-59.015.042-113.223-20.53-155.822-54.911-11.077-8.94-11.905-25.541-1.839-35.607l11.267-11.267c8.609-8.609 22.353-9.551 31.891-1.984C173.062 425.135 212.781 440 256 440c101.705 0 184-82.311 184-184 0-101.705-82.311-184-184-184-48.814 0-93.149 18.969-126.068 49.932l50.754 50.754c10.08 10.08 2.941 27.314-11.313 27.314H24c-8.837 0-16-7.163-16-16V38.627c0-14.254 17.234-21.393 27.314-11.314l49.372 49.372C129.209 34.136 189.552 8 256 8c136.81 0 247.747 110.78 248 247.531zm-180.912 78.784l9.823-12.63c8.138-10.463 6.253-25.542-4.21-33.679L288 256.349V152c0-13.255-10.745-24-24-24h-16c-13.255 0-24 10.745-24 24v135.651l65.409 50.874c10.463 8.137 25.541 6.253 33.679-4.21z"
                                                    />
                                                  </svg>
                                                </HistoryIcon>
                                              </span>
                                            </button>
                                          </Toggle>
                                        </DropdownToggle>
                                      </div>
                                    </DropdownWithContext>
                                  </Dropdown>
                                </HistoricalProfilesDropdown>
                              </Connect(HistoricalProfilesDropdown)>
                            </withRouter(Connect(HistoricalProfilesDropdown))>
                          </div>
                        </div>
                      </th>
                      <th
                        className="drift-header system-header"
                        header-id="f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2"
                        key="f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2"
                      >
                        <div>
                          <a
                            className="remove-system-icon"
                            onClick={[Function]}
                          >
                            <TimesIcon
                              color="currentColor"
                              noVerticalAlign={false}
                              size="sm"
                            >
                              <svg
                                aria-hidden={true}
                                aria-labelledby={null}
                                fill="currentColor"
                                height="1em"
                                role="img"
                                style={
                                  Object {
                                    "verticalAlign": "-0.125em",
                                  }
                                }
                                viewBox="0 0 352 512"
                                width="1em"
                              >
                                <path
                                  d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                                />
                              </svg>
                            </TimesIcon>
                          </a>
                        </div>
                        <div
                          className="comparison-header"
                        >
                          <div
                            className="drift-header-icon"
                          >
                            <ServerIcon
                              color="currentColor"
                              noVerticalAlign={false}
                              size="sm"
                            >
                              <svg
                                aria-hidden={true}
                                aria-labelledby={null}
                                fill="currentColor"
                                height="1em"
                                role="img"
                                style={
                                  Object {
                                    "verticalAlign": "-0.125em",
                                  }
                                }
                                viewBox="0 0 512 512"
                                width="1em"
                              >
                                <path
                                  d="M480 160H32c-17.673 0-32-14.327-32-32V64c0-17.673 14.327-32 32-32h448c17.673 0 32 14.327 32 32v64c0 17.673-14.327 32-32 32zm-48-88c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm-64 0c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm112 248H32c-17.673 0-32-14.327-32-32v-64c0-17.673 14.327-32 32-32h448c17.673 0 32 14.327 32 32v64c0 17.673-14.327 32-32 32zm-48-88c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm-64 0c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm112 248H32c-17.673 0-32-14.327-32-32v-64c0-17.673 14.327-32 32-32h448c17.673 0 32 14.327 32 32v64c0 17.673-14.327 32-32 32zm-48-88c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm-64 0c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24z"
                                />
                              </svg>
                            </ServerIcon>
                          </div>
                          <div
                            className="system-name"
                          >
                            ibm-x3650m4-03-vm03.lab.eng.brq.redhat.com
                          </div>
                          <div
                            className="system-updated-and-reference"
                          >
                            <ReferenceSelector
                              id="f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2"
                              isReference={false}
                              updateReferenceId={[Function]}
                            >
                              <OutlinedStarIcon
                                className="reference-selector pointer"
                                color="currentColor"
                                noVerticalAlign={false}
                                onClick={[Function]}
                                size="sm"
                              >
                                <svg
                                  aria-hidden={true}
                                  aria-labelledby={null}
                                  className="reference-selector pointer"
                                  fill="currentColor"
                                  height="1em"
                                  onClick={[Function]}
                                  role="img"
                                  style={
                                    Object {
                                      "verticalAlign": "-0.125em",
                                    }
                                  }
                                  viewBox="0 0 576 512"
                                  width="1em"
                                >
                                  <path
                                    d="M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z"
                                  />
                                </svg>
                              </OutlinedStarIcon>
                            </ReferenceSelector>
                            15 Jan 2019, 15:25 UTC
                            <withRouter(Connect(HistoricalProfilesDropdown))
                              dropdownDirection="down"
                              fetchCompare={[Function]}
                              hasCompareButton={true}
                              hasMultiSelect={true}
                              system={
                                Object {
                                  "display_name": "ibm-x3650m4-03-vm03.lab.eng.brq.redhat.com",
                                  "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                                  "last_updated": "2019-01-15T15:25:16.304899Z",
                                  "type": "system",
                                }
                              }
                              systemIds={Array []}
                            >
                              <Connect(HistoricalProfilesDropdown)
                                dropdownDirection="down"
                                fetchCompare={[Function]}
                                hasCompareButton={true}
                                hasMultiSelect={true}
                                history={
                                  Object {
                                    "action": "POP",
                                    "block": [Function],
                                    "canGo": [Function],
                                    "createHref": [Function],
                                    "entries": Array [
                                      Object {
                                        "hash": "",
                                        "pathname": "/",
                                        "search": "",
                                        "state": undefined,
                                      },
                                    ],
                                    "go": [Function],
                                    "goBack": [Function],
                                    "goForward": [Function],
                                    "index": 0,
                                    "length": 1,
                                    "listen": [Function],
                                    "location": Object {
                                      "hash": "",
                                      "pathname": "/",
                                      "search": "",
                                      "state": undefined,
                                    },
                                    "push": [Function],
                                    "replace": [Function],
                                  }
                                }
                                location={
                                  Object {
                                    "hash": "",
                                    "pathname": "/",
                                    "search": "",
                                    "state": undefined,
                                  }
                                }
                                match={
                                  Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/",
                                    "url": "/",
                                  }
                                }
                                system={
                                  Object {
                                    "display_name": "ibm-x3650m4-03-vm03.lab.eng.brq.redhat.com",
                                    "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                                    "last_updated": "2019-01-15T15:25:16.304899Z",
                                    "type": "system",
                                  }
                                }
                                systemIds={Array []}
                              >
                                <HistoricalProfilesDropdown
                                  dropdownDirection="down"
                                  fetchCompare={[Function]}
                                  hasCompareButton={true}
                                  hasMultiSelect={true}
                                  history={
                                    Object {
                                      "action": "POP",
                                      "block": [Function],
                                      "canGo": [Function],
                                      "createHref": [Function],
                                      "entries": Array [
                                        Object {
                                          "hash": "",
                                          "pathname": "/",
                                          "search": "",
                                          "state": undefined,
                                        },
                                      ],
                                      "go": [Function],
                                      "goBack": [Function],
                                      "goForward": [Function],
                                      "index": 0,
                                      "length": 1,
                                      "listen": [Function],
                                      "location": Object {
                                        "hash": "",
                                        "pathname": "/",
                                        "search": "",
                                        "state": undefined,
                                      },
                                      "push": [Function],
                                      "replace": [Function],
                                    }
                                  }
                                  location={
                                    Object {
                                      "hash": "",
                                      "pathname": "/",
                                      "search": "",
                                      "state": undefined,
                                    }
                                  }
                                  match={
                                    Object {
                                      "isExact": true,
                                      "params": Object {},
                                      "path": "/",
                                      "url": "/",
                                    }
                                  }
                                  selectHistoricProfiles={[Function]}
                                  selectSingleHSP={[Function]}
                                  selectSystem={[Function]}
                                  selectedBaselineIds={Array []}
                                  selectedHSPIds={Array []}
                                  system={
                                    Object {
                                      "display_name": "ibm-x3650m4-03-vm03.lab.eng.brq.redhat.com",
                                      "id": "f35b1e1d-d231-43f2-8e4f-8f9cb01e3aa2",
                                      "last_updated": "2019-01-15T15:25:16.304899Z",
                                      "type": "system",
                                    }
                                  }
                                  systemIds={Array []}
                                  updateColumns={[Function]}
                                >
                                  <Dropdown
                                    className="historical-system-profile-dropdown"
                                    direction="down"
                                    dropdownItems={
                                      Array [
                                        <Skeleton
                                          className="hsp-dropdown-loading"
                                          isDark={false}
                                          size="sm"
                                        />,
                                        <Skeleton
                                          className="hsp-dropdown-loading"
                                          isDark={false}
                                          size="sm"
                                        />,
                                        <Skeleton
                                          className="hsp-dropdown-loading"
                                          isDark={false}
                                          size="sm"
                                        />,
                                      ]
                                    }
                                    isOpen={false}
                                    isPlain={true}
                                    position="right"
                                    toggle={
                                      <DropdownToggle
                                        className="hsp-dropdown-icon"
                                        onToggle={[Function]}
                                        toggleIndicator={null}
                                      >
                                        <HistoryIcon
                                          color="currentColor"
                                          noVerticalAlign={false}
                                          size="sm"
                                        />
                                      </DropdownToggle>
                                    }
                                  >
                                    <DropdownWithContext
                                      autoFocus={true}
                                      className="historical-system-profile-dropdown"
                                      direction="down"
                                      dropdownItems={
                                        Array [
                                          <Skeleton
                                            className="hsp-dropdown-loading"
                                            isDark={false}
                                            size="sm"
                                          />,
                                          <Skeleton
                                            className="hsp-dropdown-loading"
                                            isDark={false}
                                            size="sm"
                                          />,
                                          <Skeleton
                                            className="hsp-dropdown-loading"
                                            isDark={false}
                                            size="sm"
                                          />,
                                        ]
                                      }
                                      isGrouped={false}
                                      isOpen={false}
                                      isPlain={true}
                                      menuAppendTo="inline"
                                      onSelect={[Function]}
                                      position="right"
                                      toggle={
                                        <DropdownToggle
                                          className="hsp-dropdown-icon"
                                          onToggle={[Function]}
                                          toggleIndicator={null}
                                        >
                                          <HistoryIcon
                                            color="currentColor"
                                            noVerticalAlign={false}
                                            size="sm"
                                          />
                                        </DropdownToggle>
                                      }
                                    >
                                      <div
                                        className="pf-c-dropdown pf-m-align-right historical-system-profile-dropdown"
                                        data-ouia-component-id={3}
                                        data-ouia-component-type="PF4/Dropdown"
                                        data-ouia-safe={true}
                                      >
                                        <DropdownToggle
                                          aria-haspopup={true}
                                          className="hsp-dropdown-icon"
                                          getMenuRef={[Function]}
                                          id="pf-dropdown-toggle-id-3"
                                          isOpen={false}
                                          isPlain={true}
                                          key=".0"
                                          onEnter={[Function]}
                                          onToggle={[Function]}
                                          parentRef={
                                            Object {
                                              "current": <div
                                                class="pf-c-dropdown pf-m-align-right historical-system-profile-dropdown"
                                                data-ouia-component-id="3"
                                                data-ouia-component-type="PF4/Dropdown"
                                                data-ouia-safe="true"
                                              >
                                                <button
                                                  aria-expanded="false"
                                                  aria-haspopup="true"
                                                  class="pf-c-dropdown__toggle pf-m-plain hsp-dropdown-icon"
                                                  id="pf-dropdown-toggle-id-3"
                                                  type="button"
                                                >
                                                  <span>
                                                    <svg
                                                      aria-hidden="true"
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style="vertical-align: -0.125em;"
                                                      viewBox="0 0 512 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M504 255.531c.253 136.64-111.18 248.372-247.82 248.468-59.015.042-113.223-20.53-155.822-54.911-11.077-8.94-11.905-25.541-1.839-35.607l11.267-11.267c8.609-8.609 22.353-9.551 31.891-1.984C173.062 425.135 212.781 440 256 440c101.705 0 184-82.311 184-184 0-101.705-82.311-184-184-184-48.814 0-93.149 18.969-126.068 49.932l50.754 50.754c10.08 10.08 2.941 27.314-11.313 27.314H24c-8.837 0-16-7.163-16-16V38.627c0-14.254 17.234-21.393 27.314-11.314l49.372 49.372C129.209 34.136 189.552 8 256 8c136.81 0 247.747 110.78 248 247.531zm-180.912 78.784l9.823-12.63c8.138-10.463 6.253-25.542-4.21-33.679L288 256.349V152c0-13.255-10.745-24-24-24h-16c-13.255 0-24 10.745-24 24v135.651l65.409 50.874c10.463 8.137 25.541 6.253 33.679-4.21z"
                                                      />
                                                    </svg>
                                                  </span>
                                                </button>
                                              </div>,
                                            }
                                          }
                                          toggleIndicator={null}
                                        >
                                          <Toggle
                                            aria-haspopup={true}
                                            bubbleEvent={false}
                                            className="hsp-dropdown-icon"
                                            getMenuRef={[Function]}
                                            id="pf-dropdown-toggle-id-3"
                                            isActive={false}
                                            isDisabled={false}
                                            isOpen={false}
                                            isPlain={true}
                                            isPrimary={false}
                                            isSplitButton={false}
                                            onEnter={[Function]}
                                            onToggle={[Function]}
                                            parentRef={
                                              Object {
                                                "current": <div
                                                  class="pf-c-dropdown pf-m-align-right historical-system-profile-dropdown"
                                                  data-ouia-component-id="3"
                                                  data-ouia-component-type="PF4/Dropdown"
                                                  data-ouia-safe="true"
                                                >
                                                  <button
                                                    aria-expanded="false"
                                                    aria-haspopup="true"
                                                    class="pf-c-dropdown__toggle pf-m-plain hsp-dropdown-icon"
                                                    id="pf-dropdown-toggle-id-3"
                                                    type="button"
                                                  >
                                                    <span>
                                                      <svg
                                                        aria-hidden="true"
                                                        fill="currentColor"
                                                        height="1em"
                                                        role="img"
                                                        style="vertical-align: -0.125em;"
                                                        viewBox="0 0 512 512"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M504 255.531c.253 136.64-111.18 248.372-247.82 248.468-59.015.042-113.223-20.53-155.822-54.911-11.077-8.94-11.905-25.541-1.839-35.607l11.267-11.267c8.609-8.609 22.353-9.551 31.891-1.984C173.062 425.135 212.781 440 256 440c101.705 0 184-82.311 184-184 0-101.705-82.311-184-184-184-48.814 0-93.149 18.969-126.068 49.932l50.754 50.754c10.08 10.08 2.941 27.314-11.313 27.314H24c-8.837 0-16-7.163-16-16V38.627c0-14.254 17.234-21.393 27.314-11.314l49.372 49.372C129.209 34.136 189.552 8 256 8c136.81 0 247.747 110.78 248 247.531zm-180.912 78.784l9.823-12.63c8.138-10.463 6.253-25.542-4.21-33.679L288 256.349V152c0-13.255-10.745-24-24-24h-16c-13.255 0-24 10.745-24 24v135.651l65.409 50.874c10.463 8.137 25.541 6.253 33.679-4.21z"
                                                        />
                                                      </svg>
                                                    </span>
                                                  </button>
                                                </div>,
                                              }
                                            }
                                          >
                                            <button
                                              aria-expanded={false}
                                              aria-haspopup={true}
                                              className="pf-c-dropdown__toggle pf-m-plain hsp-dropdown-icon"
                                              disabled={false}
                                              id="pf-dropdown-toggle-id-3"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              type="button"
                                            >
                                              <span
                                                className={null}
                                              >
                                                <HistoryIcon
                                                  color="currentColor"
                                                  noVerticalAlign={false}
                                                  size="sm"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    aria-labelledby={null}
                                                    fill="currentColor"
                                                    height="1em"
                                                    role="img"
                                                    style={
                                                      Object {
                                                        "verticalAlign": "-0.125em",
                                                      }
                                                    }
                                                    viewBox="0 0 512 512"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M504 255.531c.253 136.64-111.18 248.372-247.82 248.468-59.015.042-113.223-20.53-155.822-54.911-11.077-8.94-11.905-25.541-1.839-35.607l11.267-11.267c8.609-8.609 22.353-9.551 31.891-1.984C173.062 425.135 212.781 440 256 440c101.705 0 184-82.311 184-184 0-101.705-82.311-184-184-184-48.814 0-93.149 18.969-126.068 49.932l50.754 50.754c10.08 10.08 2.941 27.314-11.313 27.314H24c-8.837 0-16-7.163-16-16V38.627c0-14.254 17.234-21.393 27.314-11.314l49.372 49.372C129.209 34.136 189.552 8 256 8c136.81 0 247.747 110.78 248 247.531zm-180.912 78.784l9.823-12.63c8.138-10.463 6.253-25.542-4.21-33.679L288 256.349V152c0-13.255-10.745-24-24-24h-16c-13.255 0-24 10.745-24 24v135.651l65.409 50.874c10.463 8.137 25.541 6.253 33.679-4.21z"
                                                    />
                                                  </svg>
                                                </HistoryIcon>
                                              </span>
                                            </button>
                                          </Toggle>
                                        </DropdownToggle>
                                      </div>
                                    </DropdownWithContext>
                                  </Dropdown>
                                </HistoricalProfilesDropdown>
                              </Connect(HistoricalProfilesDropdown)>
                            </withRouter(Connect(HistoricalProfilesDropdown))>
                          </div>
                        </div>
                      </th>
                    </tr>
                  </ComparisonHeader>
                </thead>
                <tbody />
              </table>
            </div>
          </DriftTable>
        </Connect(DriftTable)>
      </withRouter(Connect(DriftTable))>
    </Provider>
  </Router>
</MemoryRouter>
`;

exports[`DriftTable should render correctly 1`] = `
<Fragment>
  <Connect(AddSystemModal)
    confirmModal={[Function]}
    selectedSystemIds={Array []}
  />
  <div
    className="drift-table-wrapper"
  >
    <table
      className="pf-c-table pf-m-compact drift-table"
    >
      <thead>
        <ComparisonHeader
          factSort=""
          fetchCompare={[Function]}
          masterList={Array []}
          removeSystem={[Function]}
          stateSort=""
          systemIds={Array []}
          toggleFactSort={[MockFunction]}
          toggleStateSort={[MockFunction]}
          updateReferenceId={[Function]}
        />
      </thead>
      <tbody />
    </table>
  </div>
</Fragment>
`;
