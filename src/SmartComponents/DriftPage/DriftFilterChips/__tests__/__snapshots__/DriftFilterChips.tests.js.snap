// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ConnectedDriftFilterChips should render all states true 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(DriftFilterChips)
    setIsEmpty={
      [MockFunction] {
        "calls": Array [
          Array [
            false,
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
  >
    <DriftFilterChips
      addStateFilter={[Function]}
      factFilter="something"
      filterByFact={[Function]}
      setIsEmpty={
        [MockFunction] {
          "calls": Array [
            Array [
              false,
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        }
      }
      stateFilters={
        Array [
          Object {
            "display": "Same",
            "filter": "SAME",
            "selected": true,
          },
          Object {
            "display": "Different",
            "filter": "DIFFERENT",
            "selected": true,
          },
          Object {
            "display": "Incomplete data",
            "filter": "INCOMPLETE_DATA",
            "selected": true,
          },
        ]
      }
    >
      <ChipGroup
        aria-label="Chip group category"
        categoryName="State"
        closeBtnAriaLabel="Close chip group"
        collapsedText="\${remaining} more"
        defaultIsOpen={false}
        expandedText="Show Less"
        isClosable={false}
        key="State"
        numChips={3}
        onClick={[Function]}
        tooltipPosition="top"
      >
        <GenerateId
          prefix="pf-random-id-"
        >
          <div
            className="pf-c-chip-group pf-m-category"
          >
            <span
              aria-hidden="true"
              className="pf-c-chip-group__label"
              id="pf-random-id-0"
            >
              State
            </span>
            <ul
              aria-labelledby="pf-random-id-0"
              className="pf-c-chip-group__list"
              role="list"
            >
              <li
                className="pf-c-chip-group__list-item"
                key="0"
              >
                <Chip
                  className=""
                  closeBtnAriaLabel="close"
                  component="div"
                  isOverflowChip={false}
                  isReadOnly={false}
                  key=".$State0"
                  onClick={[Function]}
                  tooltipPosition="top"
                >
                  <GenerateId
                    prefix="pf-random-id-"
                  >
                    <div
                      className="pf-c-chip"
                      data-ouia-component-id={8}
                      data-ouia-component-type="PF4/Chip"
                      data-ouia-safe={true}
                    >
                      <span
                        className="pf-c-chip__text"
                        id="pf-random-id-1"
                      >
                        Same
                      </span>
                      <Button
                        aria-label="close"
                        aria-labelledby="remove_pf-random-id-1 pf-random-id-1"
                        id="remove_pf-random-id-1"
                        onClick={[Function]}
                        variant="plain"
                      >
                        <button
                          aria-disabled={false}
                          aria-label="close"
                          aria-labelledby="remove_pf-random-id-1 pf-random-id-1"
                          className="pf-c-button pf-m-plain"
                          data-ouia-component-id={9}
                          data-ouia-component-type="PF4/Button"
                          data-ouia-safe={true}
                          disabled={false}
                          id="remove_pf-random-id-1"
                          onClick={[Function]}
                          type="button"
                        >
                          <TimesIcon
                            aria-hidden="true"
                            color="currentColor"
                            noVerticalAlign={false}
                            size="sm"
                          >
                            <svg
                              aria-hidden="true"
                              aria-labelledby={null}
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style={
                                Object {
                                  "verticalAlign": "-0.125em",
                                }
                              }
                              viewBox="0 0 352 512"
                              width="1em"
                            >
                              <path
                                d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                                transform=""
                              />
                            </svg>
                          </TimesIcon>
                        </button>
                      </Button>
                    </div>
                  </GenerateId>
                </Chip>
              </li>
              <li
                className="pf-c-chip-group__list-item"
                key="1"
              >
                <Chip
                  className=""
                  closeBtnAriaLabel="close"
                  component="div"
                  isOverflowChip={false}
                  isReadOnly={false}
                  key=".$State1"
                  onClick={[Function]}
                  tooltipPosition="top"
                >
                  <GenerateId
                    prefix="pf-random-id-"
                  >
                    <div
                      className="pf-c-chip"
                      data-ouia-component-id={10}
                      data-ouia-component-type="PF4/Chip"
                      data-ouia-safe={true}
                    >
                      <span
                        className="pf-c-chip__text"
                        id="pf-random-id-2"
                      >
                        Different
                      </span>
                      <Button
                        aria-label="close"
                        aria-labelledby="remove_pf-random-id-2 pf-random-id-2"
                        id="remove_pf-random-id-2"
                        onClick={[Function]}
                        variant="plain"
                      >
                        <button
                          aria-disabled={false}
                          aria-label="close"
                          aria-labelledby="remove_pf-random-id-2 pf-random-id-2"
                          className="pf-c-button pf-m-plain"
                          data-ouia-component-id={11}
                          data-ouia-component-type="PF4/Button"
                          data-ouia-safe={true}
                          disabled={false}
                          id="remove_pf-random-id-2"
                          onClick={[Function]}
                          type="button"
                        >
                          <TimesIcon
                            aria-hidden="true"
                            color="currentColor"
                            noVerticalAlign={false}
                            size="sm"
                          >
                            <svg
                              aria-hidden="true"
                              aria-labelledby={null}
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style={
                                Object {
                                  "verticalAlign": "-0.125em",
                                }
                              }
                              viewBox="0 0 352 512"
                              width="1em"
                            >
                              <path
                                d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                                transform=""
                              />
                            </svg>
                          </TimesIcon>
                        </button>
                      </Button>
                    </div>
                  </GenerateId>
                </Chip>
              </li>
              <li
                className="pf-c-chip-group__list-item"
                key="2"
              >
                <Chip
                  className=""
                  closeBtnAriaLabel="close"
                  component="div"
                  isOverflowChip={false}
                  isReadOnly={false}
                  key=".$State2"
                  onClick={[Function]}
                  tooltipPosition="top"
                >
                  <GenerateId
                    prefix="pf-random-id-"
                  >
                    <div
                      className="pf-c-chip"
                      data-ouia-component-id={12}
                      data-ouia-component-type="PF4/Chip"
                      data-ouia-safe={true}
                    >
                      <span
                        className="pf-c-chip__text"
                        id="pf-random-id-3"
                      >
                        Incomplete data
                      </span>
                      <Button
                        aria-label="close"
                        aria-labelledby="remove_pf-random-id-3 pf-random-id-3"
                        id="remove_pf-random-id-3"
                        onClick={[Function]}
                        variant="plain"
                      >
                        <button
                          aria-disabled={false}
                          aria-label="close"
                          aria-labelledby="remove_pf-random-id-3 pf-random-id-3"
                          className="pf-c-button pf-m-plain"
                          data-ouia-component-id={13}
                          data-ouia-component-type="PF4/Button"
                          data-ouia-safe={true}
                          disabled={false}
                          id="remove_pf-random-id-3"
                          onClick={[Function]}
                          type="button"
                        >
                          <TimesIcon
                            aria-hidden="true"
                            color="currentColor"
                            noVerticalAlign={false}
                            size="sm"
                          >
                            <svg
                              aria-hidden="true"
                              aria-labelledby={null}
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style={
                                Object {
                                  "verticalAlign": "-0.125em",
                                }
                              }
                              viewBox="0 0 352 512"
                              width="1em"
                            >
                              <path
                                d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                                transform=""
                              />
                            </svg>
                          </TimesIcon>
                        </button>
                      </Button>
                    </div>
                  </GenerateId>
                </Chip>
              </li>
            </ul>
          </div>
        </GenerateId>
      </ChipGroup>
      <ChipGroup
        aria-label="Chip group category"
        categoryName="Fact name"
        closeBtnAriaLabel="Close chip group"
        collapsedText="\${remaining} more"
        defaultIsOpen={false}
        expandedText="Show Less"
        isClosable={false}
        key="Fact name"
        numChips={3}
        onClick={[Function]}
        tooltipPosition="top"
      >
        <GenerateId
          prefix="pf-random-id-"
        >
          <div
            className="pf-c-chip-group pf-m-category"
          >
            <span
              aria-hidden="true"
              className="pf-c-chip-group__label"
              id="pf-random-id-4"
            >
              Fact name
            </span>
            <ul
              aria-labelledby="pf-random-id-4"
              className="pf-c-chip-group__list"
              role="list"
            >
              <li
                className="pf-c-chip-group__list-item"
                key="0"
              >
                <Chip
                  className=""
                  closeBtnAriaLabel="close"
                  component="div"
                  isOverflowChip={false}
                  isReadOnly={false}
                  key=".$Fact name3"
                  onClick={[Function]}
                  tooltipPosition="top"
                >
                  <GenerateId
                    prefix="pf-random-id-"
                  >
                    <div
                      className="pf-c-chip"
                      data-ouia-component-id={14}
                      data-ouia-component-type="PF4/Chip"
                      data-ouia-safe={true}
                    >
                      <span
                        className="pf-c-chip__text"
                        id="pf-random-id-5"
                      >
                        something
                      </span>
                      <Button
                        aria-label="close"
                        aria-labelledby="remove_pf-random-id-5 pf-random-id-5"
                        id="remove_pf-random-id-5"
                        onClick={[Function]}
                        variant="plain"
                      >
                        <button
                          aria-disabled={false}
                          aria-label="close"
                          aria-labelledby="remove_pf-random-id-5 pf-random-id-5"
                          className="pf-c-button pf-m-plain"
                          data-ouia-component-id={15}
                          data-ouia-component-type="PF4/Button"
                          data-ouia-safe={true}
                          disabled={false}
                          id="remove_pf-random-id-5"
                          onClick={[Function]}
                          type="button"
                        >
                          <TimesIcon
                            aria-hidden="true"
                            color="currentColor"
                            noVerticalAlign={false}
                            size="sm"
                          >
                            <svg
                              aria-hidden="true"
                              aria-labelledby={null}
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style={
                                Object {
                                  "verticalAlign": "-0.125em",
                                }
                              }
                              viewBox="0 0 352 512"
                              width="1em"
                            >
                              <path
                                d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                                transform=""
                              />
                            </svg>
                          </TimesIcon>
                        </button>
                      </Button>
                    </div>
                  </GenerateId>
                </Chip>
              </li>
            </ul>
          </div>
        </GenerateId>
      </ChipGroup>
    </DriftFilterChips>
  </Connect(DriftFilterChips)>
</Provider>
`;

exports[`ConnectedDriftFilterChips should render correctly 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(DriftFilterChips)
    setIsEmpty={
      [MockFunction] {
        "calls": Array [
          Array [
            true,
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
  >
    <DriftFilterChips
      addStateFilter={[Function]}
      factFilter=""
      filterByFact={[Function]}
      setIsEmpty={
        [MockFunction] {
          "calls": Array [
            Array [
              true,
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        }
      }
      stateFilters={Array []}
    >
      <ChipGroup
        aria-label="Chip group category"
        categoryName="State"
        closeBtnAriaLabel="Close chip group"
        collapsedText="\${remaining} more"
        defaultIsOpen={false}
        expandedText="Show Less"
        isClosable={false}
        key="State"
        numChips={3}
        onClick={[Function]}
        tooltipPosition="top"
      />
      <ChipGroup
        aria-label="Chip group category"
        categoryName="Fact name"
        closeBtnAriaLabel="Close chip group"
        collapsedText="\${remaining} more"
        defaultIsOpen={false}
        expandedText="Show Less"
        isClosable={false}
        key="Fact name"
        numChips={3}
        onClick={[Function]}
        tooltipPosition="top"
      />
    </DriftFilterChips>
  </Connect(DriftFilterChips)>
</Provider>
`;

exports[`DriftFilterChips should render correctly 1`] = `
Array [
  <ChipGroup
    aria-label="Chip group category"
    categoryName="State"
    closeBtnAriaLabel="Close chip group"
    collapsedText="\${remaining} more"
    defaultIsOpen={false}
    expandedText="Show Less"
    isClosable={false}
    key="State"
    numChips={3}
    onClick={[Function]}
    tooltipPosition="top"
  />,
  <ChipGroup
    aria-label="Chip group category"
    categoryName="Fact name"
    closeBtnAriaLabel="Close chip group"
    collapsedText="\${remaining} more"
    defaultIsOpen={false}
    expandedText="Show Less"
    isClosable={false}
    key="Fact name"
    numChips={3}
    onClick={[Function]}
    tooltipPosition="top"
  />,
]
`;
