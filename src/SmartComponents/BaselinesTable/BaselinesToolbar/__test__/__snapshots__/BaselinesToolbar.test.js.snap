// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`jest-tests BaselinesToolbar should render correctly 1`] = `
<Fragment>
  <Toolbar
    className="drift-toolbar"
  >
    <ToolbarGroup>
      <ToolbarItem>
        <BulkSelect
          checked={false}
          className=""
          count={null}
          isDisabled={false}
          items={
            Array [
              Object {
                "key": "select-all",
                "onClick": [Function],
                "title": "Select all",
              },
              Object {
                "key": "select-none",
                "onClick": [Function],
                "title": "Select none",
              },
            ]
          }
          onSelect={[Function]}
        />
      </ToolbarItem>
    </ToolbarGroup>
    <ToolbarGroup>
      <ToolbarItem>
        <ConditionalFilter
          items={Array []}
          onChange={[Function]}
          placeholder="Filter by name"
          value=""
        />
      </ToolbarItem>
    </ToolbarGroup>
    <ToolbarGroup>
      <ToolbarItem>
        <withRouter(Connect(CreateBaselineButton)) />
      </ToolbarItem>
      <ToolbarItem>
        <Connect(ExportCSVButton)
          exportType="baseline list"
        />
      </ToolbarItem>
      <ToolbarItem>
        <Connect(BaselinesKebab)
          exportType="baseline list"
          tableId="CHECKBOX"
        />
      </ToolbarItem>
    </ToolbarGroup>
  </Toolbar>
</Fragment>
`;

exports[`jest-tests ConnectedBaselinesToolbar should render correctly 1`] = `
<MemoryRouter
  keyLength={0}
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <BaselinesToolbar
        createButton={true}
        exportButton={true}
        kebab={true}
        tableData={
          Array [
            Array [
              "1234",
              "beavs baseline",
              "a year ago",
            ],
            Array [
              "abcd",
              "micjohns baseline",
              "a year ago",
            ],
          ]
        }
        tableId="CHECKBOX"
      >
        <Toolbar
          className="drift-toolbar"
        >
          <div
            className="pf-l-toolbar drift-toolbar"
          >
            <ToolbarGroup>
              <div
                className="pf-l-toolbar__group"
              >
                <ToolbarItem>
                  <div
                    className="pf-l-toolbar__item"
                  >
                    <BulkSelect
                      checked={false}
                      className=""
                      count={null}
                      isDisabled={false}
                      items={
                        Array [
                          Object {
                            "key": "select-all",
                            "onClick": [Function],
                            "title": "Select all",
                          },
                          Object {
                            "key": "select-none",
                            "onClick": [Function],
                            "title": "Select none",
                          },
                        ]
                      }
                      onSelect={[Function]}
                    >
                      <Dropdown
                        className="ins-c-bulk-select"
                        dropdownItems={
                          Array [
                            <DropdownItem
                              component="button"
                              onClick={[Function]}
                            >
                              Select all
                            </DropdownItem>,
                            <DropdownItem
                              component="button"
                              onClick={[Function]}
                            >
                              Select none
                            </DropdownItem>,
                          ]
                        }
                        isDisabled={false}
                        isOpen={false}
                        onSelect={[Function]}
                        toggle={
                          <DropdownToggle
                            onToggle={[Function]}
                            splitButtonItems={
                              Array [
                                <React.Fragment>
                                  <DropdownToggleCheckbox
                                    aria-label="Select all"
                                    checked={false}
                                    className=""
                                    id="toggle-checkbox"
                                    isDisabled={false}
                                    isValid={true}
                                    onChange={[Function]}
                                  >
                                     selected
                                  </DropdownToggleCheckbox>
                                </React.Fragment>,
                              ]
                            }
                          />
                        }
                      >
                        <Component
                          className="ins-c-bulk-select"
                          dropdownItems={
                            Array [
                              <DropdownItem
                                component="button"
                                onClick={[Function]}
                              >
                                Select all
                              </DropdownItem>,
                              <DropdownItem
                                component="button"
                                onClick={[Function]}
                              >
                                Select none
                              </DropdownItem>,
                            ]
                          }
                          isDisabled={false}
                          isOpen={false}
                          toggle={
                            <DropdownToggle
                              onToggle={[Function]}
                              splitButtonItems={
                                Array [
                                  <React.Fragment>
                                    <DropdownToggleCheckbox
                                      aria-label="Select all"
                                      checked={false}
                                      className=""
                                      id="toggle-checkbox"
                                      isDisabled={false}
                                      isValid={true}
                                      onChange={[Function]}
                                    >
                                       selected
                                    </DropdownToggleCheckbox>
                                  </React.Fragment>,
                                ]
                              }
                            />
                          }
                        >
                          <ComponentWithOuia
                            component={[Function]}
                            componentProps={
                              Object {
                                "className": "ins-c-bulk-select",
                                "dropdownItems": Array [
                                  <DropdownItem
                                    component="button"
                                    onClick={[Function]}
                                  >
                                    Select all
                                  </DropdownItem>,
                                  <DropdownItem
                                    component="button"
                                    onClick={[Function]}
                                  >
                                    Select none
                                  </DropdownItem>,
                                ],
                                "isDisabled": false,
                                "isOpen": false,
                                "toggle": <DropdownToggle
                                  onToggle={[Function]}
                                  splitButtonItems={
                                    Array [
                                      <React.Fragment>
                                        <DropdownToggleCheckbox
                                          aria-label="Select all"
                                          checked={false}
                                          className=""
                                          id="toggle-checkbox"
                                          isDisabled={false}
                                          isValid={true}
                                          onChange={[Function]}
                                        >
                                           selected
                                        </DropdownToggleCheckbox>
                                      </React.Fragment>,
                                    ]
                                  }
                                />,
                              }
                            }
                            consumerContext={null}
                          >
                            <DropdownWithContext
                              autoFocus={true}
                              className="ins-c-bulk-select"
                              direction="down"
                              dropdownItems={
                                Array [
                                  <DropdownItem
                                    component="button"
                                    onClick={[Function]}
                                  >
                                    Select all
                                  </DropdownItem>,
                                  <DropdownItem
                                    component="button"
                                    onClick={[Function]}
                                  >
                                    Select none
                                  </DropdownItem>,
                                ]
                              }
                              isDisabled={false}
                              isGrouped={false}
                              isOpen={false}
                              isPlain={false}
                              onSelect={[Function]}
                              ouiaComponentType="Dropdown"
                              ouiaContext={
                                Object {
                                  "isOuia": false,
                                  "ouiaId": null,
                                }
                              }
                              position="left"
                              toggle={
                                <DropdownToggle
                                  onToggle={[Function]}
                                  splitButtonItems={
                                    Array [
                                      <React.Fragment>
                                        <DropdownToggleCheckbox
                                          aria-label="Select all"
                                          checked={false}
                                          className=""
                                          id="toggle-checkbox"
                                          isDisabled={false}
                                          isValid={true}
                                          onChange={[Function]}
                                        >
                                           selected
                                        </DropdownToggleCheckbox>
                                      </React.Fragment>,
                                    ]
                                  }
                                />
                              }
                            >
                              <div
                                className="pf-c-dropdown ins-c-bulk-select"
                                isDisabled={false}
                              >
                                <DropdownToggle
                                  ariaHasPopup={true}
                                  id="pf-toggle-id-2"
                                  isOpen={false}
                                  isPlain={false}
                                  key=".0"
                                  onEnter={[Function]}
                                  onToggle={[Function]}
                                  parentRef={
                                    Object {
                                      "current": <div
                                        class="pf-c-dropdown ins-c-bulk-select"
                                      >
                                        <div
                                          class="pf-c-dropdown__toggle pf-m-split-button"
                                        >
                                          <label
                                            class="pf-c-dropdown__toggle-check"
                                            for="toggle-checkbox"
                                          >
                                            <input
                                              aria-invalid="false"
                                              aria-label="Select all"
                                              id="toggle-checkbox"
                                              type="checkbox"
                                            />
                                            <span
                                              aria-hidden="true"
                                              class="pf-c-dropdown__toggle-text"
                                              id="toggle-checkbox-text"
                                            >
                                               selected
                                            </span>
                                          </label>
                                          <button
                                            aria-expanded="false"
                                            aria-haspopup="true"
                                            aria-label="Select"
                                            class="pf-c-dropdown__toggle-button"
                                            id="pf-toggle-id-2"
                                            type="button"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              class=""
                                              fill="currentColor"
                                              height="1em"
                                              role="img"
                                              style="vertical-align: -0.125em;"
                                              viewBox="0 0 320 512"
                                              width="1em"
                                            >
                                              <path
                                                d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                transform=""
                                              />
                                            </svg>
                                          </button>
                                        </div>
                                      </div>,
                                    }
                                  }
                                  splitButtonItems={
                                    Array [
                                      <React.Fragment>
                                        <DropdownToggleCheckbox
                                          aria-label="Select all"
                                          checked={false}
                                          className=""
                                          id="toggle-checkbox"
                                          isDisabled={false}
                                          isValid={true}
                                          onChange={[Function]}
                                        >
                                           selected
                                        </DropdownToggleCheckbox>
                                      </React.Fragment>,
                                    ]
                                  }
                                >
                                  <div
                                    className="pf-c-dropdown__toggle pf-m-split-button"
                                  >
                                    <DropdownToggleCheckbox
                                      aria-label="Select all"
                                      checked={false}
                                      className=""
                                      id="toggle-checkbox"
                                      isDisabled={false}
                                      isValid={true}
                                      onChange={[Function]}
                                    >
                                      <label
                                        className="pf-c-dropdown__toggle-check"
                                        htmlFor="toggle-checkbox"
                                      >
                                        <input
                                          aria-invalid={false}
                                          aria-label="Select all"
                                          checked={false}
                                          disabled={false}
                                          id="toggle-checkbox"
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <span
                                          aria-hidden="true"
                                          className="pf-c-dropdown__toggle-text"
                                          id="toggle-checkbox-text"
                                        >
                                           selected
                                        </span>
                                      </label>
                                    </DropdownToggleCheckbox>
                                    <Toggle
                                      aria-label="Select"
                                      ariaHasPopup={true}
                                      className=""
                                      id="pf-toggle-id-2"
                                      isActive={false}
                                      isDisabled={false}
                                      isFocused={false}
                                      isHovered={false}
                                      isOpen={false}
                                      isPlain={false}
                                      isPrimary={false}
                                      isSplitButton={true}
                                      onEnter={[Function]}
                                      onToggle={[Function]}
                                      parentRef={
                                        Object {
                                          "current": <div
                                            class="pf-c-dropdown ins-c-bulk-select"
                                          >
                                            <div
                                              class="pf-c-dropdown__toggle pf-m-split-button"
                                            >
                                              <label
                                                class="pf-c-dropdown__toggle-check"
                                                for="toggle-checkbox"
                                              >
                                                <input
                                                  aria-invalid="false"
                                                  aria-label="Select all"
                                                  id="toggle-checkbox"
                                                  type="checkbox"
                                                />
                                                <span
                                                  aria-hidden="true"
                                                  class="pf-c-dropdown__toggle-text"
                                                  id="toggle-checkbox-text"
                                                >
                                                   selected
                                                </span>
                                              </label>
                                              <button
                                                aria-expanded="false"
                                                aria-haspopup="true"
                                                aria-label="Select"
                                                class="pf-c-dropdown__toggle-button"
                                                id="pf-toggle-id-2"
                                                type="button"
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  class=""
                                                  fill="currentColor"
                                                  height="1em"
                                                  role="img"
                                                  style="vertical-align: -0.125em;"
                                                  viewBox="0 0 320 512"
                                                  width="1em"
                                                >
                                                  <path
                                                    d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                    transform=""
                                                  />
                                                </svg>
                                              </button>
                                            </div>
                                          </div>,
                                        }
                                      }
                                    >
                                      <button
                                        aria-expanded={false}
                                        aria-haspopup={true}
                                        aria-label="Select"
                                        className="pf-c-dropdown__toggle-button"
                                        disabled={false}
                                        id="pf-toggle-id-2"
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        type="button"
                                      >
                                        <CaretDownIcon
                                          className=""
                                          color="currentColor"
                                          noVerticalAlign={false}
                                          size="sm"
                                          title={null}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            className=""
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 320 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                              transform=""
                                            />
                                          </svg>
                                        </CaretDownIcon>
                                      </button>
                                    </Toggle>
                                  </div>
                                </DropdownToggle>
                              </div>
                            </DropdownWithContext>
                          </ComponentWithOuia>
                        </Component>
                      </Dropdown>
                    </BulkSelect>
                  </div>
                </ToolbarItem>
              </div>
            </ToolbarGroup>
            <ToolbarGroup>
              <div
                className="pf-l-toolbar__group"
              >
                <ToolbarItem>
                  <div
                    className="pf-l-toolbar__item"
                  >
                    <ConditionalFilter
                      items={Array []}
                      onChange={[Function]}
                      placeholder="Filter by name"
                      value=""
                    >
                      <div
                        className="ins-c-conditional-filter"
                      >
                        <Text
                          id="default-input"
                          onChange={[Function]}
                          onSubmit={[Function]}
                          placeholder="Filter by name"
                          value=""
                          widget-type="InsightsInput"
                        >
                          <ForwardRef
                            className="ins-c-conditional-filter "
                            id="default-input"
                            onChange={[Function]}
                            onKeyDown={[Function]}
                            placeholder="Filter by name"
                            value=""
                            widget-type="InsightsInput"
                          >
                            <TextInputBase
                              aria-label={null}
                              className="ins-c-conditional-filter "
                              id="default-input"
                              innerRef={null}
                              isDisabled={false}
                              isReadOnly={false}
                              isRequired={false}
                              isValid={true}
                              onChange={[Function]}
                              onKeyDown={[Function]}
                              placeholder="Filter by name"
                              type="text"
                              validated="default"
                              value=""
                              widget-type="InsightsInput"
                            >
                              <input
                                aria-invalid={false}
                                aria-label={null}
                                className="pf-c-form-control ins-c-conditional-filter "
                                disabled={false}
                                id="default-input"
                                onChange={[Function]}
                                onKeyDown={[Function]}
                                placeholder="Filter by name"
                                readOnly={false}
                                required={false}
                                type="text"
                                value=""
                                widget-type="InsightsInput"
                              />
                            </TextInputBase>
                          </ForwardRef>
                          <SearchIcon
                            className="ins-c-search-icon"
                            color="currentColor"
                            noVerticalAlign={false}
                            size="sm"
                            title={null}
                          >
                            <svg
                              aria-hidden={true}
                              aria-labelledby={null}
                              className="ins-c-search-icon"
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style={
                                Object {
                                  "verticalAlign": "-0.125em",
                                }
                              }
                              viewBox="0 0 512 512"
                              width="1em"
                            >
                              <path
                                d="M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z"
                                transform=""
                              />
                            </svg>
                          </SearchIcon>
                        </Text>
                      </div>
                    </ConditionalFilter>
                  </div>
                </ToolbarItem>
              </div>
            </ToolbarGroup>
            <ToolbarGroup>
              <div
                className="pf-l-toolbar__group"
              >
                <ToolbarItem>
                  <div
                    className="pf-l-toolbar__item"
                  >
                    <withRouter(Connect(CreateBaselineButton))>
                      <Connect(CreateBaselineButton)
                        history={
                          Object {
                            "action": "POP",
                            "block": [Function],
                            "canGo": [Function],
                            "createHref": [Function],
                            "entries": Array [
                              Object {
                                "hash": "",
                                "pathname": "/",
                                "search": "",
                                "state": undefined,
                              },
                            ],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "index": 0,
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "push": [Function],
                            "replace": [Function],
                          }
                        }
                        location={
                          Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          }
                        }
                        match={
                          Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/",
                            "url": "/",
                          }
                        }
                      >
                        <CreateBaselineButton
                          addSystemModalOpened={false}
                          history={
                            Object {
                              "action": "POP",
                              "block": [Function],
                              "canGo": [Function],
                              "createHref": [Function],
                              "entries": Array [
                                Object {
                                  "hash": "",
                                  "pathname": "/",
                                  "search": "",
                                  "state": undefined,
                                },
                              ],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "index": 0,
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "pathname": "/",
                                "search": "",
                                "state": undefined,
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
                          }
                          location={
                            Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            }
                          }
                          match={
                            Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/",
                              "url": "/",
                            }
                          }
                          toggleAddSystemModal={[Function]}
                          toggleCreateBaselineModal={[Function]}
                        >
                          <Component
                            id="create-baseline-button"
                            onClick={[Function]}
                            variant="primary"
                          >
                            <ComponentWithOuia
                              component={[Function]}
                              componentProps={
                                Object {
                                  "children": "Create baseline",
                                  "id": "create-baseline-button",
                                  "onClick": [Function],
                                  "variant": "primary",
                                }
                              }
                              consumerContext={null}
                            >
                              <Button
                                id="create-baseline-button"
                                onClick={[Function]}
                                ouiaContext={
                                  Object {
                                    "isOuia": false,
                                    "ouiaId": null,
                                  }
                                }
                                variant="primary"
                              >
                                <button
                                  aria-disabled={null}
                                  aria-label={null}
                                  className="pf-c-button pf-m-primary"
                                  disabled={false}
                                  id="create-baseline-button"
                                  onClick={[Function]}
                                  tabIndex={null}
                                  type="button"
                                >
                                  Create baseline
                                </button>
                              </Button>
                            </ComponentWithOuia>
                          </Component>
                        </CreateBaselineButton>
                      </Connect(CreateBaselineButton)>
                    </withRouter(Connect(CreateBaselineButton))>
                  </div>
                </ToolbarItem>
                <ToolbarItem>
                  <div
                    className="pf-l-toolbar__item"
                  >
                    <Connect(ExportCSVButton)
                      exportType="baseline list"
                    >
                      <ExportCSVButton
                        baselineTableData={
                          Array [
                            Array [
                              "1234",
                              "beavs baseline",
                              "a year ago",
                            ],
                            Array [
                              "abcd",
                              "micjohns baseline",
                              "a year ago",
                            ],
                          ]
                        }
                        exportToCSV={[Function]}
                        exportType="baseline list"
                      >
                        <ExportIcon
                          className="pointer not-active export-button-margin"
                          color="currentColor"
                          noVerticalAlign={false}
                          onClick={[Function]}
                          size="sm"
                          title={null}
                        >
                          <svg
                            aria-hidden={true}
                            aria-labelledby={null}
                            className="pointer not-active export-button-margin"
                            fill="currentColor"
                            height="1em"
                            onClick={[Function]}
                            role="img"
                            style={
                              Object {
                                "verticalAlign": "-0.125em",
                              }
                            }
                            viewBox="0 64 1024 1024"
                            width="1em"
                          >
                            <path
                              d="M980.293 278.754l-95.387-95.387-393.84 393.856c-5.285 5.262-11.353 7.909-18.203 7.911-6.862 0-12.935-2.649-18.222-7.911l-81.019-81.019c-5.262-5.285-7.909-11.353-7.909-18.219 0-6.85 2.649-12.914 7.909-18.203l393.856-393.84-95.381-95.381c-24.039-24.037-15.89-43.705 18.105-43.705h271.982c53.227 0 61.813 9.273 61.813 61.813v271.982c0.005 33.998-19.662 42.151-43.703 18.105zM146.286 793.143c0 3.312 1.077 6.048 3.232 8.203 2.151 2.151 4.889 3.227 8.199 3.225h708.661c3.287 0 5.998-1.067 8.137-3.202 2.135-2.137 3.202-4.848 3.202-8.135v-331.701c0-6.571 2.135-11.995 6.409-16.272 4.27-4.267 9.696-6.407 16.267-6.405h100.933c6.571-0.002 11.998 2.137 16.267 6.405 4.277 4.277 6.409 9.701 6.409 16.272v466.647c0.002 6.571-2.137 11.998-6.405 16.267-4.277 4.274-9.701 6.409-16.272 6.409h-978.649c-6.571 0.002-11.998-2.137-16.267-6.405-4.274-4.277-6.409-9.701-6.409-16.272v-978.647c0-6.571 2.135-11.995 6.409-16.272 4.27-4.267 9.696-6.407 16.267-6.405h466.647c6.571 0 11.995 2.135 16.272 6.411 4.267 4.267 6.407 9.696 6.405 16.265v100.933c0.002 6.569-2.137 11.998-6.405 16.265-4.277 4.277-9.701 6.411-16.272 6.411h-331.609c-3.312 0-6.048 1.077-8.203 3.232-2.151 2.149-3.227 4.889-3.225 8.197v708.571z"
                              transform="rotate(180 0 512) scale(-1 1)"
                            />
                          </svg>
                        </ExportIcon>
                      </ExportCSVButton>
                    </Connect(ExportCSVButton)>
                  </div>
                </ToolbarItem>
                <ToolbarItem>
                  <div
                    className="pf-l-toolbar__item"
                  >
                    <Connect(BaselinesKebab)
                      exportType="baseline list"
                      tableId="CHECKBOX"
                    >
                      <BaselinesKebab
                        dispatch={[Function]}
                        exportType="baseline list"
                        selectedBaselineIds={Array []}
                        tableId="CHECKBOX"
                      >
                        <Dropdown
                          dropdownItems={
                            Array [
                              <DropdownItem
                                component="button"
                                isDisabled={true}
                                onClick={[Function]}
                              >
                                Delete baselines
                              </DropdownItem>,
                            ]
                          }
                          isOpen={false}
                          isPlain={true}
                          style={
                            Object {
                              "float": "left",
                            }
                          }
                          toggle={
                            <KebabToggle
                              onToggle={[Function]}
                            />
                          }
                        >
                          <Component
                            dropdownItems={
                              Array [
                                <DropdownItem
                                  component="button"
                                  isDisabled={true}
                                  onClick={[Function]}
                                >
                                  Delete baselines
                                </DropdownItem>,
                              ]
                            }
                            isOpen={false}
                            isPlain={true}
                            style={
                              Object {
                                "float": "left",
                              }
                            }
                            toggle={
                              <KebabToggle
                                onToggle={[Function]}
                              />
                            }
                          >
                            <ComponentWithOuia
                              component={[Function]}
                              componentProps={
                                Object {
                                  "dropdownItems": Array [
                                    <DropdownItem
                                      component="button"
                                      isDisabled={true}
                                      onClick={[Function]}
                                    >
                                      Delete baselines
                                    </DropdownItem>,
                                  ],
                                  "isOpen": false,
                                  "isPlain": true,
                                  "style": Object {
                                    "float": "left",
                                  },
                                  "toggle": <KebabToggle
                                    onToggle={[Function]}
                                  />,
                                }
                              }
                              consumerContext={null}
                            >
                              <DropdownWithContext
                                autoFocus={true}
                                className=""
                                direction="down"
                                dropdownItems={
                                  Array [
                                    <DropdownItem
                                      component="button"
                                      isDisabled={true}
                                      onClick={[Function]}
                                    >
                                      Delete baselines
                                    </DropdownItem>,
                                  ]
                                }
                                isGrouped={false}
                                isOpen={false}
                                isPlain={true}
                                onSelect={[Function]}
                                ouiaComponentType="Dropdown"
                                ouiaContext={
                                  Object {
                                    "isOuia": false,
                                    "ouiaId": null,
                                  }
                                }
                                position="left"
                                style={
                                  Object {
                                    "float": "left",
                                  }
                                }
                                toggle={
                                  <KebabToggle
                                    onToggle={[Function]}
                                  />
                                }
                              >
                                <div
                                  className="pf-c-dropdown"
                                  style={
                                    Object {
                                      "float": "left",
                                    }
                                  }
                                >
                                  <KebabToggle
                                    ariaHasPopup={true}
                                    id="pf-toggle-id-3"
                                    isOpen={false}
                                    isPlain={true}
                                    key=".0"
                                    onEnter={[Function]}
                                    onToggle={[Function]}
                                    parentRef={
                                      Object {
                                        "current": <div
                                          class="pf-c-dropdown"
                                          style="float: left;"
                                        >
                                          <button
                                            aria-expanded="false"
                                            aria-haspopup="true"
                                            aria-label="Actions"
                                            class="pf-c-dropdown__toggle pf-m-plain"
                                            id="pf-toggle-id-3"
                                            type="button"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              fill="currentColor"
                                              height="1em"
                                              role="img"
                                              style="vertical-align: -0.125em;"
                                              viewBox="0 0 192 512"
                                              width="1em"
                                            >
                                              <path
                                                d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                transform=""
                                              />
                                            </svg>
                                          </button>
                                        </div>,
                                      }
                                    }
                                  >
                                    <Toggle
                                      aria-label="Actions"
                                      ariaHasPopup={true}
                                      className=""
                                      id="pf-toggle-id-3"
                                      isActive={false}
                                      isDisabled={false}
                                      isFocused={false}
                                      isHovered={false}
                                      isOpen={false}
                                      isPlain={true}
                                      isPrimary={false}
                                      isSplitButton={false}
                                      onEnter={[Function]}
                                      onToggle={[Function]}
                                      parentRef={
                                        Object {
                                          "current": <div
                                            class="pf-c-dropdown"
                                            style="float: left;"
                                          >
                                            <button
                                              aria-expanded="false"
                                              aria-haspopup="true"
                                              aria-label="Actions"
                                              class="pf-c-dropdown__toggle pf-m-plain"
                                              id="pf-toggle-id-3"
                                              type="button"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                fill="currentColor"
                                                height="1em"
                                                role="img"
                                                style="vertical-align: -0.125em;"
                                                viewBox="0 0 192 512"
                                                width="1em"
                                              >
                                                <path
                                                  d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                  transform=""
                                                />
                                              </svg>
                                            </button>
                                          </div>,
                                        }
                                      }
                                    >
                                      <button
                                        aria-expanded={false}
                                        aria-haspopup={true}
                                        aria-label="Actions"
                                        className="pf-c-dropdown__toggle pf-m-plain"
                                        disabled={false}
                                        id="pf-toggle-id-3"
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        type="button"
                                      >
                                        <EllipsisVIcon
                                          color="currentColor"
                                          noVerticalAlign={false}
                                          size="sm"
                                          title={null}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 192 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                              transform=""
                                            />
                                          </svg>
                                        </EllipsisVIcon>
                                      </button>
                                    </Toggle>
                                  </KebabToggle>
                                </div>
                              </DropdownWithContext>
                            </ComponentWithOuia>
                          </Component>
                        </Dropdown>
                      </BaselinesKebab>
                    </Connect(BaselinesKebab)>
                  </div>
                </ToolbarItem>
              </div>
            </ToolbarGroup>
          </div>
        </Toolbar>
      </BaselinesToolbar>
    </Provider>
  </Router>
</MemoryRouter>
`;
