// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BaselinesFilterChips should render chip correctly 1`] = `
<ChipGroup
  aria-label="Chip group category"
  categoryName="Baseline name"
  closeBtnAriaLabel="Close chip group"
  collapsedText="\${remaining} more"
  defaultIsOpen={false}
  expandedText="Show Less"
  isClosable={false}
  key="Baseline name"
  numChips={3}
  onClick={[Function]}
  tooltipPosition="top"
>
  <Chip
    className=""
    closeBtnAriaLabel="close"
    component="div"
    isOverflowChip={false}
    isReadOnly={false}
    key="something"
    onClick={[Function]}
    tooltipPosition="top"
  >
    something
  </Chip>
</ChipGroup>
`;

exports[`BaselinesFilterChips should render chip update correctly 1`] = `
<ChipGroup
  aria-label="Chip group category"
  categoryName="Baseline name"
  closeBtnAriaLabel="Close chip group"
  collapsedText="\${remaining} more"
  defaultIsOpen={false}
  expandedText="Show Less"
  isClosable={false}
  key="Baseline name"
  numChips={3}
  onClick={[Function]}
  tooltipPosition="top"
>
  <Chip
    className=""
    closeBtnAriaLabel="close"
    component="div"
    isOverflowChip={false}
    isReadOnly={false}
    key="something else"
    onClick={[Function]}
    tooltipPosition="top"
  >
    something else
  </Chip>
</ChipGroup>
`;

exports[`BaselinesFilterChips should render mount correctly 1`] = `
<BaselinesFilterChips>
  <ChipGroup
    aria-label="Chip group category"
    categoryName="Baseline name"
    closeBtnAriaLabel="Close chip group"
    collapsedText="\${remaining} more"
    defaultIsOpen={false}
    expandedText="Show Less"
    isClosable={false}
    key="Baseline name"
    numChips={3}
    onClick={[Function]}
    tooltipPosition="top"
  >
    <GenerateId
      prefix="pf-random-id-"
    >
      <div
        className="pf-c-chip-group pf-m-category"
      >
        <span
          aria-hidden="true"
          className="pf-c-chip-group__label"
          id="pf-random-id-0"
        >
          Baseline name
        </span>
        <ul
          aria-labelledby="pf-random-id-0"
          className="pf-c-chip-group__list"
          role="list"
        >
          <li
            className="pf-c-chip-group__list-item"
            key="0"
          >
            <Chip
              className=""
              closeBtnAriaLabel="close"
              component="div"
              isOverflowChip={false}
              isReadOnly={false}
              key=".0"
              onClick={[Function]}
              tooltipPosition="top"
            >
              <GenerateId
                prefix="pf-random-id-"
              >
                <div
                  className="pf-c-chip"
                  data-ouia-component-id={2}
                  data-ouia-component-type="PF4/Chip"
                  data-ouia-safe={true}
                >
                  <span
                    className="pf-c-chip__text"
                    id="pf-random-id-1"
                  />
                  <Button
                    aria-label="close"
                    aria-labelledby="remove_pf-random-id-1 pf-random-id-1"
                    id="remove_pf-random-id-1"
                    onClick={[Function]}
                    variant="plain"
                  >
                    <button
                      aria-disabled={false}
                      aria-label="close"
                      aria-labelledby="remove_pf-random-id-1 pf-random-id-1"
                      className="pf-c-button pf-m-plain"
                      data-ouia-component-id={3}
                      data-ouia-component-type="PF4/Button"
                      data-ouia-safe={true}
                      disabled={false}
                      id="remove_pf-random-id-1"
                      onClick={[Function]}
                      type="button"
                    >
                      <TimesIcon
                        aria-hidden="true"
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                      >
                        <svg
                          aria-hidden="true"
                          aria-labelledby={null}
                          fill="currentColor"
                          height="1em"
                          role="img"
                          style={
                            Object {
                              "verticalAlign": "-0.125em",
                            }
                          }
                          viewBox="0 0 352 512"
                          width="1em"
                        >
                          <path
                            d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                          />
                        </svg>
                      </TimesIcon>
                    </button>
                  </Button>
                </div>
              </GenerateId>
            </Chip>
          </li>
        </ul>
      </div>
    </GenerateId>
  </ChipGroup>
</BaselinesFilterChips>
`;

exports[`BaselinesFilterChips should render shallow correctly 1`] = `
<ChipGroup
  aria-label="Chip group category"
  categoryName="Baseline name"
  closeBtnAriaLabel="Close chip group"
  collapsedText="\${remaining} more"
  defaultIsOpen={false}
  expandedText="Show Less"
  isClosable={false}
  key="Baseline name"
  numChips={3}
  onClick={[Function]}
  tooltipPosition="top"
>
  <Chip
    className=""
    closeBtnAriaLabel="close"
    component="div"
    isOverflowChip={false}
    isReadOnly={false}
    onClick={[Function]}
    tooltipPosition="top"
  />
</ChipGroup>
`;
