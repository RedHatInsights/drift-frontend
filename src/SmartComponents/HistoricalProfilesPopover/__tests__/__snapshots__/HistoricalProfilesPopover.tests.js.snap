// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ConnectedHistoricalProfilesPopover should call fetchCompare 1`] = `
<MemoryRouter
  keyLength={0}
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <withRouter(Connect(HistoricalProfilesPopover))
        badgeCount={0}
        dropdownDirection="down"
        fetchCompare={[MockFunction]}
        hasBadge={true}
        hasCompareButton={true}
        system={
          Object {
            "id": "4416c520-a339-4dde-b303-f317ea9efc5f",
            "last_updated": "2020-05-04T18:33:12.249348+00:00",
          }
        }
      >
        <Connect(HistoricalProfilesPopover)
          badgeCount={0}
          dropdownDirection="down"
          fetchCompare={[MockFunction]}
          hasBadge={true}
          hasCompareButton={true}
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "canGo": [Function],
              "createHref": [Function],
              "entries": Array [
                Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              ],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "index": 0,
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
          location={
            Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            }
          }
          match={
            Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            }
          }
          system={
            Object {
              "id": "4416c520-a339-4dde-b303-f317ea9efc5f",
              "last_updated": "2020-05-04T18:33:12.249348+00:00",
            }
          }
        >
          <HistoricalProfilesPopover
            badgeCount={0}
            dropdownDirection="down"
            fetchCompare={[MockFunction]}
            hasBadge={true}
            hasCompareButton={true}
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              }
            }
            match={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
            selectHistoricProfiles={[Function]}
            selectSingleHSP={[Function]}
            selectSystem={[Function]}
            selectedBaselineIds={Array []}
            selectedHSPIds={Array []}
            system={
              Object {
                "id": "4416c520-a339-4dde-b303-f317ea9efc5f",
                "last_updated": "2020-05-04T18:33:12.249348+00:00",
              }
            }
            updateColumns={[Function]}
          >
            <span
              className="hsp-icon-padding historical-system-profile-popover"
              id="hsp-popover-4416c520-a339-4dde-b303-f317ea9efc5f"
            >
              <Popover
                bodyContent={
                  Array [
                    <Skeleton
                      className="hsp-dropdown-loading"
                      isDark={false}
                      size="sm"
                    />,
                    <Skeleton
                      className="hsp-dropdown-loading"
                      isDark={false}
                      size="sm"
                    />,
                    <Skeleton
                      className="hsp-dropdown-loading"
                      isDark={false}
                      size="sm"
                    />,
                  ]
                }
                footerContent={
                  <Button
                    onClick={[Function]}
                    variant="primary"
                  >
                    Compare
                  </Button>
                }
                headerContent={
                  <div>
                    Historical profiles for this system
                  </div>
                }
                isVisible={true}
                shouldClose={[Function]}
              >
                <Popper
                  appendTo={[Function]}
                  distance={25}
                  enableFlip={true}
                  flipBehavior={
                    Array [
                      "top",
                      "right",
                      "bottom",
                      "left",
                      "top",
                      "right",
                      "bottom",
                    ]
                  }
                  isVisible={false}
                  onDocumentClick={[Function]}
                  onDocumentKeyDown={[Function]}
                  onTriggerClick={[Function]}
                  onTriggerEnter={[Function]}
                  placement="top"
                  popper={
                    <FocusTrap
                      active={false}
                      aria-describedby="popover-pf-1605295623923arxp3y8hynv-body"
                      aria-labelledby="popover-pf-1605295623923arxp3y8hynv-header"
                      aria-modal="true"
                      className="pf-c-popover"
                      focusTrapOptions={
                        Object {
                          "clickOutsideDeactivates": true,
                          "returnFocusOnDeactivate": true,
                        }
                      }
                      onMouseDown={[Function]}
                      paused={false}
                      role="dialog"
                      style={
                        Object {
                          "maxWidth": null,
                          "minWidth": null,
                          "opacity": 0,
                          "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                        }
                      }
                    >
                      <PopoverArrow />
                      <PopoverContent>
                        <PopoverCloseButton
                          aria-label="Close"
                          onClose={[Function]}
                        />
                        <PopoverHeader
                          id="popover-pf-1605295623923arxp3y8hynv-header"
                        >
                          <div>
                            Historical profiles for this system
                          </div>
                        </PopoverHeader>
                        <PopoverBody
                          id="popover-pf-1605295623923arxp3y8hynv-body"
                        >
                          <Skeleton
                            className="hsp-dropdown-loading"
                            isDark={false}
                            size="sm"
                          />
                          <Skeleton
                            className="hsp-dropdown-loading"
                            isDark={false}
                            size="sm"
                          />
                          <Skeleton
                            className="hsp-dropdown-loading"
                            isDark={false}
                            size="sm"
                          />
                        </PopoverBody>
                        <PopoverFooter
                          id="popover-pf-1605295623923arxp3y8hynv-footer"
                        >
                          <Button
                            onClick={[Function]}
                            variant="primary"
                          >
                            Compare
                          </Button>
                        </PopoverFooter>
                      </PopoverContent>
                    </FocusTrap>
                  }
                  popperMatchesTriggerWidth={false}
                  positionModifiers={
                    Object {
                      "bottom": "pf-m-bottom",
                      "left": "pf-m-left",
                      "right": "pf-m-right",
                      "top": "pf-m-top",
                    }
                  }
                  trigger={
                    <HistoryIcon
                      className="hsp-dropdown-icon"
                      color="currentColor"
                      noVerticalAlign={false}
                      onClick={[Function]}
                      size="sm"
                    />
                  }
                  zIndex={9999}
                >
                  <FindRefWrapper
                    onFoundRef={[Function]}
                  >
                    <HistoryIcon
                      className="hsp-dropdown-icon"
                      color="currentColor"
                      noVerticalAlign={false}
                      onClick={[Function]}
                      size="sm"
                    >
                      <svg
                        aria-hidden={true}
                        aria-labelledby={null}
                        className="hsp-dropdown-icon"
                        fill="currentColor"
                        height="1em"
                        onClick={[Function]}
                        role="img"
                        style={
                          Object {
                            "verticalAlign": "-0.125em",
                          }
                        }
                        viewBox="0 0 512 512"
                        width="1em"
                      >
                        <path
                          d="M504 255.531c.253 136.64-111.18 248.372-247.82 248.468-59.015.042-113.223-20.53-155.822-54.911-11.077-8.94-11.905-25.541-1.839-35.607l11.267-11.267c8.609-8.609 22.353-9.551 31.891-1.984C173.062 425.135 212.781 440 256 440c101.705 0 184-82.311 184-184 0-101.705-82.311-184-184-184-48.814 0-93.149 18.969-126.068 49.932l50.754 50.754c10.08 10.08 2.941 27.314-11.313 27.314H24c-8.837 0-16-7.163-16-16V38.627c0-14.254 17.234-21.393 27.314-11.314l49.372 49.372C129.209 34.136 189.552 8 256 8c136.81 0 247.747 110.78 248 247.531zm-180.912 78.784l9.823-12.63c8.138-10.463 6.253-25.542-4.21-33.679L288 256.349V152c0-13.255-10.745-24-24-24h-16c-13.255 0-24 10.745-24 24v135.651l65.409 50.874c10.463 8.137 25.541 6.253 33.679-4.21z"
                        />
                      </svg>
                    </HistoryIcon>
                  </FindRefWrapper>
                </Popper>
              </Popover>
            </span>
          </HistoricalProfilesPopover>
        </Connect(HistoricalProfilesPopover)>
      </withRouter(Connect(HistoricalProfilesPopover))>
    </Provider>
  </Router>
</MemoryRouter>
`;

exports[`ConnectedHistoricalProfilesPopover should render correctly 1`] = `
<MemoryRouter
  keyLength={0}
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <withRouter(Connect(HistoricalProfilesPopover))>
        <Connect(HistoricalProfilesPopover)
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "canGo": [Function],
              "createHref": [Function],
              "entries": Array [
                Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              ],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "index": 0,
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
          location={
            Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            }
          }
          match={
            Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            }
          }
        >
          <HistoricalProfilesPopover
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              }
            }
            match={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
            selectSingleHSP={[Function]}
            selectSystem={[Function]}
            selectedBaselineIds={Array []}
            selectedHSPIds={Array []}
            updateColumns={[Function]}
          >
            <span
              className="hsp-icon-padding historical-system-profile-popover"
              data-ouia-component-id="hsp-popover-toggle-undefined"
              data-ouia-component-type="PF4/Button"
            >
              <Popover
                bodyContent={
                  Array [
                    <Skeleton
                      className="hsp-dropdown-loading"
                      isDark={false}
                      size="sm"
                    />,
                    <Skeleton
                      className="hsp-dropdown-loading"
                      isDark={false}
                      size="sm"
                    />,
                    <Skeleton
                      className="hsp-dropdown-loading"
                      isDark={false}
                      size="sm"
                    />,
                  ]
                }
                footerContent={null}
                headerContent={
                  <div>
                    Historical profiles for this system
                  </div>
                }
                id="hsp-popover-undefined"
                isVisible={false}
                shouldClose={[Function]}
              >
                <Popper
                  appendTo={[Function]}
                  distance={25}
                  enableFlip={true}
                  flipBehavior={
                    Array [
                      "top",
                      "right",
                      "bottom",
                      "left",
                      "top",
                      "right",
                      "bottom",
                    ]
                  }
                  isVisible={false}
                  onDocumentClick={[Function]}
                  onDocumentKeyDown={[Function]}
                  onTriggerClick={[Function]}
                  onTriggerEnter={[Function]}
                  placement="top"
                  popper={
                    <FocusTrap
                      active={false}
                      aria-describedby="popover-hsp-popover-undefined-body"
                      aria-labelledby="popover-hsp-popover-undefined-header"
                      aria-modal="true"
                      className="pf-c-popover"
                      focusTrapOptions={
                        Object {
                          "clickOutsideDeactivates": true,
                          "returnFocusOnDeactivate": true,
                        }
                      }
                      onMouseDown={[Function]}
                      paused={false}
                      role="dialog"
                      style={
                        Object {
                          "maxWidth": null,
                          "minWidth": null,
                          "opacity": 0,
                          "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                        }
                      }
                    >
                      <PopoverArrow />
                      <PopoverContent>
                        <PopoverCloseButton
                          aria-label="Close"
                          onClose={[Function]}
                        />
                        <PopoverHeader
                          id="popover-hsp-popover-undefined-header"
                        >
                          <div>
                            Historical profiles for this system
                          </div>
                        </PopoverHeader>
                        <PopoverBody
                          id="popover-hsp-popover-undefined-body"
                        >
                          <Skeleton
                            className="hsp-dropdown-loading"
                            isDark={false}
                            size="sm"
                          />
                          <Skeleton
                            className="hsp-dropdown-loading"
                            isDark={false}
                            size="sm"
                          />
                          <Skeleton
                            className="hsp-dropdown-loading"
                            isDark={false}
                            size="sm"
                          />
                        </PopoverBody>
                      </PopoverContent>
                    </FocusTrap>
                  }
                  popperMatchesTriggerWidth={false}
                  positionModifiers={
                    Object {
                      "bottom": "pf-m-bottom",
                      "left": "pf-m-left",
                      "right": "pf-m-right",
                      "top": "pf-m-top",
                    }
                  }
                  trigger={
                    <HistoryIcon
                      className="hsp-dropdown-icon"
                      color="currentColor"
                      noVerticalAlign={false}
                      onClick={[Function]}
                      size="sm"
                    />
                  }
                  zIndex={9999}
                >
                  <FindRefWrapper
                    onFoundRef={[Function]}
                  >
                    <HistoryIcon
                      className="hsp-dropdown-icon"
                      color="currentColor"
                      noVerticalAlign={false}
                      onClick={[Function]}
                      size="sm"
                    >
                      <svg
                        aria-hidden={true}
                        aria-labelledby={null}
                        className="hsp-dropdown-icon"
                        fill="currentColor"
                        height="1em"
                        onClick={[Function]}
                        role="img"
                        style={
                          Object {
                            "verticalAlign": "-0.125em",
                          }
                        }
                        viewBox="0 0 512 512"
                        width="1em"
                      >
                        <path
                          d="M504 255.531c.253 136.64-111.18 248.372-247.82 248.468-59.015.042-113.223-20.53-155.822-54.911-11.077-8.94-11.905-25.541-1.839-35.607l11.267-11.267c8.609-8.609 22.353-9.551 31.891-1.984C173.062 425.135 212.781 440 256 440c101.705 0 184-82.311 184-184 0-101.705-82.311-184-184-184-48.814 0-93.149 18.969-126.068 49.932l50.754 50.754c10.08 10.08 2.941 27.314-11.313 27.314H24c-8.837 0-16-7.163-16-16V38.627c0-14.254 17.234-21.393 27.314-11.314l49.372 49.372C129.209 34.136 189.552 8 256 8c136.81 0 247.747 110.78 248 247.531zm-180.912 78.784l9.823-12.63c8.138-10.463 6.253-25.542-4.21-33.679L288 256.349V152c0-13.255-10.745-24-24-24h-16c-13.255 0-24 10.745-24 24v135.651l65.409 50.874c10.463 8.137 25.541 6.253 33.679-4.21z"
                        />
                      </svg>
                    </HistoryIcon>
                  </FindRefWrapper>
                </Popper>
              </Popover>
            </span>
          </HistoricalProfilesPopover>
        </Connect(HistoricalProfilesPopover)>
      </withRouter(Connect(HistoricalProfilesPopover))>
    </Provider>
  </Router>
</MemoryRouter>
`;

exports[`ConnectedHistoricalProfilesPopover should retry fetch 1`] = `
<MemoryRouter
  keyLength={0}
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <withRouter(Connect(HistoricalProfilesPopover))
        badgeCount={0}
        dropdownDirection="down"
        hasBadge={true}
        hasCompareButton={false}
        system={
          Object {
            "id": "4416c520-a339-4dde-b303-f317ea9efc5f",
            "last_updated": "2020-05-04T18:33:12.249348+00:00",
          }
        }
      >
        <Connect(HistoricalProfilesPopover)
          badgeCount={0}
          dropdownDirection="down"
          hasBadge={true}
          hasCompareButton={false}
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "canGo": [Function],
              "createHref": [Function],
              "entries": Array [
                Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              ],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "index": 0,
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
          location={
            Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            }
          }
          match={
            Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            }
          }
          system={
            Object {
              "id": "4416c520-a339-4dde-b303-f317ea9efc5f",
              "last_updated": "2020-05-04T18:33:12.249348+00:00",
            }
          }
        >
          <HistoricalProfilesPopover
            badgeCount={0}
            dropdownDirection="down"
            hasBadge={true}
            hasCompareButton={false}
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              }
            }
            match={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
            selectHistoricProfiles={[Function]}
            selectSingleHSP={[Function]}
            selectSystem={[Function]}
            selectedBaselineIds={Array []}
            selectedHSPIds={Array []}
            system={
              Object {
                "id": "4416c520-a339-4dde-b303-f317ea9efc5f",
                "last_updated": "2020-05-04T18:33:12.249348+00:00",
              }
            }
            updateColumns={[Function]}
          >
            <span
              className="hsp-icon-padding historical-system-profile-popover"
            >
              <Popover
                bodyContent={
                  Array [
                    <Skeleton
                      className="hsp-dropdown-loading"
                      isDark={false}
                      size="sm"
                    />,
                    <Skeleton
                      className="hsp-dropdown-loading"
                      isDark={false}
                      size="sm"
                    />,
                    <Skeleton
                      className="hsp-dropdown-loading"
                      isDark={false}
                      size="sm"
                    />,
                  ]
                }
                footerContent={null}
                headerContent={
                  <div>
                    Historical profiles for this system
                  </div>
                }
                id="hsp-popover-4416c520-a339-4dde-b303-f317ea9efc5f"
                isVisible={true}
                shouldClose={[Function]}
              >
                <Popper
                  appendTo={[Function]}
                  distance={25}
                  enableFlip={true}
                  flipBehavior={
                    Array [
                      "top",
                      "right",
                      "bottom",
                      "left",
                      "top",
                      "right",
                      "bottom",
                    ]
                  }
                  isVisible={false}
                  onDocumentClick={[Function]}
                  onDocumentKeyDown={[Function]}
                  onTriggerClick={[Function]}
                  onTriggerEnter={[Function]}
                  placement="top"
                  popper={
                    <FocusTrap
                      active={false}
                      aria-describedby="popover-hsp-popover-4416c520-a339-4dde-b303-f317ea9efc5f-body"
                      aria-labelledby="popover-hsp-popover-4416c520-a339-4dde-b303-f317ea9efc5f-header"
                      aria-modal="true"
                      className="pf-c-popover"
                      focusTrapOptions={
                        Object {
                          "clickOutsideDeactivates": true,
                          "returnFocusOnDeactivate": true,
                        }
                      }
                      onMouseDown={[Function]}
                      paused={false}
                      role="dialog"
                      style={
                        Object {
                          "maxWidth": null,
                          "minWidth": null,
                          "opacity": 0,
                          "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                        }
                      }
                    >
                      <PopoverArrow />
                      <PopoverContent>
                        <PopoverCloseButton
                          aria-label="Close"
                          onClose={[Function]}
                        />
                        <PopoverHeader
                          id="popover-hsp-popover-4416c520-a339-4dde-b303-f317ea9efc5f-header"
                        >
                          <div>
                            Historical profiles for this system
                          </div>
                        </PopoverHeader>
                        <PopoverBody
                          id="popover-hsp-popover-4416c520-a339-4dde-b303-f317ea9efc5f-body"
                        >
                          <Skeleton
                            className="hsp-dropdown-loading"
                            isDark={false}
                            size="sm"
                          />
                          <Skeleton
                            className="hsp-dropdown-loading"
                            isDark={false}
                            size="sm"
                          />
                          <Skeleton
                            className="hsp-dropdown-loading"
                            isDark={false}
                            size="sm"
                          />
                        </PopoverBody>
                      </PopoverContent>
                    </FocusTrap>
                  }
                  popperMatchesTriggerWidth={false}
                  positionModifiers={
                    Object {
                      "bottom": "pf-m-bottom",
                      "left": "pf-m-left",
                      "right": "pf-m-right",
                      "top": "pf-m-top",
                    }
                  }
                  trigger={
                    <HistoryIcon
                      className="hsp-dropdown-icon"
                      color="currentColor"
                      noVerticalAlign={false}
                      onClick={[Function]}
                      size="sm"
                    />
                  }
                  zIndex={9999}
                >
                  <FindRefWrapper
                    onFoundRef={[Function]}
                  >
                    <HistoryIcon
                      className="hsp-dropdown-icon"
                      color="currentColor"
                      noVerticalAlign={false}
                      onClick={[Function]}
                      size="sm"
                    >
                      <svg
                        aria-hidden={true}
                        aria-labelledby={null}
                        className="hsp-dropdown-icon"
                        fill="currentColor"
                        height="1em"
                        onClick={[Function]}
                        role="img"
                        style={
                          Object {
                            "verticalAlign": "-0.125em",
                          }
                        }
                        viewBox="0 0 512 512"
                        width="1em"
                      >
                        <path
                          d="M504 255.531c.253 136.64-111.18 248.372-247.82 248.468-59.015.042-113.223-20.53-155.822-54.911-11.077-8.94-11.905-25.541-1.839-35.607l11.267-11.267c8.609-8.609 22.353-9.551 31.891-1.984C173.062 425.135 212.781 440 256 440c101.705 0 184-82.311 184-184 0-101.705-82.311-184-184-184-48.814 0-93.149 18.969-126.068 49.932l50.754 50.754c10.08 10.08 2.941 27.314-11.313 27.314H24c-8.837 0-16-7.163-16-16V38.627c0-14.254 17.234-21.393 27.314-11.314l49.372 49.372C129.209 34.136 189.552 8 256 8c136.81 0 247.747 110.78 248 247.531zm-180.912 78.784l9.823-12.63c8.138-10.463 6.253-25.542-4.21-33.679L288 256.349V152c0-13.255-10.745-24-24-24h-16c-13.255 0-24 10.745-24 24v135.651l65.409 50.874c10.463 8.137 25.541 6.253 33.679-4.21z"
                        />
                      </svg>
                    </HistoryIcon>
                  </FindRefWrapper>
                </Popper>
              </Popover>
            </span>
          </HistoricalProfilesPopover>
        </Connect(HistoricalProfilesPopover)>
      </withRouter(Connect(HistoricalProfilesPopover))>
    </Provider>
  </Router>
</MemoryRouter>
`;

exports[`HistoricalProfilesPopover should render correctly 1`] = `
<Fragment>
  <span
    className="hsp-icon-padding historical-system-profile-popover"
    data-ouia-component-id="hsp-popover-toggle-4416c520-a339-4dde-b303-f317ea9efc5f"
    data-ouia-component-type="PF4/Button"
  >
    <Popover
      bodyContent={
        Array [
          <Skeleton
            className="hsp-dropdown-loading"
            isDark={false}
            size="sm"
          />,
          <Skeleton
            className="hsp-dropdown-loading"
            isDark={false}
            size="sm"
          />,
          <Skeleton
            className="hsp-dropdown-loading"
            isDark={false}
            size="sm"
          />,
        ]
      }
      footerContent={null}
      headerContent={
        <div>
          Historical profiles for this system
        </div>
      }
      id="hsp-popover-4416c520-a339-4dde-b303-f317ea9efc5f"
      isVisible={false}
      shouldClose={[Function]}
    >
      <HistoryIcon
        className="hsp-dropdown-icon"
        color="currentColor"
        noVerticalAlign={false}
        onClick={[Function]}
        size="sm"
      />
    </Popover>
  </span>
</Fragment>
`;

exports[`HistoricalProfilesPopover should render mount correctly 1`] = `
<HistoricalProfilesPopover
  badgeCount={0}
  dropdownDirection="down"
  hasBadge={true}
  hasCompareButton={false}
  selectedBaselineIds={Array []}
  selectedHSPIds={Array []}
  system={
    Object {
      "id": "4416c520-a339-4dde-b303-f317ea9efc5f",
      "last_updated": "2020-05-04T18:33:12.249348+00:00",
    }
  }
>
  <span
    className="hsp-icon-padding historical-system-profile-popover"
    data-ouia-component-id="hsp-popover-toggle-4416c520-a339-4dde-b303-f317ea9efc5f"
    data-ouia-component-type="PF4/Button"
  >
    <Popover
      bodyContent={
        Array [
          <Skeleton
            className="hsp-dropdown-loading"
            isDark={false}
            size="sm"
          />,
          <Skeleton
            className="hsp-dropdown-loading"
            isDark={false}
            size="sm"
          />,
          <Skeleton
            className="hsp-dropdown-loading"
            isDark={false}
            size="sm"
          />,
        ]
      }
      footerContent={null}
      headerContent={
        <div>
          Historical profiles for this system
        </div>
      }
      id="hsp-popover-4416c520-a339-4dde-b303-f317ea9efc5f"
      isVisible={false}
      shouldClose={[Function]}
    >
      <Popper
        appendTo={[Function]}
        distance={25}
        enableFlip={true}
        flipBehavior={
          Array [
            "top",
            "right",
            "bottom",
            "left",
            "top",
            "right",
            "bottom",
          ]
        }
        isVisible={false}
        onDocumentClick={[Function]}
        onDocumentKeyDown={[Function]}
        onTriggerClick={[Function]}
        onTriggerEnter={[Function]}
        placement="top"
        popper={
          <FocusTrap
            active={false}
            aria-describedby="popover-hsp-popover-4416c520-a339-4dde-b303-f317ea9efc5f-body"
            aria-labelledby="popover-hsp-popover-4416c520-a339-4dde-b303-f317ea9efc5f-header"
            aria-modal="true"
            className="pf-c-popover"
            focusTrapOptions={
              Object {
                "clickOutsideDeactivates": true,
                "returnFocusOnDeactivate": true,
              }
            }
            onMouseDown={[Function]}
            paused={false}
            role="dialog"
            style={
              Object {
                "maxWidth": null,
                "minWidth": null,
                "opacity": 0,
                "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
              }
            }
          >
            <PopoverArrow />
            <PopoverContent>
              <PopoverCloseButton
                aria-label="Close"
                onClose={[Function]}
              />
              <PopoverHeader
                id="popover-hsp-popover-4416c520-a339-4dde-b303-f317ea9efc5f-header"
              >
                <div>
                  Historical profiles for this system
                </div>
              </PopoverHeader>
              <PopoverBody
                id="popover-hsp-popover-4416c520-a339-4dde-b303-f317ea9efc5f-body"
              >
                <Skeleton
                  className="hsp-dropdown-loading"
                  isDark={false}
                  size="sm"
                />
                <Skeleton
                  className="hsp-dropdown-loading"
                  isDark={false}
                  size="sm"
                />
                <Skeleton
                  className="hsp-dropdown-loading"
                  isDark={false}
                  size="sm"
                />
              </PopoverBody>
            </PopoverContent>
          </FocusTrap>
        }
        popperMatchesTriggerWidth={false}
        positionModifiers={
          Object {
            "bottom": "pf-m-bottom",
            "left": "pf-m-left",
            "right": "pf-m-right",
            "top": "pf-m-top",
          }
        }
        trigger={
          <HistoryIcon
            className="hsp-dropdown-icon"
            color="currentColor"
            noVerticalAlign={false}
            onClick={[Function]}
            size="sm"
          />
        }
        zIndex={9999}
      >
        <FindRefWrapper
          onFoundRef={[Function]}
        >
          <HistoryIcon
            className="hsp-dropdown-icon"
            color="currentColor"
            noVerticalAlign={false}
            onClick={[Function]}
            size="sm"
          >
            <svg
              aria-hidden={true}
              aria-labelledby={null}
              className="hsp-dropdown-icon"
              fill="currentColor"
              height="1em"
              onClick={[Function]}
              role="img"
              style={
                Object {
                  "verticalAlign": "-0.125em",
                }
              }
              viewBox="0 0 512 512"
              width="1em"
            >
              <path
                d="M504 255.531c.253 136.64-111.18 248.372-247.82 248.468-59.015.042-113.223-20.53-155.822-54.911-11.077-8.94-11.905-25.541-1.839-35.607l11.267-11.267c8.609-8.609 22.353-9.551 31.891-1.984C173.062 425.135 212.781 440 256 440c101.705 0 184-82.311 184-184 0-101.705-82.311-184-184-184-48.814 0-93.149 18.969-126.068 49.932l50.754 50.754c10.08 10.08 2.941 27.314-11.313 27.314H24c-8.837 0-16-7.163-16-16V38.627c0-14.254 17.234-21.393 27.314-11.314l49.372 49.372C129.209 34.136 189.552 8 256 8c136.81 0 247.747 110.78 248 247.531zm-180.912 78.784l9.823-12.63c8.138-10.463 6.253-25.542-4.21-33.679L288 256.349V152c0-13.255-10.745-24-24-24h-16c-13.255 0-24 10.745-24 24v135.651l65.409 50.874c10.463 8.137 25.541 6.253 33.679-4.21z"
              />
            </svg>
          </HistoryIcon>
        </FindRefWrapper>
      </Popper>
    </Popover>
  </span>
</HistoricalProfilesPopover>
`;
