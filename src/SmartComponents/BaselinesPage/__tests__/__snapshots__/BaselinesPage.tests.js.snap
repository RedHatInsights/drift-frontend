// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BaselinesPage should render correctly 1`] = `
<Fragment>
  <withRouter(Connect(CreateBaselineModal)) />
  <PageHeader>
    <PageHeaderTitle
      title="Baselines"
    />
  </PageHeader>
  <Connect(Main)>
    <Card
      className="pf-t-light pf-m-opaque-100"
    >
      <CardBody>
        <div>
          <Connect(BaselinesTable)
            columns={
              Array [
                Object {
                  "title": "Name",
                  "transforms": Array [
                    [Function],
                  ],
                },
                Object {
                  "title": "Last updated",
                  "transforms": Array [
                    [Function],
                  ],
                },
                Object {
                  "title": "",
                },
              ]
            }
            createButton={true}
            exportButton={true}
            hasMultiSelect={true}
            kebab={true}
            loading={false}
            onBulkSelect={[Function]}
            onClick={[Function]}
            onSelect={[Function]}
            tableId="CHECKBOX"
          />
        </div>
      </CardBody>
    </Card>
  </Connect(Main)>
</Fragment>
`;

exports[`BaselinesPage should render error 1`] = `
<Fragment>
  <withRouter(Connect(CreateBaselineModal)) />
  <PageHeader>
    <PageHeaderTitle
      title="Baselines"
    />
  </PageHeader>
  <Connect(Main)>
    <Card
      className="pf-t-light pf-m-opaque-100"
    >
      <EmptyStateDisplay
        button={
          <a
            onClick={[Function]}
          >
            <UndoIcon
              className="reload-baselines-button"
              color="currentColor"
              noVerticalAlign={false}
              size="sm"
              title={null}
            />
            Retry
          </a>
        }
        color="#c9190b"
        error="Error 404: error"
        icon={[Function]}
        text={
          Array [
            "The list of baselines cannot be displayed at this time. Please retry and if",
            "the problem persists contact your system administrator.",
            "",
          ]
        }
        title="Baselines cannot be displayed"
      />
    </Card>
  </Connect(Main)>
</Fragment>
`;

exports[`ConnectedBaselinesPage should render correctly 1`] = `
<MemoryRouter
  keyLength={0}
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <withRouter(Connect(BaselinesPage))>
        <Connect(BaselinesPage)
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "canGo": [Function],
              "createHref": [Function],
              "entries": Array [
                Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              ],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "index": 0,
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
          location={
            Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            }
          }
          match={
            Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            }
          }
        >
          <BaselinesPage
            baselineError={Object {}}
            baselineTableData={Array []}
            clearEditBaselineData={[Function]}
            createBaselineModalOpened={false}
            emptyState={false}
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            loading={false}
            location={
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              }
            }
            match={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
            revertBaselineFetch={[Function]}
            selectBaseline={[Function]}
          >
            <withRouter(Connect(CreateBaselineModal))>
              <Connect(CreateBaselineModal)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                location={
                  Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  }
                }
                match={
                  Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  }
                }
              >
                <CreateBaselineModal
                  clearSelectedBaselines={[Function]}
                  createBaseline={[Function]}
                  createBaselineModalOpened={false}
                  emptyState={false}
                  error={Object {}}
                  history={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "canGo": [Function],
                      "createHref": [Function],
                      "entries": Array [
                        Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                      ],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "index": 0,
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                  loading={false}
                  location={
                    Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    }
                  }
                  match={
                    Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    }
                  }
                  selectBaseline={[Function]}
                  selectedBaselineIds={Array []}
                  toggleCreateBaselineModal={[Function]}
                >
                  <Modal
                    actions={
                      Array [
                        <Unknown
                          isDisabled={true}
                          variant="primary"
                        >
                          Create baseline
                        </Unknown>,
                        <Unknown
                          onClick={[Function]}
                          variant="secondary"
                        >
                          Cancel
                        </Unknown>,
                      ]
                    }
                    appendTo={
                      <body>
                        <div />
                      </body>
                    }
                    ariaDescribedById=""
                    className="create-baseline-modal"
                    hideTitle={false}
                    isFooterLeftAligned={true}
                    isLarge={false}
                    isOpen={false}
                    isSmall={false}
                    onClose={[Function]}
                    showClose={true}
                    title="Create baseline"
                    width="auto"
                  >
                    <Portal
                      containerInfo={<div />}
                    >
                      <ModalContent
                        actions={
                          Array [
                            <Unknown
                              isDisabled={true}
                              variant="primary"
                            >
                              Create baseline
                            </Unknown>,
                            <Unknown
                              onClick={[Function]}
                              variant="secondary"
                            >
                              Cancel
                            </Unknown>,
                          ]
                        }
                        ariaDescribedById=""
                        className="create-baseline-modal"
                        hideTitle={false}
                        id="pf-modal-0"
                        isFooterLeftAligned={true}
                        isLarge={false}
                        isOpen={false}
                        isSmall={false}
                        onClose={[Function]}
                        showClose={true}
                        title="Create baseline"
                        width="auto"
                      />
                    </Portal>
                  </Modal>
                </CreateBaselineModal>
              </Connect(CreateBaselineModal)>
            </withRouter(Connect(CreateBaselineModal))>
            <PageHeader>
              <section
                className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                widget-type="InsightsPageHeader"
              >
                <PageHeaderTitle
                  title="Baselines"
                >
                  <Title
                    className=""
                    size="2xl"
                    widget-type="InsightsPageHeaderTitle"
                  >
                    <h1
                      className="pf-c-title pf-m-2xl"
                      widget-type="InsightsPageHeaderTitle"
                    >
                       
                      Baselines
                       
                    </h1>
                  </Title>
                </PageHeaderTitle>
              </section>
            </PageHeader>
            <Connect(Main)>
              <Main>
                <section
                  className="pf-l-page__main-section pf-c-page__main-section"
                  page-type=""
                >
                  <Card
                    className="pf-t-light pf-m-opaque-100"
                  >
                    <article
                      className="pf-c-card pf-t-light pf-m-opaque-100"
                    >
                      <CardBody>
                        <div
                          className="pf-c-card__body"
                        >
                          <div>
                            <Connect(BaselinesTable)
                              columns={
                                Array [
                                  Object {
                                    "title": "Name",
                                    "transforms": Array [
                                      [Function],
                                    ],
                                  },
                                  Object {
                                    "title": "Last updated",
                                    "transforms": Array [
                                      [Function],
                                    ],
                                  },
                                  Object {
                                    "title": "",
                                  },
                                ]
                              }
                              createBaselineModalOpened={false}
                              createButton={true}
                              exportButton={true}
                              hasMultiSelect={true}
                              kebab={true}
                              loading={false}
                              onBulkSelect={[Function]}
                              onClick={[Function]}
                              onSelect={[Function]}
                              tableData={Array []}
                              tableId="CHECKBOX"
                            >
                              <BaselinesTable
                                columns={
                                  Array [
                                    Object {
                                      "title": "Name",
                                      "transforms": Array [
                                        [Function],
                                      ],
                                    },
                                    Object {
                                      "title": "Last updated",
                                      "transforms": Array [
                                        [Function],
                                      ],
                                    },
                                    Object {
                                      "title": "",
                                    },
                                  ]
                                }
                                createBaselineModalOpened={false}
                                createButton={true}
                                exportButton={true}
                                fetchBaselines={[Function]}
                                hasMultiSelect={true}
                                kebab={true}
                                loading={false}
                                onBulkSelect={[Function]}
                                onClick={[Function]}
                                onSelect={[Function]}
                                tableData={Array []}
                                tableId="CHECKBOX"
                              >
                                <BaselinesToolbar
                                  createButton={true}
                                  exportButton={true}
                                  fetchWithParams={[Function]}
                                  kebab={true}
                                  onBulkSelect={[Function]}
                                  onSearch={[Function]}
                                  tableData={Array []}
                                  tableId="CHECKBOX"
                                >
                                  <Toolbar
                                    className="drift-toolbar"
                                  >
                                    <div
                                      className="pf-l-toolbar drift-toolbar"
                                    >
                                      <ToolbarGroup>
                                        <div
                                          className="pf-l-toolbar__group"
                                        >
                                          <ToolbarItem>
                                            <div
                                              className="pf-l-toolbar__item"
                                            >
                                              <BulkSelect
                                                checked={false}
                                                className=""
                                                count={null}
                                                isDisabled={true}
                                                items={
                                                  Array [
                                                    Object {
                                                      "key": "select-all",
                                                      "onClick": [Function],
                                                      "title": "Select all",
                                                    },
                                                    Object {
                                                      "key": "select-none",
                                                      "onClick": [Function],
                                                      "title": "Select none",
                                                    },
                                                  ]
                                                }
                                                onSelect={[Function]}
                                              >
                                                <Dropdown
                                                  className="ins-c-bulk-select"
                                                  dropdownItems={
                                                    Array [
                                                      <DropdownItem
                                                        component="button"
                                                        onClick={[Function]}
                                                      >
                                                        Select all
                                                      </DropdownItem>,
                                                      <DropdownItem
                                                        component="button"
                                                        onClick={[Function]}
                                                      >
                                                        Select none
                                                      </DropdownItem>,
                                                    ]
                                                  }
                                                  isDisabled={true}
                                                  isOpen={false}
                                                  onSelect={[Function]}
                                                  toggle={
                                                    <DropdownToggle
                                                      onToggle={[Function]}
                                                      splitButtonItems={
                                                        Array [
                                                          <React.Fragment>
                                                            <DropdownToggleCheckbox
                                                              aria-label="Select all"
                                                              checked={false}
                                                              className=""
                                                              id="toggle-checkbox"
                                                              isDisabled={false}
                                                              isValid={true}
                                                              onChange={[Function]}
                                                            >
                                                               selected
                                                            </DropdownToggleCheckbox>
                                                          </React.Fragment>,
                                                        ]
                                                      }
                                                    />
                                                  }
                                                >
                                                  <Component
                                                    className="ins-c-bulk-select"
                                                    dropdownItems={
                                                      Array [
                                                        <DropdownItem
                                                          component="button"
                                                          onClick={[Function]}
                                                        >
                                                          Select all
                                                        </DropdownItem>,
                                                        <DropdownItem
                                                          component="button"
                                                          onClick={[Function]}
                                                        >
                                                          Select none
                                                        </DropdownItem>,
                                                      ]
                                                    }
                                                    isDisabled={true}
                                                    isOpen={false}
                                                    toggle={
                                                      <DropdownToggle
                                                        onToggle={[Function]}
                                                        splitButtonItems={
                                                          Array [
                                                            <React.Fragment>
                                                              <DropdownToggleCheckbox
                                                                aria-label="Select all"
                                                                checked={false}
                                                                className=""
                                                                id="toggle-checkbox"
                                                                isDisabled={false}
                                                                isValid={true}
                                                                onChange={[Function]}
                                                              >
                                                                 selected
                                                              </DropdownToggleCheckbox>
                                                            </React.Fragment>,
                                                          ]
                                                        }
                                                      />
                                                    }
                                                  >
                                                    <ComponentWithOuia
                                                      component={[Function]}
                                                      componentProps={
                                                        Object {
                                                          "className": "ins-c-bulk-select",
                                                          "dropdownItems": Array [
                                                            <DropdownItem
                                                              component="button"
                                                              onClick={[Function]}
                                                            >
                                                              Select all
                                                            </DropdownItem>,
                                                            <DropdownItem
                                                              component="button"
                                                              onClick={[Function]}
                                                            >
                                                              Select none
                                                            </DropdownItem>,
                                                          ],
                                                          "isDisabled": true,
                                                          "isOpen": false,
                                                          "toggle": <DropdownToggle
                                                            onToggle={[Function]}
                                                            splitButtonItems={
                                                              Array [
                                                                <React.Fragment>
                                                                  <DropdownToggleCheckbox
                                                                    aria-label="Select all"
                                                                    checked={false}
                                                                    className=""
                                                                    id="toggle-checkbox"
                                                                    isDisabled={false}
                                                                    isValid={true}
                                                                    onChange={[Function]}
                                                                  >
                                                                     selected
                                                                  </DropdownToggleCheckbox>
                                                                </React.Fragment>,
                                                              ]
                                                            }
                                                          />,
                                                        }
                                                      }
                                                      consumerContext={null}
                                                    >
                                                      <DropdownWithContext
                                                        autoFocus={true}
                                                        className="ins-c-bulk-select"
                                                        direction="down"
                                                        dropdownItems={
                                                          Array [
                                                            <DropdownItem
                                                              component="button"
                                                              onClick={[Function]}
                                                            >
                                                              Select all
                                                            </DropdownItem>,
                                                            <DropdownItem
                                                              component="button"
                                                              onClick={[Function]}
                                                            >
                                                              Select none
                                                            </DropdownItem>,
                                                          ]
                                                        }
                                                        isDisabled={true}
                                                        isGrouped={false}
                                                        isOpen={false}
                                                        isPlain={false}
                                                        onSelect={[Function]}
                                                        ouiaComponentType="Dropdown"
                                                        ouiaContext={
                                                          Object {
                                                            "isOuia": false,
                                                            "ouiaId": null,
                                                          }
                                                        }
                                                        position="left"
                                                        toggle={
                                                          <DropdownToggle
                                                            onToggle={[Function]}
                                                            splitButtonItems={
                                                              Array [
                                                                <React.Fragment>
                                                                  <DropdownToggleCheckbox
                                                                    aria-label="Select all"
                                                                    checked={false}
                                                                    className=""
                                                                    id="toggle-checkbox"
                                                                    isDisabled={false}
                                                                    isValid={true}
                                                                    onChange={[Function]}
                                                                  >
                                                                     selected
                                                                  </DropdownToggleCheckbox>
                                                                </React.Fragment>,
                                                              ]
                                                            }
                                                          />
                                                        }
                                                      >
                                                        <div
                                                          className="pf-c-dropdown ins-c-bulk-select"
                                                          isDisabled={true}
                                                        >
                                                          <DropdownToggle
                                                            ariaHasPopup={true}
                                                            id="pf-toggle-id-0"
                                                            isOpen={false}
                                                            isPlain={false}
                                                            key=".0"
                                                            onEnter={[Function]}
                                                            onToggle={[Function]}
                                                            parentRef={
                                                              Object {
                                                                "current": <div
                                                                  class="pf-c-dropdown ins-c-bulk-select"
                                                                >
                                                                  <div
                                                                    class="pf-c-dropdown__toggle pf-m-split-button"
                                                                  >
                                                                    <label
                                                                      class="pf-c-dropdown__toggle-check"
                                                                      for="toggle-checkbox"
                                                                    >
                                                                      <input
                                                                        aria-invalid="false"
                                                                        aria-label="Select all"
                                                                        id="toggle-checkbox"
                                                                        type="checkbox"
                                                                      />
                                                                      <span
                                                                        aria-hidden="true"
                                                                        class="pf-c-dropdown__toggle-text"
                                                                        id="toggle-checkbox-text"
                                                                      >
                                                                         selected
                                                                      </span>
                                                                    </label>
                                                                    <button
                                                                      aria-expanded="false"
                                                                      aria-haspopup="true"
                                                                      aria-label="Select"
                                                                      class="pf-c-dropdown__toggle-button"
                                                                      id="pf-toggle-id-0"
                                                                      type="button"
                                                                    >
                                                                      <svg
                                                                        aria-hidden="true"
                                                                        class=""
                                                                        fill="currentColor"
                                                                        height="1em"
                                                                        role="img"
                                                                        style="vertical-align: -0.125em;"
                                                                        viewBox="0 0 320 512"
                                                                        width="1em"
                                                                      >
                                                                        <path
                                                                          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                          transform=""
                                                                        />
                                                                      </svg>
                                                                    </button>
                                                                  </div>
                                                                </div>,
                                                              }
                                                            }
                                                            splitButtonItems={
                                                              Array [
                                                                <React.Fragment>
                                                                  <DropdownToggleCheckbox
                                                                    aria-label="Select all"
                                                                    checked={false}
                                                                    className=""
                                                                    id="toggle-checkbox"
                                                                    isDisabled={false}
                                                                    isValid={true}
                                                                    onChange={[Function]}
                                                                  >
                                                                     selected
                                                                  </DropdownToggleCheckbox>
                                                                </React.Fragment>,
                                                              ]
                                                            }
                                                          >
                                                            <div
                                                              className="pf-c-dropdown__toggle pf-m-split-button"
                                                            >
                                                              <DropdownToggleCheckbox
                                                                aria-label="Select all"
                                                                checked={false}
                                                                className=""
                                                                id="toggle-checkbox"
                                                                isDisabled={false}
                                                                isValid={true}
                                                                onChange={[Function]}
                                                              >
                                                                <label
                                                                  className="pf-c-dropdown__toggle-check"
                                                                  htmlFor="toggle-checkbox"
                                                                >
                                                                  <input
                                                                    aria-invalid={false}
                                                                    aria-label="Select all"
                                                                    checked={false}
                                                                    disabled={false}
                                                                    id="toggle-checkbox"
                                                                    onChange={[Function]}
                                                                    type="checkbox"
                                                                  />
                                                                  <span
                                                                    aria-hidden="true"
                                                                    className="pf-c-dropdown__toggle-text"
                                                                    id="toggle-checkbox-text"
                                                                  >
                                                                     selected
                                                                  </span>
                                                                </label>
                                                              </DropdownToggleCheckbox>
                                                              <Toggle
                                                                aria-label="Select"
                                                                ariaHasPopup={true}
                                                                className=""
                                                                id="pf-toggle-id-0"
                                                                isActive={false}
                                                                isDisabled={false}
                                                                isFocused={false}
                                                                isHovered={false}
                                                                isOpen={false}
                                                                isPlain={false}
                                                                isPrimary={false}
                                                                isSplitButton={true}
                                                                onEnter={[Function]}
                                                                onToggle={[Function]}
                                                                parentRef={
                                                                  Object {
                                                                    "current": <div
                                                                      class="pf-c-dropdown ins-c-bulk-select"
                                                                    >
                                                                      <div
                                                                        class="pf-c-dropdown__toggle pf-m-split-button"
                                                                      >
                                                                        <label
                                                                          class="pf-c-dropdown__toggle-check"
                                                                          for="toggle-checkbox"
                                                                        >
                                                                          <input
                                                                            aria-invalid="false"
                                                                            aria-label="Select all"
                                                                            id="toggle-checkbox"
                                                                            type="checkbox"
                                                                          />
                                                                          <span
                                                                            aria-hidden="true"
                                                                            class="pf-c-dropdown__toggle-text"
                                                                            id="toggle-checkbox-text"
                                                                          >
                                                                             selected
                                                                          </span>
                                                                        </label>
                                                                        <button
                                                                          aria-expanded="false"
                                                                          aria-haspopup="true"
                                                                          aria-label="Select"
                                                                          class="pf-c-dropdown__toggle-button"
                                                                          id="pf-toggle-id-0"
                                                                          type="button"
                                                                        >
                                                                          <svg
                                                                            aria-hidden="true"
                                                                            class=""
                                                                            fill="currentColor"
                                                                            height="1em"
                                                                            role="img"
                                                                            style="vertical-align: -0.125em;"
                                                                            viewBox="0 0 320 512"
                                                                            width="1em"
                                                                          >
                                                                            <path
                                                                              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                              transform=""
                                                                            />
                                                                          </svg>
                                                                        </button>
                                                                      </div>
                                                                    </div>,
                                                                  }
                                                                }
                                                              >
                                                                <button
                                                                  aria-expanded={false}
                                                                  aria-haspopup={true}
                                                                  aria-label="Select"
                                                                  className="pf-c-dropdown__toggle-button"
                                                                  disabled={false}
                                                                  id="pf-toggle-id-0"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  type="button"
                                                                >
                                                                  <CaretDownIcon
                                                                    className=""
                                                                    color="currentColor"
                                                                    noVerticalAlign={false}
                                                                    size="sm"
                                                                    title={null}
                                                                  >
                                                                    <svg
                                                                      aria-hidden={true}
                                                                      aria-labelledby={null}
                                                                      className=""
                                                                      fill="currentColor"
                                                                      height="1em"
                                                                      role="img"
                                                                      style={
                                                                        Object {
                                                                          "verticalAlign": "-0.125em",
                                                                        }
                                                                      }
                                                                      viewBox="0 0 320 512"
                                                                      width="1em"
                                                                    >
                                                                      <path
                                                                        d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                        transform=""
                                                                      />
                                                                    </svg>
                                                                  </CaretDownIcon>
                                                                </button>
                                                              </Toggle>
                                                            </div>
                                                          </DropdownToggle>
                                                        </div>
                                                      </DropdownWithContext>
                                                    </ComponentWithOuia>
                                                  </Component>
                                                </Dropdown>
                                              </BulkSelect>
                                            </div>
                                          </ToolbarItem>
                                        </div>
                                      </ToolbarGroup>
                                      <ToolbarGroup>
                                        <div
                                          className="pf-l-toolbar__group"
                                        >
                                          <ToolbarItem>
                                            <div
                                              className="pf-l-toolbar__item"
                                            >
                                              <ConditionalFilter
                                                items={Array []}
                                                onChange={[Function]}
                                                placeholder="Filter by name"
                                                value=""
                                              >
                                                <div
                                                  className="ins-c-conditional-filter"
                                                >
                                                  <Text
                                                    id="default-input"
                                                    onChange={[Function]}
                                                    onSubmit={[Function]}
                                                    placeholder="Filter by name"
                                                    value=""
                                                    widget-type="InsightsInput"
                                                  >
                                                    <ForwardRef
                                                      className="ins-c-conditional-filter "
                                                      id="default-input"
                                                      onChange={[Function]}
                                                      onKeyDown={[Function]}
                                                      placeholder="Filter by name"
                                                      value=""
                                                      widget-type="InsightsInput"
                                                    >
                                                      <TextInputBase
                                                        aria-label={null}
                                                        className="ins-c-conditional-filter "
                                                        id="default-input"
                                                        innerRef={null}
                                                        isDisabled={false}
                                                        isReadOnly={false}
                                                        isRequired={false}
                                                        isValid={true}
                                                        onChange={[Function]}
                                                        onKeyDown={[Function]}
                                                        placeholder="Filter by name"
                                                        type="text"
                                                        validated="default"
                                                        value=""
                                                        widget-type="InsightsInput"
                                                      >
                                                        <input
                                                          aria-invalid={false}
                                                          aria-label={null}
                                                          className="pf-c-form-control ins-c-conditional-filter "
                                                          disabled={false}
                                                          id="default-input"
                                                          onChange={[Function]}
                                                          onKeyDown={[Function]}
                                                          placeholder="Filter by name"
                                                          readOnly={false}
                                                          required={false}
                                                          type="text"
                                                          value=""
                                                          widget-type="InsightsInput"
                                                        />
                                                      </TextInputBase>
                                                    </ForwardRef>
                                                    <SearchIcon
                                                      className="ins-c-search-icon"
                                                      color="currentColor"
                                                      noVerticalAlign={false}
                                                      size="sm"
                                                      title={null}
                                                    >
                                                      <svg
                                                        aria-hidden={true}
                                                        aria-labelledby={null}
                                                        className="ins-c-search-icon"
                                                        fill="currentColor"
                                                        height="1em"
                                                        role="img"
                                                        style={
                                                          Object {
                                                            "verticalAlign": "-0.125em",
                                                          }
                                                        }
                                                        viewBox="0 0 512 512"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z"
                                                          transform=""
                                                        />
                                                      </svg>
                                                    </SearchIcon>
                                                  </Text>
                                                </div>
                                              </ConditionalFilter>
                                            </div>
                                          </ToolbarItem>
                                        </div>
                                      </ToolbarGroup>
                                      <ToolbarGroup>
                                        <div
                                          className="pf-l-toolbar__group"
                                        >
                                          <ToolbarItem>
                                            <div
                                              className="pf-l-toolbar__item"
                                            >
                                              <withRouter(Connect(CreateBaselineButton))>
                                                <Connect(CreateBaselineButton)
                                                  history={
                                                    Object {
                                                      "action": "POP",
                                                      "block": [Function],
                                                      "canGo": [Function],
                                                      "createHref": [Function],
                                                      "entries": Array [
                                                        Object {
                                                          "hash": "",
                                                          "pathname": "/",
                                                          "search": "",
                                                          "state": undefined,
                                                        },
                                                      ],
                                                      "go": [Function],
                                                      "goBack": [Function],
                                                      "goForward": [Function],
                                                      "index": 0,
                                                      "length": 1,
                                                      "listen": [Function],
                                                      "location": Object {
                                                        "hash": "",
                                                        "pathname": "/",
                                                        "search": "",
                                                        "state": undefined,
                                                      },
                                                      "push": [Function],
                                                      "replace": [Function],
                                                    }
                                                  }
                                                  location={
                                                    Object {
                                                      "hash": "",
                                                      "pathname": "/",
                                                      "search": "",
                                                      "state": undefined,
                                                    }
                                                  }
                                                  match={
                                                    Object {
                                                      "isExact": true,
                                                      "params": Object {},
                                                      "path": "/",
                                                      "url": "/",
                                                    }
                                                  }
                                                >
                                                  <CreateBaselineButton
                                                    addSystemModalOpened={false}
                                                    history={
                                                      Object {
                                                        "action": "POP",
                                                        "block": [Function],
                                                        "canGo": [Function],
                                                        "createHref": [Function],
                                                        "entries": Array [
                                                          Object {
                                                            "hash": "",
                                                            "pathname": "/",
                                                            "search": "",
                                                            "state": undefined,
                                                          },
                                                        ],
                                                        "go": [Function],
                                                        "goBack": [Function],
                                                        "goForward": [Function],
                                                        "index": 0,
                                                        "length": 1,
                                                        "listen": [Function],
                                                        "location": Object {
                                                          "hash": "",
                                                          "pathname": "/",
                                                          "search": "",
                                                          "state": undefined,
                                                        },
                                                        "push": [Function],
                                                        "replace": [Function],
                                                      }
                                                    }
                                                    location={
                                                      Object {
                                                        "hash": "",
                                                        "pathname": "/",
                                                        "search": "",
                                                        "state": undefined,
                                                      }
                                                    }
                                                    match={
                                                      Object {
                                                        "isExact": true,
                                                        "params": Object {},
                                                        "path": "/",
                                                        "url": "/",
                                                      }
                                                    }
                                                    toggleAddSystemModal={[Function]}
                                                    toggleCreateBaselineModal={[Function]}
                                                  >
                                                    <Component
                                                      id="create-baseline-button"
                                                      onClick={[Function]}
                                                      variant="primary"
                                                    >
                                                      <ComponentWithOuia
                                                        component={[Function]}
                                                        componentProps={
                                                          Object {
                                                            "children": "Create baseline",
                                                            "id": "create-baseline-button",
                                                            "onClick": [Function],
                                                            "variant": "primary",
                                                          }
                                                        }
                                                        consumerContext={null}
                                                      >
                                                        <Button
                                                          id="create-baseline-button"
                                                          onClick={[Function]}
                                                          ouiaContext={
                                                            Object {
                                                              "isOuia": false,
                                                              "ouiaId": null,
                                                            }
                                                          }
                                                          variant="primary"
                                                        >
                                                          <button
                                                            aria-disabled={null}
                                                            aria-label={null}
                                                            className="pf-c-button pf-m-primary"
                                                            disabled={false}
                                                            id="create-baseline-button"
                                                            onClick={[Function]}
                                                            tabIndex={null}
                                                            type="button"
                                                          >
                                                            Create baseline
                                                          </button>
                                                        </Button>
                                                      </ComponentWithOuia>
                                                    </Component>
                                                  </CreateBaselineButton>
                                                </Connect(CreateBaselineButton)>
                                              </withRouter(Connect(CreateBaselineButton))>
                                            </div>
                                          </ToolbarItem>
                                          <ToolbarItem>
                                            <div
                                              className="pf-l-toolbar__item"
                                            >
                                              <Connect(ExportCSVButton)
                                                exportType="baseline list"
                                              >
                                                <ExportCSVButton
                                                  baselineTableData={Array []}
                                                  exportToCSV={[Function]}
                                                  exportType="baseline list"
                                                >
                                                  <ExportIcon
                                                    className="pointer not-active export-button-margin"
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    onClick={[Function]}
                                                    size="sm"
                                                    title={null}
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      className="pointer not-active export-button-margin"
                                                      fill="currentColor"
                                                      height="1em"
                                                      onClick={[Function]}
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 64 1024 1024"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M980.293 278.754l-95.387-95.387-393.84 393.856c-5.285 5.262-11.353 7.909-18.203 7.911-6.862 0-12.935-2.649-18.222-7.911l-81.019-81.019c-5.262-5.285-7.909-11.353-7.909-18.219 0-6.85 2.649-12.914 7.909-18.203l393.856-393.84-95.381-95.381c-24.039-24.037-15.89-43.705 18.105-43.705h271.982c53.227 0 61.813 9.273 61.813 61.813v271.982c0.005 33.998-19.662 42.151-43.703 18.105zM146.286 793.143c0 3.312 1.077 6.048 3.232 8.203 2.151 2.151 4.889 3.227 8.199 3.225h708.661c3.287 0 5.998-1.067 8.137-3.202 2.135-2.137 3.202-4.848 3.202-8.135v-331.701c0-6.571 2.135-11.995 6.409-16.272 4.27-4.267 9.696-6.407 16.267-6.405h100.933c6.571-0.002 11.998 2.137 16.267 6.405 4.277 4.277 6.409 9.701 6.409 16.272v466.647c0.002 6.571-2.137 11.998-6.405 16.267-4.277 4.274-9.701 6.409-16.272 6.409h-978.649c-6.571 0.002-11.998-2.137-16.267-6.405-4.274-4.277-6.409-9.701-6.409-16.272v-978.647c0-6.571 2.135-11.995 6.409-16.272 4.27-4.267 9.696-6.407 16.267-6.405h466.647c6.571 0 11.995 2.135 16.272 6.411 4.267 4.267 6.407 9.696 6.405 16.265v100.933c0.002 6.569-2.137 11.998-6.405 16.265-4.277 4.277-9.701 6.411-16.272 6.411h-331.609c-3.312 0-6.048 1.077-8.203 3.232-2.151 2.149-3.227 4.889-3.225 8.197v708.571z"
                                                        transform="rotate(180 0 512) scale(-1 1)"
                                                      />
                                                    </svg>
                                                  </ExportIcon>
                                                </ExportCSVButton>
                                              </Connect(ExportCSVButton)>
                                            </div>
                                          </ToolbarItem>
                                          <ToolbarItem>
                                            <div
                                              className="pf-l-toolbar__item"
                                            >
                                              <Connect(BaselinesKebab)
                                                exportType="baseline list"
                                                fetchWithParams={[Function]}
                                                tableId="CHECKBOX"
                                              >
                                                <BaselinesKebab
                                                  dispatch={[Function]}
                                                  exportType="baseline list"
                                                  fetchWithParams={[Function]}
                                                  selectedBaselineIds={Array []}
                                                  tableId="CHECKBOX"
                                                >
                                                  <Dropdown
                                                    dropdownItems={
                                                      Array [
                                                        <DropdownItem
                                                          component="button"
                                                          isDisabled={true}
                                                          onClick={[Function]}
                                                        >
                                                          Delete baselines
                                                        </DropdownItem>,
                                                      ]
                                                    }
                                                    isOpen={false}
                                                    isPlain={true}
                                                    style={
                                                      Object {
                                                        "float": "left",
                                                      }
                                                    }
                                                    toggle={
                                                      <KebabToggle
                                                        onToggle={[Function]}
                                                      />
                                                    }
                                                  >
                                                    <Component
                                                      dropdownItems={
                                                        Array [
                                                          <DropdownItem
                                                            component="button"
                                                            isDisabled={true}
                                                            onClick={[Function]}
                                                          >
                                                            Delete baselines
                                                          </DropdownItem>,
                                                        ]
                                                      }
                                                      isOpen={false}
                                                      isPlain={true}
                                                      style={
                                                        Object {
                                                          "float": "left",
                                                        }
                                                      }
                                                      toggle={
                                                        <KebabToggle
                                                          onToggle={[Function]}
                                                        />
                                                      }
                                                    >
                                                      <ComponentWithOuia
                                                        component={[Function]}
                                                        componentProps={
                                                          Object {
                                                            "dropdownItems": Array [
                                                              <DropdownItem
                                                                component="button"
                                                                isDisabled={true}
                                                                onClick={[Function]}
                                                              >
                                                                Delete baselines
                                                              </DropdownItem>,
                                                            ],
                                                            "isOpen": false,
                                                            "isPlain": true,
                                                            "style": Object {
                                                              "float": "left",
                                                            },
                                                            "toggle": <KebabToggle
                                                              onToggle={[Function]}
                                                            />,
                                                          }
                                                        }
                                                        consumerContext={null}
                                                      >
                                                        <DropdownWithContext
                                                          autoFocus={true}
                                                          className=""
                                                          direction="down"
                                                          dropdownItems={
                                                            Array [
                                                              <DropdownItem
                                                                component="button"
                                                                isDisabled={true}
                                                                onClick={[Function]}
                                                              >
                                                                Delete baselines
                                                              </DropdownItem>,
                                                            ]
                                                          }
                                                          isGrouped={false}
                                                          isOpen={false}
                                                          isPlain={true}
                                                          onSelect={[Function]}
                                                          ouiaComponentType="Dropdown"
                                                          ouiaContext={
                                                            Object {
                                                              "isOuia": false,
                                                              "ouiaId": null,
                                                            }
                                                          }
                                                          position="left"
                                                          style={
                                                            Object {
                                                              "float": "left",
                                                            }
                                                          }
                                                          toggle={
                                                            <KebabToggle
                                                              onToggle={[Function]}
                                                            />
                                                          }
                                                        >
                                                          <div
                                                            className="pf-c-dropdown"
                                                            style={
                                                              Object {
                                                                "float": "left",
                                                              }
                                                            }
                                                          >
                                                            <KebabToggle
                                                              ariaHasPopup={true}
                                                              id="pf-toggle-id-1"
                                                              isOpen={false}
                                                              isPlain={true}
                                                              key=".0"
                                                              onEnter={[Function]}
                                                              onToggle={[Function]}
                                                              parentRef={
                                                                Object {
                                                                  "current": <div
                                                                    class="pf-c-dropdown"
                                                                    style="float: left;"
                                                                  >
                                                                    <button
                                                                      aria-expanded="false"
                                                                      aria-haspopup="true"
                                                                      aria-label="Actions"
                                                                      class="pf-c-dropdown__toggle pf-m-plain"
                                                                      id="pf-toggle-id-1"
                                                                      type="button"
                                                                    >
                                                                      <svg
                                                                        aria-hidden="true"
                                                                        fill="currentColor"
                                                                        height="1em"
                                                                        role="img"
                                                                        style="vertical-align: -0.125em;"
                                                                        viewBox="0 0 192 512"
                                                                        width="1em"
                                                                      >
                                                                        <path
                                                                          d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                                          transform=""
                                                                        />
                                                                      </svg>
                                                                    </button>
                                                                  </div>,
                                                                }
                                                              }
                                                            >
                                                              <Toggle
                                                                aria-label="Actions"
                                                                ariaHasPopup={true}
                                                                className=""
                                                                id="pf-toggle-id-1"
                                                                isActive={false}
                                                                isDisabled={false}
                                                                isFocused={false}
                                                                isHovered={false}
                                                                isOpen={false}
                                                                isPlain={true}
                                                                isPrimary={false}
                                                                isSplitButton={false}
                                                                onEnter={[Function]}
                                                                onToggle={[Function]}
                                                                parentRef={
                                                                  Object {
                                                                    "current": <div
                                                                      class="pf-c-dropdown"
                                                                      style="float: left;"
                                                                    >
                                                                      <button
                                                                        aria-expanded="false"
                                                                        aria-haspopup="true"
                                                                        aria-label="Actions"
                                                                        class="pf-c-dropdown__toggle pf-m-plain"
                                                                        id="pf-toggle-id-1"
                                                                        type="button"
                                                                      >
                                                                        <svg
                                                                          aria-hidden="true"
                                                                          fill="currentColor"
                                                                          height="1em"
                                                                          role="img"
                                                                          style="vertical-align: -0.125em;"
                                                                          viewBox="0 0 192 512"
                                                                          width="1em"
                                                                        >
                                                                          <path
                                                                            d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                                            transform=""
                                                                          />
                                                                        </svg>
                                                                      </button>
                                                                    </div>,
                                                                  }
                                                                }
                                                              >
                                                                <button
                                                                  aria-expanded={false}
                                                                  aria-haspopup={true}
                                                                  aria-label="Actions"
                                                                  className="pf-c-dropdown__toggle pf-m-plain"
                                                                  disabled={false}
                                                                  id="pf-toggle-id-1"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  type="button"
                                                                >
                                                                  <EllipsisVIcon
                                                                    color="currentColor"
                                                                    noVerticalAlign={false}
                                                                    size="sm"
                                                                    title={null}
                                                                  >
                                                                    <svg
                                                                      aria-hidden={true}
                                                                      aria-labelledby={null}
                                                                      fill="currentColor"
                                                                      height="1em"
                                                                      role="img"
                                                                      style={
                                                                        Object {
                                                                          "verticalAlign": "-0.125em",
                                                                        }
                                                                      }
                                                                      viewBox="0 0 192 512"
                                                                      width="1em"
                                                                    >
                                                                      <path
                                                                        d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                                        transform=""
                                                                      />
                                                                    </svg>
                                                                  </EllipsisVIcon>
                                                                </button>
                                                              </Toggle>
                                                            </KebabToggle>
                                                          </div>
                                                        </DropdownWithContext>
                                                      </ComponentWithOuia>
                                                    </Component>
                                                  </Dropdown>
                                                </BaselinesKebab>
                                              </Connect(BaselinesKebab)>
                                            </div>
                                          </ToolbarItem>
                                        </div>
                                      </ToolbarGroup>
                                    </div>
                                  </Toolbar>
                                </BaselinesToolbar>
                                <Component
                                  aria-label="Baselines Table"
                                  cells={
                                    Array [
                                      Object {
                                        "title": "Name",
                                        "transforms": Array [
                                          [Function],
                                        ],
                                      },
                                      Object {
                                        "title": "Last updated",
                                        "transforms": Array [
                                          [Function],
                                        ],
                                      },
                                      Object {
                                        "title": "",
                                      },
                                    ]
                                  }
                                  rows={
                                    Array [
                                      Object {
                                        "cells": Array [
                                          Object {
                                            "props": Object {
                                              "colSpan": 3,
                                            },
                                            "title": <EmptyTable>
                                              <EmptyStateDisplay
                                                text={
                                                  Array [
                                                    "This filter criteria matches no baselines.",
                                                    "Try changing your filter settings.",
                                                  ]
                                                }
                                                title="No matching baselines found"
                                              />
                                            </EmptyTable>,
                                          },
                                        ],
                                      },
                                    ]
                                  }
                                >
                                  <ComponentWithOuia
                                    component={[Function]}
                                    componentProps={
                                      Object {
                                        "aria-label": "Baselines Table",
                                        "cells": Array [
                                          Object {
                                            "title": "Name",
                                            "transforms": Array [
                                              [Function],
                                            ],
                                          },
                                          Object {
                                            "title": "Last updated",
                                            "transforms": Array [
                                              [Function],
                                            ],
                                          },
                                          Object {
                                            "title": "",
                                          },
                                        ],
                                        "children": Array [
                                          <TableHeader />,
                                          <TableBody />,
                                        ],
                                        "rows": Array [
                                          Object {
                                            "cells": Array [
                                              Object {
                                                "props": Object {
                                                  "colSpan": 3,
                                                },
                                                "title": <EmptyTable>
                                                  <EmptyStateDisplay
                                                    text={
                                                      Array [
                                                        "This filter criteria matches no baselines.",
                                                        "Try changing your filter settings.",
                                                      ]
                                                    }
                                                    title="No matching baselines found"
                                                  />
                                                </EmptyTable>,
                                              },
                                            ],
                                          },
                                        ],
                                      }
                                    }
                                    consumerContext={null}
                                  >
                                    <Table
                                      aria-label="Baselines Table"
                                      borders={true}
                                      canSelectAll={true}
                                      cells={
                                        Array [
                                          Object {
                                            "title": "Name",
                                            "transforms": Array [
                                              [Function],
                                            ],
                                          },
                                          Object {
                                            "title": "Last updated",
                                            "transforms": Array [
                                              [Function],
                                            ],
                                          },
                                          Object {
                                            "title": "",
                                          },
                                        ]
                                      }
                                      className=""
                                      contentId="expanded-content"
                                      dropdownDirection="down"
                                      dropdownPosition="right"
                                      expandId="expandable-toggle"
                                      gridBreakPoint="grid-md"
                                      ouiaContext={
                                        Object {
                                          "isOuia": false,
                                          "ouiaId": null,
                                        }
                                      }
                                      role="grid"
                                      rowLabeledBy="simple-node"
                                      rows={
                                        Array [
                                          Object {
                                            "cells": Array [
                                              Object {
                                                "props": Object {
                                                  "colSpan": 3,
                                                },
                                                "title": <EmptyTable>
                                                  <EmptyStateDisplay
                                                    text={
                                                      Array [
                                                        "This filter criteria matches no baselines.",
                                                        "Try changing your filter settings.",
                                                      ]
                                                    }
                                                    title="No matching baselines found"
                                                  />
                                                </EmptyTable>,
                                              },
                                            ],
                                          },
                                        ]
                                      }
                                      variant={null}
                                    >
                                      <Provider
                                        aria-label="Baselines Table"
                                        className="pf-c-table pf-m-grid-md"
                                        columns={
                                          Array [
                                            Object {
                                              "cell": Object {
                                                "formatters": Array [
                                                  [Function],
                                                ],
                                                "transforms": Array [
                                                  [Function],
                                                ],
                                              },
                                              "data": undefined,
                                              "extraParams": Object {
                                                "actionResolver": undefined,
                                                "actions": undefined,
                                                "allRowsSelected": false,
                                                "areActionsDisabled": undefined,
                                                "canSelectAll": true,
                                                "contentId": "expanded-content",
                                                "dropdownDirection": "down",
                                                "dropdownPosition": "right",
                                                "expandId": "expandable-toggle",
                                                "firstUserColumnIndex": 0,
                                                "onCollapse": undefined,
                                                "onExpand": undefined,
                                                "onSelect": undefined,
                                                "onSort": undefined,
                                                "rowLabeledBy": "simple-node",
                                                "sortBy": undefined,
                                              },
                                              "header": Object {
                                                "formatters": Array [],
                                                "label": "Name",
                                                "transforms": Array [
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                              },
                                              "property": "name",
                                              "props": Object {
                                                "data-key": 0,
                                                "data-label": "Name",
                                              },
                                            },
                                            Object {
                                              "cell": Object {
                                                "formatters": Array [
                                                  [Function],
                                                ],
                                                "transforms": Array [
                                                  [Function],
                                                ],
                                              },
                                              "data": undefined,
                                              "extraParams": Object {
                                                "actionResolver": undefined,
                                                "actions": undefined,
                                                "allRowsSelected": false,
                                                "areActionsDisabled": undefined,
                                                "canSelectAll": true,
                                                "contentId": "expanded-content",
                                                "dropdownDirection": "down",
                                                "dropdownPosition": "right",
                                                "expandId": "expandable-toggle",
                                                "firstUserColumnIndex": 0,
                                                "onCollapse": undefined,
                                                "onExpand": undefined,
                                                "onSelect": undefined,
                                                "onSort": undefined,
                                                "rowLabeledBy": "simple-node",
                                                "sortBy": undefined,
                                              },
                                              "header": Object {
                                                "formatters": Array [],
                                                "label": "Last updated",
                                                "transforms": Array [
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                              },
                                              "property": "last-updated",
                                              "props": Object {
                                                "data-key": 1,
                                                "data-label": "Last updated",
                                              },
                                            },
                                            Object {
                                              "cell": Object {
                                                "formatters": Array [
                                                  [Function],
                                                ],
                                                "transforms": Array [
                                                  [Function],
                                                ],
                                              },
                                              "data": undefined,
                                              "extraParams": Object {
                                                "actionResolver": undefined,
                                                "actions": undefined,
                                                "allRowsSelected": false,
                                                "areActionsDisabled": undefined,
                                                "canSelectAll": true,
                                                "contentId": "expanded-content",
                                                "dropdownDirection": "down",
                                                "dropdownPosition": "right",
                                                "expandId": "expandable-toggle",
                                                "firstUserColumnIndex": 0,
                                                "onCollapse": undefined,
                                                "onExpand": undefined,
                                                "onSelect": undefined,
                                                "onSort": undefined,
                                                "rowLabeledBy": "simple-node",
                                                "sortBy": undefined,
                                              },
                                              "header": Object {
                                                "formatters": Array [],
                                                "label": "",
                                                "transforms": Array [
                                                  [Function],
                                                  [Function],
                                                ],
                                              },
                                              "property": "column-2",
                                              "props": Object {
                                                "data-key": 2,
                                                "data-label": "",
                                              },
                                            },
                                          ]
                                        }
                                        renderers={
                                          Object {
                                            "body": Object {
                                              "cell": [Function],
                                              "row": [Function],
                                              "wrapper": [Function],
                                            },
                                            "header": Object {
                                              "cell": [Function],
                                            },
                                          }
                                        }
                                        role="grid"
                                      >
                                        <table
                                          aria-label="Baselines Table"
                                          className="pf-c-table pf-m-grid-md"
                                          role="grid"
                                        >
                                          <TableHeader>
                                            <ContextHeader
                                              headerRows={null}
                                            >
                                              <Header
                                                className=""
                                                headerRows={null}
                                              >
                                                <BaseHeader
                                                  className=""
                                                  columns={
                                                    Array [
                                                      Object {
                                                        "cell": Object {
                                                          "formatters": Array [
                                                            [Function],
                                                          ],
                                                          "transforms": Array [
                                                            [Function],
                                                          ],
                                                        },
                                                        "data": undefined,
                                                        "extraParams": Object {
                                                          "actionResolver": undefined,
                                                          "actions": undefined,
                                                          "allRowsSelected": false,
                                                          "areActionsDisabled": undefined,
                                                          "canSelectAll": true,
                                                          "contentId": "expanded-content",
                                                          "dropdownDirection": "down",
                                                          "dropdownPosition": "right",
                                                          "expandId": "expandable-toggle",
                                                          "firstUserColumnIndex": 0,
                                                          "onCollapse": undefined,
                                                          "onExpand": undefined,
                                                          "onSelect": undefined,
                                                          "onSort": undefined,
                                                          "rowLabeledBy": "simple-node",
                                                          "sortBy": undefined,
                                                        },
                                                        "header": Object {
                                                          "formatters": Array [],
                                                          "label": "Name",
                                                          "transforms": Array [
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                          ],
                                                        },
                                                        "property": "name",
                                                        "props": Object {
                                                          "data-key": 0,
                                                          "data-label": "Name",
                                                        },
                                                      },
                                                      Object {
                                                        "cell": Object {
                                                          "formatters": Array [
                                                            [Function],
                                                          ],
                                                          "transforms": Array [
                                                            [Function],
                                                          ],
                                                        },
                                                        "data": undefined,
                                                        "extraParams": Object {
                                                          "actionResolver": undefined,
                                                          "actions": undefined,
                                                          "allRowsSelected": false,
                                                          "areActionsDisabled": undefined,
                                                          "canSelectAll": true,
                                                          "contentId": "expanded-content",
                                                          "dropdownDirection": "down",
                                                          "dropdownPosition": "right",
                                                          "expandId": "expandable-toggle",
                                                          "firstUserColumnIndex": 0,
                                                          "onCollapse": undefined,
                                                          "onExpand": undefined,
                                                          "onSelect": undefined,
                                                          "onSort": undefined,
                                                          "rowLabeledBy": "simple-node",
                                                          "sortBy": undefined,
                                                        },
                                                        "header": Object {
                                                          "formatters": Array [],
                                                          "label": "Last updated",
                                                          "transforms": Array [
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                          ],
                                                        },
                                                        "property": "last-updated",
                                                        "props": Object {
                                                          "data-key": 1,
                                                          "data-label": "Last updated",
                                                        },
                                                      },
                                                      Object {
                                                        "cell": Object {
                                                          "formatters": Array [
                                                            [Function],
                                                          ],
                                                          "transforms": Array [
                                                            [Function],
                                                          ],
                                                        },
                                                        "data": undefined,
                                                        "extraParams": Object {
                                                          "actionResolver": undefined,
                                                          "actions": undefined,
                                                          "allRowsSelected": false,
                                                          "areActionsDisabled": undefined,
                                                          "canSelectAll": true,
                                                          "contentId": "expanded-content",
                                                          "dropdownDirection": "down",
                                                          "dropdownPosition": "right",
                                                          "expandId": "expandable-toggle",
                                                          "firstUserColumnIndex": 0,
                                                          "onCollapse": undefined,
                                                          "onExpand": undefined,
                                                          "onSelect": undefined,
                                                          "onSort": undefined,
                                                          "rowLabeledBy": "simple-node",
                                                          "sortBy": undefined,
                                                        },
                                                        "header": Object {
                                                          "formatters": Array [],
                                                          "label": "",
                                                          "transforms": Array [
                                                            [Function],
                                                            [Function],
                                                          ],
                                                        },
                                                        "property": "column-2",
                                                        "props": Object {
                                                          "data-key": 2,
                                                          "data-label": "",
                                                        },
                                                      },
                                                    ]
                                                  }
                                                  headerRows={null}
                                                  renderers={
                                                    Object {
                                                      "body": Object {
                                                        "cell": [Function],
                                                        "row": [Function],
                                                        "wrapper": [Function],
                                                      },
                                                      "header": Object {
                                                        "cell": [Function],
                                                        "row": "tr",
                                                        "wrapper": "thead",
                                                      },
                                                      "table": "table",
                                                    }
                                                  }
                                                >
                                                  <thead
                                                    className=""
                                                  >
                                                    <HeaderRow
                                                      key="0-header-row"
                                                      renderers={
                                                        Object {
                                                          "cell": [Function],
                                                          "row": "tr",
                                                          "wrapper": "thead",
                                                        }
                                                      }
                                                      rowData={
                                                        Array [
                                                          Object {
                                                            "cell": Object {
                                                              "formatters": Array [
                                                                [Function],
                                                              ],
                                                              "transforms": Array [
                                                                [Function],
                                                              ],
                                                            },
                                                            "data": undefined,
                                                            "extraParams": Object {
                                                              "actionResolver": undefined,
                                                              "actions": undefined,
                                                              "allRowsSelected": false,
                                                              "areActionsDisabled": undefined,
                                                              "canSelectAll": true,
                                                              "contentId": "expanded-content",
                                                              "dropdownDirection": "down",
                                                              "dropdownPosition": "right",
                                                              "expandId": "expandable-toggle",
                                                              "firstUserColumnIndex": 0,
                                                              "onCollapse": undefined,
                                                              "onExpand": undefined,
                                                              "onSelect": undefined,
                                                              "onSort": undefined,
                                                              "rowLabeledBy": "simple-node",
                                                              "sortBy": undefined,
                                                            },
                                                            "header": Object {
                                                              "formatters": Array [],
                                                              "label": "Name",
                                                              "transforms": Array [
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                              ],
                                                            },
                                                            "property": "name",
                                                            "props": Object {
                                                              "data-key": 0,
                                                              "data-label": "Name",
                                                            },
                                                          },
                                                          Object {
                                                            "cell": Object {
                                                              "formatters": Array [
                                                                [Function],
                                                              ],
                                                              "transforms": Array [
                                                                [Function],
                                                              ],
                                                            },
                                                            "data": undefined,
                                                            "extraParams": Object {
                                                              "actionResolver": undefined,
                                                              "actions": undefined,
                                                              "allRowsSelected": false,
                                                              "areActionsDisabled": undefined,
                                                              "canSelectAll": true,
                                                              "contentId": "expanded-content",
                                                              "dropdownDirection": "down",
                                                              "dropdownPosition": "right",
                                                              "expandId": "expandable-toggle",
                                                              "firstUserColumnIndex": 0,
                                                              "onCollapse": undefined,
                                                              "onExpand": undefined,
                                                              "onSelect": undefined,
                                                              "onSort": undefined,
                                                              "rowLabeledBy": "simple-node",
                                                              "sortBy": undefined,
                                                            },
                                                            "header": Object {
                                                              "formatters": Array [],
                                                              "label": "Last updated",
                                                              "transforms": Array [
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                              ],
                                                            },
                                                            "property": "last-updated",
                                                            "props": Object {
                                                              "data-key": 1,
                                                              "data-label": "Last updated",
                                                            },
                                                          },
                                                          Object {
                                                            "cell": Object {
                                                              "formatters": Array [
                                                                [Function],
                                                              ],
                                                              "transforms": Array [
                                                                [Function],
                                                              ],
                                                            },
                                                            "data": undefined,
                                                            "extraParams": Object {
                                                              "actionResolver": undefined,
                                                              "actions": undefined,
                                                              "allRowsSelected": false,
                                                              "areActionsDisabled": undefined,
                                                              "canSelectAll": true,
                                                              "contentId": "expanded-content",
                                                              "dropdownDirection": "down",
                                                              "dropdownPosition": "right",
                                                              "expandId": "expandable-toggle",
                                                              "firstUserColumnIndex": 0,
                                                              "onCollapse": undefined,
                                                              "onExpand": undefined,
                                                              "onSelect": undefined,
                                                              "onSort": undefined,
                                                              "rowLabeledBy": "simple-node",
                                                              "sortBy": undefined,
                                                            },
                                                            "header": Object {
                                                              "formatters": Array [],
                                                              "label": "",
                                                              "transforms": Array [
                                                                [Function],
                                                                [Function],
                                                              ],
                                                            },
                                                            "property": "column-2",
                                                            "props": Object {
                                                              "data-key": 2,
                                                              "data-label": "",
                                                            },
                                                          },
                                                        ]
                                                      }
                                                      rowIndex={0}
                                                    >
                                                      <tr>
                                                        <HeaderCell
                                                          aria-sort="none"
                                                          className="pf-c-table__sort"
                                                          data-key={0}
                                                          data-label="Name"
                                                          key="0-header"
                                                          scope="col"
                                                        >
                                                          <th
                                                            aria-sort="none"
                                                            className="pf-c-table__sort"
                                                            data-key={0}
                                                            data-label="Name"
                                                            scope="col"
                                                          >
                                                            <SortColumn
                                                              className="pf-c-button pf-m-plain"
                                                              onSort={[Function]}
                                                              sortDirection=""
                                                            >
                                                              <button
                                                                className="pf-c-button pf-m-plain"
                                                                onClick={[Function]}
                                                              >
                                                                Name
                                                                <span
                                                                  className="pf-c-table__sort-indicator"
                                                                >
                                                                  <ArrowsAltVIcon
                                                                    color="currentColor"
                                                                    noVerticalAlign={false}
                                                                    size="sm"
                                                                    title={null}
                                                                  >
                                                                    <svg
                                                                      aria-hidden={true}
                                                                      aria-labelledby={null}
                                                                      fill="currentColor"
                                                                      height="1em"
                                                                      role="img"
                                                                      style={
                                                                        Object {
                                                                          "verticalAlign": "-0.125em",
                                                                        }
                                                                      }
                                                                      viewBox="0 0 256 512"
                                                                      width="1em"
                                                                    >
                                                                      <path
                                                                        d="M214.059 377.941H168V134.059h46.059c21.382 0 32.09-25.851 16.971-40.971L144.971 7.029c-9.373-9.373-24.568-9.373-33.941 0L24.971 93.088c-15.119 15.119-4.411 40.971 16.971 40.971H88v243.882H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.568 9.373 33.941 0l86.059-86.059c15.12-15.119 4.412-40.971-16.97-40.971z"
                                                                        transform=""
                                                                      />
                                                                    </svg>
                                                                  </ArrowsAltVIcon>
                                                                </span>
                                                              </button>
                                                            </SortColumn>
                                                          </th>
                                                        </HeaderCell>
                                                        <HeaderCell
                                                          aria-sort="none"
                                                          className="pf-c-table__sort"
                                                          data-key={1}
                                                          data-label="Last updated"
                                                          key="1-header"
                                                          scope="col"
                                                        >
                                                          <th
                                                            aria-sort="none"
                                                            className="pf-c-table__sort"
                                                            data-key={1}
                                                            data-label="Last updated"
                                                            scope="col"
                                                          >
                                                            <SortColumn
                                                              className="pf-c-button pf-m-plain"
                                                              onSort={[Function]}
                                                              sortDirection=""
                                                            >
                                                              <button
                                                                className="pf-c-button pf-m-plain"
                                                                onClick={[Function]}
                                                              >
                                                                Last updated
                                                                <span
                                                                  className="pf-c-table__sort-indicator"
                                                                >
                                                                  <ArrowsAltVIcon
                                                                    color="currentColor"
                                                                    noVerticalAlign={false}
                                                                    size="sm"
                                                                    title={null}
                                                                  >
                                                                    <svg
                                                                      aria-hidden={true}
                                                                      aria-labelledby={null}
                                                                      fill="currentColor"
                                                                      height="1em"
                                                                      role="img"
                                                                      style={
                                                                        Object {
                                                                          "verticalAlign": "-0.125em",
                                                                        }
                                                                      }
                                                                      viewBox="0 0 256 512"
                                                                      width="1em"
                                                                    >
                                                                      <path
                                                                        d="M214.059 377.941H168V134.059h46.059c21.382 0 32.09-25.851 16.971-40.971L144.971 7.029c-9.373-9.373-24.568-9.373-33.941 0L24.971 93.088c-15.119 15.119-4.411 40.971 16.971 40.971H88v243.882H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.568 9.373 33.941 0l86.059-86.059c15.12-15.119 4.412-40.971-16.97-40.971z"
                                                                        transform=""
                                                                      />
                                                                    </svg>
                                                                  </ArrowsAltVIcon>
                                                                </span>
                                                              </button>
                                                            </SortColumn>
                                                          </th>
                                                        </HeaderCell>
                                                        <HeaderCell
                                                          data-key={2}
                                                          data-label=""
                                                          key="2-header"
                                                          scope=""
                                                        >
                                                          <th
                                                            className=""
                                                            data-key={2}
                                                            data-label=""
                                                          />
                                                        </HeaderCell>
                                                      </tr>
                                                    </HeaderRow>
                                                  </thead>
                                                </BaseHeader>
                                              </Header>
                                            </ContextHeader>
                                          </TableHeader>
                                          <TableBody>
                                            <ContextBody
                                              className=""
                                              headerData={
                                                Array [
                                                  Object {
                                                    "cell": Object {
                                                      "formatters": Array [
                                                        [Function],
                                                      ],
                                                      "transforms": Array [
                                                        [Function],
                                                      ],
                                                    },
                                                    "data": undefined,
                                                    "extraParams": Object {
                                                      "actionResolver": undefined,
                                                      "actions": undefined,
                                                      "allRowsSelected": false,
                                                      "areActionsDisabled": undefined,
                                                      "canSelectAll": true,
                                                      "contentId": "expanded-content",
                                                      "dropdownDirection": "down",
                                                      "dropdownPosition": "right",
                                                      "expandId": "expandable-toggle",
                                                      "firstUserColumnIndex": 0,
                                                      "onCollapse": undefined,
                                                      "onExpand": undefined,
                                                      "onSelect": undefined,
                                                      "onSort": undefined,
                                                      "rowLabeledBy": "simple-node",
                                                      "sortBy": undefined,
                                                    },
                                                    "header": Object {
                                                      "formatters": Array [],
                                                      "label": "Name",
                                                      "transforms": Array [
                                                        [Function],
                                                        [Function],
                                                        [Function],
                                                      ],
                                                    },
                                                    "property": "name",
                                                    "props": Object {
                                                      "data-key": 0,
                                                      "data-label": "Name",
                                                    },
                                                  },
                                                  Object {
                                                    "cell": Object {
                                                      "formatters": Array [
                                                        [Function],
                                                      ],
                                                      "transforms": Array [
                                                        [Function],
                                                      ],
                                                    },
                                                    "data": undefined,
                                                    "extraParams": Object {
                                                      "actionResolver": undefined,
                                                      "actions": undefined,
                                                      "allRowsSelected": false,
                                                      "areActionsDisabled": undefined,
                                                      "canSelectAll": true,
                                                      "contentId": "expanded-content",
                                                      "dropdownDirection": "down",
                                                      "dropdownPosition": "right",
                                                      "expandId": "expandable-toggle",
                                                      "firstUserColumnIndex": 0,
                                                      "onCollapse": undefined,
                                                      "onExpand": undefined,
                                                      "onSelect": undefined,
                                                      "onSort": undefined,
                                                      "rowLabeledBy": "simple-node",
                                                      "sortBy": undefined,
                                                    },
                                                    "header": Object {
                                                      "formatters": Array [],
                                                      "label": "Last updated",
                                                      "transforms": Array [
                                                        [Function],
                                                        [Function],
                                                        [Function],
                                                      ],
                                                    },
                                                    "property": "last-updated",
                                                    "props": Object {
                                                      "data-key": 1,
                                                      "data-label": "Last updated",
                                                    },
                                                  },
                                                  Object {
                                                    "cell": Object {
                                                      "formatters": Array [
                                                        [Function],
                                                      ],
                                                      "transforms": Array [
                                                        [Function],
                                                      ],
                                                    },
                                                    "data": undefined,
                                                    "extraParams": Object {
                                                      "actionResolver": undefined,
                                                      "actions": undefined,
                                                      "allRowsSelected": false,
                                                      "areActionsDisabled": undefined,
                                                      "canSelectAll": true,
                                                      "contentId": "expanded-content",
                                                      "dropdownDirection": "down",
                                                      "dropdownPosition": "right",
                                                      "expandId": "expandable-toggle",
                                                      "firstUserColumnIndex": 0,
                                                      "onCollapse": undefined,
                                                      "onExpand": undefined,
                                                      "onSelect": undefined,
                                                      "onSort": undefined,
                                                      "rowLabeledBy": "simple-node",
                                                      "sortBy": undefined,
                                                    },
                                                    "header": Object {
                                                      "formatters": Array [],
                                                      "label": "",
                                                      "transforms": Array [
                                                        [Function],
                                                        [Function],
                                                      ],
                                                    },
                                                    "property": "column-2",
                                                    "props": Object {
                                                      "data-key": 2,
                                                      "data-label": "",
                                                    },
                                                  },
                                                ]
                                              }
                                              headerRows={null}
                                              onRow={[Function]}
                                              onRowClick={[Function]}
                                              rowKey="id"
                                              rows={
                                                Array [
                                                  Object {
                                                    "cells": Array [
                                                      Object {
                                                        "props": Object {
                                                          "colSpan": 3,
                                                        },
                                                        "title": <EmptyTable>
                                                          <EmptyStateDisplay
                                                            text={
                                                              Array [
                                                                "This filter criteria matches no baselines.",
                                                                "Try changing your filter settings.",
                                                              ]
                                                            }
                                                            title="No matching baselines found"
                                                          />
                                                        </EmptyTable>,
                                                      },
                                                    ],
                                                  },
                                                ]
                                              }
                                            >
                                              <Body
                                                className=""
                                                headerRows={null}
                                                mappedRows={
                                                  Array [
                                                    Object {
                                                      "cells": Array [
                                                        Object {
                                                          "props": Object {
                                                            "colSpan": 3,
                                                          },
                                                          "title": <EmptyTable>
                                                            <EmptyStateDisplay
                                                              text={
                                                                Array [
                                                                  "This filter criteria matches no baselines.",
                                                                  "Try changing your filter settings.",
                                                                ]
                                                              }
                                                              title="No matching baselines found"
                                                            />
                                                          </EmptyTable>,
                                                        },
                                                      ],
                                                      "id": 0,
                                                      "isExpanded": undefined,
                                                      "isFirst": true,
                                                      "isFirstVisible": true,
                                                      "isHeightAuto": false,
                                                      "isLast": true,
                                                      "isLastVisible": true,
                                                      "name": Object {
                                                        "props": Object {
                                                          "colSpan": 3,
                                                          "isVisible": true,
                                                        },
                                                        "title": <EmptyTable>
                                                          <EmptyStateDisplay
                                                            text={
                                                              Array [
                                                                "This filter criteria matches no baselines.",
                                                                "Try changing your filter settings.",
                                                              ]
                                                            }
                                                            title="No matching baselines found"
                                                          />
                                                        </EmptyTable>,
                                                      },
                                                    },
                                                  ]
                                                }
                                                onRow={[Function]}
                                                rowKey="id"
                                                rows={
                                                  Array [
                                                    Object {
                                                      "cells": Array [
                                                        Object {
                                                          "props": Object {
                                                            "colSpan": 3,
                                                          },
                                                          "title": <EmptyTable>
                                                            <EmptyStateDisplay
                                                              text={
                                                                Array [
                                                                  "This filter criteria matches no baselines.",
                                                                  "Try changing your filter settings.",
                                                                ]
                                                              }
                                                              title="No matching baselines found"
                                                            />
                                                          </EmptyTable>,
                                                        },
                                                      ],
                                                      "id": 0,
                                                      "isExpanded": undefined,
                                                      "isFirst": true,
                                                      "isFirstVisible": true,
                                                      "isHeightAuto": false,
                                                      "isLast": true,
                                                      "isLastVisible": true,
                                                      "name": Object {
                                                        "props": Object {
                                                          "colSpan": 3,
                                                          "isVisible": true,
                                                        },
                                                        "title": <EmptyTable>
                                                          <EmptyStateDisplay
                                                            text={
                                                              Array [
                                                                "This filter criteria matches no baselines.",
                                                                "Try changing your filter settings.",
                                                              ]
                                                            }
                                                            title="No matching baselines found"
                                                          />
                                                        </EmptyTable>,
                                                      },
                                                    },
                                                  ]
                                                }
                                              >
                                                <BaseBody
                                                  className=""
                                                  columns={
                                                    Array [
                                                      Object {
                                                        "cell": Object {
                                                          "formatters": Array [
                                                            [Function],
                                                          ],
                                                          "transforms": Array [
                                                            [Function],
                                                          ],
                                                        },
                                                        "data": undefined,
                                                        "extraParams": Object {
                                                          "actionResolver": undefined,
                                                          "actions": undefined,
                                                          "allRowsSelected": false,
                                                          "areActionsDisabled": undefined,
                                                          "canSelectAll": true,
                                                          "contentId": "expanded-content",
                                                          "dropdownDirection": "down",
                                                          "dropdownPosition": "right",
                                                          "expandId": "expandable-toggle",
                                                          "firstUserColumnIndex": 0,
                                                          "onCollapse": undefined,
                                                          "onExpand": undefined,
                                                          "onSelect": undefined,
                                                          "onSort": undefined,
                                                          "rowLabeledBy": "simple-node",
                                                          "sortBy": undefined,
                                                        },
                                                        "header": Object {
                                                          "formatters": Array [],
                                                          "label": "Name",
                                                          "transforms": Array [
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                          ],
                                                        },
                                                        "property": "name",
                                                        "props": Object {
                                                          "data-key": 0,
                                                          "data-label": "Name",
                                                        },
                                                      },
                                                      Object {
                                                        "cell": Object {
                                                          "formatters": Array [
                                                            [Function],
                                                          ],
                                                          "transforms": Array [
                                                            [Function],
                                                          ],
                                                        },
                                                        "data": undefined,
                                                        "extraParams": Object {
                                                          "actionResolver": undefined,
                                                          "actions": undefined,
                                                          "allRowsSelected": false,
                                                          "areActionsDisabled": undefined,
                                                          "canSelectAll": true,
                                                          "contentId": "expanded-content",
                                                          "dropdownDirection": "down",
                                                          "dropdownPosition": "right",
                                                          "expandId": "expandable-toggle",
                                                          "firstUserColumnIndex": 0,
                                                          "onCollapse": undefined,
                                                          "onExpand": undefined,
                                                          "onSelect": undefined,
                                                          "onSort": undefined,
                                                          "rowLabeledBy": "simple-node",
                                                          "sortBy": undefined,
                                                        },
                                                        "header": Object {
                                                          "formatters": Array [],
                                                          "label": "Last updated",
                                                          "transforms": Array [
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                          ],
                                                        },
                                                        "property": "last-updated",
                                                        "props": Object {
                                                          "data-key": 1,
                                                          "data-label": "Last updated",
                                                        },
                                                      },
                                                      Object {
                                                        "cell": Object {
                                                          "formatters": Array [
                                                            [Function],
                                                          ],
                                                          "transforms": Array [
                                                            [Function],
                                                          ],
                                                        },
                                                        "data": undefined,
                                                        "extraParams": Object {
                                                          "actionResolver": undefined,
                                                          "actions": undefined,
                                                          "allRowsSelected": false,
                                                          "areActionsDisabled": undefined,
                                                          "canSelectAll": true,
                                                          "contentId": "expanded-content",
                                                          "dropdownDirection": "down",
                                                          "dropdownPosition": "right",
                                                          "expandId": "expandable-toggle",
                                                          "firstUserColumnIndex": 0,
                                                          "onCollapse": undefined,
                                                          "onExpand": undefined,
                                                          "onSelect": undefined,
                                                          "onSort": undefined,
                                                          "rowLabeledBy": "simple-node",
                                                          "sortBy": undefined,
                                                        },
                                                        "header": Object {
                                                          "formatters": Array [],
                                                          "label": "",
                                                          "transforms": Array [
                                                            [Function],
                                                            [Function],
                                                          ],
                                                        },
                                                        "property": "column-2",
                                                        "props": Object {
                                                          "data-key": 2,
                                                          "data-label": "",
                                                        },
                                                      },
                                                    ]
                                                  }
                                                  headerRows={null}
                                                  mappedRows={
                                                    Array [
                                                      Object {
                                                        "cells": Array [
                                                          Object {
                                                            "props": Object {
                                                              "colSpan": 3,
                                                            },
                                                            "title": <EmptyTable>
                                                              <EmptyStateDisplay
                                                                text={
                                                                  Array [
                                                                    "This filter criteria matches no baselines.",
                                                                    "Try changing your filter settings.",
                                                                  ]
                                                                }
                                                                title="No matching baselines found"
                                                              />
                                                            </EmptyTable>,
                                                          },
                                                        ],
                                                        "id": 0,
                                                        "isExpanded": undefined,
                                                        "isFirst": true,
                                                        "isFirstVisible": true,
                                                        "isHeightAuto": false,
                                                        "isLast": true,
                                                        "isLastVisible": true,
                                                        "name": Object {
                                                          "props": Object {
                                                            "colSpan": 3,
                                                            "isVisible": true,
                                                          },
                                                          "title": <EmptyTable>
                                                            <EmptyStateDisplay
                                                              text={
                                                                Array [
                                                                  "This filter criteria matches no baselines.",
                                                                  "Try changing your filter settings.",
                                                                ]
                                                              }
                                                              title="No matching baselines found"
                                                            />
                                                          </EmptyTable>,
                                                        },
                                                      },
                                                    ]
                                                  }
                                                  onRow={[Function]}
                                                  renderers={
                                                    Object {
                                                      "body": Object {
                                                        "cell": [Function],
                                                        "row": [Function],
                                                        "wrapper": [Function],
                                                      },
                                                      "header": Object {
                                                        "cell": [Function],
                                                        "row": "tr",
                                                        "wrapper": "thead",
                                                      },
                                                      "table": "table",
                                                    }
                                                  }
                                                  rowKey="id"
                                                  rows={
                                                    Array [
                                                      Object {
                                                        "cells": Array [
                                                          Object {
                                                            "props": Object {
                                                              "colSpan": 3,
                                                            },
                                                            "title": <EmptyTable>
                                                              <EmptyStateDisplay
                                                                text={
                                                                  Array [
                                                                    "This filter criteria matches no baselines.",
                                                                    "Try changing your filter settings.",
                                                                  ]
                                                                }
                                                                title="No matching baselines found"
                                                              />
                                                            </EmptyTable>,
                                                          },
                                                        ],
                                                        "id": 0,
                                                        "isExpanded": undefined,
                                                        "isFirst": true,
                                                        "isFirstVisible": true,
                                                        "isHeightAuto": false,
                                                        "isLast": true,
                                                        "isLastVisible": true,
                                                        "name": Object {
                                                          "props": Object {
                                                            "colSpan": 3,
                                                            "isVisible": true,
                                                          },
                                                          "title": <EmptyTable>
                                                            <EmptyStateDisplay
                                                              text={
                                                                Array [
                                                                  "This filter criteria matches no baselines.",
                                                                  "Try changing your filter settings.",
                                                                ]
                                                              }
                                                              title="No matching baselines found"
                                                            />
                                                          </EmptyTable>,
                                                        },
                                                      },
                                                    ]
                                                  }
                                                >
                                                  <BodyWrapper
                                                    className=""
                                                    headerRows={null}
                                                    mappedRows={
                                                      Array [
                                                        Object {
                                                          "cells": Array [
                                                            Object {
                                                              "props": Object {
                                                                "colSpan": 3,
                                                              },
                                                              "title": <EmptyTable>
                                                                <EmptyStateDisplay
                                                                  text={
                                                                    Array [
                                                                      "This filter criteria matches no baselines.",
                                                                      "Try changing your filter settings.",
                                                                    ]
                                                                  }
                                                                  title="No matching baselines found"
                                                                />
                                                              </EmptyTable>,
                                                            },
                                                          ],
                                                          "id": 0,
                                                          "isExpanded": undefined,
                                                          "isFirst": true,
                                                          "isFirstVisible": true,
                                                          "isHeightAuto": false,
                                                          "isLast": true,
                                                          "isLastVisible": true,
                                                          "name": Object {
                                                            "props": Object {
                                                              "colSpan": 3,
                                                              "isVisible": true,
                                                            },
                                                            "title": <EmptyTable>
                                                              <EmptyStateDisplay
                                                                text={
                                                                  Array [
                                                                    "This filter criteria matches no baselines.",
                                                                    "Try changing your filter settings.",
                                                                  ]
                                                                }
                                                                title="No matching baselines found"
                                                              />
                                                            </EmptyTable>,
                                                          },
                                                        },
                                                      ]
                                                    }
                                                  >
                                                    <tbody
                                                      className=""
                                                    >
                                                      <BodyRow
                                                        columns={
                                                          Array [
                                                            Object {
                                                              "cell": Object {
                                                                "formatters": Array [
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "data": undefined,
                                                              "extraParams": Object {
                                                                "actionResolver": undefined,
                                                                "actions": undefined,
                                                                "allRowsSelected": false,
                                                                "areActionsDisabled": undefined,
                                                                "canSelectAll": true,
                                                                "contentId": "expanded-content",
                                                                "dropdownDirection": "down",
                                                                "dropdownPosition": "right",
                                                                "expandId": "expandable-toggle",
                                                                "firstUserColumnIndex": 0,
                                                                "onCollapse": undefined,
                                                                "onExpand": undefined,
                                                                "onSelect": undefined,
                                                                "onSort": undefined,
                                                                "rowLabeledBy": "simple-node",
                                                                "sortBy": undefined,
                                                              },
                                                              "header": Object {
                                                                "formatters": Array [],
                                                                "label": "Name",
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "property": "name",
                                                              "props": Object {
                                                                "data-key": 0,
                                                                "data-label": "Name",
                                                              },
                                                            },
                                                            Object {
                                                              "cell": Object {
                                                                "formatters": Array [
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "data": undefined,
                                                              "extraParams": Object {
                                                                "actionResolver": undefined,
                                                                "actions": undefined,
                                                                "allRowsSelected": false,
                                                                "areActionsDisabled": undefined,
                                                                "canSelectAll": true,
                                                                "contentId": "expanded-content",
                                                                "dropdownDirection": "down",
                                                                "dropdownPosition": "right",
                                                                "expandId": "expandable-toggle",
                                                                "firstUserColumnIndex": 0,
                                                                "onCollapse": undefined,
                                                                "onExpand": undefined,
                                                                "onSelect": undefined,
                                                                "onSort": undefined,
                                                                "rowLabeledBy": "simple-node",
                                                                "sortBy": undefined,
                                                              },
                                                              "header": Object {
                                                                "formatters": Array [],
                                                                "label": "Last updated",
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "property": "last-updated",
                                                              "props": Object {
                                                                "data-key": 1,
                                                                "data-label": "Last updated",
                                                              },
                                                            },
                                                            Object {
                                                              "cell": Object {
                                                                "formatters": Array [
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "data": undefined,
                                                              "extraParams": Object {
                                                                "actionResolver": undefined,
                                                                "actions": undefined,
                                                                "allRowsSelected": false,
                                                                "areActionsDisabled": undefined,
                                                                "canSelectAll": true,
                                                                "contentId": "expanded-content",
                                                                "dropdownDirection": "down",
                                                                "dropdownPosition": "right",
                                                                "expandId": "expandable-toggle",
                                                                "firstUserColumnIndex": 0,
                                                                "onCollapse": undefined,
                                                                "onExpand": undefined,
                                                                "onSelect": undefined,
                                                                "onSort": undefined,
                                                                "rowLabeledBy": "simple-node",
                                                                "sortBy": undefined,
                                                              },
                                                              "header": Object {
                                                                "formatters": Array [],
                                                                "label": "",
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "property": "column-2",
                                                              "props": Object {
                                                                "data-key": 2,
                                                                "data-label": "",
                                                              },
                                                            },
                                                          ]
                                                        }
                                                        key="0-row"
                                                        onRow={[Function]}
                                                        renderers={
                                                          Object {
                                                            "cell": [Function],
                                                            "row": [Function],
                                                            "wrapper": [Function],
                                                          }
                                                        }
                                                        rowData={
                                                          Object {
                                                            "cells": Array [
                                                              Object {
                                                                "props": Object {
                                                                  "colSpan": 3,
                                                                },
                                                                "title": <EmptyTable>
                                                                  <EmptyStateDisplay
                                                                    text={
                                                                      Array [
                                                                        "This filter criteria matches no baselines.",
                                                                        "Try changing your filter settings.",
                                                                      ]
                                                                    }
                                                                    title="No matching baselines found"
                                                                  />
                                                                </EmptyTable>,
                                                              },
                                                            ],
                                                            "id": 0,
                                                            "isExpanded": undefined,
                                                            "isFirst": true,
                                                            "isFirstVisible": true,
                                                            "isHeightAuto": false,
                                                            "isLast": true,
                                                            "isLastVisible": true,
                                                            "name": Object {
                                                              "props": Object {
                                                                "colSpan": 3,
                                                                "isVisible": true,
                                                              },
                                                              "title": <EmptyTable>
                                                                <EmptyStateDisplay
                                                                  text={
                                                                    Array [
                                                                      "This filter criteria matches no baselines.",
                                                                      "Try changing your filter settings.",
                                                                    ]
                                                                  }
                                                                  title="No matching baselines found"
                                                                />
                                                              </EmptyTable>,
                                                            },
                                                          }
                                                        }
                                                        rowIndex={0}
                                                        rowKey="0-row"
                                                      >
                                                        <Component
                                                          onMouseDown={[Function]}
                                                          row={
                                                            Object {
                                                              "cells": Array [
                                                                Object {
                                                                  "props": Object {
                                                                    "colSpan": 3,
                                                                  },
                                                                  "title": <EmptyTable>
                                                                    <EmptyStateDisplay
                                                                      text={
                                                                        Array [
                                                                          "This filter criteria matches no baselines.",
                                                                          "Try changing your filter settings.",
                                                                        ]
                                                                      }
                                                                      title="No matching baselines found"
                                                                    />
                                                                  </EmptyTable>,
                                                                },
                                                              ],
                                                              "id": 0,
                                                              "isExpanded": undefined,
                                                              "isFirst": true,
                                                              "isFirstVisible": true,
                                                              "isHeightAuto": false,
                                                              "isLast": true,
                                                              "isLastVisible": true,
                                                              "name": Object {
                                                                "props": Object {
                                                                  "colSpan": 3,
                                                                  "isVisible": true,
                                                                },
                                                                "title": <EmptyTable>
                                                                  <EmptyStateDisplay
                                                                    text={
                                                                      Array [
                                                                        "This filter criteria matches no baselines.",
                                                                        "Try changing your filter settings.",
                                                                      ]
                                                                    }
                                                                    title="No matching baselines found"
                                                                  />
                                                                </EmptyTable>,
                                                              },
                                                            }
                                                          }
                                                          rowProps={
                                                            Object {
                                                              "rowIndex": 0,
                                                              "rowKey": "0-row",
                                                            }
                                                          }
                                                        >
                                                          <ComponentWithOuia
                                                            component={[Function]}
                                                            componentProps={
                                                              Object {
                                                                "children": Array [
                                                                  <BodyCell
                                                                    colSpan={3}
                                                                    data-key={0}
                                                                    data-label="Name"
                                                                    isVisible={true}
                                                                  >
                                                                    <EmptyTable>
                                                                      <EmptyStateDisplay
                                                                        text={
                                                                          Array [
                                                                            "This filter criteria matches no baselines.",
                                                                            "Try changing your filter settings.",
                                                                          ]
                                                                        }
                                                                        title="No matching baselines found"
                                                                      />
                                                                    </EmptyTable>
                                                                  </BodyCell>,
                                                                  <BodyCell
                                                                    data-key={1}
                                                                    data-label="Last updated"
                                                                  />,
                                                                  <BodyCell
                                                                    data-key={2}
                                                                    data-label=""
                                                                  />,
                                                                ],
                                                                "onMouseDown": [Function],
                                                                "row": Object {
                                                                  "cells": Array [
                                                                    Object {
                                                                      "props": Object {
                                                                        "colSpan": 3,
                                                                      },
                                                                      "title": <EmptyTable>
                                                                        <EmptyStateDisplay
                                                                          text={
                                                                            Array [
                                                                              "This filter criteria matches no baselines.",
                                                                              "Try changing your filter settings.",
                                                                            ]
                                                                          }
                                                                          title="No matching baselines found"
                                                                        />
                                                                      </EmptyTable>,
                                                                    },
                                                                  ],
                                                                  "id": 0,
                                                                  "isExpanded": undefined,
                                                                  "isFirst": true,
                                                                  "isFirstVisible": true,
                                                                  "isHeightAuto": false,
                                                                  "isLast": true,
                                                                  "isLastVisible": true,
                                                                  "name": Object {
                                                                    "props": Object {
                                                                      "colSpan": 3,
                                                                      "isVisible": true,
                                                                    },
                                                                    "title": <EmptyTable>
                                                                      <EmptyStateDisplay
                                                                        text={
                                                                          Array [
                                                                            "This filter criteria matches no baselines.",
                                                                            "Try changing your filter settings.",
                                                                          ]
                                                                        }
                                                                        title="No matching baselines found"
                                                                      />
                                                                    </EmptyTable>,
                                                                  },
                                                                },
                                                                "rowProps": Object {
                                                                  "rowIndex": 0,
                                                                  "rowKey": "0-row",
                                                                },
                                                              }
                                                            }
                                                            consumerContext={
                                                              Object {
                                                                "isOuia": false,
                                                                "ouiaId": null,
                                                              }
                                                            }
                                                          >
                                                            <RowWrapper
                                                              className=""
                                                              onMouseDown={[Function]}
                                                              ouiaContext={
                                                                Object {
                                                                  "isOuia": false,
                                                                  "ouiaId": null,
                                                                }
                                                              }
                                                              row={
                                                                Object {
                                                                  "cells": Array [
                                                                    Object {
                                                                      "props": Object {
                                                                        "colSpan": 3,
                                                                      },
                                                                      "title": <EmptyTable>
                                                                        <EmptyStateDisplay
                                                                          text={
                                                                            Array [
                                                                              "This filter criteria matches no baselines.",
                                                                              "Try changing your filter settings.",
                                                                            ]
                                                                          }
                                                                          title="No matching baselines found"
                                                                        />
                                                                      </EmptyTable>,
                                                                    },
                                                                  ],
                                                                  "id": 0,
                                                                  "isExpanded": undefined,
                                                                  "isFirst": true,
                                                                  "isFirstVisible": true,
                                                                  "isHeightAuto": false,
                                                                  "isLast": true,
                                                                  "isLastVisible": true,
                                                                  "name": Object {
                                                                    "props": Object {
                                                                      "colSpan": 3,
                                                                      "isVisible": true,
                                                                    },
                                                                    "title": <EmptyTable>
                                                                      <EmptyStateDisplay
                                                                        text={
                                                                          Array [
                                                                            "This filter criteria matches no baselines.",
                                                                            "Try changing your filter settings.",
                                                                          ]
                                                                        }
                                                                        title="No matching baselines found"
                                                                      />
                                                                    </EmptyTable>,
                                                                  },
                                                                }
                                                              }
                                                              rowProps={
                                                                Object {
                                                                  "rowIndex": 0,
                                                                  "rowKey": "0-row",
                                                                }
                                                              }
                                                            >
                                                              <tr
                                                                className=""
                                                                hidden={false}
                                                                onMouseDown={[Function]}
                                                              >
                                                                <BodyCell
                                                                  colSpan={3}
                                                                  data-key={0}
                                                                  data-label="Name"
                                                                  isVisible={true}
                                                                  key="0-cell"
                                                                >
                                                                  <td
                                                                    className=""
                                                                    colSpan={3}
                                                                    data-key={0}
                                                                    data-label="Name"
                                                                  >
                                                                    <EmptyTable>
                                                                      <div
                                                                        className="ins-c-table__empty"
                                                                      >
                                                                         
                                                                        <EmptyStateDisplay
                                                                          text={
                                                                            Array [
                                                                              "This filter criteria matches no baselines.",
                                                                              "Try changing your filter settings.",
                                                                            ]
                                                                          }
                                                                          title="No matching baselines found"
                                                                        >
                                                                          <Bullseye>
                                                                            <div
                                                                              className="pf-l-bullseye"
                                                                            >
                                                                              <EmptyState>
                                                                                <div
                                                                                  className="pf-c-empty-state pf-m-lg"
                                                                                >
                                                                                  <br />
                                                                                  <Title
                                                                                    size="lg"
                                                                                  >
                                                                                    <h1
                                                                                      className="pf-c-title pf-m-lg"
                                                                                    >
                                                                                      No matching baselines found
                                                                                    </h1>
                                                                                  </Title>
                                                                                  <EmptyStateBody>
                                                                                    <div
                                                                                      className="pf-c-empty-state__body"
                                                                                    >
                                                                                      This filter criteria matches no baselines.
Try changing your filter settings.
                                                                                    </div>
                                                                                  </EmptyStateBody>
                                                                                </div>
                                                                              </EmptyState>
                                                                            </div>
                                                                          </Bullseye>
                                                                        </EmptyStateDisplay>
                                                                      </div>
                                                                    </EmptyTable>
                                                                  </td>
                                                                </BodyCell>
                                                                <BodyCell
                                                                  data-key={1}
                                                                  data-label="Last updated"
                                                                  key="1-cell"
                                                                />
                                                                <BodyCell
                                                                  data-key={2}
                                                                  data-label=""
                                                                  key="2-cell"
                                                                />
                                                              </tr>
                                                            </RowWrapper>
                                                          </ComponentWithOuia>
                                                        </Component>
                                                      </BodyRow>
                                                    </tbody>
                                                  </BodyWrapper>
                                                </BaseBody>
                                              </Body>
                                            </ContextBody>
                                          </TableBody>
                                        </table>
                                      </Provider>
                                    </Table>
                                  </ComponentWithOuia>
                                </Component>
                              </BaselinesTable>
                            </Connect(BaselinesTable)>
                          </div>
                        </div>
                      </CardBody>
                    </article>
                  </Card>
                </section>
              </Main>
            </Connect(Main)>
          </BaselinesPage>
        </Connect(BaselinesPage)>
      </withRouter(Connect(BaselinesPage))>
    </Provider>
  </Router>
</MemoryRouter>
`;

exports[`ConnectedBaselinesPage should render empty state 1`] = `
<MemoryRouter
  keyLength={0}
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <withRouter(Connect(BaselinesPage))>
        <Connect(BaselinesPage)
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "canGo": [Function],
              "createHref": [Function],
              "entries": Array [
                Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              ],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "index": 0,
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
          location={
            Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            }
          }
          match={
            Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            }
          }
        >
          <BaselinesPage
            baselineError={Object {}}
            baselineTableData={Array []}
            clearEditBaselineData={[Function]}
            createBaselineModalOpened={false}
            emptyState={true}
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            loading={false}
            location={
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              }
            }
            match={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
            revertBaselineFetch={[Function]}
            selectBaseline={[Function]}
          >
            <withRouter(Connect(CreateBaselineModal))>
              <Connect(CreateBaselineModal)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                location={
                  Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  }
                }
                match={
                  Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  }
                }
              >
                <CreateBaselineModal
                  clearSelectedBaselines={[Function]}
                  createBaseline={[Function]}
                  createBaselineModalOpened={false}
                  emptyState={false}
                  error={Object {}}
                  history={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "canGo": [Function],
                      "createHref": [Function],
                      "entries": Array [
                        Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                      ],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "index": 0,
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                  loading={false}
                  location={
                    Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    }
                  }
                  match={
                    Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    }
                  }
                  selectBaseline={[Function]}
                  selectedBaselineIds={Array []}
                  toggleCreateBaselineModal={[Function]}
                >
                  <Modal
                    actions={
                      Array [
                        <Unknown
                          isDisabled={true}
                          variant="primary"
                        >
                          Create baseline
                        </Unknown>,
                        <Unknown
                          onClick={[Function]}
                          variant="secondary"
                        >
                          Cancel
                        </Unknown>,
                      ]
                    }
                    appendTo={
                      <body>
                        <div />
                        <div />
                      </body>
                    }
                    ariaDescribedById=""
                    className="create-baseline-modal"
                    hideTitle={false}
                    isFooterLeftAligned={true}
                    isLarge={false}
                    isOpen={false}
                    isSmall={false}
                    onClose={[Function]}
                    showClose={true}
                    title="Create baseline"
                    width="auto"
                  >
                    <Portal
                      containerInfo={<div />}
                    >
                      <ModalContent
                        actions={
                          Array [
                            <Unknown
                              isDisabled={true}
                              variant="primary"
                            >
                              Create baseline
                            </Unknown>,
                            <Unknown
                              onClick={[Function]}
                              variant="secondary"
                            >
                              Cancel
                            </Unknown>,
                          ]
                        }
                        ariaDescribedById=""
                        className="create-baseline-modal"
                        hideTitle={false}
                        id="pf-modal-1"
                        isFooterLeftAligned={true}
                        isLarge={false}
                        isOpen={false}
                        isSmall={false}
                        onClose={[Function]}
                        showClose={true}
                        title="Create baseline"
                        width="auto"
                      />
                    </Portal>
                  </Modal>
                </CreateBaselineModal>
              </Connect(CreateBaselineModal)>
            </withRouter(Connect(CreateBaselineModal))>
            <PageHeader>
              <section
                className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                widget-type="InsightsPageHeader"
              >
                <PageHeaderTitle
                  title="Baselines"
                >
                  <Title
                    className=""
                    size="2xl"
                    widget-type="InsightsPageHeaderTitle"
                  >
                    <h1
                      className="pf-c-title pf-m-2xl"
                      widget-type="InsightsPageHeaderTitle"
                    >
                       
                      Baselines
                       
                    </h1>
                  </Title>
                </PageHeaderTitle>
              </section>
            </PageHeader>
            <Connect(Main)>
              <Main>
                <section
                  className="pf-l-page__main-section pf-c-page__main-section"
                  page-type=""
                >
                  <Card
                    className="pf-t-light pf-m-opaque-100"
                  >
                    <article
                      className="pf-c-card pf-t-light pf-m-opaque-100"
                    >
                      <EmptyStateDisplay
                        button={<withRouter(Connect(CreateBaselineButton)) />}
                        icon={[Function]}
                        text={
                          Array [
                            "You currently have no baselines displayed.",
                            "Create a baseline to use in your Comparison analysis.",
                          ]
                        }
                        title="No baselines"
                      >
                        <Bullseye>
                          <div
                            className="pf-l-bullseye"
                          >
                            <EmptyState>
                              <div
                                className="pf-c-empty-state pf-m-lg"
                              >
                                <EmptyStateIcon
                                  color={null}
                                  icon={[Function]}
                                >
                                  <AddCircleOIcon
                                    aria-hidden="true"
                                    className="pf-c-empty-state__icon"
                                    color={null}
                                    noVerticalAlign={false}
                                    size="sm"
                                    title={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      aria-labelledby={null}
                                      className="pf-c-empty-state__icon"
                                      fill={null}
                                      height="1em"
                                      role="img"
                                      style={
                                        Object {
                                          "verticalAlign": "-0.125em",
                                        }
                                      }
                                      viewBox="0 64 1024 1024"
                                      width="1em"
                                    >
                                      <path
                                        d="M512.059-73.143c-282.338 0-512.059 229.673-512.059 512.025 0 282.238 229.721 511.975 512.059 511.975 282.283 0 511.941-229.735 511.941-511.975 0.005-282.352-229.659-512.025-511.941-512.025zM512.059 826.523c-213.826 0-387.728-173.856-387.728-387.643 0-213.888 173.904-387.691 387.728-387.691 213.717 0 387.671 173.803 387.671 387.691 0.005 213.785-173.957 387.643-387.671 387.643zM726.283 506.777c-3.429 3.477-7.803 5.223-13.138 5.223h-128.005v128.007c0 5.333-1.739 9.71-5.218 13.138s-7.936 5.141-13.351 5.141h-109.143c-5.417 0-9.863-1.714-13.351-5.141-3.481-3.429-5.221-7.808-5.221-13.141v-128.005l-128.007-0.002c-5.333 0-9.71-1.737-13.138-5.218-3.426-3.477-5.141-7.934-5.141-13.351v-109.143c0-5.417 1.714-9.856 5.141-13.351 3.429-3.481 7.808-5.221 13.141-5.221l128.005 0.002v-128.009c0-5.335 1.744-9.707 5.225-13.134 3.477-3.429 7.927-5.145 13.344-5.145h109.143c5.417 0 9.858 1.717 13.351 5.145 3.477 3.429 5.223 7.803 5.223 13.138v128.002h128.007c5.335 0 9.707 1.742 13.134 5.225 3.429 3.477 5.145 7.927 5.145 13.344v109.143c0 5.417-1.717 9.863-5.145 13.351z"
                                        transform="rotate(180 0 512) scale(-1 1)"
                                      />
                                    </svg>
                                  </AddCircleOIcon>
                                </EmptyStateIcon>
                                <br />
                                <Title
                                  size="lg"
                                >
                                  <h1
                                    className="pf-c-title pf-m-lg"
                                  >
                                    No baselines
                                  </h1>
                                </Title>
                                <EmptyStateBody>
                                  <div
                                    className="pf-c-empty-state__body"
                                  >
                                    You currently have no baselines displayed.
Create a baseline to use in your Comparison analysis.
                                  </div>
                                </EmptyStateBody>
                                <withRouter(Connect(CreateBaselineButton))>
                                  <Connect(CreateBaselineButton)
                                    history={
                                      Object {
                                        "action": "POP",
                                        "block": [Function],
                                        "canGo": [Function],
                                        "createHref": [Function],
                                        "entries": Array [
                                          Object {
                                            "hash": "",
                                            "pathname": "/",
                                            "search": "",
                                            "state": undefined,
                                          },
                                        ],
                                        "go": [Function],
                                        "goBack": [Function],
                                        "goForward": [Function],
                                        "index": 0,
                                        "length": 1,
                                        "listen": [Function],
                                        "location": Object {
                                          "hash": "",
                                          "pathname": "/",
                                          "search": "",
                                          "state": undefined,
                                        },
                                        "push": [Function],
                                        "replace": [Function],
                                      }
                                    }
                                    location={
                                      Object {
                                        "hash": "",
                                        "pathname": "/",
                                        "search": "",
                                        "state": undefined,
                                      }
                                    }
                                    match={
                                      Object {
                                        "isExact": true,
                                        "params": Object {},
                                        "path": "/",
                                        "url": "/",
                                      }
                                    }
                                  >
                                    <CreateBaselineButton
                                      addSystemModalOpened={false}
                                      history={
                                        Object {
                                          "action": "POP",
                                          "block": [Function],
                                          "canGo": [Function],
                                          "createHref": [Function],
                                          "entries": Array [
                                            Object {
                                              "hash": "",
                                              "pathname": "/",
                                              "search": "",
                                              "state": undefined,
                                            },
                                          ],
                                          "go": [Function],
                                          "goBack": [Function],
                                          "goForward": [Function],
                                          "index": 0,
                                          "length": 1,
                                          "listen": [Function],
                                          "location": Object {
                                            "hash": "",
                                            "pathname": "/",
                                            "search": "",
                                            "state": undefined,
                                          },
                                          "push": [Function],
                                          "replace": [Function],
                                        }
                                      }
                                      location={
                                        Object {
                                          "hash": "",
                                          "pathname": "/",
                                          "search": "",
                                          "state": undefined,
                                        }
                                      }
                                      match={
                                        Object {
                                          "isExact": true,
                                          "params": Object {},
                                          "path": "/",
                                          "url": "/",
                                        }
                                      }
                                      toggleAddSystemModal={[Function]}
                                      toggleCreateBaselineModal={[Function]}
                                    >
                                      <Component
                                        id="create-baseline-button"
                                        onClick={[Function]}
                                        variant="primary"
                                      >
                                        <ComponentWithOuia
                                          component={[Function]}
                                          componentProps={
                                            Object {
                                              "children": "Create baseline",
                                              "id": "create-baseline-button",
                                              "onClick": [Function],
                                              "variant": "primary",
                                            }
                                          }
                                          consumerContext={null}
                                        >
                                          <Button
                                            id="create-baseline-button"
                                            onClick={[Function]}
                                            ouiaContext={
                                              Object {
                                                "isOuia": false,
                                                "ouiaId": null,
                                              }
                                            }
                                            variant="primary"
                                          >
                                            <button
                                              aria-disabled={null}
                                              aria-label={null}
                                              className="pf-c-button pf-m-primary"
                                              disabled={false}
                                              id="create-baseline-button"
                                              onClick={[Function]}
                                              tabIndex={null}
                                              type="button"
                                            >
                                              Create baseline
                                            </button>
                                          </Button>
                                        </ComponentWithOuia>
                                      </Component>
                                    </CreateBaselineButton>
                                  </Connect(CreateBaselineButton)>
                                </withRouter(Connect(CreateBaselineButton))>
                              </div>
                            </EmptyState>
                          </div>
                        </Bullseye>
                      </EmptyStateDisplay>
                    </article>
                  </Card>
                </section>
              </Main>
            </Connect(Main)>
          </BaselinesPage>
        </Connect(BaselinesPage)>
      </withRouter(Connect(BaselinesPage))>
    </Provider>
  </Router>
</MemoryRouter>
`;
