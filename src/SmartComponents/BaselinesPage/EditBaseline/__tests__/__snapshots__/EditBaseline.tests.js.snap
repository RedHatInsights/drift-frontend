// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ConnectedEditBaseline should render correctly 1`] = `
<MemoryRouter
  keyLength={0}
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <withRouter(Connect(EditBaseline))>
        <Connect(EditBaseline)
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "canGo": [Function],
              "createHref": [Function],
              "entries": Array [
                Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              ],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "index": 0,
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
          location={
            Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            }
          }
          match={
            Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            }
          }
        >
          <EditBaseline
            baselineData={Array []}
            baselineDataLoading={false}
            clearBaselineData={[Function]}
            clearErrorData={[Function]}
            editBaselineEmptyState={false}
            editBaselineError={Object {}}
            editBaselineTableData={Array []}
            expandRow={[Function]}
            expandedRows={Array []}
            factModalOpened={false}
            fetchBaselineData={[Function]}
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            inlineError={Object {}}
            location={
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              }
            }
            match={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
            selectFact={[Function]}
          >
            <Connect(EditBaselineNameModal)
              baselineData={Array []}
              error={Object {}}
              modalOpened={false}
              toggleEditNameModal={[Function]}
            >
              <EditBaselineNameModal
                baselineData={Array []}
                error={Object {}}
                modalOpened={false}
                patchBaseline={[Function]}
                toggleEditNameModal={[Function]}
              >
                <Modal
                  actions={
                    Array [
                      <Button
                        onClick={[Function]}
                        variant="primary"
                      >
                        Save
                      </Button>,
                      <Button
                        onClick={[Function]}
                        variant="link"
                      >
                        Cancel
                      </Button>,
                    ]
                  }
                  appendTo={
                    <body>
                      <div />
                    </body>
                  }
                  aria-describedby=""
                  aria-label=""
                  aria-labelledby=""
                  className=""
                  hasNoBodyWrapper={false}
                  isOpen={false}
                  onClose={[Function]}
                  ouiaSafe={true}
                  showClose={true}
                  title="Edit name"
                  variant="small"
                >
                  <Portal
                    containerInfo={<div />}
                  >
                    <ModalContent
                      actions={
                        Array [
                          <Button
                            onClick={[Function]}
                            variant="primary"
                          >
                            Save
                          </Button>,
                          <Button
                            onClick={[Function]}
                            variant="link"
                          >
                            Cancel
                          </Button>,
                        ]
                      }
                      aria-describedby=""
                      aria-label=""
                      aria-labelledby=""
                      boxId="pf-modal-part-0"
                      className=""
                      descriptorId="pf-modal-part-2"
                      hasNoBodyWrapper={false}
                      isOpen={false}
                      labelId="pf-modal-part-1"
                      onClose={[Function]}
                      ouiaSafe={true}
                      showClose={true}
                      title="Edit name"
                      variant="small"
                    />
                  </Portal>
                </Modal>
              </EditBaselineNameModal>
            </Connect(EditBaselineNameModal)>
            <PageHeader>
              <section
                className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                widget-type="InsightsPageHeader"
              >
                <Breadcrumb>
                  <nav
                    aria-label="Breadcrumb"
                    className="pf-c-breadcrumb"
                    data-ouia-component-id={0}
                    data-ouia-component-type="PF4/Breadcrumb"
                    data-ouia-safe={true}
                  >
                    <ol
                      className="pf-c-breadcrumb__list"
                    >
                      <BreadcrumbItem
                        key=".0"
                        showDivider={false}
                      >
                        <li
                          className="pf-c-breadcrumb__item"
                        >
                          <a
                            onClick={[Function]}
                          >
                            Baselines
                          </a>
                        </li>
                      </BreadcrumbItem>
                      <BreadcrumbHeading
                        key=".1"
                        showDivider={true}
                      >
                        <li
                          className="pf-c-breadcrumb__item"
                        >
                          <h1
                            className="pf-c-breadcrumb__heading"
                          >
                            <span
                              className="pf-c-breadcrumb__item-divider"
                            >
                              <AngleRightIcon
                                color="currentColor"
                                noVerticalAlign={false}
                                size="sm"
                              >
                                <svg
                                  aria-hidden={true}
                                  aria-labelledby={null}
                                  fill="currentColor"
                                  height="1em"
                                  role="img"
                                  style={
                                    Object {
                                      "verticalAlign": "-0.125em",
                                    }
                                  }
                                  viewBox="0 0 256 512"
                                  width="1em"
                                >
                                  <path
                                    d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                    transform=""
                                  />
                                </svg>
                              </AngleRightIcon>
                            </span>
                          </h1>
                        </li>
                      </BreadcrumbHeading>
                    </ol>
                  </nav>
                </Breadcrumb>
                <PageHeaderTitle
                  title={null}
                >
                  <Title
                    className=""
                    headingLevel="h1"
                    size="2xl"
                    widget-type="InsightsPageHeaderTitle"
                  >
                    <h1
                      className="pf-c-title pf-m-2xl"
                      widget-type="InsightsPageHeaderTitle"
                    >
                       
                       
                    </h1>
                  </Title>
                </PageHeaderTitle>
                <EditAltIcon
                  className="pointer not-active edit-icon-margin"
                  color="currentColor"
                  noVerticalAlign={false}
                  onClick={[Function]}
                  size="sm"
                >
                  <svg
                    aria-hidden={true}
                    aria-labelledby={null}
                    className="pointer not-active edit-icon-margin"
                    fill="currentColor"
                    height="1em"
                    onClick={[Function]}
                    role="img"
                    style={
                      Object {
                        "verticalAlign": "-0.125em",
                      }
                    }
                    viewBox="0 64 1024 1024"
                    width="1em"
                  >
                    <path
                      d="M219.554 0l73.294 73.143-146.583 146.286-73.070-73.143v-73.143h73.090v-73.438l73.269 0.295zM806.176 512l-586.747-585.143h-219.429v219.429l586.585 585.143 219.591-219.429zM1024 762.937c0-19.056-6.656-35.237-19.968-48.537l-146.578-150.455-218.686 218.505 148.576 147.915c12.955 13.662 29.147 20.494 48.578 20.494 19.074 0 35.445-6.832 49.115-20.494l118.994-118.352c13.312-14.023 19.968-30.384 19.968-49.077v0z"
                      transform="rotate(180 0 512) scale(-1 1)"
                    />
                  </svg>
                </EditAltIcon>
              </section>
            </PageHeader>
            <Connect(Main)>
              <Main>
                <section
                  className="pf-l-page__main-section pf-c-page__main-section"
                  page-type=""
                >
                  <div />
                  <Connect(ErrorAlert)
                    error={Object {}}
                    onClose={[Function]}
                  >
                    <ErrorAlert
                      addNotification={[Function]}
                      error={Object {}}
                      onClose={[Function]}
                    />
                  </Connect(ErrorAlert)>
                  <Card
                    className="pf-t-light pf-m-opaque-100"
                  >
                    <article
                      className="pf-c-card pf-t-light pf-m-opaque-100"
                      data-ouia-component-id={1}
                      data-ouia-component-type="PF4/Card"
                      data-ouia-safe={true}
                    >
                      <CardBody>
                        <div
                          className="pf-c-card__body"
                        >
                          <EditBaselineToolbar
                            isDisabled={true}
                            onBulkSelect={[Function]}
                            selected={0}
                            totalFacts={0}
                          >
                            <Toolbar
                              className="drift-toolbar"
                            >
                              <GenerateId
                                prefix="pf-random-id-"
                              >
                                <div
                                  className="pf-c-toolbar drift-toolbar"
                                  id="pf-random-id-0"
                                >
                                  <ToolbarContent
                                    isExpanded={false}
                                    showClearFiltersButton={false}
                                  >
                                    <div
                                      className="pf-c-toolbar__content"
                                    >
                                      <div
                                        className="pf-c-toolbar__content-section"
                                      >
                                        <ToolbarItem>
                                          <div
                                            className="pf-c-toolbar__item"
                                          >
                                            <BulkSelect
                                              checked={false}
                                              className=""
                                              count={null}
                                              isDisabled={true}
                                              items={
                                                Array [
                                                  Object {
                                                    "key": "select-all",
                                                    "onClick": [Function],
                                                    "title": "Select all",
                                                  },
                                                  Object {
                                                    "key": "select-none",
                                                    "onClick": [Function],
                                                    "title": "Select none",
                                                  },
                                                ]
                                              }
                                              onSelect={[Function]}
                                            >
                                              <Dropdown
                                                className="ins-c-bulk-select"
                                                dropdownItems={
                                                  Array [
                                                    <DropdownItem
                                                      component="button"
                                                      onClick={[Function]}
                                                    >
                                                      Select all
                                                    </DropdownItem>,
                                                    <DropdownItem
                                                      component="button"
                                                      onClick={[Function]}
                                                    >
                                                      Select none
                                                    </DropdownItem>,
                                                  ]
                                                }
                                                isOpen={false}
                                                onSelect={[Function]}
                                                toggle={
                                                  <DropdownToggle
                                                    isDisabled={true}
                                                    onToggle={[Function]}
                                                    splitButtonItems={
                                                      Array [
                                                        <React.Fragment>
                                                          <DropdownToggleCheckbox
                                                            aria-label="Select all"
                                                            className=""
                                                            id="toggle-checkbox"
                                                            isChecked={false}
                                                            isDisabled={false}
                                                            isValid={true}
                                                            onChange={[Function]}
                                                          >
                                                            
                                                          </DropdownToggleCheckbox>
                                                        </React.Fragment>,
                                                      ]
                                                    }
                                                  />
                                                }
                                              >
                                                <DropdownWithContext
                                                  autoFocus={true}
                                                  className="ins-c-bulk-select"
                                                  direction="down"
                                                  dropdownItems={
                                                    Array [
                                                      <DropdownItem
                                                        component="button"
                                                        onClick={[Function]}
                                                      >
                                                        Select all
                                                      </DropdownItem>,
                                                      <DropdownItem
                                                        component="button"
                                                        onClick={[Function]}
                                                      >
                                                        Select none
                                                      </DropdownItem>,
                                                    ]
                                                  }
                                                  isGrouped={false}
                                                  isOpen={false}
                                                  isPlain={false}
                                                  menuAppendTo="inline"
                                                  onSelect={[Function]}
                                                  position="left"
                                                  toggle={
                                                    <DropdownToggle
                                                      isDisabled={true}
                                                      onToggle={[Function]}
                                                      splitButtonItems={
                                                        Array [
                                                          <React.Fragment>
                                                            <DropdownToggleCheckbox
                                                              aria-label="Select all"
                                                              className=""
                                                              id="toggle-checkbox"
                                                              isChecked={false}
                                                              isDisabled={false}
                                                              isValid={true}
                                                              onChange={[Function]}
                                                            >
                                                              
                                                            </DropdownToggleCheckbox>
                                                          </React.Fragment>,
                                                        ]
                                                      }
                                                    />
                                                  }
                                                >
                                                  <div
                                                    className="pf-c-dropdown ins-c-bulk-select"
                                                    data-ouia-component-id={2}
                                                    data-ouia-component-type="PF4/Dropdown"
                                                    data-ouia-safe={true}
                                                  >
                                                    <DropdownToggle
                                                      aria-haspopup={true}
                                                      getMenuRef={[Function]}
                                                      id="pf-dropdown-toggle-id-0"
                                                      isDisabled={true}
                                                      isOpen={false}
                                                      isPlain={false}
                                                      key=".0"
                                                      onEnter={[Function]}
                                                      onToggle={[Function]}
                                                      parentRef={
                                                        Object {
                                                          "current": <div
                                                            class="pf-c-dropdown ins-c-bulk-select"
                                                            data-ouia-component-id="2"
                                                            data-ouia-component-type="PF4/Dropdown"
                                                            data-ouia-safe="true"
                                                          >
                                                            <div
                                                              class="pf-c-dropdown__toggle pf-m-split-button pf-m-disabled"
                                                            >
                                                              <label
                                                                class="pf-c-dropdown__toggle-check"
                                                                for="toggle-checkbox"
                                                              >
                                                                <input
                                                                  aria-invalid="false"
                                                                  aria-label="Select all"
                                                                  id="toggle-checkbox"
                                                                  type="checkbox"
                                                                />
                                                                
                                                              </label>
                                                              <button
                                                                aria-expanded="false"
                                                                aria-haspopup="true"
                                                                aria-label="Select"
                                                                class="pf-c-dropdown__toggle-button"
                                                                disabled=""
                                                                id="pf-dropdown-toggle-id-0"
                                                                type="button"
                                                              >
                                                                <span
                                                                  class=""
                                                                >
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    fill="currentColor"
                                                                    height="1em"
                                                                    role="img"
                                                                    style="vertical-align: -0.125em;"
                                                                    viewBox="0 0 320 512"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                      transform=""
                                                                    />
                                                                  </svg>
                                                                </span>
                                                              </button>
                                                            </div>
                                                          </div>,
                                                        }
                                                      }
                                                      splitButtonItems={
                                                        Array [
                                                          <React.Fragment>
                                                            <DropdownToggleCheckbox
                                                              aria-label="Select all"
                                                              className=""
                                                              id="toggle-checkbox"
                                                              isChecked={false}
                                                              isDisabled={false}
                                                              isValid={true}
                                                              onChange={[Function]}
                                                            >
                                                              
                                                            </DropdownToggleCheckbox>
                                                          </React.Fragment>,
                                                        ]
                                                      }
                                                    >
                                                      <div
                                                        className="pf-c-dropdown__toggle pf-m-split-button pf-m-disabled"
                                                      >
                                                        <DropdownToggleCheckbox
                                                          aria-label="Select all"
                                                          className=""
                                                          id="toggle-checkbox"
                                                          isChecked={false}
                                                          isDisabled={false}
                                                          isValid={true}
                                                          onChange={[Function]}
                                                        >
                                                          <label
                                                            className="pf-c-dropdown__toggle-check"
                                                            htmlFor="toggle-checkbox"
                                                          >
                                                            <input
                                                              aria-invalid={false}
                                                              aria-label="Select all"
                                                              checked={false}
                                                              disabled={false}
                                                              id="toggle-checkbox"
                                                              onChange={[Function]}
                                                              type="checkbox"
                                                            />
                                                          </label>
                                                        </DropdownToggleCheckbox>
                                                        <Toggle
                                                          aria-haspopup={true}
                                                          aria-label="Select"
                                                          bubbleEvent={false}
                                                          className=""
                                                          getMenuRef={[Function]}
                                                          id="pf-dropdown-toggle-id-0"
                                                          isActive={false}
                                                          isDisabled={true}
                                                          isOpen={false}
                                                          isPlain={false}
                                                          isPrimary={false}
                                                          isSplitButton={true}
                                                          onEnter={[Function]}
                                                          onToggle={[Function]}
                                                          parentRef={
                                                            Object {
                                                              "current": <div
                                                                class="pf-c-dropdown ins-c-bulk-select"
                                                                data-ouia-component-id="2"
                                                                data-ouia-component-type="PF4/Dropdown"
                                                                data-ouia-safe="true"
                                                              >
                                                                <div
                                                                  class="pf-c-dropdown__toggle pf-m-split-button pf-m-disabled"
                                                                >
                                                                  <label
                                                                    class="pf-c-dropdown__toggle-check"
                                                                    for="toggle-checkbox"
                                                                  >
                                                                    <input
                                                                      aria-invalid="false"
                                                                      aria-label="Select all"
                                                                      id="toggle-checkbox"
                                                                      type="checkbox"
                                                                    />
                                                                    
                                                                  </label>
                                                                  <button
                                                                    aria-expanded="false"
                                                                    aria-haspopup="true"
                                                                    aria-label="Select"
                                                                    class="pf-c-dropdown__toggle-button"
                                                                    disabled=""
                                                                    id="pf-dropdown-toggle-id-0"
                                                                    type="button"
                                                                  >
                                                                    <span
                                                                      class=""
                                                                    >
                                                                      <svg
                                                                        aria-hidden="true"
                                                                        fill="currentColor"
                                                                        height="1em"
                                                                        role="img"
                                                                        style="vertical-align: -0.125em;"
                                                                        viewBox="0 0 320 512"
                                                                        width="1em"
                                                                      >
                                                                        <path
                                                                          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                          transform=""
                                                                        />
                                                                      </svg>
                                                                    </span>
                                                                  </button>
                                                                </div>
                                                              </div>,
                                                            }
                                                          }
                                                        >
                                                          <button
                                                            aria-expanded={false}
                                                            aria-haspopup={true}
                                                            aria-label="Select"
                                                            className="pf-c-dropdown__toggle-button"
                                                            disabled={true}
                                                            id="pf-dropdown-toggle-id-0"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            type="button"
                                                          >
                                                            <span
                                                              className=""
                                                            >
                                                              <CaretDownIcon
                                                                color="currentColor"
                                                                noVerticalAlign={false}
                                                                size="sm"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  aria-labelledby={null}
                                                                  fill="currentColor"
                                                                  height="1em"
                                                                  role="img"
                                                                  style={
                                                                    Object {
                                                                      "verticalAlign": "-0.125em",
                                                                    }
                                                                  }
                                                                  viewBox="0 0 320 512"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                    transform=""
                                                                  />
                                                                </svg>
                                                              </CaretDownIcon>
                                                            </span>
                                                          </button>
                                                        </Toggle>
                                                      </div>
                                                    </DropdownToggle>
                                                  </div>
                                                </DropdownWithContext>
                                              </Dropdown>
                                            </BulkSelect>
                                          </div>
                                        </ToolbarItem>
                                        <ToolbarItem>
                                          <div
                                            className="pf-c-toolbar__item"
                                          >
                                            <Connect(AddFactButton)
                                              isDisabled={true}
                                            >
                                              <AddFactButton
                                                isDisabled={true}
                                                setFactData={[Function]}
                                                toggleFactModal={[Function]}
                                              >
                                                <Button
                                                  isDisabled={true}
                                                  onClick={[Function]}
                                                  variant="primary"
                                                >
                                                  <button
                                                    aria-disabled={true}
                                                    aria-label={null}
                                                    className="pf-c-button pf-m-primary pf-m-disabled"
                                                    data-ouia-component-id={3}
                                                    data-ouia-component-type="PF4/Button"
                                                    data-ouia-safe={true}
                                                    disabled={true}
                                                    onClick={[Function]}
                                                    tabIndex={null}
                                                    type="button"
                                                  >
                                                    Add fact or category
                                                  </button>
                                                </Button>
                                              </AddFactButton>
                                            </Connect(AddFactButton)>
                                          </div>
                                        </ToolbarItem>
                                        <ToolbarItem>
                                          <div
                                            className="pf-c-toolbar__item"
                                          >
                                            <Connect(EditBaselineKebab)>
                                              <EditBaselineKebab
                                                dispatch={[Function]}
                                                editBaselineTableData={Array []}
                                              >
                                                <Dropdown
                                                  dropdownItems={
                                                    Array [
                                                      <DropdownItem
                                                        component="button"
                                                        isDisabled={true}
                                                        onClick={[Function]}
                                                      >
                                                        Delete facts
                                                      </DropdownItem>,
                                                    ]
                                                  }
                                                  isOpen={false}
                                                  isPlain={true}
                                                  style={
                                                    Object {
                                                      "float": "left",
                                                    }
                                                  }
                                                  toggle={
                                                    <KebabToggle
                                                      onToggle={[Function]}
                                                    />
                                                  }
                                                >
                                                  <DropdownWithContext
                                                    autoFocus={true}
                                                    className=""
                                                    direction="down"
                                                    dropdownItems={
                                                      Array [
                                                        <DropdownItem
                                                          component="button"
                                                          isDisabled={true}
                                                          onClick={[Function]}
                                                        >
                                                          Delete facts
                                                        </DropdownItem>,
                                                      ]
                                                    }
                                                    isGrouped={false}
                                                    isOpen={false}
                                                    isPlain={true}
                                                    menuAppendTo="inline"
                                                    onSelect={[Function]}
                                                    position="left"
                                                    style={
                                                      Object {
                                                        "float": "left",
                                                      }
                                                    }
                                                    toggle={
                                                      <KebabToggle
                                                        onToggle={[Function]}
                                                      />
                                                    }
                                                  >
                                                    <div
                                                      className="pf-c-dropdown"
                                                      data-ouia-component-id={4}
                                                      data-ouia-component-type="PF4/Dropdown"
                                                      data-ouia-safe={true}
                                                      style={
                                                        Object {
                                                          "float": "left",
                                                        }
                                                      }
                                                    >
                                                      <KebabToggle
                                                        aria-haspopup={true}
                                                        getMenuRef={[Function]}
                                                        id="pf-dropdown-toggle-id-1"
                                                        isOpen={false}
                                                        isPlain={true}
                                                        key=".0"
                                                        onEnter={[Function]}
                                                        onToggle={[Function]}
                                                        parentRef={
                                                          Object {
                                                            "current": <div
                                                              class="pf-c-dropdown"
                                                              data-ouia-component-id="4"
                                                              data-ouia-component-type="PF4/Dropdown"
                                                              data-ouia-safe="true"
                                                              style="float: left;"
                                                            >
                                                              <button
                                                                aria-expanded="false"
                                                                aria-haspopup="true"
                                                                aria-label="Actions"
                                                                class="pf-c-dropdown__toggle pf-m-plain"
                                                                id="pf-dropdown-toggle-id-1"
                                                                type="button"
                                                              >
                                                                <svg
                                                                  aria-hidden="true"
                                                                  fill="currentColor"
                                                                  height="1em"
                                                                  role="img"
                                                                  style="vertical-align: -0.125em;"
                                                                  viewBox="0 0 192 512"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                                    transform=""
                                                                  />
                                                                </svg>
                                                              </button>
                                                            </div>,
                                                          }
                                                        }
                                                      >
                                                        <Toggle
                                                          aria-haspopup={true}
                                                          aria-label="Actions"
                                                          bubbleEvent={false}
                                                          className=""
                                                          getMenuRef={[Function]}
                                                          id="pf-dropdown-toggle-id-1"
                                                          isActive={false}
                                                          isDisabled={false}
                                                          isOpen={false}
                                                          isPlain={true}
                                                          isPrimary={false}
                                                          isSplitButton={false}
                                                          onEnter={[Function]}
                                                          onToggle={[Function]}
                                                          parentRef={
                                                            Object {
                                                              "current": <div
                                                                class="pf-c-dropdown"
                                                                data-ouia-component-id="4"
                                                                data-ouia-component-type="PF4/Dropdown"
                                                                data-ouia-safe="true"
                                                                style="float: left;"
                                                              >
                                                                <button
                                                                  aria-expanded="false"
                                                                  aria-haspopup="true"
                                                                  aria-label="Actions"
                                                                  class="pf-c-dropdown__toggle pf-m-plain"
                                                                  id="pf-dropdown-toggle-id-1"
                                                                  type="button"
                                                                >
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    fill="currentColor"
                                                                    height="1em"
                                                                    role="img"
                                                                    style="vertical-align: -0.125em;"
                                                                    viewBox="0 0 192 512"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                                      transform=""
                                                                    />
                                                                  </svg>
                                                                </button>
                                                              </div>,
                                                            }
                                                          }
                                                        >
                                                          <button
                                                            aria-expanded={false}
                                                            aria-haspopup={true}
                                                            aria-label="Actions"
                                                            className="pf-c-dropdown__toggle pf-m-plain"
                                                            disabled={false}
                                                            id="pf-dropdown-toggle-id-1"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            type="button"
                                                          >
                                                            <EllipsisVIcon
                                                              color="currentColor"
                                                              noVerticalAlign={false}
                                                              size="sm"
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                aria-labelledby={null}
                                                                fill="currentColor"
                                                                height="1em"
                                                                role="img"
                                                                style={
                                                                  Object {
                                                                    "verticalAlign": "-0.125em",
                                                                  }
                                                                }
                                                                viewBox="0 0 192 512"
                                                                width="1em"
                                                              >
                                                                <path
                                                                  d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                                  transform=""
                                                                />
                                                              </svg>
                                                            </EllipsisVIcon>
                                                          </button>
                                                        </Toggle>
                                                      </KebabToggle>
                                                    </div>
                                                  </DropdownWithContext>
                                                </Dropdown>
                                              </EditBaselineKebab>
                                            </Connect(EditBaselineKebab)>
                                          </div>
                                        </ToolbarItem>
                                      </div>
                                      <ToolbarExpandableContent
                                        chipContainerRef={
                                          Object {
                                            "current": null,
                                          }
                                        }
                                        clearFiltersButtonText="Clear all filters"
                                        expandableContentRef={
                                          Object {
                                            "current": <div
                                              class="pf-c-toolbar__expandable-content"
                                              id="pf-random-id-0-expandable-content-0"
                                            >
                                              <div
                                                class="pf-c-toolbar__group"
                                              />
                                            </div>,
                                          }
                                        }
                                        id="pf-random-id-0-expandable-content-0"
                                        isExpanded={false}
                                        showClearFiltersButton={false}
                                      >
                                        <div
                                          className="pf-c-toolbar__expandable-content"
                                          id="pf-random-id-0-expandable-content-0"
                                        >
                                          <ForwardRef>
                                            <ToolbarGroupWithRef
                                              innerRef={null}
                                            >
                                              <div
                                                className="pf-c-toolbar__group"
                                              />
                                            </ToolbarGroupWithRef>
                                          </ForwardRef>
                                        </div>
                                      </ToolbarExpandableContent>
                                    </div>
                                  </ToolbarContent>
                                  <ToolbarChipGroupContent
                                    chipGroupContentRef={
                                      Object {
                                        "current": <div
                                          class="pf-c-toolbar__content pf-m-hidden"
                                          hidden=""
                                        >
                                          <div
                                            class="pf-c-toolbar__group"
                                          />
                                        </div>,
                                      }
                                    }
                                    clearFiltersButtonText="Clear all filters"
                                    collapseListedFiltersBreakpoint="lg"
                                    isExpanded={false}
                                    numberOfFilters={0}
                                    showClearFiltersButton={false}
                                  >
                                    <div
                                      className="pf-c-toolbar__content pf-m-hidden"
                                      hidden={true}
                                    >
                                      <ForwardRef
                                        className=""
                                      >
                                        <ToolbarGroupWithRef
                                          className=""
                                          innerRef={null}
                                        >
                                          <div
                                            className="pf-c-toolbar__group"
                                          />
                                        </ToolbarGroupWithRef>
                                      </ForwardRef>
                                    </div>
                                  </ToolbarChipGroupContent>
                                </div>
                              </GenerateId>
                            </Toolbar>
                          </EditBaselineToolbar>
                          <table
                            className="pf-c-table ins-c-table pf-m-grid-md ins-entity-table drift-table"
                          >
                            <thead>
                              <tr
                                key="edit-baseline-table-header"
                              >
                                <th />
                                <th
                                  className="edit-baseline-header"
                                >
                                  <div>
                                    Fact
                                  </div>
                                </th>
                                <th
                                  className="edit-baseline-header"
                                >
                                  <div>
                                    Value
                                  </div>
                                </th>
                                <th />
                              </tr>
                            </thead>
                            <tbody
                              key="edit-baseline-table"
                            />
                          </table>
                        </div>
                      </CardBody>
                    </article>
                  </Card>
                </section>
              </Main>
            </Connect(Main)>
          </EditBaseline>
        </Connect(EditBaseline)>
      </withRouter(Connect(EditBaseline))>
    </Provider>
  </Router>
</MemoryRouter>
`;

exports[`ConnectedEditBaseline should render loading rows 1`] = `
<MemoryRouter
  keyLength={0}
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <withRouter(Connect(EditBaseline))>
        <Connect(EditBaseline)
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "canGo": [Function],
              "createHref": [Function],
              "entries": Array [
                Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              ],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "index": 0,
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
          location={
            Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            }
          }
          match={
            Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            }
          }
        >
          <EditBaseline
            baselineDataLoading={true}
            clearBaselineData={[Function]}
            clearErrorData={[Function]}
            editBaselineEmptyState={false}
            editBaselineError={Object {}}
            editBaselineTableData={Array []}
            expandRow={[Function]}
            expandedRows={Array []}
            factModalOpened={false}
            fetchBaselineData={[Function]}
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            inlineError={Object {}}
            location={
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              }
            }
            match={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
            selectFact={[Function]}
          >
            <PageHeader>
              <section
                className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                widget-type="InsightsPageHeader"
              >
                <div>
                  <Skeleton
                    isDark={false}
                    size="lg"
                  >
                    <div
                      className="ins-c-skeleton ins-c-skeleton__lg"
                    >
                       
                    </div>
                  </Skeleton>
                </div>
              </section>
            </PageHeader>
            <Connect(Main)>
              <Main>
                <section
                  className="pf-l-page__main-section pf-c-page__main-section"
                  page-type=""
                >
                  <div />
                  <Connect(ErrorAlert)
                    error={Object {}}
                    onClose={[Function]}
                  >
                    <ErrorAlert
                      addNotification={[Function]}
                      error={Object {}}
                      onClose={[Function]}
                    />
                  </Connect(ErrorAlert)>
                  <Card
                    className="pf-t-light pf-m-opaque-100"
                  >
                    <article
                      className="pf-c-card pf-t-light pf-m-opaque-100"
                      data-ouia-component-id={5}
                      data-ouia-component-type="PF4/Card"
                      data-ouia-safe={true}
                    >
                      <CardBody>
                        <div
                          className="pf-c-card__body"
                        >
                          <EditBaselineToolbar
                            isDisabled={true}
                            onBulkSelect={[Function]}
                            selected={0}
                            totalFacts={0}
                          >
                            <Toolbar
                              className="drift-toolbar"
                            >
                              <GenerateId
                                prefix="pf-random-id-"
                              >
                                <div
                                  className="pf-c-toolbar drift-toolbar"
                                  id="pf-random-id-1"
                                >
                                  <ToolbarContent
                                    isExpanded={false}
                                    showClearFiltersButton={false}
                                  >
                                    <div
                                      className="pf-c-toolbar__content"
                                    >
                                      <div
                                        className="pf-c-toolbar__content-section"
                                      >
                                        <ToolbarItem>
                                          <div
                                            className="pf-c-toolbar__item"
                                          >
                                            <BulkSelect
                                              checked={false}
                                              className=""
                                              count={null}
                                              isDisabled={true}
                                              items={
                                                Array [
                                                  Object {
                                                    "key": "select-all",
                                                    "onClick": [Function],
                                                    "title": "Select all",
                                                  },
                                                  Object {
                                                    "key": "select-none",
                                                    "onClick": [Function],
                                                    "title": "Select none",
                                                  },
                                                ]
                                              }
                                              onSelect={[Function]}
                                            >
                                              <Dropdown
                                                className="ins-c-bulk-select"
                                                dropdownItems={
                                                  Array [
                                                    <DropdownItem
                                                      component="button"
                                                      onClick={[Function]}
                                                    >
                                                      Select all
                                                    </DropdownItem>,
                                                    <DropdownItem
                                                      component="button"
                                                      onClick={[Function]}
                                                    >
                                                      Select none
                                                    </DropdownItem>,
                                                  ]
                                                }
                                                isOpen={false}
                                                onSelect={[Function]}
                                                toggle={
                                                  <DropdownToggle
                                                    isDisabled={true}
                                                    onToggle={[Function]}
                                                    splitButtonItems={
                                                      Array [
                                                        <React.Fragment>
                                                          <DropdownToggleCheckbox
                                                            aria-label="Select all"
                                                            className=""
                                                            id="toggle-checkbox"
                                                            isChecked={false}
                                                            isDisabled={false}
                                                            isValid={true}
                                                            onChange={[Function]}
                                                          >
                                                            
                                                          </DropdownToggleCheckbox>
                                                        </React.Fragment>,
                                                      ]
                                                    }
                                                  />
                                                }
                                              >
                                                <DropdownWithContext
                                                  autoFocus={true}
                                                  className="ins-c-bulk-select"
                                                  direction="down"
                                                  dropdownItems={
                                                    Array [
                                                      <DropdownItem
                                                        component="button"
                                                        onClick={[Function]}
                                                      >
                                                        Select all
                                                      </DropdownItem>,
                                                      <DropdownItem
                                                        component="button"
                                                        onClick={[Function]}
                                                      >
                                                        Select none
                                                      </DropdownItem>,
                                                    ]
                                                  }
                                                  isGrouped={false}
                                                  isOpen={false}
                                                  isPlain={false}
                                                  menuAppendTo="inline"
                                                  onSelect={[Function]}
                                                  position="left"
                                                  toggle={
                                                    <DropdownToggle
                                                      isDisabled={true}
                                                      onToggle={[Function]}
                                                      splitButtonItems={
                                                        Array [
                                                          <React.Fragment>
                                                            <DropdownToggleCheckbox
                                                              aria-label="Select all"
                                                              className=""
                                                              id="toggle-checkbox"
                                                              isChecked={false}
                                                              isDisabled={false}
                                                              isValid={true}
                                                              onChange={[Function]}
                                                            >
                                                              
                                                            </DropdownToggleCheckbox>
                                                          </React.Fragment>,
                                                        ]
                                                      }
                                                    />
                                                  }
                                                >
                                                  <div
                                                    className="pf-c-dropdown ins-c-bulk-select"
                                                    data-ouia-component-id={6}
                                                    data-ouia-component-type="PF4/Dropdown"
                                                    data-ouia-safe={true}
                                                  >
                                                    <DropdownToggle
                                                      aria-haspopup={true}
                                                      getMenuRef={[Function]}
                                                      id="pf-dropdown-toggle-id-2"
                                                      isDisabled={true}
                                                      isOpen={false}
                                                      isPlain={false}
                                                      key=".0"
                                                      onEnter={[Function]}
                                                      onToggle={[Function]}
                                                      parentRef={
                                                        Object {
                                                          "current": <div
                                                            class="pf-c-dropdown ins-c-bulk-select"
                                                            data-ouia-component-id="6"
                                                            data-ouia-component-type="PF4/Dropdown"
                                                            data-ouia-safe="true"
                                                          >
                                                            <div
                                                              class="pf-c-dropdown__toggle pf-m-split-button pf-m-disabled"
                                                            >
                                                              <label
                                                                class="pf-c-dropdown__toggle-check"
                                                                for="toggle-checkbox"
                                                              >
                                                                <input
                                                                  aria-invalid="false"
                                                                  aria-label="Select all"
                                                                  id="toggle-checkbox"
                                                                  type="checkbox"
                                                                />
                                                                
                                                              </label>
                                                              <button
                                                                aria-expanded="false"
                                                                aria-haspopup="true"
                                                                aria-label="Select"
                                                                class="pf-c-dropdown__toggle-button"
                                                                disabled=""
                                                                id="pf-dropdown-toggle-id-2"
                                                                type="button"
                                                              >
                                                                <span
                                                                  class=""
                                                                >
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    fill="currentColor"
                                                                    height="1em"
                                                                    role="img"
                                                                    style="vertical-align: -0.125em;"
                                                                    viewBox="0 0 320 512"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                      transform=""
                                                                    />
                                                                  </svg>
                                                                </span>
                                                              </button>
                                                            </div>
                                                          </div>,
                                                        }
                                                      }
                                                      splitButtonItems={
                                                        Array [
                                                          <React.Fragment>
                                                            <DropdownToggleCheckbox
                                                              aria-label="Select all"
                                                              className=""
                                                              id="toggle-checkbox"
                                                              isChecked={false}
                                                              isDisabled={false}
                                                              isValid={true}
                                                              onChange={[Function]}
                                                            >
                                                              
                                                            </DropdownToggleCheckbox>
                                                          </React.Fragment>,
                                                        ]
                                                      }
                                                    >
                                                      <div
                                                        className="pf-c-dropdown__toggle pf-m-split-button pf-m-disabled"
                                                      >
                                                        <DropdownToggleCheckbox
                                                          aria-label="Select all"
                                                          className=""
                                                          id="toggle-checkbox"
                                                          isChecked={false}
                                                          isDisabled={false}
                                                          isValid={true}
                                                          onChange={[Function]}
                                                        >
                                                          <label
                                                            className="pf-c-dropdown__toggle-check"
                                                            htmlFor="toggle-checkbox"
                                                          >
                                                            <input
                                                              aria-invalid={false}
                                                              aria-label="Select all"
                                                              checked={false}
                                                              disabled={false}
                                                              id="toggle-checkbox"
                                                              onChange={[Function]}
                                                              type="checkbox"
                                                            />
                                                          </label>
                                                        </DropdownToggleCheckbox>
                                                        <Toggle
                                                          aria-haspopup={true}
                                                          aria-label="Select"
                                                          bubbleEvent={false}
                                                          className=""
                                                          getMenuRef={[Function]}
                                                          id="pf-dropdown-toggle-id-2"
                                                          isActive={false}
                                                          isDisabled={true}
                                                          isOpen={false}
                                                          isPlain={false}
                                                          isPrimary={false}
                                                          isSplitButton={true}
                                                          onEnter={[Function]}
                                                          onToggle={[Function]}
                                                          parentRef={
                                                            Object {
                                                              "current": <div
                                                                class="pf-c-dropdown ins-c-bulk-select"
                                                                data-ouia-component-id="6"
                                                                data-ouia-component-type="PF4/Dropdown"
                                                                data-ouia-safe="true"
                                                              >
                                                                <div
                                                                  class="pf-c-dropdown__toggle pf-m-split-button pf-m-disabled"
                                                                >
                                                                  <label
                                                                    class="pf-c-dropdown__toggle-check"
                                                                    for="toggle-checkbox"
                                                                  >
                                                                    <input
                                                                      aria-invalid="false"
                                                                      aria-label="Select all"
                                                                      id="toggle-checkbox"
                                                                      type="checkbox"
                                                                    />
                                                                    
                                                                  </label>
                                                                  <button
                                                                    aria-expanded="false"
                                                                    aria-haspopup="true"
                                                                    aria-label="Select"
                                                                    class="pf-c-dropdown__toggle-button"
                                                                    disabled=""
                                                                    id="pf-dropdown-toggle-id-2"
                                                                    type="button"
                                                                  >
                                                                    <span
                                                                      class=""
                                                                    >
                                                                      <svg
                                                                        aria-hidden="true"
                                                                        fill="currentColor"
                                                                        height="1em"
                                                                        role="img"
                                                                        style="vertical-align: -0.125em;"
                                                                        viewBox="0 0 320 512"
                                                                        width="1em"
                                                                      >
                                                                        <path
                                                                          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                          transform=""
                                                                        />
                                                                      </svg>
                                                                    </span>
                                                                  </button>
                                                                </div>
                                                              </div>,
                                                            }
                                                          }
                                                        >
                                                          <button
                                                            aria-expanded={false}
                                                            aria-haspopup={true}
                                                            aria-label="Select"
                                                            className="pf-c-dropdown__toggle-button"
                                                            disabled={true}
                                                            id="pf-dropdown-toggle-id-2"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            type="button"
                                                          >
                                                            <span
                                                              className=""
                                                            >
                                                              <CaretDownIcon
                                                                color="currentColor"
                                                                noVerticalAlign={false}
                                                                size="sm"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  aria-labelledby={null}
                                                                  fill="currentColor"
                                                                  height="1em"
                                                                  role="img"
                                                                  style={
                                                                    Object {
                                                                      "verticalAlign": "-0.125em",
                                                                    }
                                                                  }
                                                                  viewBox="0 0 320 512"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                    transform=""
                                                                  />
                                                                </svg>
                                                              </CaretDownIcon>
                                                            </span>
                                                          </button>
                                                        </Toggle>
                                                      </div>
                                                    </DropdownToggle>
                                                  </div>
                                                </DropdownWithContext>
                                              </Dropdown>
                                            </BulkSelect>
                                          </div>
                                        </ToolbarItem>
                                        <ToolbarItem>
                                          <div
                                            className="pf-c-toolbar__item"
                                          >
                                            <Connect(AddFactButton)
                                              isDisabled={true}
                                            >
                                              <AddFactButton
                                                isDisabled={true}
                                                setFactData={[Function]}
                                                toggleFactModal={[Function]}
                                              >
                                                <Button
                                                  isDisabled={true}
                                                  onClick={[Function]}
                                                  variant="primary"
                                                >
                                                  <button
                                                    aria-disabled={true}
                                                    aria-label={null}
                                                    className="pf-c-button pf-m-primary pf-m-disabled"
                                                    data-ouia-component-id={7}
                                                    data-ouia-component-type="PF4/Button"
                                                    data-ouia-safe={true}
                                                    disabled={true}
                                                    onClick={[Function]}
                                                    tabIndex={null}
                                                    type="button"
                                                  >
                                                    Add fact or category
                                                  </button>
                                                </Button>
                                              </AddFactButton>
                                            </Connect(AddFactButton)>
                                          </div>
                                        </ToolbarItem>
                                        <ToolbarItem>
                                          <div
                                            className="pf-c-toolbar__item"
                                          >
                                            <Connect(EditBaselineKebab)>
                                              <EditBaselineKebab
                                                dispatch={[Function]}
                                                editBaselineTableData={Array []}
                                              >
                                                <Dropdown
                                                  dropdownItems={
                                                    Array [
                                                      <DropdownItem
                                                        component="button"
                                                        isDisabled={true}
                                                        onClick={[Function]}
                                                      >
                                                        Delete facts
                                                      </DropdownItem>,
                                                    ]
                                                  }
                                                  isOpen={false}
                                                  isPlain={true}
                                                  style={
                                                    Object {
                                                      "float": "left",
                                                    }
                                                  }
                                                  toggle={
                                                    <KebabToggle
                                                      onToggle={[Function]}
                                                    />
                                                  }
                                                >
                                                  <DropdownWithContext
                                                    autoFocus={true}
                                                    className=""
                                                    direction="down"
                                                    dropdownItems={
                                                      Array [
                                                        <DropdownItem
                                                          component="button"
                                                          isDisabled={true}
                                                          onClick={[Function]}
                                                        >
                                                          Delete facts
                                                        </DropdownItem>,
                                                      ]
                                                    }
                                                    isGrouped={false}
                                                    isOpen={false}
                                                    isPlain={true}
                                                    menuAppendTo="inline"
                                                    onSelect={[Function]}
                                                    position="left"
                                                    style={
                                                      Object {
                                                        "float": "left",
                                                      }
                                                    }
                                                    toggle={
                                                      <KebabToggle
                                                        onToggle={[Function]}
                                                      />
                                                    }
                                                  >
                                                    <div
                                                      className="pf-c-dropdown"
                                                      data-ouia-component-id={8}
                                                      data-ouia-component-type="PF4/Dropdown"
                                                      data-ouia-safe={true}
                                                      style={
                                                        Object {
                                                          "float": "left",
                                                        }
                                                      }
                                                    >
                                                      <KebabToggle
                                                        aria-haspopup={true}
                                                        getMenuRef={[Function]}
                                                        id="pf-dropdown-toggle-id-3"
                                                        isOpen={false}
                                                        isPlain={true}
                                                        key=".0"
                                                        onEnter={[Function]}
                                                        onToggle={[Function]}
                                                        parentRef={
                                                          Object {
                                                            "current": <div
                                                              class="pf-c-dropdown"
                                                              data-ouia-component-id="8"
                                                              data-ouia-component-type="PF4/Dropdown"
                                                              data-ouia-safe="true"
                                                              style="float: left;"
                                                            >
                                                              <button
                                                                aria-expanded="false"
                                                                aria-haspopup="true"
                                                                aria-label="Actions"
                                                                class="pf-c-dropdown__toggle pf-m-plain"
                                                                id="pf-dropdown-toggle-id-3"
                                                                type="button"
                                                              >
                                                                <svg
                                                                  aria-hidden="true"
                                                                  fill="currentColor"
                                                                  height="1em"
                                                                  role="img"
                                                                  style="vertical-align: -0.125em;"
                                                                  viewBox="0 0 192 512"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                                    transform=""
                                                                  />
                                                                </svg>
                                                              </button>
                                                            </div>,
                                                          }
                                                        }
                                                      >
                                                        <Toggle
                                                          aria-haspopup={true}
                                                          aria-label="Actions"
                                                          bubbleEvent={false}
                                                          className=""
                                                          getMenuRef={[Function]}
                                                          id="pf-dropdown-toggle-id-3"
                                                          isActive={false}
                                                          isDisabled={false}
                                                          isOpen={false}
                                                          isPlain={true}
                                                          isPrimary={false}
                                                          isSplitButton={false}
                                                          onEnter={[Function]}
                                                          onToggle={[Function]}
                                                          parentRef={
                                                            Object {
                                                              "current": <div
                                                                class="pf-c-dropdown"
                                                                data-ouia-component-id="8"
                                                                data-ouia-component-type="PF4/Dropdown"
                                                                data-ouia-safe="true"
                                                                style="float: left;"
                                                              >
                                                                <button
                                                                  aria-expanded="false"
                                                                  aria-haspopup="true"
                                                                  aria-label="Actions"
                                                                  class="pf-c-dropdown__toggle pf-m-plain"
                                                                  id="pf-dropdown-toggle-id-3"
                                                                  type="button"
                                                                >
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    fill="currentColor"
                                                                    height="1em"
                                                                    role="img"
                                                                    style="vertical-align: -0.125em;"
                                                                    viewBox="0 0 192 512"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                                      transform=""
                                                                    />
                                                                  </svg>
                                                                </button>
                                                              </div>,
                                                            }
                                                          }
                                                        >
                                                          <button
                                                            aria-expanded={false}
                                                            aria-haspopup={true}
                                                            aria-label="Actions"
                                                            className="pf-c-dropdown__toggle pf-m-plain"
                                                            disabled={false}
                                                            id="pf-dropdown-toggle-id-3"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            type="button"
                                                          >
                                                            <EllipsisVIcon
                                                              color="currentColor"
                                                              noVerticalAlign={false}
                                                              size="sm"
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                aria-labelledby={null}
                                                                fill="currentColor"
                                                                height="1em"
                                                                role="img"
                                                                style={
                                                                  Object {
                                                                    "verticalAlign": "-0.125em",
                                                                  }
                                                                }
                                                                viewBox="0 0 192 512"
                                                                width="1em"
                                                              >
                                                                <path
                                                                  d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                                  transform=""
                                                                />
                                                              </svg>
                                                            </EllipsisVIcon>
                                                          </button>
                                                        </Toggle>
                                                      </KebabToggle>
                                                    </div>
                                                  </DropdownWithContext>
                                                </Dropdown>
                                              </EditBaselineKebab>
                                            </Connect(EditBaselineKebab)>
                                          </div>
                                        </ToolbarItem>
                                      </div>
                                      <ToolbarExpandableContent
                                        chipContainerRef={
                                          Object {
                                            "current": null,
                                          }
                                        }
                                        clearFiltersButtonText="Clear all filters"
                                        expandableContentRef={
                                          Object {
                                            "current": <div
                                              class="pf-c-toolbar__expandable-content"
                                              id="pf-random-id-1-expandable-content-1"
                                            >
                                              <div
                                                class="pf-c-toolbar__group"
                                              />
                                            </div>,
                                          }
                                        }
                                        id="pf-random-id-1-expandable-content-1"
                                        isExpanded={false}
                                        showClearFiltersButton={false}
                                      >
                                        <div
                                          className="pf-c-toolbar__expandable-content"
                                          id="pf-random-id-1-expandable-content-1"
                                        >
                                          <ForwardRef>
                                            <ToolbarGroupWithRef
                                              innerRef={null}
                                            >
                                              <div
                                                className="pf-c-toolbar__group"
                                              />
                                            </ToolbarGroupWithRef>
                                          </ForwardRef>
                                        </div>
                                      </ToolbarExpandableContent>
                                    </div>
                                  </ToolbarContent>
                                  <ToolbarChipGroupContent
                                    chipGroupContentRef={
                                      Object {
                                        "current": <div
                                          class="pf-c-toolbar__content pf-m-hidden"
                                          hidden=""
                                        >
                                          <div
                                            class="pf-c-toolbar__group"
                                          />
                                        </div>,
                                      }
                                    }
                                    clearFiltersButtonText="Clear all filters"
                                    collapseListedFiltersBreakpoint="lg"
                                    isExpanded={false}
                                    numberOfFilters={0}
                                    showClearFiltersButton={false}
                                  >
                                    <div
                                      className="pf-c-toolbar__content pf-m-hidden"
                                      hidden={true}
                                    >
                                      <ForwardRef
                                        className=""
                                      >
                                        <ToolbarGroupWithRef
                                          className=""
                                          innerRef={null}
                                        >
                                          <div
                                            className="pf-c-toolbar__group"
                                          />
                                        </ToolbarGroupWithRef>
                                      </ForwardRef>
                                    </div>
                                  </ToolbarChipGroupContent>
                                </div>
                              </GenerateId>
                            </Toolbar>
                          </EditBaselineToolbar>
                          <table
                            className="pf-c-table ins-c-table pf-m-grid-md ins-entity-table drift-table"
                          >
                            <thead>
                              <tr
                                key="edit-baseline-table-header"
                              >
                                <th />
                                <th
                                  className="edit-baseline-header"
                                >
                                  <div>
                                    Fact
                                  </div>
                                </th>
                                <th
                                  className="edit-baseline-header"
                                >
                                  <div>
                                    Value
                                  </div>
                                </th>
                                <th />
                              </tr>
                            </thead>
                            <tbody
                              key="edit-baseline-table"
                            >
                              <tr>
                                <td>
                                  <Skeleton
                                    isDark={false}
                                    size="md"
                                  >
                                    <div
                                      className="ins-c-skeleton ins-c-skeleton__md"
                                    >
                                       
                                    </div>
                                  </Skeleton>
                                </td>
                                <td>
                                  <Skeleton
                                    isDark={false}
                                    size="md"
                                  >
                                    <div
                                      className="ins-c-skeleton ins-c-skeleton__md"
                                    >
                                       
                                    </div>
                                  </Skeleton>
                                </td>
                                <td>
                                  <Skeleton
                                    isDark={false}
                                    size="md"
                                  >
                                    <div
                                      className="ins-c-skeleton ins-c-skeleton__md"
                                    >
                                       
                                    </div>
                                  </Skeleton>
                                </td>
                              </tr>
                              <tr>
                                <td>
                                  <Skeleton
                                    isDark={false}
                                    size="md"
                                  >
                                    <div
                                      className="ins-c-skeleton ins-c-skeleton__md"
                                    >
                                       
                                    </div>
                                  </Skeleton>
                                </td>
                                <td>
                                  <Skeleton
                                    isDark={false}
                                    size="md"
                                  >
                                    <div
                                      className="ins-c-skeleton ins-c-skeleton__md"
                                    >
                                       
                                    </div>
                                  </Skeleton>
                                </td>
                                <td>
                                  <Skeleton
                                    isDark={false}
                                    size="md"
                                  >
                                    <div
                                      className="ins-c-skeleton ins-c-skeleton__md"
                                    >
                                       
                                    </div>
                                  </Skeleton>
                                </td>
                              </tr>
                              <tr>
                                <td>
                                  <Skeleton
                                    isDark={false}
                                    size="md"
                                  >
                                    <div
                                      className="ins-c-skeleton ins-c-skeleton__md"
                                    >
                                       
                                    </div>
                                  </Skeleton>
                                </td>
                                <td>
                                  <Skeleton
                                    isDark={false}
                                    size="md"
                                  >
                                    <div
                                      className="ins-c-skeleton ins-c-skeleton__md"
                                    >
                                       
                                    </div>
                                  </Skeleton>
                                </td>
                                <td>
                                  <Skeleton
                                    isDark={false}
                                    size="md"
                                  >
                                    <div
                                      className="ins-c-skeleton ins-c-skeleton__md"
                                    >
                                       
                                    </div>
                                  </Skeleton>
                                </td>
                              </tr>
                              <tr>
                                <td>
                                  <Skeleton
                                    isDark={false}
                                    size="md"
                                  >
                                    <div
                                      className="ins-c-skeleton ins-c-skeleton__md"
                                    >
                                       
                                    </div>
                                  </Skeleton>
                                </td>
                                <td>
                                  <Skeleton
                                    isDark={false}
                                    size="md"
                                  >
                                    <div
                                      className="ins-c-skeleton ins-c-skeleton__md"
                                    >
                                       
                                    </div>
                                  </Skeleton>
                                </td>
                                <td>
                                  <Skeleton
                                    isDark={false}
                                    size="md"
                                  >
                                    <div
                                      className="ins-c-skeleton ins-c-skeleton__md"
                                    >
                                       
                                    </div>
                                  </Skeleton>
                                </td>
                              </tr>
                              <tr>
                                <td>
                                  <Skeleton
                                    isDark={false}
                                    size="md"
                                  >
                                    <div
                                      className="ins-c-skeleton ins-c-skeleton__md"
                                    >
                                       
                                    </div>
                                  </Skeleton>
                                </td>
                                <td>
                                  <Skeleton
                                    isDark={false}
                                    size="md"
                                  >
                                    <div
                                      className="ins-c-skeleton ins-c-skeleton__md"
                                    >
                                       
                                    </div>
                                  </Skeleton>
                                </td>
                                <td>
                                  <Skeleton
                                    isDark={false}
                                    size="md"
                                  >
                                    <div
                                      className="ins-c-skeleton ins-c-skeleton__md"
                                    >
                                       
                                    </div>
                                  </Skeleton>
                                </td>
                              </tr>
                              <tr>
                                <td>
                                  <Skeleton
                                    isDark={false}
                                    size="md"
                                  >
                                    <div
                                      className="ins-c-skeleton ins-c-skeleton__md"
                                    >
                                       
                                    </div>
                                  </Skeleton>
                                </td>
                                <td>
                                  <Skeleton
                                    isDark={false}
                                    size="md"
                                  >
                                    <div
                                      className="ins-c-skeleton ins-c-skeleton__md"
                                    >
                                       
                                    </div>
                                  </Skeleton>
                                </td>
                                <td>
                                  <Skeleton
                                    isDark={false}
                                    size="md"
                                  >
                                    <div
                                      className="ins-c-skeleton ins-c-skeleton__md"
                                    >
                                       
                                    </div>
                                  </Skeleton>
                                </td>
                              </tr>
                              <tr>
                                <td>
                                  <Skeleton
                                    isDark={false}
                                    size="md"
                                  >
                                    <div
                                      className="ins-c-skeleton ins-c-skeleton__md"
                                    >
                                       
                                    </div>
                                  </Skeleton>
                                </td>
                                <td>
                                  <Skeleton
                                    isDark={false}
                                    size="md"
                                  >
                                    <div
                                      className="ins-c-skeleton ins-c-skeleton__md"
                                    >
                                       
                                    </div>
                                  </Skeleton>
                                </td>
                                <td>
                                  <Skeleton
                                    isDark={false}
                                    size="md"
                                  >
                                    <div
                                      className="ins-c-skeleton ins-c-skeleton__md"
                                    >
                                       
                                    </div>
                                  </Skeleton>
                                </td>
                              </tr>
                              <tr>
                                <td>
                                  <Skeleton
                                    isDark={false}
                                    size="md"
                                  >
                                    <div
                                      className="ins-c-skeleton ins-c-skeleton__md"
                                    >
                                       
                                    </div>
                                  </Skeleton>
                                </td>
                                <td>
                                  <Skeleton
                                    isDark={false}
                                    size="md"
                                  >
                                    <div
                                      className="ins-c-skeleton ins-c-skeleton__md"
                                    >
                                       
                                    </div>
                                  </Skeleton>
                                </td>
                                <td>
                                  <Skeleton
                                    isDark={false}
                                    size="md"
                                  >
                                    <div
                                      className="ins-c-skeleton ins-c-skeleton__md"
                                    >
                                       
                                    </div>
                                  </Skeleton>
                                </td>
                              </tr>
                              <tr>
                                <td>
                                  <Skeleton
                                    isDark={false}
                                    size="md"
                                  >
                                    <div
                                      className="ins-c-skeleton ins-c-skeleton__md"
                                    >
                                       
                                    </div>
                                  </Skeleton>
                                </td>
                                <td>
                                  <Skeleton
                                    isDark={false}
                                    size="md"
                                  >
                                    <div
                                      className="ins-c-skeleton ins-c-skeleton__md"
                                    >
                                       
                                    </div>
                                  </Skeleton>
                                </td>
                                <td>
                                  <Skeleton
                                    isDark={false}
                                    size="md"
                                  >
                                    <div
                                      className="ins-c-skeleton ins-c-skeleton__md"
                                    >
                                       
                                    </div>
                                  </Skeleton>
                                </td>
                              </tr>
                              <tr>
                                <td>
                                  <Skeleton
                                    isDark={false}
                                    size="md"
                                  >
                                    <div
                                      className="ins-c-skeleton ins-c-skeleton__md"
                                    >
                                       
                                    </div>
                                  </Skeleton>
                                </td>
                                <td>
                                  <Skeleton
                                    isDark={false}
                                    size="md"
                                  >
                                    <div
                                      className="ins-c-skeleton ins-c-skeleton__md"
                                    >
                                       
                                    </div>
                                  </Skeleton>
                                </td>
                                <td>
                                  <Skeleton
                                    isDark={false}
                                    size="md"
                                  >
                                    <div
                                      className="ins-c-skeleton ins-c-skeleton__md"
                                    >
                                       
                                    </div>
                                  </Skeleton>
                                </td>
                              </tr>
                            </tbody>
                          </table>
                        </div>
                      </CardBody>
                    </article>
                  </Card>
                </section>
              </Main>
            </Connect(Main)>
          </EditBaseline>
        </Connect(EditBaseline)>
      </withRouter(Connect(EditBaseline))>
    </Provider>
  </Router>
</MemoryRouter>
`;

exports[`EditBaseline should render correctly 1`] = `
<Fragment>
  <Connect(EditBaselineNameModal)
    baselineData={Array []}
    modalOpened={false}
    toggleEditNameModal={[Function]}
  />
  <PageHeader>
    <Breadcrumb>
      <BreadcrumbItem>
        <a
          onClick={[Function]}
        >
          Baselines
        </a>
      </BreadcrumbItem>
      <BreadcrumbHeading />
    </Breadcrumb>
    <PageHeaderTitle
      title={null}
    />
    <EditAltIcon
      className="pointer not-active edit-icon-margin"
      color="currentColor"
      noVerticalAlign={false}
      onClick={[Function]}
      size="sm"
    />
  </PageHeader>
  <Connect(Main)>
    <div />
    <Connect(ErrorAlert)
      error={Object {}}
    />
    <Card
      className="pf-t-light pf-m-opaque-100"
    >
      <CardBody>
        <EditBaselineToolbar
          isDisabled={true}
          onBulkSelect={[Function]}
          selected={0}
          totalFacts={0}
        />
        <table
          className="pf-c-table ins-c-table pf-m-grid-md ins-entity-table drift-table"
        >
          <thead>
            <tr
              key="edit-baseline-table-header"
            >
              <th />
              <th
                className="edit-baseline-header"
              >
                <div>
                  Fact
                </div>
              </th>
              <th
                className="edit-baseline-header"
              >
                <div>
                  Value
                </div>
              </th>
              <th />
            </tr>
          </thead>
          <tbody
            key="edit-baseline-table"
          />
        </table>
      </CardBody>
    </Card>
  </Connect(Main)>
</Fragment>
`;

exports[`EditBaseline should render error correctly 1`] = `
<Fragment>
  <Connect(EditBaselineNameModal)
    baselineData={Array []}
    modalOpened={false}
    toggleEditNameModal={[Function]}
  />
  <PageHeader>
    <Breadcrumb>
      <BreadcrumbItem>
        <a
          onClick={[Function]}
        >
          Baselines
        </a>
      </BreadcrumbItem>
      <BreadcrumbHeading />
    </Breadcrumb>
    <PageHeaderTitle
      title={null}
    />
    <EditAltIcon
      className="pointer not-active edit-icon-margin"
      color="currentColor"
      noVerticalAlign={false}
      onClick={[Function]}
      size="sm"
    />
  </PageHeader>
  <Connect(Main)>
    <div />
    <Connect(ErrorAlert)
      error={
        Object {
          "status": 404,
        }
      }
    />
    <Card
      className="pf-t-light pf-m-opaque-100"
    >
      <CardBody>
        <EditBaselineToolbar
          isDisabled={true}
          onBulkSelect={[Function]}
          selected={0}
          totalFacts={0}
        />
        <table
          className="pf-c-table ins-c-table pf-m-grid-md ins-entity-table drift-table"
        >
          <thead>
            <tr
              key="edit-baseline-table-header"
            >
              <th />
              <th
                className="edit-baseline-header"
              >
                <div>
                  Fact
                </div>
              </th>
              <th
                className="edit-baseline-header"
              >
                <div>
                  Value
                </div>
              </th>
              <th />
            </tr>
          </thead>
          <tbody
            key="edit-baseline-table"
          />
        </table>
      </CardBody>
    </Card>
  </Connect(Main)>
</Fragment>
`;

exports[`EditBaseline should render expandable rows closed 1`] = `
<Fragment>
  <Connect(EditBaselineNameModal)
    baselineData={
      Object {
        "baseline_facts": Array [
          Object {
            "name": "Sauron",
            "value": "the Dark Lord",
          },
          Object {
            "name": "Galadriel",
            "value": "the Elven Queen",
          },
          Object {
            "name": "The Fellowship of the Ring",
            "values": Array [
              Object {
                "name": "Frodo",
                "value": "Baggins",
              },
              Object {
                "name": "Samwise",
                "value": "Gamgee",
              },
              Object {
                "name": "Gandalf",
                "value": "the Grey",
              },
              Object {
                "name": "Meriadoc",
                "value": "Brandybuck",
              },
              Object {
                "name": "Peregrin",
                "value": "Took",
              },
              Object {
                "name": "Gimli",
                "value": "song of Gloin",
              },
              Object {
                "name": "Legolas",
                "value": "Greenleaf",
              },
              Object {
                "name": "Boromir",
                "value": "son of Denethor",
              },
              Object {
                "name": "Aragorn",
                "value": "son of Arathorn",
              },
            ],
          },
        ],
        "display_name": "lotr_baseline",
        "id": "38gnw73l-fn36-5829-1287-2m5ghs46801c",
      }
    }
    modalOpened={false}
    toggleEditNameModal={[Function]}
  />
  <PageHeader>
    <Breadcrumb>
      <BreadcrumbItem>
        <a
          onClick={[Function]}
        >
          Baselines
        </a>
      </BreadcrumbItem>
      <BreadcrumbHeading>
        lotr_baseline
      </BreadcrumbHeading>
    </Breadcrumb>
    <PageHeaderTitle
      title="lotr_baseline"
    />
    <EditAltIcon
      className="pointer not-active edit-icon-margin"
      color="currentColor"
      noVerticalAlign={false}
      onClick={[Function]}
      size="sm"
    />
  </PageHeader>
  <Connect(Main)>
    <div />
    <Connect(ErrorAlert)
      error={Object {}}
    />
    <Card
      className="pf-t-light pf-m-opaque-100"
    >
      <CardBody>
        <EditBaselineToolbar
          isDisabled={false}
          onBulkSelect={[Function]}
          selected={0}
          totalFacts={11}
        />
        <table
          className="pf-c-table ins-c-table pf-m-grid-md ins-entity-table drift-table"
        >
          <thead>
            <tr
              key="edit-baseline-table-header"
            >
              <th />
              <th
                className="edit-baseline-header"
              >
                <div>
                  Fact
                </div>
              </th>
              <th
                className="edit-baseline-header"
              >
                <div>
                  Value
                </div>
              </th>
              <th />
            </tr>
          </thead>
          <tbody
            key="edit-baseline-table"
          >
            <tr
              key="Sauron"
            >
              <td
                className="pf-c-table__check"
              >
                <Checkbox
                  className=""
                  id="fact-0"
                  isChecked={false}
                  isDisabled={false}
                  isValid={true}
                  name={0}
                  onChange={[Function]}
                />
              </td>
              <td>
                Sauron
              </td>
              <td>
                the Dark Lord
              </td>
              <td>
                <Connect(FactKebab)
                  fact={
                    Object {
                      "name": "Sauron",
                      "value": "the Dark Lord",
                    }
                  }
                  factName="Sauron"
                  factValue="the Dark Lord"
                />
              </td>
            </tr>
            <tr
              key="Galadriel"
            >
              <td
                className="pf-c-table__check"
              >
                <Checkbox
                  className=""
                  id="fact-1"
                  isChecked={false}
                  isDisabled={false}
                  isValid={true}
                  name={1}
                  onChange={[Function]}
                />
              </td>
              <td>
                Galadriel
              </td>
              <td>
                the Elven Queen
              </td>
              <td>
                <Connect(FactKebab)
                  fact={
                    Object {
                      "name": "Galadriel",
                      "value": "the Elven Queen",
                    }
                  }
                  factName="Galadriel"
                  factValue="the Elven Queen"
                />
              </td>
            </tr>
            <tr
              key="The Fellowship of the Ring"
            >
              <td
                className="pf-c-table__check"
              >
                <Checkbox
                  className=""
                  id="category-2"
                  isChecked={false}
                  isDisabled={false}
                  isValid={true}
                  name={2}
                  onChange={[Function]}
                />
              </td>
              <td>
                <AngleRightIcon
                  className="pointer"
                  color="currentColor"
                  noVerticalAlign={false}
                  onClick={[Function]}
                  size="sm"
                />
                 
                The Fellowship of the Ring
              </td>
              <td />
              <td>
                <Connect(FactKebab)
                  fact={
                    Object {
                      "name": "The Fellowship of the Ring",
                      "values": Array [
                        Object {
                          "name": "Frodo",
                          "value": "Baggins",
                        },
                        Object {
                          "name": "Samwise",
                          "value": "Gamgee",
                        },
                        Object {
                          "name": "Gandalf",
                          "value": "the Grey",
                        },
                        Object {
                          "name": "Meriadoc",
                          "value": "Brandybuck",
                        },
                        Object {
                          "name": "Peregrin",
                          "value": "Took",
                        },
                        Object {
                          "name": "Gimli",
                          "value": "song of Gloin",
                        },
                        Object {
                          "name": "Legolas",
                          "value": "Greenleaf",
                        },
                        Object {
                          "name": "Boromir",
                          "value": "son of Denethor",
                        },
                        Object {
                          "name": "Aragorn",
                          "value": "son of Arathorn",
                        },
                      ],
                    }
                  }
                  factName="The Fellowship of the Ring"
                  isCategory={true}
                />
              </td>
            </tr>
          </tbody>
        </table>
      </CardBody>
    </Card>
  </Connect(Main)>
</Fragment>
`;

exports[`EditBaseline should render expandable rows opened 1`] = `
<Fragment>
  <Connect(EditBaselineNameModal)
    baselineData={
      Object {
        "baseline_facts": Array [
          Object {
            "name": "Sauron",
            "value": "the Dark Lord",
          },
          Object {
            "name": "Galadriel",
            "value": "the Elven Queen",
          },
          Object {
            "name": "The Fellowship of the Ring",
            "values": Array [
              Object {
                "name": "Frodo",
                "value": "Baggins",
              },
              Object {
                "name": "Samwise",
                "value": "Gamgee",
              },
              Object {
                "name": "Gandalf",
                "value": "the Grey",
              },
              Object {
                "name": "Meriadoc",
                "value": "Brandybuck",
              },
              Object {
                "name": "Peregrin",
                "value": "Took",
              },
              Object {
                "name": "Gimli",
                "value": "song of Gloin",
              },
              Object {
                "name": "Legolas",
                "value": "Greenleaf",
              },
              Object {
                "name": "Boromir",
                "value": "son of Denethor",
              },
              Object {
                "name": "Aragorn",
                "value": "son of Arathorn",
              },
            ],
          },
        ],
        "display_name": "lotr_baseline",
        "id": "38gnw73l-fn36-5829-1287-2m5ghs46801c",
      }
    }
    modalOpened={false}
    toggleEditNameModal={[Function]}
  />
  <PageHeader>
    <Breadcrumb>
      <BreadcrumbItem>
        <a
          onClick={[Function]}
        >
          Baselines
        </a>
      </BreadcrumbItem>
      <BreadcrumbHeading>
        lotr_baseline
      </BreadcrumbHeading>
    </Breadcrumb>
    <PageHeaderTitle
      title="lotr_baseline"
    />
    <EditAltIcon
      className="pointer not-active edit-icon-margin"
      color="currentColor"
      noVerticalAlign={false}
      onClick={[Function]}
      size="sm"
    />
  </PageHeader>
  <Connect(Main)>
    <div />
    <Connect(ErrorAlert)
      error={Object {}}
    />
    <Card
      className="pf-t-light pf-m-opaque-100"
    >
      <CardBody>
        <EditBaselineToolbar
          isDisabled={false}
          onBulkSelect={[Function]}
          selected={0}
          totalFacts={11}
        />
        <table
          className="pf-c-table ins-c-table pf-m-grid-md ins-entity-table drift-table"
        >
          <thead>
            <tr
              key="edit-baseline-table-header"
            >
              <th />
              <th
                className="edit-baseline-header"
              >
                <div>
                  Fact
                </div>
              </th>
              <th
                className="edit-baseline-header"
              >
                <div>
                  Value
                </div>
              </th>
              <th />
            </tr>
          </thead>
          <tbody
            key="edit-baseline-table"
          >
            <tr
              key="Sauron"
            >
              <td
                className="pf-c-table__check"
              >
                <Checkbox
                  className=""
                  id="fact-0"
                  isChecked={false}
                  isDisabled={false}
                  isValid={true}
                  name={0}
                  onChange={[Function]}
                />
              </td>
              <td>
                Sauron
              </td>
              <td>
                the Dark Lord
              </td>
              <td>
                <Connect(FactKebab)
                  fact={
                    Object {
                      "name": "Sauron",
                      "value": "the Dark Lord",
                    }
                  }
                  factName="Sauron"
                  factValue="the Dark Lord"
                />
              </td>
            </tr>
            <tr
              key="Galadriel"
            >
              <td
                className="pf-c-table__check"
              >
                <Checkbox
                  className=""
                  id="fact-1"
                  isChecked={false}
                  isDisabled={false}
                  isValid={true}
                  name={1}
                  onChange={[Function]}
                />
              </td>
              <td>
                Galadriel
              </td>
              <td>
                the Elven Queen
              </td>
              <td>
                <Connect(FactKebab)
                  fact={
                    Object {
                      "name": "Galadriel",
                      "value": "the Elven Queen",
                    }
                  }
                  factName="Galadriel"
                  factValue="the Elven Queen"
                />
              </td>
            </tr>
            <tr
              key="The Fellowship of the Ring"
            >
              <td
                className="pf-c-table__check nested-fact"
              >
                <Checkbox
                  className=""
                  id="category-2"
                  isChecked={false}
                  isDisabled={false}
                  isValid={true}
                  name={2}
                  onChange={[Function]}
                />
              </td>
              <td>
                <AngleDownIcon
                  className="pointer active-blue"
                  color="currentColor"
                  noVerticalAlign={false}
                  onClick={[Function]}
                  size="sm"
                />
                 
                The Fellowship of the Ring
              </td>
              <td />
              <td>
                <Connect(FactKebab)
                  fact={
                    Object {
                      "name": "The Fellowship of the Ring",
                      "values": Array [
                        Object {
                          "name": "Frodo",
                          "value": "Baggins",
                        },
                        Object {
                          "name": "Samwise",
                          "value": "Gamgee",
                        },
                        Object {
                          "name": "Gandalf",
                          "value": "the Grey",
                        },
                        Object {
                          "name": "Meriadoc",
                          "value": "Brandybuck",
                        },
                        Object {
                          "name": "Peregrin",
                          "value": "Took",
                        },
                        Object {
                          "name": "Gimli",
                          "value": "song of Gloin",
                        },
                        Object {
                          "name": "Legolas",
                          "value": "Greenleaf",
                        },
                        Object {
                          "name": "Boromir",
                          "value": "son of Denethor",
                        },
                        Object {
                          "name": "Aragorn",
                          "value": "son of Arathorn",
                        },
                      ],
                    }
                  }
                  factName="The Fellowship of the Ring"
                  isCategory={true}
                />
              </td>
            </tr>
            <tr
              key="Frodo"
            >
              <td
                className="pf-c-table__check nested-fact"
              >
                <Checkbox
                  className=""
                  id="fact-3"
                  isChecked={false}
                  isDisabled={false}
                  isValid={true}
                  name={3}
                  onChange={[Function]}
                />
              </td>
              <td>
                <p
                  className="child-row"
                >
                  Frodo
                </p>
              </td>
              <td>
                Baggins
              </td>
              <td>
                <Connect(FactKebab)
                  fact={
                    Object {
                      "name": "The Fellowship of the Ring",
                      "values": Array [
                        Object {
                          "name": "Frodo",
                          "value": "Baggins",
                        },
                        Object {
                          "name": "Samwise",
                          "value": "Gamgee",
                        },
                        Object {
                          "name": "Gandalf",
                          "value": "the Grey",
                        },
                        Object {
                          "name": "Meriadoc",
                          "value": "Brandybuck",
                        },
                        Object {
                          "name": "Peregrin",
                          "value": "Took",
                        },
                        Object {
                          "name": "Gimli",
                          "value": "song of Gloin",
                        },
                        Object {
                          "name": "Legolas",
                          "value": "Greenleaf",
                        },
                        Object {
                          "name": "Boromir",
                          "value": "son of Denethor",
                        },
                        Object {
                          "name": "Aragorn",
                          "value": "son of Arathorn",
                        },
                      ],
                    }
                  }
                  factName="Frodo"
                  factValue="Baggins"
                  isSubFact={true}
                />
              </td>
            </tr>
            <tr
              key="Samwise"
            >
              <td
                className="pf-c-table__check nested-fact"
              >
                <Checkbox
                  className=""
                  id="fact-4"
                  isChecked={false}
                  isDisabled={false}
                  isValid={true}
                  name={4}
                  onChange={[Function]}
                />
              </td>
              <td>
                <p
                  className="child-row"
                >
                  Samwise
                </p>
              </td>
              <td>
                Gamgee
              </td>
              <td>
                <Connect(FactKebab)
                  fact={
                    Object {
                      "name": "The Fellowship of the Ring",
                      "values": Array [
                        Object {
                          "name": "Frodo",
                          "value": "Baggins",
                        },
                        Object {
                          "name": "Samwise",
                          "value": "Gamgee",
                        },
                        Object {
                          "name": "Gandalf",
                          "value": "the Grey",
                        },
                        Object {
                          "name": "Meriadoc",
                          "value": "Brandybuck",
                        },
                        Object {
                          "name": "Peregrin",
                          "value": "Took",
                        },
                        Object {
                          "name": "Gimli",
                          "value": "song of Gloin",
                        },
                        Object {
                          "name": "Legolas",
                          "value": "Greenleaf",
                        },
                        Object {
                          "name": "Boromir",
                          "value": "son of Denethor",
                        },
                        Object {
                          "name": "Aragorn",
                          "value": "son of Arathorn",
                        },
                      ],
                    }
                  }
                  factName="Samwise"
                  factValue="Gamgee"
                  isSubFact={true}
                />
              </td>
            </tr>
            <tr
              key="Gandalf"
            >
              <td
                className="pf-c-table__check nested-fact"
              >
                <Checkbox
                  className=""
                  id="fact-5"
                  isChecked={false}
                  isDisabled={false}
                  isValid={true}
                  name={5}
                  onChange={[Function]}
                />
              </td>
              <td>
                <p
                  className="child-row"
                >
                  Gandalf
                </p>
              </td>
              <td>
                the Grey
              </td>
              <td>
                <Connect(FactKebab)
                  fact={
                    Object {
                      "name": "The Fellowship of the Ring",
                      "values": Array [
                        Object {
                          "name": "Frodo",
                          "value": "Baggins",
                        },
                        Object {
                          "name": "Samwise",
                          "value": "Gamgee",
                        },
                        Object {
                          "name": "Gandalf",
                          "value": "the Grey",
                        },
                        Object {
                          "name": "Meriadoc",
                          "value": "Brandybuck",
                        },
                        Object {
                          "name": "Peregrin",
                          "value": "Took",
                        },
                        Object {
                          "name": "Gimli",
                          "value": "song of Gloin",
                        },
                        Object {
                          "name": "Legolas",
                          "value": "Greenleaf",
                        },
                        Object {
                          "name": "Boromir",
                          "value": "son of Denethor",
                        },
                        Object {
                          "name": "Aragorn",
                          "value": "son of Arathorn",
                        },
                      ],
                    }
                  }
                  factName="Gandalf"
                  factValue="the Grey"
                  isSubFact={true}
                />
              </td>
            </tr>
            <tr
              key="Meriadoc"
            >
              <td
                className="pf-c-table__check nested-fact"
              >
                <Checkbox
                  className=""
                  id="fact-6"
                  isChecked={false}
                  isDisabled={false}
                  isValid={true}
                  name={6}
                  onChange={[Function]}
                />
              </td>
              <td>
                <p
                  className="child-row"
                >
                  Meriadoc
                </p>
              </td>
              <td>
                Brandybuck
              </td>
              <td>
                <Connect(FactKebab)
                  fact={
                    Object {
                      "name": "The Fellowship of the Ring",
                      "values": Array [
                        Object {
                          "name": "Frodo",
                          "value": "Baggins",
                        },
                        Object {
                          "name": "Samwise",
                          "value": "Gamgee",
                        },
                        Object {
                          "name": "Gandalf",
                          "value": "the Grey",
                        },
                        Object {
                          "name": "Meriadoc",
                          "value": "Brandybuck",
                        },
                        Object {
                          "name": "Peregrin",
                          "value": "Took",
                        },
                        Object {
                          "name": "Gimli",
                          "value": "song of Gloin",
                        },
                        Object {
                          "name": "Legolas",
                          "value": "Greenleaf",
                        },
                        Object {
                          "name": "Boromir",
                          "value": "son of Denethor",
                        },
                        Object {
                          "name": "Aragorn",
                          "value": "son of Arathorn",
                        },
                      ],
                    }
                  }
                  factName="Meriadoc"
                  factValue="Brandybuck"
                  isSubFact={true}
                />
              </td>
            </tr>
            <tr
              key="Peregrin"
            >
              <td
                className="pf-c-table__check nested-fact"
              >
                <Checkbox
                  className=""
                  id="fact-7"
                  isChecked={false}
                  isDisabled={false}
                  isValid={true}
                  name={7}
                  onChange={[Function]}
                />
              </td>
              <td>
                <p
                  className="child-row"
                >
                  Peregrin
                </p>
              </td>
              <td>
                Took
              </td>
              <td>
                <Connect(FactKebab)
                  fact={
                    Object {
                      "name": "The Fellowship of the Ring",
                      "values": Array [
                        Object {
                          "name": "Frodo",
                          "value": "Baggins",
                        },
                        Object {
                          "name": "Samwise",
                          "value": "Gamgee",
                        },
                        Object {
                          "name": "Gandalf",
                          "value": "the Grey",
                        },
                        Object {
                          "name": "Meriadoc",
                          "value": "Brandybuck",
                        },
                        Object {
                          "name": "Peregrin",
                          "value": "Took",
                        },
                        Object {
                          "name": "Gimli",
                          "value": "song of Gloin",
                        },
                        Object {
                          "name": "Legolas",
                          "value": "Greenleaf",
                        },
                        Object {
                          "name": "Boromir",
                          "value": "son of Denethor",
                        },
                        Object {
                          "name": "Aragorn",
                          "value": "son of Arathorn",
                        },
                      ],
                    }
                  }
                  factName="Peregrin"
                  factValue="Took"
                  isSubFact={true}
                />
              </td>
            </tr>
            <tr
              key="Gimli"
            >
              <td
                className="pf-c-table__check nested-fact"
              >
                <Checkbox
                  className=""
                  id="fact-8"
                  isChecked={false}
                  isDisabled={false}
                  isValid={true}
                  name={8}
                  onChange={[Function]}
                />
              </td>
              <td>
                <p
                  className="child-row"
                >
                  Gimli
                </p>
              </td>
              <td>
                son of Gloin
              </td>
              <td>
                <Connect(FactKebab)
                  fact={
                    Object {
                      "name": "The Fellowship of the Ring",
                      "values": Array [
                        Object {
                          "name": "Frodo",
                          "value": "Baggins",
                        },
                        Object {
                          "name": "Samwise",
                          "value": "Gamgee",
                        },
                        Object {
                          "name": "Gandalf",
                          "value": "the Grey",
                        },
                        Object {
                          "name": "Meriadoc",
                          "value": "Brandybuck",
                        },
                        Object {
                          "name": "Peregrin",
                          "value": "Took",
                        },
                        Object {
                          "name": "Gimli",
                          "value": "song of Gloin",
                        },
                        Object {
                          "name": "Legolas",
                          "value": "Greenleaf",
                        },
                        Object {
                          "name": "Boromir",
                          "value": "son of Denethor",
                        },
                        Object {
                          "name": "Aragorn",
                          "value": "son of Arathorn",
                        },
                      ],
                    }
                  }
                  factName="Gimli"
                  factValue="son of Gloin"
                  isSubFact={true}
                />
              </td>
            </tr>
            <tr
              key="Legolas"
            >
              <td
                className="pf-c-table__check nested-fact"
              >
                <Checkbox
                  className=""
                  id="fact-9"
                  isChecked={false}
                  isDisabled={false}
                  isValid={true}
                  name={9}
                  onChange={[Function]}
                />
              </td>
              <td>
                <p
                  className="child-row"
                >
                  Legolas
                </p>
              </td>
              <td>
                Greenleaf
              </td>
              <td>
                <Connect(FactKebab)
                  fact={
                    Object {
                      "name": "The Fellowship of the Ring",
                      "values": Array [
                        Object {
                          "name": "Frodo",
                          "value": "Baggins",
                        },
                        Object {
                          "name": "Samwise",
                          "value": "Gamgee",
                        },
                        Object {
                          "name": "Gandalf",
                          "value": "the Grey",
                        },
                        Object {
                          "name": "Meriadoc",
                          "value": "Brandybuck",
                        },
                        Object {
                          "name": "Peregrin",
                          "value": "Took",
                        },
                        Object {
                          "name": "Gimli",
                          "value": "song of Gloin",
                        },
                        Object {
                          "name": "Legolas",
                          "value": "Greenleaf",
                        },
                        Object {
                          "name": "Boromir",
                          "value": "son of Denethor",
                        },
                        Object {
                          "name": "Aragorn",
                          "value": "son of Arathorn",
                        },
                      ],
                    }
                  }
                  factName="Legolas"
                  factValue="Greenleaf"
                  isSubFact={true}
                />
              </td>
            </tr>
            <tr
              key="Boromir"
            >
              <td
                className="pf-c-table__check nested-fact"
              >
                <Checkbox
                  className=""
                  id="fact-10"
                  isChecked={false}
                  isDisabled={false}
                  isValid={true}
                  name={10}
                  onChange={[Function]}
                />
              </td>
              <td>
                <p
                  className="child-row"
                >
                  Boromir
                </p>
              </td>
              <td>
                son of Denethor
              </td>
              <td>
                <Connect(FactKebab)
                  fact={
                    Object {
                      "name": "The Fellowship of the Ring",
                      "values": Array [
                        Object {
                          "name": "Frodo",
                          "value": "Baggins",
                        },
                        Object {
                          "name": "Samwise",
                          "value": "Gamgee",
                        },
                        Object {
                          "name": "Gandalf",
                          "value": "the Grey",
                        },
                        Object {
                          "name": "Meriadoc",
                          "value": "Brandybuck",
                        },
                        Object {
                          "name": "Peregrin",
                          "value": "Took",
                        },
                        Object {
                          "name": "Gimli",
                          "value": "song of Gloin",
                        },
                        Object {
                          "name": "Legolas",
                          "value": "Greenleaf",
                        },
                        Object {
                          "name": "Boromir",
                          "value": "son of Denethor",
                        },
                        Object {
                          "name": "Aragorn",
                          "value": "son of Arathorn",
                        },
                      ],
                    }
                  }
                  factName="Boromir"
                  factValue="son of Denethor"
                  isSubFact={true}
                />
              </td>
            </tr>
            <tr
              key="Aragorn"
            >
              <td
                className="pf-c-table__check nested-fact"
              >
                <Checkbox
                  className=""
                  id="fact-11"
                  isChecked={false}
                  isDisabled={false}
                  isValid={true}
                  name={11}
                  onChange={[Function]}
                />
              </td>
              <td>
                <p
                  className="child-row"
                >
                  Aragorn
                </p>
              </td>
              <td>
                son of Arathorn
              </td>
              <td>
                <Connect(FactKebab)
                  fact={
                    Object {
                      "name": "The Fellowship of the Ring",
                      "values": Array [
                        Object {
                          "name": "Frodo",
                          "value": "Baggins",
                        },
                        Object {
                          "name": "Samwise",
                          "value": "Gamgee",
                        },
                        Object {
                          "name": "Gandalf",
                          "value": "the Grey",
                        },
                        Object {
                          "name": "Meriadoc",
                          "value": "Brandybuck",
                        },
                        Object {
                          "name": "Peregrin",
                          "value": "Took",
                        },
                        Object {
                          "name": "Gimli",
                          "value": "song of Gloin",
                        },
                        Object {
                          "name": "Legolas",
                          "value": "Greenleaf",
                        },
                        Object {
                          "name": "Boromir",
                          "value": "son of Denethor",
                        },
                        Object {
                          "name": "Aragorn",
                          "value": "son of Arathorn",
                        },
                      ],
                    }
                  }
                  factName="Aragorn"
                  factValue="son of Arathorn"
                  isSubFact={true}
                />
              </td>
            </tr>
          </tbody>
        </table>
      </CardBody>
    </Card>
  </Connect(Main)>
</Fragment>
`;

exports[`EditBaseline should render loading rows 1`] = `
<Fragment>
  <PageHeader>
    <Breadcrumb>
      <BreadcrumbItem>
        <a
          onClick={[Function]}
        >
          Baselines
        </a>
      </BreadcrumbItem>
    </Breadcrumb>
    <PageHeaderTitle
      title="Baseline"
    />
  </PageHeader>
  <Connect(Main)>
    <div />
    <Connect(ErrorAlert)
      error={Object {}}
    />
    <Card
      className="pf-t-light pf-m-opaque-100"
    >
      <CardBody>
        <EditBaselineToolbar
          isDisabled={true}
          onBulkSelect={[Function]}
          selected={0}
          totalFacts={0}
        />
        <table
          className="pf-c-table ins-c-table pf-m-grid-md ins-entity-table drift-table"
        >
          <thead>
            <tr
              key="edit-baseline-table-header"
            >
              <th />
              <th
                className="edit-baseline-header"
              >
                <div>
                  Fact
                </div>
              </th>
              <th
                className="edit-baseline-header"
              >
                <div>
                  Value
                </div>
              </th>
              <th />
            </tr>
          </thead>
          <tbody
            key="edit-baseline-table"
          />
        </table>
      </CardBody>
    </Card>
  </Connect(Main)>
</Fragment>
`;

exports[`EditBaseline should render with baseline facts 1`] = `
<Fragment>
  <Connect(EditBaselineNameModal)
    baselineData={
      Object {
        "account": "12345678",
        "baseline_facts": Array [
          Object {
            "name": "Sauron",
            "value": "the Dark Lord",
          },
          Object {
            "name": "Galadriel",
            "value": "the Elven Queen",
          },
          Object {
            "name": "The Fellowship of the Ring",
            "values": Array [
              Object {
                "name": "Frodo",
                "value": "Baggins",
              },
              Object {
                "name": "Samwise",
                "value": "Gamgee",
              },
              Object {
                "name": "Gandalf",
                "value": "the Grey",
              },
              Object {
                "name": "Meriadoc",
                "value": "Brandybuck",
              },
              Object {
                "name": "Peregrin",
                "value": "Took",
              },
              Object {
                "name": "Gimli",
                "value": "son of Gloin",
              },
              Object {
                "name": "Legolas",
                "value": "Greenleaf",
              },
              Object {
                "name": "Boromir",
                "value": "son of Denethor",
              },
              Object {
                "name": "Aragorn",
                "value": "son of Arathorn",
              },
            ],
          },
        ],
        "created": "2019-10-17T16:20:06.050710Z",
        "display_name": "lotr-baseline",
        "fact_count": 3,
        "id": "jf8alskj-jf74-aje8-ke83-jf84ldjru439k",
        "updated": "2020-02-06T21:48:30.661510Z",
      }
    }
    modalOpened={false}
    toggleEditNameModal={[Function]}
  />
  <PageHeader>
    <Breadcrumb>
      <BreadcrumbItem>
        <a
          onClick={[Function]}
        >
          Baselines
        </a>
      </BreadcrumbItem>
      <BreadcrumbHeading>
        lotr-baseline
      </BreadcrumbHeading>
    </Breadcrumb>
    <PageHeaderTitle
      title="lotr-baseline"
    />
    <EditAltIcon
      className="pointer not-active edit-icon-margin"
      color="currentColor"
      noVerticalAlign={false}
      onClick={[Function]}
      size="sm"
    />
  </PageHeader>
  <Connect(Main)>
    <div />
    <Connect(ErrorAlert)
      error={Object {}}
    />
    <Card
      className="pf-t-light pf-m-opaque-100"
    >
      <CardBody>
        <EditBaselineToolbar
          isDisabled={false}
          onBulkSelect={[Function]}
          selected={0}
          totalFacts={11}
        />
        <table
          className="pf-c-table ins-c-table pf-m-grid-md ins-entity-table drift-table"
        >
          <thead>
            <tr
              key="edit-baseline-table-header"
            >
              <th />
              <th
                className="edit-baseline-header"
              >
                <div>
                  Fact
                </div>
              </th>
              <th
                className="edit-baseline-header"
              >
                <div>
                  Value
                </div>
              </th>
              <th />
            </tr>
          </thead>
          <tbody
            key="edit-baseline-table"
          >
            <tr
              key="Sauron"
            >
              <td
                className="pf-c-table__check"
              >
                <Checkbox
                  className=""
                  id="fact-0"
                  isChecked={false}
                  isDisabled={false}
                  isValid={true}
                  name={0}
                  onChange={[Function]}
                />
              </td>
              <td>
                Sauron
              </td>
              <td>
                the Dark Lord
              </td>
              <td>
                <Connect(FactKebab)
                  fact={
                    Object {
                      "name": "Sauron",
                      "value": "the Dark Lord",
                    }
                  }
                  factName="Sauron"
                  factValue="the Dark Lord"
                />
              </td>
            </tr>
            <tr
              key="Galadriel"
            >
              <td
                className="pf-c-table__check"
              >
                <Checkbox
                  className=""
                  id="fact-1"
                  isChecked={false}
                  isDisabled={false}
                  isValid={true}
                  name={1}
                  onChange={[Function]}
                />
              </td>
              <td>
                Galadriel
              </td>
              <td>
                the Elven Queen
              </td>
              <td>
                <Connect(FactKebab)
                  fact={
                    Object {
                      "name": "Galadriel",
                      "value": "the Elven Queen",
                    }
                  }
                  factName="Galadriel"
                  factValue="the Elven Queen"
                />
              </td>
            </tr>
            <tr
              key="The Fellowship of the Ring"
            >
              <td
                className="pf-c-table__check"
              >
                <Checkbox
                  className=""
                  id="category-2"
                  isChecked={false}
                  isDisabled={false}
                  isValid={true}
                  name={2}
                  onChange={[Function]}
                />
              </td>
              <td>
                <AngleRightIcon
                  className="pointer"
                  color="currentColor"
                  noVerticalAlign={false}
                  onClick={[Function]}
                  size="sm"
                />
                 
                The Fellowship of the Ring
              </td>
              <td />
              <td>
                <Connect(FactKebab)
                  fact={
                    Object {
                      "name": "The Fellowship of the Ring",
                      "values": Array [
                        Object {
                          "name": "Frodo",
                          "value": "Baggins",
                        },
                        Object {
                          "name": "Samwise",
                          "value": "Gamgee",
                        },
                        Object {
                          "name": "Gandalf",
                          "value": "the Grey",
                        },
                        Object {
                          "name": "Meriadoc",
                          "value": "Brandybuck",
                        },
                        Object {
                          "name": "Peregrin",
                          "value": "Took",
                        },
                        Object {
                          "name": "Gimli",
                          "value": "son of Gloin",
                        },
                        Object {
                          "name": "Legolas",
                          "value": "Greenleaf",
                        },
                        Object {
                          "name": "Boromir",
                          "value": "son of Denethor",
                        },
                        Object {
                          "name": "Aragorn",
                          "value": "son of Arathorn",
                        },
                      ],
                    }
                  }
                  factName="The Fellowship of the Ring"
                  isCategory={true}
                />
              </td>
            </tr>
          </tbody>
        </table>
      </CardBody>
    </Card>
  </Connect(Main)>
</Fragment>
`;
