// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ConnectedEditBaseline should render correctly 1`] = `
<MemoryRouter
  keyLength={0}
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <withRouter(Connect(EditBaseline))>
        <Connect(EditBaseline)
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "canGo": [Function],
              "createHref": [Function],
              "entries": Array [
                Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              ],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "index": 0,
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
          location={
            Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            }
          }
          match={
            Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            }
          }
        >
          <EditBaseline
            baselineData={Array []}
            baselineDataLoading={false}
            clearBaselineData={[Function]}
            clearErrorData={[Function]}
            editBaselineEmptyState={false}
            editBaselineError={Object {}}
            editBaselineTableData={Array []}
            expandRow={[Function]}
            expandedRows={Array []}
            exportToCSV={[Function]}
            factModalOpened={false}
            fetchBaselineData={[Function]}
            fetchBaselines={[Function]}
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            inlineError={Object {}}
            location={
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              }
            }
            match={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
            selectFact={[Function]}
          >
            <Connect(EditBaselineNameModal)
              baselineData={Array []}
              error={Object {}}
              modalOpened={false}
              toggleEditNameModal={[Function]}
            >
              <EditBaselineNameModal
                baselineData={Array []}
                error={Object {}}
                modalOpened={false}
                patchBaseline={[Function]}
                toggleEditNameModal={[Function]}
              >
                <Modal
                  actions={
                    Array [
                      <Button
                        onClick={[Function]}
                        ouiaId="save"
                        variant="primary"
                      >
                        Save
                      </Button>,
                      <Button
                        onClick={[Function]}
                        ouiaId="cancel"
                        variant="link"
                      >
                        Cancel
                      </Button>,
                    ]
                  }
                  appendTo={[Function]}
                  aria-describedby=""
                  aria-label=""
                  aria-labelledby=""
                  className=""
                  hasNoBodyWrapper={false}
                  isOpen={false}
                  onClose={[Function]}
                  ouiaSafe={true}
                  showClose={true}
                  title="Edit name"
                  titleIconVariant={null}
                  titleLabel=""
                  variant="small"
                >
                  <Portal
                    containerInfo={<div />}
                  >
                    <ModalContent
                      actions={
                        Array [
                          <Button
                            onClick={[Function]}
                            ouiaId="save"
                            variant="primary"
                          >
                            Save
                          </Button>,
                          <Button
                            onClick={[Function]}
                            ouiaId="cancel"
                            variant="link"
                          >
                            Cancel
                          </Button>,
                        ]
                      }
                      aria-describedby=""
                      aria-label=""
                      aria-labelledby=""
                      boxId="pf-modal-part-0"
                      className=""
                      descriptorId="pf-modal-part-2"
                      hasNoBodyWrapper={false}
                      isOpen={false}
                      labelId="pf-modal-part-1"
                      onClose={[Function]}
                      ouiaId="OUIA-Generated-Modal-small-1"
                      ouiaSafe={true}
                      showClose={true}
                      title="Edit name"
                      titleIconVariant={null}
                      titleLabel=""
                      variant="small"
                    />
                  </Portal>
                </Modal>
              </EditBaselineNameModal>
            </Connect(EditBaselineNameModal)>
            <PageHeader>
              <section
                className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                widget-type="InsightsPageHeader"
              >
                <Breadcrumb>
                  <nav
                    aria-label="Breadcrumb"
                    className="pf-c-breadcrumb"
                    data-ouia-component-id="OUIA-Generated-Breadcrumb-1"
                    data-ouia-component-type="PF4/Breadcrumb"
                    data-ouia-safe={true}
                  >
                    <ol
                      className="pf-c-breadcrumb__list"
                    >
                      <BreadcrumbItem
                        key=".0"
                        showDivider={false}
                      >
                        <li
                          className="pf-c-breadcrumb__item"
                        >
                          <a
                            onClick={[Function]}
                          >
                            Baselines
                          </a>
                        </li>
                      </BreadcrumbItem>
                      <BreadcrumbHeading
                        key=".1"
                        showDivider={true}
                      >
                        <li
                          className="pf-c-breadcrumb__item"
                        >
                          <h1
                            className="pf-c-breadcrumb__heading"
                          >
                            <span
                              className="pf-c-breadcrumb__item-divider"
                            >
                              <AngleRightIcon
                                color="currentColor"
                                noVerticalAlign={false}
                                size="sm"
                              >
                                <svg
                                  aria-hidden={true}
                                  aria-labelledby={null}
                                  fill="currentColor"
                                  height="1em"
                                  role="img"
                                  style={
                                    Object {
                                      "verticalAlign": "-0.125em",
                                    }
                                  }
                                  viewBox="0 0 256 512"
                                  width="1em"
                                >
                                  <path
                                    d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                  />
                                </svg>
                              </AngleRightIcon>
                            </span>
                          </h1>
                        </li>
                      </BreadcrumbHeading>
                    </ol>
                  </nav>
                </Breadcrumb>
                <div
                  id="edit-baseline-title"
                >
                  <span
                    className="pf-c-title pf-m-2xl"
                  />
                  <span>
                    <EditAltIcon
                      className="pointer not-active edit-icon-margin"
                      color="currentColor"
                      noVerticalAlign={false}
                      onClick={[Function]}
                      size="sm"
                    >
                      <svg
                        aria-hidden={true}
                        aria-labelledby={null}
                        className="pointer not-active edit-icon-margin"
                        fill="currentColor"
                        height="1em"
                        onClick={[Function]}
                        role="img"
                        style={
                          Object {
                            "verticalAlign": "-0.125em",
                          }
                        }
                        viewBox="0 0 1024 1024"
                        width="1em"
                      >
                        <path
                          d="M1024,187.9 C1024,207 1017.3,223.1 1004,236.4 L857.5,386.9 L638.8,168.4 L787.3,20.5 C800.3,6.83333333 816.5,0 835.9,0 C855,0 871.366667,6.83333333 885,20.5 L1004,138.9 C1017.3,152.9 1023.96667,169.233333 1024,187.9 Z M806.2,438.9 L219.4,1024 L0,1024 L0,804.6 L586.6,219.5 L806.2,438.9 Z M219.6,950.9 L292.9,877.8 L146.3,731.4 L73.2,804.5 L73.2,877.6 L146.3,877.6 L146.3,951 L219.6,950.9 Z"
                        />
                      </svg>
                    </EditAltIcon>
                  </span>
                </div>
              </section>
            </PageHeader>
            <Connect(Main)>
              <Main>
                <section
                  className="pf-l-page__main-section pf-c-page__main-section"
                  page-type=""
                >
                  <div />
                  <Connect(ErrorAlert)
                    error={Object {}}
                    onClose={[Function]}
                  >
                    <ErrorAlert
                      addNotification={[Function]}
                      error={Object {}}
                      onClose={[Function]}
                    />
                  </Connect(ErrorAlert)>
                  <Card
                    className="pf-t-light pf-m-opaque-100"
                  >
                    <article
                      className="pf-c-card pf-t-light pf-m-opaque-100"
                      data-ouia-component-id="OUIA-Generated-Card-1"
                      data-ouia-component-type="PF4/Card"
                      data-ouia-safe={true}
                      id=""
                    >
                      <CardBody>
                        <div
                          className="pf-c-card__body"
                        >
                          <EditBaselineToolbar
                            baselineData={Array []}
                            exportToCSV={[Function]}
                            hasWritePermissions={true}
                            isDisabled={true}
                            onBulkSelect={[Function]}
                            selected={0}
                            tableData={Array []}
                            totalFacts={0}
                          >
                            <Toolbar
                              className="drift-toolbar"
                            >
                              <GenerateId
                                prefix="pf-random-id-"
                              >
                                <div
                                  className="pf-c-toolbar drift-toolbar"
                                  id="pf-random-id-0"
                                >
                                  <ToolbarContent
                                    isExpanded={false}
                                    showClearFiltersButton={false}
                                  >
                                    <div
                                      className="pf-c-toolbar__content"
                                    >
                                      <div
                                        className="pf-c-toolbar__content-section"
                                      >
                                        <ToolbarItem>
                                          <div
                                            className="pf-c-toolbar__item"
                                          >
                                            <BulkSelect
                                              checked={false}
                                              className=""
                                              count={null}
                                              isDisabled={true}
                                              items={
                                                Array [
                                                  Object {
                                                    "key": "select-all",
                                                    "onClick": [Function],
                                                    "title": "Select all",
                                                  },
                                                  Object {
                                                    "key": "select-none",
                                                    "onClick": [Function],
                                                    "title": "Select none",
                                                  },
                                                ]
                                              }
                                              onSelect={[Function]}
                                            >
                                              <Dropdown
                                                className="ins-c-bulk-select"
                                                dropdownItems={
                                                  Array [
                                                    <DropdownItem
                                                      component="button"
                                                      onClick={[Function]}
                                                    >
                                                      Select all
                                                    </DropdownItem>,
                                                    <DropdownItem
                                                      component="button"
                                                      onClick={[Function]}
                                                    >
                                                      Select none
                                                    </DropdownItem>,
                                                  ]
                                                }
                                                isOpen={false}
                                                onSelect={[Function]}
                                                toggle={
                                                  <DropdownToggle
                                                    isDisabled={true}
                                                    onToggle={[Function]}
                                                    splitButtonItems={
                                                      Array [
                                                        <React.Fragment>
                                                          <DropdownToggleCheckbox
                                                            aria-label="Select all"
                                                            className=""
                                                            id="toggle-checkbox"
                                                            isChecked={false}
                                                            isDisabled={false}
                                                            isValid={true}
                                                            onChange={[Function]}
                                                          >
                                                            
                                                          </DropdownToggleCheckbox>
                                                        </React.Fragment>,
                                                      ]
                                                    }
                                                  />
                                                }
                                              >
                                                <DropdownWithContext
                                                  autoFocus={true}
                                                  className="ins-c-bulk-select"
                                                  direction="down"
                                                  dropdownItems={
                                                    Array [
                                                      <DropdownItem
                                                        component="button"
                                                        onClick={[Function]}
                                                      >
                                                        Select all
                                                      </DropdownItem>,
                                                      <DropdownItem
                                                        component="button"
                                                        onClick={[Function]}
                                                      >
                                                        Select none
                                                      </DropdownItem>,
                                                    ]
                                                  }
                                                  isGrouped={false}
                                                  isOpen={false}
                                                  isPlain={false}
                                                  menuAppendTo="inline"
                                                  onSelect={[Function]}
                                                  position="left"
                                                  toggle={
                                                    <DropdownToggle
                                                      isDisabled={true}
                                                      onToggle={[Function]}
                                                      splitButtonItems={
                                                        Array [
                                                          <React.Fragment>
                                                            <DropdownToggleCheckbox
                                                              aria-label="Select all"
                                                              className=""
                                                              id="toggle-checkbox"
                                                              isChecked={false}
                                                              isDisabled={false}
                                                              isValid={true}
                                                              onChange={[Function]}
                                                            >
                                                              
                                                            </DropdownToggleCheckbox>
                                                          </React.Fragment>,
                                                        ]
                                                      }
                                                    />
                                                  }
                                                >
                                                  <div
                                                    className="pf-c-dropdown ins-c-bulk-select"
                                                    data-ouia-component-id="OUIA-Generated-Dropdown-1"
                                                    data-ouia-component-type="PF4/Dropdown"
                                                    data-ouia-safe={true}
                                                  >
                                                    <DropdownToggle
                                                      aria-haspopup={true}
                                                      getMenuRef={[Function]}
                                                      id="pf-dropdown-toggle-id-0"
                                                      isDisabled={true}
                                                      isOpen={false}
                                                      isPlain={false}
                                                      key=".0"
                                                      onEnter={[Function]}
                                                      onToggle={[Function]}
                                                      parentRef={
                                                        Object {
                                                          "current": <div
                                                            class="pf-c-dropdown ins-c-bulk-select"
                                                            data-ouia-component-id="OUIA-Generated-Dropdown-1"
                                                            data-ouia-component-type="PF4/Dropdown"
                                                            data-ouia-safe="true"
                                                          >
                                                            <div
                                                              class="pf-c-dropdown__toggle pf-m-split-button pf-m-disabled"
                                                            >
                                                              <label
                                                                class="pf-c-dropdown__toggle-check"
                                                                for="toggle-checkbox"
                                                              >
                                                                <input
                                                                  aria-invalid="false"
                                                                  aria-label="Select all"
                                                                  data-ouia-component-id="OUIA-Generated-DropdownToggleCheckbox-1"
                                                                  data-ouia-component-type="PF4/DropdownToggleCheckbox"
                                                                  data-ouia-safe="true"
                                                                  id="toggle-checkbox"
                                                                  type="checkbox"
                                                                />
                                                                
                                                              </label>
                                                              <button
                                                                aria-expanded="false"
                                                                aria-haspopup="true"
                                                                aria-label="Select"
                                                                class="pf-c-dropdown__toggle-button"
                                                                data-ouia-component-id="OUIA-Generated-DropdownToggle-1"
                                                                data-ouia-component-type="PF4/DropdownToggle"
                                                                data-ouia-safe="true"
                                                                disabled=""
                                                                id="pf-dropdown-toggle-id-0"
                                                                type="button"
                                                              >
                                                                <span
                                                                  class=""
                                                                >
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    fill="currentColor"
                                                                    height="1em"
                                                                    role="img"
                                                                    style="vertical-align: -0.125em;"
                                                                    viewBox="0 0 320 512"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                    />
                                                                  </svg>
                                                                </span>
                                                              </button>
                                                            </div>
                                                          </div>,
                                                        }
                                                      }
                                                      splitButtonItems={
                                                        Array [
                                                          <React.Fragment>
                                                            <DropdownToggleCheckbox
                                                              aria-label="Select all"
                                                              className=""
                                                              id="toggle-checkbox"
                                                              isChecked={false}
                                                              isDisabled={false}
                                                              isValid={true}
                                                              onChange={[Function]}
                                                            >
                                                              
                                                            </DropdownToggleCheckbox>
                                                          </React.Fragment>,
                                                        ]
                                                      }
                                                    >
                                                      <div
                                                        className="pf-c-dropdown__toggle pf-m-split-button pf-m-disabled"
                                                      >
                                                        <DropdownToggleCheckbox
                                                          aria-label="Select all"
                                                          className=""
                                                          id="toggle-checkbox"
                                                          isChecked={false}
                                                          isDisabled={false}
                                                          isValid={true}
                                                          onChange={[Function]}
                                                        >
                                                          <label
                                                            className="pf-c-dropdown__toggle-check"
                                                            htmlFor="toggle-checkbox"
                                                          >
                                                            <input
                                                              aria-invalid={false}
                                                              aria-label="Select all"
                                                              checked={false}
                                                              data-ouia-component-id="OUIA-Generated-DropdownToggleCheckbox-1"
                                                              data-ouia-component-type="PF4/DropdownToggleCheckbox"
                                                              data-ouia-safe={true}
                                                              disabled={false}
                                                              id="toggle-checkbox"
                                                              onChange={[Function]}
                                                              type="checkbox"
                                                            />
                                                          </label>
                                                        </DropdownToggleCheckbox>
                                                        <Toggle
                                                          aria-haspopup={true}
                                                          aria-label="Select"
                                                          bubbleEvent={false}
                                                          className=""
                                                          data-ouia-component-id="OUIA-Generated-DropdownToggle-1"
                                                          data-ouia-component-type="PF4/DropdownToggle"
                                                          data-ouia-safe={true}
                                                          getMenuRef={[Function]}
                                                          id="pf-dropdown-toggle-id-0"
                                                          isActive={false}
                                                          isDisabled={true}
                                                          isOpen={false}
                                                          isPlain={false}
                                                          isPrimary={false}
                                                          isSplitButton={true}
                                                          onEnter={[Function]}
                                                          onToggle={[Function]}
                                                          parentRef={
                                                            Object {
                                                              "current": <div
                                                                class="pf-c-dropdown ins-c-bulk-select"
                                                                data-ouia-component-id="OUIA-Generated-Dropdown-1"
                                                                data-ouia-component-type="PF4/Dropdown"
                                                                data-ouia-safe="true"
                                                              >
                                                                <div
                                                                  class="pf-c-dropdown__toggle pf-m-split-button pf-m-disabled"
                                                                >
                                                                  <label
                                                                    class="pf-c-dropdown__toggle-check"
                                                                    for="toggle-checkbox"
                                                                  >
                                                                    <input
                                                                      aria-invalid="false"
                                                                      aria-label="Select all"
                                                                      data-ouia-component-id="OUIA-Generated-DropdownToggleCheckbox-1"
                                                                      data-ouia-component-type="PF4/DropdownToggleCheckbox"
                                                                      data-ouia-safe="true"
                                                                      id="toggle-checkbox"
                                                                      type="checkbox"
                                                                    />
                                                                    
                                                                  </label>
                                                                  <button
                                                                    aria-expanded="false"
                                                                    aria-haspopup="true"
                                                                    aria-label="Select"
                                                                    class="pf-c-dropdown__toggle-button"
                                                                    data-ouia-component-id="OUIA-Generated-DropdownToggle-1"
                                                                    data-ouia-component-type="PF4/DropdownToggle"
                                                                    data-ouia-safe="true"
                                                                    disabled=""
                                                                    id="pf-dropdown-toggle-id-0"
                                                                    type="button"
                                                                  >
                                                                    <span
                                                                      class=""
                                                                    >
                                                                      <svg
                                                                        aria-hidden="true"
                                                                        fill="currentColor"
                                                                        height="1em"
                                                                        role="img"
                                                                        style="vertical-align: -0.125em;"
                                                                        viewBox="0 0 320 512"
                                                                        width="1em"
                                                                      >
                                                                        <path
                                                                          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                        />
                                                                      </svg>
                                                                    </span>
                                                                  </button>
                                                                </div>
                                                              </div>,
                                                            }
                                                          }
                                                        >
                                                          <button
                                                            aria-expanded={false}
                                                            aria-haspopup={true}
                                                            aria-label="Select"
                                                            className="pf-c-dropdown__toggle-button"
                                                            data-ouia-component-id="OUIA-Generated-DropdownToggle-1"
                                                            data-ouia-component-type="PF4/DropdownToggle"
                                                            data-ouia-safe={true}
                                                            disabled={true}
                                                            id="pf-dropdown-toggle-id-0"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            type="button"
                                                          >
                                                            <span
                                                              className=""
                                                            >
                                                              <CaretDownIcon
                                                                color="currentColor"
                                                                noVerticalAlign={false}
                                                                size="sm"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  aria-labelledby={null}
                                                                  fill="currentColor"
                                                                  height="1em"
                                                                  role="img"
                                                                  style={
                                                                    Object {
                                                                      "verticalAlign": "-0.125em",
                                                                    }
                                                                  }
                                                                  viewBox="0 0 320 512"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                  />
                                                                </svg>
                                                              </CaretDownIcon>
                                                            </span>
                                                          </button>
                                                        </Toggle>
                                                      </div>
                                                    </DropdownToggle>
                                                  </div>
                                                </DropdownWithContext>
                                              </Dropdown>
                                            </BulkSelect>
                                          </div>
                                        </ToolbarItem>
                                        <ToolbarItem>
                                          <div
                                            className="pf-c-toolbar__item"
                                          >
                                            <Connect(AddFactButton)
                                              hasWritePermissions={true}
                                              isDisabled={true}
                                            >
                                              <AddFactButton
                                                hasWritePermissions={true}
                                                isDisabled={true}
                                                setFactData={[Function]}
                                                toggleFactModal={[Function]}
                                              >
                                                <Button
                                                  isDisabled={true}
                                                  onClick={[Function]}
                                                  ouiaId="add_fact"
                                                  variant="primary"
                                                >
                                                  <button
                                                    aria-disabled={true}
                                                    aria-label={null}
                                                    className="pf-c-button pf-m-primary pf-m-disabled"
                                                    data-ouia-component-id="add_fact"
                                                    data-ouia-component-type="PF4/Button"
                                                    data-ouia-safe={true}
                                                    disabled={true}
                                                    onClick={[Function]}
                                                    role={null}
                                                    tabIndex={null}
                                                    type="button"
                                                  >
                                                    Add fact or category
                                                  </button>
                                                </Button>
                                              </AddFactButton>
                                            </Connect(AddFactButton)>
                                          </div>
                                        </ToolbarItem>
                                        <ForwardRef
                                          variant="icon-button-group"
                                        >
                                          <ToolbarGroupWithRef
                                            innerRef={null}
                                            variant="icon-button-group"
                                          >
                                            <div
                                              className="pf-c-toolbar__group pf-m-icon-button-group"
                                            >
                                              <ToolbarItem>
                                                <div
                                                  className="pf-c-toolbar__item"
                                                >
                                                  <ExportCSVButton
                                                    dropdownItems={
                                                      Array [
                                                        <DropdownItem
                                                          component="button"
                                                          onClick={[Function]}
                                                        >
                                                          Export to CSV
                                                        </DropdownItem>,
                                                      ]
                                                    }
                                                    isOpen={false}
                                                    onToggle={[Function]}
                                                  >
                                                    <Dropdown
                                                      dropdownItems={
                                                        Array [
                                                          <DropdownItem
                                                            component="button"
                                                            onClick={[Function]}
                                                          >
                                                            Export to CSV
                                                          </DropdownItem>,
                                                        ]
                                                      }
                                                      isOpen={false}
                                                      isPlain={true}
                                                      ouiaId="export"
                                                      position="left"
                                                      toggle={
                                                        <DropdownToggle
                                                          onToggle={[Function]}
                                                          toggleIndicator={null}
                                                        >
                                                          <ExportIcon
                                                            className="pointer not-active"
                                                            color="currentColor"
                                                            noVerticalAlign={false}
                                                            size="sm"
                                                          />
                                                        </DropdownToggle>
                                                      }
                                                    >
                                                      <DropdownWithContext
                                                        autoFocus={true}
                                                        className=""
                                                        direction="down"
                                                        dropdownItems={
                                                          Array [
                                                            <DropdownItem
                                                              component="button"
                                                              onClick={[Function]}
                                                            >
                                                              Export to CSV
                                                            </DropdownItem>,
                                                          ]
                                                        }
                                                        isGrouped={false}
                                                        isOpen={false}
                                                        isPlain={true}
                                                        menuAppendTo="inline"
                                                        onSelect={[Function]}
                                                        position="left"
                                                        toggle={
                                                          <DropdownToggle
                                                            onToggle={[Function]}
                                                            toggleIndicator={null}
                                                          >
                                                            <ExportIcon
                                                              className="pointer not-active"
                                                              color="currentColor"
                                                              noVerticalAlign={false}
                                                              size="sm"
                                                            />
                                                          </DropdownToggle>
                                                        }
                                                      >
                                                        <div
                                                          className="pf-c-dropdown"
                                                          data-ouia-component-id="export"
                                                          data-ouia-component-type="PF4/Dropdown"
                                                          data-ouia-safe={true}
                                                        >
                                                          <DropdownToggle
                                                            aria-haspopup={true}
                                                            getMenuRef={[Function]}
                                                            id="pf-dropdown-toggle-id-1"
                                                            isOpen={false}
                                                            isPlain={true}
                                                            key=".0"
                                                            onEnter={[Function]}
                                                            onToggle={[Function]}
                                                            parentRef={
                                                              Object {
                                                                "current": <div
                                                                  class="pf-c-dropdown"
                                                                  data-ouia-component-id="export"
                                                                  data-ouia-component-type="PF4/Dropdown"
                                                                  data-ouia-safe="true"
                                                                >
                                                                  <button
                                                                    aria-expanded="false"
                                                                    aria-haspopup="true"
                                                                    class="pf-c-dropdown__toggle pf-m-plain"
                                                                    data-ouia-component-id="OUIA-Generated-DropdownToggle-2"
                                                                    data-ouia-component-type="PF4/DropdownToggle"
                                                                    data-ouia-safe="true"
                                                                    id="pf-dropdown-toggle-id-1"
                                                                    type="button"
                                                                  >
                                                                    <span>
                                                                      <svg
                                                                        aria-hidden="true"
                                                                        class="pointer not-active"
                                                                        fill="currentColor"
                                                                        height="1em"
                                                                        role="img"
                                                                        style="vertical-align: -0.125em;"
                                                                        viewBox="0 0 1024 1024"
                                                                        width="1em"
                                                                      >
                                                                        <path
                                                                          d="M975.8,636.9 L870.9,741.8 L457.9,328.6 C452.1,322.8 445.4,319.9 437.9,319.9 C430.4,319.9 423.7,322.8 417.9,328.6 L328.8,417.7 C323,423.5 320.1,430.2 320.1,437.7 C320.1,445.2 323,451.9 328.8,457.7 L742,870.7 L636.9,975.8 C610.5,1002.2 619.4,1024 656.8,1024 L956,1024 C1014.5,1024 1024,1013.7 1024,955.9 L1024,656.7 C1023.9,619.4 1002.2,610.5 975.8,636.9 Z M128,128 L896,128 L896,361.7 C896.007942,370.182681 899.389907,378.313788 905.4,384.3 L996.7,475.6 C1006.8,485.7 1024,478.5 1024,464.3 L1024,22.7 C1024,16.1 1021.9,10.7 1017.6,6.4 C1013.3,2.1 1007.9,0 1001.3,0 L22.7,0 C16.1,0 10.7,2.1 6.4,6.4 C2.1,10.7 0,16.1 0,22.7 L0,1001.3 C0,1007.9 2.1,1013.3 6.4,1017.6 C10.7,1021.9 16.1,1024 22.7,1024 L463.4,1024 C469.862884,1023.98894 475.684489,1020.0908 478.156232,1014.11925 C480.627976,1008.14769 479.264428,1001.27548 474.7,996.7 L383.4,905.4 C377.413788,899.389907 369.282681,896.007942 360.8,896 L128,896 L128,128 Z"
                                                                        />
                                                                      </svg>
                                                                    </span>
                                                                  </button>
                                                                </div>,
                                                              }
                                                            }
                                                            toggleIndicator={null}
                                                          >
                                                            <Toggle
                                                              aria-haspopup={true}
                                                              bubbleEvent={false}
                                                              className=""
                                                              data-ouia-component-id="OUIA-Generated-DropdownToggle-2"
                                                              data-ouia-component-type="PF4/DropdownToggle"
                                                              data-ouia-safe={true}
                                                              getMenuRef={[Function]}
                                                              id="pf-dropdown-toggle-id-1"
                                                              isActive={false}
                                                              isDisabled={false}
                                                              isOpen={false}
                                                              isPlain={true}
                                                              isPrimary={false}
                                                              isSplitButton={false}
                                                              onEnter={[Function]}
                                                              onToggle={[Function]}
                                                              parentRef={
                                                                Object {
                                                                  "current": <div
                                                                    class="pf-c-dropdown"
                                                                    data-ouia-component-id="export"
                                                                    data-ouia-component-type="PF4/Dropdown"
                                                                    data-ouia-safe="true"
                                                                  >
                                                                    <button
                                                                      aria-expanded="false"
                                                                      aria-haspopup="true"
                                                                      class="pf-c-dropdown__toggle pf-m-plain"
                                                                      data-ouia-component-id="OUIA-Generated-DropdownToggle-2"
                                                                      data-ouia-component-type="PF4/DropdownToggle"
                                                                      data-ouia-safe="true"
                                                                      id="pf-dropdown-toggle-id-1"
                                                                      type="button"
                                                                    >
                                                                      <span>
                                                                        <svg
                                                                          aria-hidden="true"
                                                                          class="pointer not-active"
                                                                          fill="currentColor"
                                                                          height="1em"
                                                                          role="img"
                                                                          style="vertical-align: -0.125em;"
                                                                          viewBox="0 0 1024 1024"
                                                                          width="1em"
                                                                        >
                                                                          <path
                                                                            d="M975.8,636.9 L870.9,741.8 L457.9,328.6 C452.1,322.8 445.4,319.9 437.9,319.9 C430.4,319.9 423.7,322.8 417.9,328.6 L328.8,417.7 C323,423.5 320.1,430.2 320.1,437.7 C320.1,445.2 323,451.9 328.8,457.7 L742,870.7 L636.9,975.8 C610.5,1002.2 619.4,1024 656.8,1024 L956,1024 C1014.5,1024 1024,1013.7 1024,955.9 L1024,656.7 C1023.9,619.4 1002.2,610.5 975.8,636.9 Z M128,128 L896,128 L896,361.7 C896.007942,370.182681 899.389907,378.313788 905.4,384.3 L996.7,475.6 C1006.8,485.7 1024,478.5 1024,464.3 L1024,22.7 C1024,16.1 1021.9,10.7 1017.6,6.4 C1013.3,2.1 1007.9,0 1001.3,0 L22.7,0 C16.1,0 10.7,2.1 6.4,6.4 C2.1,10.7 0,16.1 0,22.7 L0,1001.3 C0,1007.9 2.1,1013.3 6.4,1017.6 C10.7,1021.9 16.1,1024 22.7,1024 L463.4,1024 C469.862884,1023.98894 475.684489,1020.0908 478.156232,1014.11925 C480.627976,1008.14769 479.264428,1001.27548 474.7,996.7 L383.4,905.4 C377.413788,899.389907 369.282681,896.007942 360.8,896 L128,896 L128,128 Z"
                                                                          />
                                                                        </svg>
                                                                      </span>
                                                                    </button>
                                                                  </div>,
                                                                }
                                                              }
                                                            >
                                                              <button
                                                                aria-expanded={false}
                                                                aria-haspopup={true}
                                                                className="pf-c-dropdown__toggle pf-m-plain"
                                                                data-ouia-component-id="OUIA-Generated-DropdownToggle-2"
                                                                data-ouia-component-type="PF4/DropdownToggle"
                                                                data-ouia-safe={true}
                                                                disabled={false}
                                                                id="pf-dropdown-toggle-id-1"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className={null}
                                                                >
                                                                  <ExportIcon
                                                                    className="pointer not-active"
                                                                    color="currentColor"
                                                                    noVerticalAlign={false}
                                                                    size="sm"
                                                                  >
                                                                    <svg
                                                                      aria-hidden={true}
                                                                      aria-labelledby={null}
                                                                      className="pointer not-active"
                                                                      fill="currentColor"
                                                                      height="1em"
                                                                      role="img"
                                                                      style={
                                                                        Object {
                                                                          "verticalAlign": "-0.125em",
                                                                        }
                                                                      }
                                                                      viewBox="0 0 1024 1024"
                                                                      width="1em"
                                                                    >
                                                                      <path
                                                                        d="M975.8,636.9 L870.9,741.8 L457.9,328.6 C452.1,322.8 445.4,319.9 437.9,319.9 C430.4,319.9 423.7,322.8 417.9,328.6 L328.8,417.7 C323,423.5 320.1,430.2 320.1,437.7 C320.1,445.2 323,451.9 328.8,457.7 L742,870.7 L636.9,975.8 C610.5,1002.2 619.4,1024 656.8,1024 L956,1024 C1014.5,1024 1024,1013.7 1024,955.9 L1024,656.7 C1023.9,619.4 1002.2,610.5 975.8,636.9 Z M128,128 L896,128 L896,361.7 C896.007942,370.182681 899.389907,378.313788 905.4,384.3 L996.7,475.6 C1006.8,485.7 1024,478.5 1024,464.3 L1024,22.7 C1024,16.1 1021.9,10.7 1017.6,6.4 C1013.3,2.1 1007.9,0 1001.3,0 L22.7,0 C16.1,0 10.7,2.1 6.4,6.4 C2.1,10.7 0,16.1 0,22.7 L0,1001.3 C0,1007.9 2.1,1013.3 6.4,1017.6 C10.7,1021.9 16.1,1024 22.7,1024 L463.4,1024 C469.862884,1023.98894 475.684489,1020.0908 478.156232,1014.11925 C480.627976,1008.14769 479.264428,1001.27548 474.7,996.7 L383.4,905.4 C377.413788,899.389907 369.282681,896.007942 360.8,896 L128,896 L128,128 Z"
                                                                      />
                                                                    </svg>
                                                                  </ExportIcon>
                                                                </span>
                                                              </button>
                                                            </Toggle>
                                                          </DropdownToggle>
                                                        </div>
                                                      </DropdownWithContext>
                                                    </Dropdown>
                                                  </ExportCSVButton>
                                                </div>
                                              </ToolbarItem>
                                              <ToolbarItem>
                                                <div
                                                  className="pf-c-toolbar__item"
                                                >
                                                  <Connect(EditBaselineKebab)>
                                                    <EditBaselineKebab
                                                      dispatch={[Function]}
                                                      editBaselineTableData={Array []}
                                                    >
                                                      <Dropdown
                                                        dropdownItems={
                                                          Array [
                                                            <DropdownItem
                                                              component="button"
                                                              isDisabled={true}
                                                              onClick={[Function]}
                                                            >
                                                              Delete facts
                                                            </DropdownItem>,
                                                          ]
                                                        }
                                                        isOpen={false}
                                                        isPlain={true}
                                                        ouiaId="actions"
                                                        style={
                                                          Object {
                                                            "float": "left",
                                                          }
                                                        }
                                                        toggle={
                                                          <KebabToggle
                                                            onToggle={[Function]}
                                                          />
                                                        }
                                                      >
                                                        <DropdownWithContext
                                                          autoFocus={true}
                                                          className=""
                                                          direction="down"
                                                          dropdownItems={
                                                            Array [
                                                              <DropdownItem
                                                                component="button"
                                                                isDisabled={true}
                                                                onClick={[Function]}
                                                              >
                                                                Delete facts
                                                              </DropdownItem>,
                                                            ]
                                                          }
                                                          isGrouped={false}
                                                          isOpen={false}
                                                          isPlain={true}
                                                          menuAppendTo="inline"
                                                          onSelect={[Function]}
                                                          position="left"
                                                          style={
                                                            Object {
                                                              "float": "left",
                                                            }
                                                          }
                                                          toggle={
                                                            <KebabToggle
                                                              onToggle={[Function]}
                                                            />
                                                          }
                                                        >
                                                          <div
                                                            className="pf-c-dropdown"
                                                            data-ouia-component-id="actions"
                                                            data-ouia-component-type="PF4/Dropdown"
                                                            data-ouia-safe={true}
                                                            style={
                                                              Object {
                                                                "float": "left",
                                                              }
                                                            }
                                                          >
                                                            <KebabToggle
                                                              aria-haspopup={true}
                                                              getMenuRef={[Function]}
                                                              id="pf-dropdown-toggle-id-2"
                                                              isOpen={false}
                                                              isPlain={true}
                                                              key=".0"
                                                              onEnter={[Function]}
                                                              onToggle={[Function]}
                                                              parentRef={
                                                                Object {
                                                                  "current": <div
                                                                    class="pf-c-dropdown"
                                                                    data-ouia-component-id="actions"
                                                                    data-ouia-component-type="PF4/Dropdown"
                                                                    data-ouia-safe="true"
                                                                    style="float: left;"
                                                                  >
                                                                    <button
                                                                      aria-expanded="false"
                                                                      aria-haspopup="true"
                                                                      aria-label="Actions"
                                                                      class="pf-c-dropdown__toggle pf-m-plain"
                                                                      id="pf-dropdown-toggle-id-2"
                                                                      type="button"
                                                                    >
                                                                      <svg
                                                                        aria-hidden="true"
                                                                        fill="currentColor"
                                                                        height="1em"
                                                                        role="img"
                                                                        style="vertical-align: -0.125em;"
                                                                        viewBox="0 0 192 512"
                                                                        width="1em"
                                                                      >
                                                                        <path
                                                                          d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                                        />
                                                                      </svg>
                                                                    </button>
                                                                  </div>,
                                                                }
                                                              }
                                                            >
                                                              <Toggle
                                                                aria-haspopup={true}
                                                                aria-label="Actions"
                                                                bubbleEvent={false}
                                                                className=""
                                                                getMenuRef={[Function]}
                                                                id="pf-dropdown-toggle-id-2"
                                                                isActive={false}
                                                                isDisabled={false}
                                                                isOpen={false}
                                                                isPlain={true}
                                                                isPrimary={false}
                                                                isSplitButton={false}
                                                                onEnter={[Function]}
                                                                onToggle={[Function]}
                                                                parentRef={
                                                                  Object {
                                                                    "current": <div
                                                                      class="pf-c-dropdown"
                                                                      data-ouia-component-id="actions"
                                                                      data-ouia-component-type="PF4/Dropdown"
                                                                      data-ouia-safe="true"
                                                                      style="float: left;"
                                                                    >
                                                                      <button
                                                                        aria-expanded="false"
                                                                        aria-haspopup="true"
                                                                        aria-label="Actions"
                                                                        class="pf-c-dropdown__toggle pf-m-plain"
                                                                        id="pf-dropdown-toggle-id-2"
                                                                        type="button"
                                                                      >
                                                                        <svg
                                                                          aria-hidden="true"
                                                                          fill="currentColor"
                                                                          height="1em"
                                                                          role="img"
                                                                          style="vertical-align: -0.125em;"
                                                                          viewBox="0 0 192 512"
                                                                          width="1em"
                                                                        >
                                                                          <path
                                                                            d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                                          />
                                                                        </svg>
                                                                      </button>
                                                                    </div>,
                                                                  }
                                                                }
                                                              >
                                                                <button
                                                                  aria-expanded={false}
                                                                  aria-haspopup={true}
                                                                  aria-label="Actions"
                                                                  className="pf-c-dropdown__toggle pf-m-plain"
                                                                  disabled={false}
                                                                  id="pf-dropdown-toggle-id-2"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  type="button"
                                                                >
                                                                  <EllipsisVIcon
                                                                    color="currentColor"
                                                                    noVerticalAlign={false}
                                                                    size="sm"
                                                                  >
                                                                    <svg
                                                                      aria-hidden={true}
                                                                      aria-labelledby={null}
                                                                      fill="currentColor"
                                                                      height="1em"
                                                                      role="img"
                                                                      style={
                                                                        Object {
                                                                          "verticalAlign": "-0.125em",
                                                                        }
                                                                      }
                                                                      viewBox="0 0 192 512"
                                                                      width="1em"
                                                                    >
                                                                      <path
                                                                        d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                                      />
                                                                    </svg>
                                                                  </EllipsisVIcon>
                                                                </button>
                                                              </Toggle>
                                                            </KebabToggle>
                                                          </div>
                                                        </DropdownWithContext>
                                                      </Dropdown>
                                                    </EditBaselineKebab>
                                                  </Connect(EditBaselineKebab)>
                                                </div>
                                              </ToolbarItem>
                                            </div>
                                          </ToolbarGroupWithRef>
                                        </ForwardRef>
                                      </div>
                                      <ToolbarExpandableContent
                                        chipContainerRef={
                                          Object {
                                            "current": null,
                                          }
                                        }
                                        clearFiltersButtonText="Clear all filters"
                                        expandableContentRef={
                                          Object {
                                            "current": <div
                                              class="pf-c-toolbar__expandable-content"
                                              id="pf-random-id-0-expandable-content-0"
                                            >
                                              <div
                                                class="pf-c-toolbar__group"
                                              />
                                            </div>,
                                          }
                                        }
                                        id="pf-random-id-0-expandable-content-0"
                                        isExpanded={false}
                                        showClearFiltersButton={false}
                                      >
                                        <div
                                          className="pf-c-toolbar__expandable-content"
                                          id="pf-random-id-0-expandable-content-0"
                                        >
                                          <ForwardRef>
                                            <ToolbarGroupWithRef
                                              innerRef={null}
                                            >
                                              <div
                                                className="pf-c-toolbar__group"
                                              />
                                            </ToolbarGroupWithRef>
                                          </ForwardRef>
                                        </div>
                                      </ToolbarExpandableContent>
                                    </div>
                                  </ToolbarContent>
                                  <ToolbarChipGroupContent
                                    chipGroupContentRef={
                                      Object {
                                        "current": <div
                                          class="pf-c-toolbar__content pf-m-hidden"
                                          hidden=""
                                        >
                                          <div
                                            class="pf-c-toolbar__group"
                                          />
                                        </div>,
                                      }
                                    }
                                    clearFiltersButtonText="Clear all filters"
                                    collapseListedFiltersBreakpoint="lg"
                                    isExpanded={false}
                                    numberOfFilters={0}
                                    showClearFiltersButton={false}
                                  >
                                    <div
                                      className="pf-c-toolbar__content pf-m-hidden"
                                      hidden={true}
                                    >
                                      <ForwardRef
                                        className=""
                                      >
                                        <ToolbarGroupWithRef
                                          className=""
                                          innerRef={null}
                                        >
                                          <div
                                            className="pf-c-toolbar__group"
                                          />
                                        </ToolbarGroupWithRef>
                                      </ForwardRef>
                                    </div>
                                  </ToolbarChipGroupContent>
                                </div>
                              </GenerateId>
                            </Toolbar>
                          </EditBaselineToolbar>
                          <table
                            className="pf-c-table ins-c-table pf-m-grid-md ins-entity-table"
                          >
                            <thead>
                              <tr
                                key="edit-baseline-table-header"
                              >
                                <th />
                                <th
                                  className="edit-baseline-header"
                                >
                                  <div>
                                    Fact
                                  </div>
                                </th>
                                <th
                                  className="edit-baseline-header"
                                >
                                  <div>
                                    Value
                                  </div>
                                </th>
                                <th />
                              </tr>
                            </thead>
                            <tbody
                              key="edit-baseline-table"
                            />
                          </table>
                        </div>
                      </CardBody>
                    </article>
                  </Card>
                </section>
              </Main>
            </Connect(Main)>
          </EditBaseline>
        </Connect(EditBaseline)>
      </withRouter(Connect(EditBaseline))>
    </Provider>
  </Router>
</MemoryRouter>
`;

exports[`ConnectedEditBaseline should render disabled button with empty baseline and no write permissions 1`] = `
<MemoryRouter
  keyLength={0}
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <withRouter(Connect(EditBaseline))>
        <Connect(EditBaseline)
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "canGo": [Function],
              "createHref": [Function],
              "entries": Array [
                Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              ],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "index": 0,
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
          location={
            Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            }
          }
          match={
            Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            }
          }
        >
          <EditBaseline
            baselineData={Array []}
            baselineDataLoading={false}
            clearBaselineData={[Function]}
            clearErrorData={[Function]}
            editBaselineEmptyState={true}
            editBaselineError={Object {}}
            editBaselineTableData={Array []}
            expandRow={[Function]}
            expandedRows={Array []}
            exportToCSV={[Function]}
            factModalOpened={false}
            fetchBaselineData={[Function]}
            fetchBaselines={[Function]}
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            inlineError={Object {}}
            location={
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              }
            }
            match={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
            selectFact={[Function]}
          >
            <Connect(EditBaselineNameModal)
              baselineData={Array []}
              error={Object {}}
              modalOpened={false}
              toggleEditNameModal={[Function]}
            >
              <EditBaselineNameModal
                baselineData={Array []}
                error={Object {}}
                modalOpened={false}
                patchBaseline={[Function]}
                toggleEditNameModal={[Function]}
              >
                <Modal
                  actions={
                    Array [
                      <Button
                        onClick={[Function]}
                        ouiaId="save"
                        variant="primary"
                      >
                        Save
                      </Button>,
                      <Button
                        onClick={[Function]}
                        ouiaId="cancel"
                        variant="link"
                      >
                        Cancel
                      </Button>,
                    ]
                  }
                  appendTo={[Function]}
                  aria-describedby=""
                  aria-label=""
                  aria-labelledby=""
                  className=""
                  hasNoBodyWrapper={false}
                  isOpen={false}
                  onClose={[Function]}
                  ouiaSafe={true}
                  showClose={true}
                  title="Edit name"
                  titleIconVariant={null}
                  titleLabel=""
                  variant="small"
                >
                  <Portal
                    containerInfo={<div />}
                  >
                    <ModalContent
                      actions={
                        Array [
                          <Button
                            onClick={[Function]}
                            ouiaId="save"
                            variant="primary"
                          >
                            Save
                          </Button>,
                          <Button
                            onClick={[Function]}
                            ouiaId="cancel"
                            variant="link"
                          >
                            Cancel
                          </Button>,
                        ]
                      }
                      aria-describedby=""
                      aria-label=""
                      aria-labelledby=""
                      boxId="pf-modal-part-4"
                      className=""
                      descriptorId="pf-modal-part-6"
                      hasNoBodyWrapper={false}
                      isOpen={false}
                      labelId="pf-modal-part-5"
                      onClose={[Function]}
                      ouiaId="OUIA-Generated-Modal-small-5"
                      ouiaSafe={true}
                      showClose={true}
                      title="Edit name"
                      titleIconVariant={null}
                      titleLabel=""
                      variant="small"
                    />
                  </Portal>
                </Modal>
              </EditBaselineNameModal>
            </Connect(EditBaselineNameModal)>
            <PageHeader>
              <section
                className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                widget-type="InsightsPageHeader"
              >
                <Breadcrumb>
                  <nav
                    aria-label="Breadcrumb"
                    className="pf-c-breadcrumb"
                    data-ouia-component-id="OUIA-Generated-Breadcrumb-5"
                    data-ouia-component-type="PF4/Breadcrumb"
                    data-ouia-safe={true}
                  >
                    <ol
                      className="pf-c-breadcrumb__list"
                    >
                      <BreadcrumbItem
                        key=".0"
                        showDivider={false}
                      >
                        <li
                          className="pf-c-breadcrumb__item"
                        >
                          <a
                            onClick={[Function]}
                          >
                            Baselines
                          </a>
                        </li>
                      </BreadcrumbItem>
                      <BreadcrumbHeading
                        key=".1"
                        showDivider={true}
                      >
                        <li
                          className="pf-c-breadcrumb__item"
                        >
                          <h1
                            className="pf-c-breadcrumb__heading"
                          >
                            <span
                              className="pf-c-breadcrumb__item-divider"
                            >
                              <AngleRightIcon
                                color="currentColor"
                                noVerticalAlign={false}
                                size="sm"
                              >
                                <svg
                                  aria-hidden={true}
                                  aria-labelledby={null}
                                  fill="currentColor"
                                  height="1em"
                                  role="img"
                                  style={
                                    Object {
                                      "verticalAlign": "-0.125em",
                                    }
                                  }
                                  viewBox="0 0 256 512"
                                  width="1em"
                                >
                                  <path
                                    d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                  />
                                </svg>
                              </AngleRightIcon>
                            </span>
                          </h1>
                        </li>
                      </BreadcrumbHeading>
                    </ol>
                  </nav>
                </Breadcrumb>
                <div
                  id="edit-baseline-title"
                />
              </section>
            </PageHeader>
            <Connect(Main)>
              <Main>
                <section
                  className="pf-l-page__main-section pf-c-page__main-section"
                  page-type=""
                >
                  <div />
                  <Connect(ErrorAlert)
                    error={Object {}}
                    onClose={[Function]}
                  >
                    <ErrorAlert
                      addNotification={[Function]}
                      error={Object {}}
                      onClose={[Function]}
                    />
                  </Connect(ErrorAlert)>
                  <EmptyStateDisplay
                    button={
                      <Memo(Connect(AddFactButton))
                        editBaselineEmptyState={true}
                        hasWritePermissions={false}
                      />
                    }
                    text={
                      Array [
                        "No facts or categories have been added to this baseline yet.",
                      ]
                    }
                    title="No facts"
                  >
                    <EmptyState
                      variant="large"
                    >
                      <div
                        className="pf-c-empty-state pf-m-lg"
                      >
                        <div
                          className="pf-c-empty-state__content"
                        >
                          <br />
                          <Title
                            headingLevel="h1"
                            size="lg"
                          >
                            <h1
                              className="pf-c-title pf-m-lg"
                            >
                              No facts
                            </h1>
                          </Title>
                          <EmptyStateBody>
                            <div
                              className="pf-c-empty-state__body"
                            >
                              No facts or categories have been added to this baseline yet.
                            </div>
                          </EmptyStateBody>
                          <Connect(AddFactButton)
                            editBaselineEmptyState={true}
                            hasWritePermissions={false}
                          >
                            <AddFactButton
                              editBaselineEmptyState={true}
                              hasWritePermissions={false}
                              setFactData={[Function]}
                              toggleFactModal={[Function]}
                            >
                              <Tooltip
                                content={
                                  <div>
                                    You do not have permissions to perform this action
                                  </div>
                                }
                              >
                                <Popper
                                  appendTo={[Function]}
                                  distance={15}
                                  enableFlip={true}
                                  flipBehavior={
                                    Array [
                                      "top",
                                      "right",
                                      "bottom",
                                      "left",
                                      "top",
                                      "right",
                                      "bottom",
                                    ]
                                  }
                                  isVisible={false}
                                  onBlur={[Function]}
                                  onDocumentClick={false}
                                  onDocumentKeyDown={[Function]}
                                  onFocus={[Function]}
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                  onTriggerEnter={[Function]}
                                  placement="top"
                                  popper={
                                    <div
                                      className="pf-c-tooltip"
                                      id="pf-tooltip-2"
                                      role="tooltip"
                                      style={
                                        Object {
                                          "maxWidth": null,
                                          "opacity": 0,
                                          "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                        }
                                      }
                                    >
                                      <TooltipArrow />
                                      <TooltipContent
                                        isLeftAligned={false}
                                      >
                                        <div>
                                          You do not have permissions to perform this action
                                        </div>
                                      </TooltipContent>
                                    </div>
                                  }
                                  popperMatchesTriggerWidth={false}
                                  positionModifiers={
                                    Object {
                                      "bottom": "pf-m-bottom",
                                      "left": "pf-m-left",
                                      "right": "pf-m-right",
                                      "top": "pf-m-top",
                                    }
                                  }
                                  trigger={
                                    <div
                                      aria-describedby="pf-tooltip-2"
                                      className="tooltip-button-margin"
                                    >
                                      <Button
                                        isDisabled={true}
                                        onClick={[Function]}
                                        ouiaId="add_fact"
                                        variant="primary"
                                      >
                                        Add fact or category
                                      </Button>
                                    </div>
                                  }
                                  zIndex={9999}
                                >
                                  <FindRefWrapper
                                    onFoundRef={[Function]}
                                  >
                                    <div
                                      aria-describedby="pf-tooltip-2"
                                      className="tooltip-button-margin"
                                    >
                                      <Button
                                        isDisabled={true}
                                        onClick={[Function]}
                                        ouiaId="add_fact"
                                        variant="primary"
                                      >
                                        <button
                                          aria-disabled={true}
                                          aria-label={null}
                                          className="pf-c-button pf-m-primary pf-m-disabled"
                                          data-ouia-component-id="add_fact"
                                          data-ouia-component-type="PF4/Button"
                                          data-ouia-safe={true}
                                          disabled={true}
                                          onClick={[Function]}
                                          role={null}
                                          tabIndex={null}
                                          type="button"
                                        >
                                          Add fact or category
                                        </button>
                                      </Button>
                                    </div>
                                  </FindRefWrapper>
                                </Popper>
                              </Tooltip>
                            </AddFactButton>
                          </Connect(AddFactButton)>
                        </div>
                      </div>
                    </EmptyState>
                  </EmptyStateDisplay>
                </section>
              </Main>
            </Connect(Main)>
          </EditBaseline>
        </Connect(EditBaseline)>
      </withRouter(Connect(EditBaseline))>
    </Provider>
  </Router>
</MemoryRouter>
`;

exports[`ConnectedEditBaseline should render empty baseline 1`] = `
<MemoryRouter
  keyLength={0}
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <withRouter(Connect(EditBaseline))>
        <Connect(EditBaseline)
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "canGo": [Function],
              "createHref": [Function],
              "entries": Array [
                Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              ],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "index": 0,
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
          location={
            Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            }
          }
          match={
            Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            }
          }
        >
          <EditBaseline
            baselineData={Array []}
            baselineDataLoading={false}
            clearBaselineData={[Function]}
            clearErrorData={[Function]}
            editBaselineEmptyState={true}
            editBaselineError={Object {}}
            editBaselineTableData={Array []}
            expandRow={[Function]}
            expandedRows={Array []}
            exportToCSV={[Function]}
            factModalOpened={false}
            fetchBaselineData={[Function]}
            fetchBaselines={[Function]}
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            inlineError={Object {}}
            location={
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              }
            }
            match={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
            selectFact={[Function]}
          >
            <Connect(EditBaselineNameModal)
              baselineData={Array []}
              error={Object {}}
              modalOpened={false}
              toggleEditNameModal={[Function]}
            >
              <EditBaselineNameModal
                baselineData={Array []}
                error={Object {}}
                modalOpened={false}
                patchBaseline={[Function]}
                toggleEditNameModal={[Function]}
              >
                <Modal
                  actions={
                    Array [
                      <Button
                        onClick={[Function]}
                        ouiaId="save"
                        variant="primary"
                      >
                        Save
                      </Button>,
                      <Button
                        onClick={[Function]}
                        ouiaId="cancel"
                        variant="link"
                      >
                        Cancel
                      </Button>,
                    ]
                  }
                  appendTo={[Function]}
                  aria-describedby=""
                  aria-label=""
                  aria-labelledby=""
                  className=""
                  hasNoBodyWrapper={false}
                  isOpen={false}
                  onClose={[Function]}
                  ouiaSafe={true}
                  showClose={true}
                  title="Edit name"
                  titleIconVariant={null}
                  titleLabel=""
                  variant="small"
                >
                  <Portal
                    containerInfo={<div />}
                  >
                    <ModalContent
                      actions={
                        Array [
                          <Button
                            onClick={[Function]}
                            ouiaId="save"
                            variant="primary"
                          >
                            Save
                          </Button>,
                          <Button
                            onClick={[Function]}
                            ouiaId="cancel"
                            variant="link"
                          >
                            Cancel
                          </Button>,
                        ]
                      }
                      aria-describedby=""
                      aria-label=""
                      aria-labelledby=""
                      boxId="pf-modal-part-3"
                      className=""
                      descriptorId="pf-modal-part-5"
                      hasNoBodyWrapper={false}
                      isOpen={false}
                      labelId="pf-modal-part-4"
                      onClose={[Function]}
                      ouiaId="OUIA-Generated-Modal-small-4"
                      ouiaSafe={true}
                      showClose={true}
                      title="Edit name"
                      titleIconVariant={null}
                      titleLabel=""
                      variant="small"
                    />
                  </Portal>
                </Modal>
              </EditBaselineNameModal>
            </Connect(EditBaselineNameModal)>
            <PageHeader>
              <section
                className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                widget-type="InsightsPageHeader"
              >
                <Breadcrumb>
                  <nav
                    aria-label="Breadcrumb"
                    className="pf-c-breadcrumb"
                    data-ouia-component-id="OUIA-Generated-Breadcrumb-4"
                    data-ouia-component-type="PF4/Breadcrumb"
                    data-ouia-safe={true}
                  >
                    <ol
                      className="pf-c-breadcrumb__list"
                    >
                      <BreadcrumbItem
                        key=".0"
                        showDivider={false}
                      >
                        <li
                          className="pf-c-breadcrumb__item"
                        >
                          <a
                            onClick={[Function]}
                          >
                            Baselines
                          </a>
                        </li>
                      </BreadcrumbItem>
                      <BreadcrumbHeading
                        key=".1"
                        showDivider={true}
                      >
                        <li
                          className="pf-c-breadcrumb__item"
                        >
                          <h1
                            className="pf-c-breadcrumb__heading"
                          >
                            <span
                              className="pf-c-breadcrumb__item-divider"
                            >
                              <AngleRightIcon
                                color="currentColor"
                                noVerticalAlign={false}
                                size="sm"
                              >
                                <svg
                                  aria-hidden={true}
                                  aria-labelledby={null}
                                  fill="currentColor"
                                  height="1em"
                                  role="img"
                                  style={
                                    Object {
                                      "verticalAlign": "-0.125em",
                                    }
                                  }
                                  viewBox="0 0 256 512"
                                  width="1em"
                                >
                                  <path
                                    d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                  />
                                </svg>
                              </AngleRightIcon>
                            </span>
                          </h1>
                        </li>
                      </BreadcrumbHeading>
                    </ol>
                  </nav>
                </Breadcrumb>
                <div
                  id="edit-baseline-title"
                >
                  <span
                    className="pf-c-title pf-m-2xl"
                  />
                  <span>
                    <EditAltIcon
                      className="pointer not-active edit-icon-margin"
                      color="currentColor"
                      noVerticalAlign={false}
                      onClick={[Function]}
                      size="sm"
                    >
                      <svg
                        aria-hidden={true}
                        aria-labelledby={null}
                        className="pointer not-active edit-icon-margin"
                        fill="currentColor"
                        height="1em"
                        onClick={[Function]}
                        role="img"
                        style={
                          Object {
                            "verticalAlign": "-0.125em",
                          }
                        }
                        viewBox="0 0 1024 1024"
                        width="1em"
                      >
                        <path
                          d="M1024,187.9 C1024,207 1017.3,223.1 1004,236.4 L857.5,386.9 L638.8,168.4 L787.3,20.5 C800.3,6.83333333 816.5,0 835.9,0 C855,0 871.366667,6.83333333 885,20.5 L1004,138.9 C1017.3,152.9 1023.96667,169.233333 1024,187.9 Z M806.2,438.9 L219.4,1024 L0,1024 L0,804.6 L586.6,219.5 L806.2,438.9 Z M219.6,950.9 L292.9,877.8 L146.3,731.4 L73.2,804.5 L73.2,877.6 L146.3,877.6 L146.3,951 L219.6,950.9 Z"
                        />
                      </svg>
                    </EditAltIcon>
                  </span>
                </div>
              </section>
            </PageHeader>
            <Connect(Main)>
              <Main>
                <section
                  className="pf-l-page__main-section pf-c-page__main-section"
                  page-type=""
                >
                  <div />
                  <Connect(ErrorAlert)
                    error={Object {}}
                    onClose={[Function]}
                  >
                    <ErrorAlert
                      addNotification={[Function]}
                      error={Object {}}
                      onClose={[Function]}
                    />
                  </Connect(ErrorAlert)>
                  <EmptyStateDisplay
                    button={
                      <Memo(Connect(AddFactButton))
                        editBaselineEmptyState={true}
                        hasWritePermissions={true}
                      />
                    }
                    text={
                      Array [
                        "No facts or categories have been added to this baseline yet.",
                      ]
                    }
                    title="No facts"
                  >
                    <EmptyState
                      variant="large"
                    >
                      <div
                        className="pf-c-empty-state pf-m-lg"
                      >
                        <div
                          className="pf-c-empty-state__content"
                        >
                          <br />
                          <Title
                            headingLevel="h1"
                            size="lg"
                          >
                            <h1
                              className="pf-c-title pf-m-lg"
                            >
                              No facts
                            </h1>
                          </Title>
                          <EmptyStateBody>
                            <div
                              className="pf-c-empty-state__body"
                            >
                              No facts or categories have been added to this baseline yet.
                            </div>
                          </EmptyStateBody>
                          <Connect(AddFactButton)
                            editBaselineEmptyState={true}
                            hasWritePermissions={true}
                          >
                            <AddFactButton
                              editBaselineEmptyState={true}
                              hasWritePermissions={true}
                              setFactData={[Function]}
                              toggleFactModal={[Function]}
                            >
                              <Button
                                onClick={[Function]}
                                ouiaId="add_fact"
                                variant="primary"
                              >
                                <button
                                  aria-disabled={false}
                                  aria-label={null}
                                  className="pf-c-button pf-m-primary"
                                  data-ouia-component-id="add_fact"
                                  data-ouia-component-type="PF4/Button"
                                  data-ouia-safe={true}
                                  disabled={false}
                                  onClick={[Function]}
                                  role={null}
                                  type="button"
                                >
                                  Add fact or category
                                </button>
                              </Button>
                            </AddFactButton>
                          </Connect(AddFactButton)>
                        </div>
                      </div>
                    </EmptyState>
                  </EmptyStateDisplay>
                </section>
              </Main>
            </Connect(Main)>
          </EditBaseline>
        </Connect(EditBaseline)>
      </withRouter(Connect(EditBaseline))>
    </Provider>
  </Router>
</MemoryRouter>
`;

exports[`ConnectedEditBaseline should render empty with no read permissions 1`] = `
<MemoryRouter
  keyLength={0}
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <withRouter(Connect(EditBaseline))>
        <Connect(EditBaseline)
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "canGo": [Function],
              "createHref": [Function],
              "entries": Array [
                Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              ],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "index": 0,
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
          location={
            Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            }
          }
          match={
            Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            }
          }
        >
          <EditBaseline
            baselineData={Array []}
            baselineDataLoading={false}
            clearBaselineData={[Function]}
            clearErrorData={[Function]}
            editBaselineEmptyState={false}
            editBaselineError={Object {}}
            editBaselineTableData={Array []}
            expandRow={[Function]}
            expandedRows={Array []}
            exportToCSV={[Function]}
            factModalOpened={false}
            fetchBaselineData={[Function]}
            fetchBaselines={[Function]}
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            inlineError={Object {}}
            location={
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              }
            }
            match={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
            selectFact={[Function]}
          >
            <Connect(EditBaselineNameModal)
              baselineData={Array []}
              error={Object {}}
              modalOpened={false}
              toggleEditNameModal={[Function]}
            >
              <EditBaselineNameModal
                baselineData={Array []}
                error={Object {}}
                modalOpened={false}
                patchBaseline={[Function]}
                toggleEditNameModal={[Function]}
              >
                <Modal
                  actions={
                    Array [
                      <Button
                        onClick={[Function]}
                        ouiaId="save"
                        variant="primary"
                      >
                        Save
                      </Button>,
                      <Button
                        onClick={[Function]}
                        ouiaId="cancel"
                        variant="link"
                      >
                        Cancel
                      </Button>,
                    ]
                  }
                  appendTo={[Function]}
                  aria-describedby=""
                  aria-label=""
                  aria-labelledby=""
                  className=""
                  hasNoBodyWrapper={false}
                  isOpen={false}
                  onClose={[Function]}
                  ouiaSafe={true}
                  showClose={true}
                  title="Edit name"
                  titleIconVariant={null}
                  titleLabel=""
                  variant="small"
                >
                  <Portal
                    containerInfo={<div />}
                  >
                    <ModalContent
                      actions={
                        Array [
                          <Button
                            onClick={[Function]}
                            ouiaId="save"
                            variant="primary"
                          >
                            Save
                          </Button>,
                          <Button
                            onClick={[Function]}
                            ouiaId="cancel"
                            variant="link"
                          >
                            Cancel
                          </Button>,
                        ]
                      }
                      aria-describedby=""
                      aria-label=""
                      aria-labelledby=""
                      boxId="pf-modal-part-1"
                      className=""
                      descriptorId="pf-modal-part-3"
                      hasNoBodyWrapper={false}
                      isOpen={false}
                      labelId="pf-modal-part-2"
                      onClose={[Function]}
                      ouiaId="OUIA-Generated-Modal-small-2"
                      ouiaSafe={true}
                      showClose={true}
                      title="Edit name"
                      titleIconVariant={null}
                      titleLabel=""
                      variant="small"
                    />
                  </Portal>
                </Modal>
              </EditBaselineNameModal>
            </Connect(EditBaselineNameModal)>
            <PageHeader>
              <section
                className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                widget-type="InsightsPageHeader"
              >
                <Breadcrumb>
                  <nav
                    aria-label="Breadcrumb"
                    className="pf-c-breadcrumb"
                    data-ouia-component-id="OUIA-Generated-Breadcrumb-2"
                    data-ouia-component-type="PF4/Breadcrumb"
                    data-ouia-safe={true}
                  >
                    <ol
                      className="pf-c-breadcrumb__list"
                    >
                      <BreadcrumbItem
                        key=".0"
                        showDivider={false}
                      >
                        <li
                          className="pf-c-breadcrumb__item"
                        >
                          <a
                            onClick={[Function]}
                          >
                            Baselines
                          </a>
                        </li>
                      </BreadcrumbItem>
                    </ol>
                  </nav>
                </Breadcrumb>
                <div
                  id="edit-baseline-title"
                >
                  Baseline
                </div>
              </section>
            </PageHeader>
            <Connect(Main)>
              <Main>
                <section
                  className="pf-l-page__main-section pf-c-page__main-section"
                  page-type=""
                >
                  <EmptyStateDisplay
                    color="#6a6e73"
                    icon={[Function]}
                    text={
                      Array [
                        "Contact your organization administrator(s) for more information.",
                      ]
                    }
                    title="You do not have access to view this Baseline"
                  >
                    <EmptyState
                      variant="large"
                    >
                      <div
                        className="pf-c-empty-state pf-m-lg"
                      >
                        <div
                          className="pf-c-empty-state__content"
                        >
                          <EmptyStateIcon
                            className={null}
                            color="#6a6e73"
                            icon={[Function]}
                          >
                            <LockIcon
                              aria-hidden="true"
                              className="pf-c-empty-state__icon"
                              color="#6a6e73"
                              noVerticalAlign={false}
                              size="sm"
                            >
                              <svg
                                aria-hidden="true"
                                aria-labelledby={null}
                                className="pf-c-empty-state__icon"
                                fill="#6a6e73"
                                height="1em"
                                role="img"
                                style={
                                  Object {
                                    "verticalAlign": "-0.125em",
                                  }
                                }
                                viewBox="0 0 448 512"
                                width="1em"
                              >
                                <path
                                  d="M400 224h-24v-72C376 68.2 307.8 0 224 0S72 68.2 72 152v72H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zm-104 0H152v-72c0-39.7 32.3-72 72-72s72 32.3 72 72v72z"
                                />
                              </svg>
                            </LockIcon>
                          </EmptyStateIcon>
                          <br />
                          <Title
                            headingLevel="h1"
                            size="lg"
                          >
                            <h1
                              className="pf-c-title pf-m-lg"
                            >
                              You do not have access to view this Baseline
                            </h1>
                          </Title>
                          <EmptyStateBody>
                            <div
                              className="pf-c-empty-state__body"
                            >
                              Contact your organization administrator(s) for more information.
                            </div>
                          </EmptyStateBody>
                        </div>
                      </div>
                    </EmptyState>
                  </EmptyStateDisplay>
                </section>
              </Main>
            </Connect(Main)>
          </EditBaseline>
        </Connect(EditBaseline)>
      </withRouter(Connect(EditBaseline))>
    </Provider>
  </Router>
</MemoryRouter>
`;

exports[`ConnectedEditBaseline should render expandable rows closed 1`] = `
<MemoryRouter
  keyLength={0}
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <withRouter(Connect(EditBaseline))>
        <Connect(EditBaseline)
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "canGo": [Function],
              "createHref": [Function],
              "entries": Array [
                Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              ],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "index": 0,
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
          location={
            Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            }
          }
          match={
            Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            }
          }
        >
          <EditBaseline
            baselineData={
              Object {
                "baseline_facts": Array [
                  Object {
                    "name": "Sauron",
                    "value": "the Dark Lord",
                  },
                  Object {
                    "name": "Galadriel",
                    "value": "the Elven Queen",
                  },
                  Object {
                    "name": "The Fellowship of the Ring",
                    "values": Array [
                      Object {
                        "name": "Frodo",
                        "value": "Baggins",
                      },
                      Object {
                        "name": "Samwise",
                        "value": "Gamgee",
                      },
                      Object {
                        "name": "Gandalf",
                        "value": "the Grey",
                      },
                      Object {
                        "name": "Meriadoc",
                        "value": "Brandybuck",
                      },
                      Object {
                        "name": "Peregrin",
                        "value": "Took",
                      },
                      Object {
                        "name": "Gimli",
                        "value": "song of Gloin",
                      },
                      Object {
                        "name": "Legolas",
                        "value": "Greenleaf",
                      },
                      Object {
                        "name": "Boromir",
                        "value": "son of Denethor",
                      },
                      Object {
                        "name": "Aragorn",
                        "value": "son of Arathorn",
                      },
                    ],
                  },
                ],
                "display_name": "lotr_baseline",
                "id": "38gnw73l-fn36-5829-1287-2m5ghs46801c",
              }
            }
            baselineDataLoading={false}
            clearBaselineData={[Function]}
            clearErrorData={[Function]}
            editBaselineEmptyState={false}
            editBaselineError={Object {}}
            editBaselineTableData={
              Array [
                Array [
                  0,
                  "Sauron",
                  "the Dark Lord",
                ],
                Array [
                  1,
                  "Galadriel",
                  "the Elven Queen",
                ],
                Array [
                  2,
                  "The Fellowship of the Ring",
                  Array [
                    Array [
                      3,
                      "Frodo",
                      "Baggins",
                    ],
                    Array [
                      4,
                      "Samwise",
                      "Gamgee",
                    ],
                    Array [
                      5,
                      "Gandalf",
                      "the Grey",
                    ],
                    Array [
                      6,
                      "Meriadoc",
                      "Brandybuck",
                    ],
                    Array [
                      7,
                      "Peregrin",
                      "Took",
                    ],
                    Array [
                      8,
                      "Gimli",
                      "son of Gloin",
                    ],
                    Array [
                      9,
                      "Legolas",
                      "Greenleaf",
                    ],
                    Array [
                      10,
                      "Boromir",
                      "son of Denethor",
                    ],
                    Array [
                      11,
                      "Aragorn",
                      "son of Arathorn",
                    ],
                  ],
                ],
              ]
            }
            expandRow={[Function]}
            expandedRows={Array []}
            exportToCSV={[Function]}
            factModalOpened={false}
            fetchBaselineData={[Function]}
            fetchBaselines={[Function]}
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            inlineError={Object {}}
            location={
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              }
            }
            match={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
            selectFact={[Function]}
          >
            <Connect(EditBaselineNameModal)
              baselineData={
                Object {
                  "baseline_facts": Array [
                    Object {
                      "name": "Sauron",
                      "value": "the Dark Lord",
                    },
                    Object {
                      "name": "Galadriel",
                      "value": "the Elven Queen",
                    },
                    Object {
                      "name": "The Fellowship of the Ring",
                      "values": Array [
                        Object {
                          "name": "Frodo",
                          "value": "Baggins",
                        },
                        Object {
                          "name": "Samwise",
                          "value": "Gamgee",
                        },
                        Object {
                          "name": "Gandalf",
                          "value": "the Grey",
                        },
                        Object {
                          "name": "Meriadoc",
                          "value": "Brandybuck",
                        },
                        Object {
                          "name": "Peregrin",
                          "value": "Took",
                        },
                        Object {
                          "name": "Gimli",
                          "value": "song of Gloin",
                        },
                        Object {
                          "name": "Legolas",
                          "value": "Greenleaf",
                        },
                        Object {
                          "name": "Boromir",
                          "value": "son of Denethor",
                        },
                        Object {
                          "name": "Aragorn",
                          "value": "son of Arathorn",
                        },
                      ],
                    },
                  ],
                  "display_name": "lotr_baseline",
                  "id": "38gnw73l-fn36-5829-1287-2m5ghs46801c",
                }
              }
              error={Object {}}
              modalOpened={false}
              toggleEditNameModal={[Function]}
            >
              <EditBaselineNameModal
                baselineData={
                  Object {
                    "baseline_facts": Array [
                      Object {
                        "name": "Sauron",
                        "value": "the Dark Lord",
                      },
                      Object {
                        "name": "Galadriel",
                        "value": "the Elven Queen",
                      },
                      Object {
                        "name": "The Fellowship of the Ring",
                        "values": Array [
                          Object {
                            "name": "Frodo",
                            "value": "Baggins",
                          },
                          Object {
                            "name": "Samwise",
                            "value": "Gamgee",
                          },
                          Object {
                            "name": "Gandalf",
                            "value": "the Grey",
                          },
                          Object {
                            "name": "Meriadoc",
                            "value": "Brandybuck",
                          },
                          Object {
                            "name": "Peregrin",
                            "value": "Took",
                          },
                          Object {
                            "name": "Gimli",
                            "value": "song of Gloin",
                          },
                          Object {
                            "name": "Legolas",
                            "value": "Greenleaf",
                          },
                          Object {
                            "name": "Boromir",
                            "value": "son of Denethor",
                          },
                          Object {
                            "name": "Aragorn",
                            "value": "son of Arathorn",
                          },
                        ],
                      },
                    ],
                    "display_name": "lotr_baseline",
                    "id": "38gnw73l-fn36-5829-1287-2m5ghs46801c",
                  }
                }
                error={Object {}}
                modalOpened={false}
                patchBaseline={[Function]}
                toggleEditNameModal={[Function]}
              >
                <Modal
                  actions={
                    Array [
                      <Button
                        onClick={[Function]}
                        ouiaId="save"
                        variant="primary"
                      >
                        Save
                      </Button>,
                      <Button
                        onClick={[Function]}
                        ouiaId="cancel"
                        variant="link"
                      >
                        Cancel
                      </Button>,
                    ]
                  }
                  appendTo={[Function]}
                  aria-describedby=""
                  aria-label=""
                  aria-labelledby=""
                  className=""
                  hasNoBodyWrapper={false}
                  isOpen={false}
                  onClose={[Function]}
                  ouiaSafe={true}
                  showClose={true}
                  title="Edit name"
                  titleIconVariant={null}
                  titleLabel=""
                  variant="small"
                >
                  <Portal
                    containerInfo={<div />}
                  >
                    <ModalContent
                      actions={
                        Array [
                          <Button
                            onClick={[Function]}
                            ouiaId="save"
                            variant="primary"
                          >
                            Save
                          </Button>,
                          <Button
                            onClick={[Function]}
                            ouiaId="cancel"
                            variant="link"
                          >
                            Cancel
                          </Button>,
                        ]
                      }
                      aria-describedby=""
                      aria-label=""
                      aria-labelledby=""
                      boxId="pf-modal-part-6"
                      className=""
                      descriptorId="pf-modal-part-8"
                      hasNoBodyWrapper={false}
                      isOpen={false}
                      labelId="pf-modal-part-7"
                      onClose={[Function]}
                      ouiaId="OUIA-Generated-Modal-small-7"
                      ouiaSafe={true}
                      showClose={true}
                      title="Edit name"
                      titleIconVariant={null}
                      titleLabel=""
                      variant="small"
                    />
                  </Portal>
                </Modal>
              </EditBaselineNameModal>
            </Connect(EditBaselineNameModal)>
            <PageHeader>
              <section
                className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                widget-type="InsightsPageHeader"
              >
                <Breadcrumb>
                  <nav
                    aria-label="Breadcrumb"
                    className="pf-c-breadcrumb"
                    data-ouia-component-id="OUIA-Generated-Breadcrumb-7"
                    data-ouia-component-type="PF4/Breadcrumb"
                    data-ouia-safe={true}
                  >
                    <ol
                      className="pf-c-breadcrumb__list"
                    >
                      <BreadcrumbItem
                        key=".0"
                        showDivider={false}
                      >
                        <li
                          className="pf-c-breadcrumb__item"
                        >
                          <a
                            onClick={[Function]}
                          >
                            Baselines
                          </a>
                        </li>
                      </BreadcrumbItem>
                      <BreadcrumbHeading
                        key=".1"
                        showDivider={true}
                      >
                        <li
                          className="pf-c-breadcrumb__item"
                        >
                          <h1
                            className="pf-c-breadcrumb__heading"
                          >
                            <span
                              className="pf-c-breadcrumb__item-divider"
                            >
                              <AngleRightIcon
                                color="currentColor"
                                noVerticalAlign={false}
                                size="sm"
                              >
                                <svg
                                  aria-hidden={true}
                                  aria-labelledby={null}
                                  fill="currentColor"
                                  height="1em"
                                  role="img"
                                  style={
                                    Object {
                                      "verticalAlign": "-0.125em",
                                    }
                                  }
                                  viewBox="0 0 256 512"
                                  width="1em"
                                >
                                  <path
                                    d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                  />
                                </svg>
                              </AngleRightIcon>
                            </span>
                            lotr_baseline
                          </h1>
                        </li>
                      </BreadcrumbHeading>
                    </ol>
                  </nav>
                </Breadcrumb>
                <div
                  id="edit-baseline-title"
                >
                  <span
                    className="pf-c-title pf-m-2xl"
                  >
                    lotr_baseline
                  </span>
                  <span>
                    <EditAltIcon
                      className="pointer not-active edit-icon-margin"
                      color="currentColor"
                      noVerticalAlign={false}
                      onClick={[Function]}
                      size="sm"
                    >
                      <svg
                        aria-hidden={true}
                        aria-labelledby={null}
                        className="pointer not-active edit-icon-margin"
                        fill="currentColor"
                        height="1em"
                        onClick={[Function]}
                        role="img"
                        style={
                          Object {
                            "verticalAlign": "-0.125em",
                          }
                        }
                        viewBox="0 0 1024 1024"
                        width="1em"
                      >
                        <path
                          d="M1024,187.9 C1024,207 1017.3,223.1 1004,236.4 L857.5,386.9 L638.8,168.4 L787.3,20.5 C800.3,6.83333333 816.5,0 835.9,0 C855,0 871.366667,6.83333333 885,20.5 L1004,138.9 C1017.3,152.9 1023.96667,169.233333 1024,187.9 Z M806.2,438.9 L219.4,1024 L0,1024 L0,804.6 L586.6,219.5 L806.2,438.9 Z M219.6,950.9 L292.9,877.8 L146.3,731.4 L73.2,804.5 L73.2,877.6 L146.3,877.6 L146.3,951 L219.6,950.9 Z"
                        />
                      </svg>
                    </EditAltIcon>
                  </span>
                </div>
              </section>
            </PageHeader>
            <Connect(Main)>
              <Main>
                <section
                  className="pf-l-page__main-section pf-c-page__main-section"
                  page-type=""
                >
                  <div />
                  <Connect(ErrorAlert)
                    error={Object {}}
                    onClose={[Function]}
                  >
                    <ErrorAlert
                      addNotification={[Function]}
                      error={Object {}}
                      onClose={[Function]}
                    />
                  </Connect(ErrorAlert)>
                  <Card
                    className="pf-t-light pf-m-opaque-100"
                  >
                    <article
                      className="pf-c-card pf-t-light pf-m-opaque-100"
                      data-ouia-component-id="OUIA-Generated-Card-5"
                      data-ouia-component-type="PF4/Card"
                      data-ouia-safe={true}
                      id=""
                    >
                      <CardBody>
                        <div
                          className="pf-c-card__body"
                        >
                          <EditBaselineToolbar
                            baselineData={
                              Object {
                                "baseline_facts": Array [
                                  Object {
                                    "name": "Sauron",
                                    "value": "the Dark Lord",
                                  },
                                  Object {
                                    "name": "Galadriel",
                                    "value": "the Elven Queen",
                                  },
                                  Object {
                                    "name": "The Fellowship of the Ring",
                                    "values": Array [
                                      Object {
                                        "name": "Frodo",
                                        "value": "Baggins",
                                      },
                                      Object {
                                        "name": "Samwise",
                                        "value": "Gamgee",
                                      },
                                      Object {
                                        "name": "Gandalf",
                                        "value": "the Grey",
                                      },
                                      Object {
                                        "name": "Meriadoc",
                                        "value": "Brandybuck",
                                      },
                                      Object {
                                        "name": "Peregrin",
                                        "value": "Took",
                                      },
                                      Object {
                                        "name": "Gimli",
                                        "value": "song of Gloin",
                                      },
                                      Object {
                                        "name": "Legolas",
                                        "value": "Greenleaf",
                                      },
                                      Object {
                                        "name": "Boromir",
                                        "value": "son of Denethor",
                                      },
                                      Object {
                                        "name": "Aragorn",
                                        "value": "son of Arathorn",
                                      },
                                    ],
                                  },
                                ],
                                "display_name": "lotr_baseline",
                                "id": "38gnw73l-fn36-5829-1287-2m5ghs46801c",
                              }
                            }
                            exportToCSV={[Function]}
                            hasWritePermissions={true}
                            isDisabled={false}
                            onBulkSelect={[Function]}
                            selected={0}
                            tableData={
                              Array [
                                Array [
                                  0,
                                  "Sauron",
                                  "the Dark Lord",
                                ],
                                Array [
                                  1,
                                  "Galadriel",
                                  "the Elven Queen",
                                ],
                                Array [
                                  2,
                                  "The Fellowship of the Ring",
                                  Array [
                                    Array [
                                      3,
                                      "Frodo",
                                      "Baggins",
                                    ],
                                    Array [
                                      4,
                                      "Samwise",
                                      "Gamgee",
                                    ],
                                    Array [
                                      5,
                                      "Gandalf",
                                      "the Grey",
                                    ],
                                    Array [
                                      6,
                                      "Meriadoc",
                                      "Brandybuck",
                                    ],
                                    Array [
                                      7,
                                      "Peregrin",
                                      "Took",
                                    ],
                                    Array [
                                      8,
                                      "Gimli",
                                      "son of Gloin",
                                    ],
                                    Array [
                                      9,
                                      "Legolas",
                                      "Greenleaf",
                                    ],
                                    Array [
                                      10,
                                      "Boromir",
                                      "son of Denethor",
                                    ],
                                    Array [
                                      11,
                                      "Aragorn",
                                      "son of Arathorn",
                                    ],
                                  ],
                                ],
                              ]
                            }
                            totalFacts={11}
                          >
                            <Toolbar
                              className="drift-toolbar"
                            >
                              <GenerateId
                                prefix="pf-random-id-"
                              >
                                <div
                                  className="pf-c-toolbar drift-toolbar"
                                  id="pf-random-id-4"
                                >
                                  <ToolbarContent
                                    isExpanded={false}
                                    showClearFiltersButton={false}
                                  >
                                    <div
                                      className="pf-c-toolbar__content"
                                    >
                                      <div
                                        className="pf-c-toolbar__content-section"
                                      >
                                        <ToolbarItem>
                                          <div
                                            className="pf-c-toolbar__item"
                                          >
                                            <BulkSelect
                                              checked={false}
                                              className=""
                                              count={null}
                                              isDisabled={false}
                                              items={
                                                Array [
                                                  Object {
                                                    "key": "select-all",
                                                    "onClick": [Function],
                                                    "title": "Select all",
                                                  },
                                                  Object {
                                                    "key": "select-none",
                                                    "onClick": [Function],
                                                    "title": "Select none",
                                                  },
                                                ]
                                              }
                                              onSelect={[Function]}
                                            >
                                              <Dropdown
                                                className="ins-c-bulk-select"
                                                dropdownItems={
                                                  Array [
                                                    <DropdownItem
                                                      component="button"
                                                      onClick={[Function]}
                                                    >
                                                      Select all
                                                    </DropdownItem>,
                                                    <DropdownItem
                                                      component="button"
                                                      onClick={[Function]}
                                                    >
                                                      Select none
                                                    </DropdownItem>,
                                                  ]
                                                }
                                                isOpen={false}
                                                onSelect={[Function]}
                                                toggle={
                                                  <DropdownToggle
                                                    isDisabled={false}
                                                    onToggle={[Function]}
                                                    splitButtonItems={
                                                      Array [
                                                        <React.Fragment>
                                                          <DropdownToggleCheckbox
                                                            aria-label="Select all"
                                                            className=""
                                                            id="toggle-checkbox"
                                                            isChecked={false}
                                                            isDisabled={false}
                                                            isValid={true}
                                                            onChange={[Function]}
                                                          >
                                                            
                                                          </DropdownToggleCheckbox>
                                                        </React.Fragment>,
                                                      ]
                                                    }
                                                  />
                                                }
                                              >
                                                <DropdownWithContext
                                                  autoFocus={true}
                                                  className="ins-c-bulk-select"
                                                  direction="down"
                                                  dropdownItems={
                                                    Array [
                                                      <DropdownItem
                                                        component="button"
                                                        onClick={[Function]}
                                                      >
                                                        Select all
                                                      </DropdownItem>,
                                                      <DropdownItem
                                                        component="button"
                                                        onClick={[Function]}
                                                      >
                                                        Select none
                                                      </DropdownItem>,
                                                    ]
                                                  }
                                                  isGrouped={false}
                                                  isOpen={false}
                                                  isPlain={false}
                                                  menuAppendTo="inline"
                                                  onSelect={[Function]}
                                                  position="left"
                                                  toggle={
                                                    <DropdownToggle
                                                      isDisabled={false}
                                                      onToggle={[Function]}
                                                      splitButtonItems={
                                                        Array [
                                                          <React.Fragment>
                                                            <DropdownToggleCheckbox
                                                              aria-label="Select all"
                                                              className=""
                                                              id="toggle-checkbox"
                                                              isChecked={false}
                                                              isDisabled={false}
                                                              isValid={true}
                                                              onChange={[Function]}
                                                            >
                                                              
                                                            </DropdownToggleCheckbox>
                                                          </React.Fragment>,
                                                        ]
                                                      }
                                                    />
                                                  }
                                                >
                                                  <div
                                                    className="pf-c-dropdown ins-c-bulk-select"
                                                    data-ouia-component-id="OUIA-Generated-Dropdown-8"
                                                    data-ouia-component-type="PF4/Dropdown"
                                                    data-ouia-safe={true}
                                                  >
                                                    <DropdownToggle
                                                      aria-haspopup={true}
                                                      getMenuRef={[Function]}
                                                      id="pf-dropdown-toggle-id-15"
                                                      isDisabled={false}
                                                      isOpen={false}
                                                      isPlain={false}
                                                      key=".0"
                                                      onEnter={[Function]}
                                                      onToggle={[Function]}
                                                      parentRef={
                                                        Object {
                                                          "current": <div
                                                            class="pf-c-dropdown ins-c-bulk-select"
                                                            data-ouia-component-id="OUIA-Generated-Dropdown-8"
                                                            data-ouia-component-type="PF4/Dropdown"
                                                            data-ouia-safe="true"
                                                          >
                                                            <div
                                                              class="pf-c-dropdown__toggle pf-m-split-button"
                                                            >
                                                              <label
                                                                class="pf-c-dropdown__toggle-check"
                                                                for="toggle-checkbox"
                                                              >
                                                                <input
                                                                  aria-invalid="false"
                                                                  aria-label="Select all"
                                                                  data-ouia-component-id="OUIA-Generated-DropdownToggleCheckbox-5"
                                                                  data-ouia-component-type="PF4/DropdownToggleCheckbox"
                                                                  data-ouia-safe="true"
                                                                  id="toggle-checkbox"
                                                                  type="checkbox"
                                                                />
                                                                
                                                              </label>
                                                              <button
                                                                aria-expanded="false"
                                                                aria-haspopup="true"
                                                                aria-label="Select"
                                                                class="pf-c-dropdown__toggle-button"
                                                                data-ouia-component-id="OUIA-Generated-DropdownToggle-9"
                                                                data-ouia-component-type="PF4/DropdownToggle"
                                                                data-ouia-safe="true"
                                                                id="pf-dropdown-toggle-id-15"
                                                                type="button"
                                                              >
                                                                <span
                                                                  class=""
                                                                >
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    fill="currentColor"
                                                                    height="1em"
                                                                    role="img"
                                                                    style="vertical-align: -0.125em;"
                                                                    viewBox="0 0 320 512"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                    />
                                                                  </svg>
                                                                </span>
                                                              </button>
                                                            </div>
                                                          </div>,
                                                        }
                                                      }
                                                      splitButtonItems={
                                                        Array [
                                                          <React.Fragment>
                                                            <DropdownToggleCheckbox
                                                              aria-label="Select all"
                                                              className=""
                                                              id="toggle-checkbox"
                                                              isChecked={false}
                                                              isDisabled={false}
                                                              isValid={true}
                                                              onChange={[Function]}
                                                            >
                                                              
                                                            </DropdownToggleCheckbox>
                                                          </React.Fragment>,
                                                        ]
                                                      }
                                                    >
                                                      <div
                                                        className="pf-c-dropdown__toggle pf-m-split-button"
                                                      >
                                                        <DropdownToggleCheckbox
                                                          aria-label="Select all"
                                                          className=""
                                                          id="toggle-checkbox"
                                                          isChecked={false}
                                                          isDisabled={false}
                                                          isValid={true}
                                                          onChange={[Function]}
                                                        >
                                                          <label
                                                            className="pf-c-dropdown__toggle-check"
                                                            htmlFor="toggle-checkbox"
                                                          >
                                                            <input
                                                              aria-invalid={false}
                                                              aria-label="Select all"
                                                              checked={false}
                                                              data-ouia-component-id="OUIA-Generated-DropdownToggleCheckbox-5"
                                                              data-ouia-component-type="PF4/DropdownToggleCheckbox"
                                                              data-ouia-safe={true}
                                                              disabled={false}
                                                              id="toggle-checkbox"
                                                              onChange={[Function]}
                                                              type="checkbox"
                                                            />
                                                          </label>
                                                        </DropdownToggleCheckbox>
                                                        <Toggle
                                                          aria-haspopup={true}
                                                          aria-label="Select"
                                                          bubbleEvent={false}
                                                          className=""
                                                          data-ouia-component-id="OUIA-Generated-DropdownToggle-9"
                                                          data-ouia-component-type="PF4/DropdownToggle"
                                                          data-ouia-safe={true}
                                                          getMenuRef={[Function]}
                                                          id="pf-dropdown-toggle-id-15"
                                                          isActive={false}
                                                          isDisabled={false}
                                                          isOpen={false}
                                                          isPlain={false}
                                                          isPrimary={false}
                                                          isSplitButton={true}
                                                          onEnter={[Function]}
                                                          onToggle={[Function]}
                                                          parentRef={
                                                            Object {
                                                              "current": <div
                                                                class="pf-c-dropdown ins-c-bulk-select"
                                                                data-ouia-component-id="OUIA-Generated-Dropdown-8"
                                                                data-ouia-component-type="PF4/Dropdown"
                                                                data-ouia-safe="true"
                                                              >
                                                                <div
                                                                  class="pf-c-dropdown__toggle pf-m-split-button"
                                                                >
                                                                  <label
                                                                    class="pf-c-dropdown__toggle-check"
                                                                    for="toggle-checkbox"
                                                                  >
                                                                    <input
                                                                      aria-invalid="false"
                                                                      aria-label="Select all"
                                                                      data-ouia-component-id="OUIA-Generated-DropdownToggleCheckbox-5"
                                                                      data-ouia-component-type="PF4/DropdownToggleCheckbox"
                                                                      data-ouia-safe="true"
                                                                      id="toggle-checkbox"
                                                                      type="checkbox"
                                                                    />
                                                                    
                                                                  </label>
                                                                  <button
                                                                    aria-expanded="false"
                                                                    aria-haspopup="true"
                                                                    aria-label="Select"
                                                                    class="pf-c-dropdown__toggle-button"
                                                                    data-ouia-component-id="OUIA-Generated-DropdownToggle-9"
                                                                    data-ouia-component-type="PF4/DropdownToggle"
                                                                    data-ouia-safe="true"
                                                                    id="pf-dropdown-toggle-id-15"
                                                                    type="button"
                                                                  >
                                                                    <span
                                                                      class=""
                                                                    >
                                                                      <svg
                                                                        aria-hidden="true"
                                                                        fill="currentColor"
                                                                        height="1em"
                                                                        role="img"
                                                                        style="vertical-align: -0.125em;"
                                                                        viewBox="0 0 320 512"
                                                                        width="1em"
                                                                      >
                                                                        <path
                                                                          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                        />
                                                                      </svg>
                                                                    </span>
                                                                  </button>
                                                                </div>
                                                              </div>,
                                                            }
                                                          }
                                                        >
                                                          <button
                                                            aria-expanded={false}
                                                            aria-haspopup={true}
                                                            aria-label="Select"
                                                            className="pf-c-dropdown__toggle-button"
                                                            data-ouia-component-id="OUIA-Generated-DropdownToggle-9"
                                                            data-ouia-component-type="PF4/DropdownToggle"
                                                            data-ouia-safe={true}
                                                            disabled={false}
                                                            id="pf-dropdown-toggle-id-15"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            type="button"
                                                          >
                                                            <span
                                                              className=""
                                                            >
                                                              <CaretDownIcon
                                                                color="currentColor"
                                                                noVerticalAlign={false}
                                                                size="sm"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  aria-labelledby={null}
                                                                  fill="currentColor"
                                                                  height="1em"
                                                                  role="img"
                                                                  style={
                                                                    Object {
                                                                      "verticalAlign": "-0.125em",
                                                                    }
                                                                  }
                                                                  viewBox="0 0 320 512"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                  />
                                                                </svg>
                                                              </CaretDownIcon>
                                                            </span>
                                                          </button>
                                                        </Toggle>
                                                      </div>
                                                    </DropdownToggle>
                                                  </div>
                                                </DropdownWithContext>
                                              </Dropdown>
                                            </BulkSelect>
                                          </div>
                                        </ToolbarItem>
                                        <ToolbarItem>
                                          <div
                                            className="pf-c-toolbar__item"
                                          >
                                            <Connect(AddFactButton)
                                              hasWritePermissions={true}
                                              isDisabled={false}
                                            >
                                              <AddFactButton
                                                hasWritePermissions={true}
                                                isDisabled={false}
                                                setFactData={[Function]}
                                                toggleFactModal={[Function]}
                                              >
                                                <Button
                                                  isDisabled={false}
                                                  onClick={[Function]}
                                                  ouiaId="add_fact"
                                                  variant="primary"
                                                >
                                                  <button
                                                    aria-disabled={false}
                                                    aria-label={null}
                                                    className="pf-c-button pf-m-primary"
                                                    data-ouia-component-id="add_fact"
                                                    data-ouia-component-type="PF4/Button"
                                                    data-ouia-safe={true}
                                                    disabled={false}
                                                    onClick={[Function]}
                                                    role={null}
                                                    type="button"
                                                  >
                                                    Add fact or category
                                                  </button>
                                                </Button>
                                              </AddFactButton>
                                            </Connect(AddFactButton)>
                                          </div>
                                        </ToolbarItem>
                                        <ForwardRef
                                          variant="icon-button-group"
                                        >
                                          <ToolbarGroupWithRef
                                            innerRef={null}
                                            variant="icon-button-group"
                                          >
                                            <div
                                              className="pf-c-toolbar__group pf-m-icon-button-group"
                                            >
                                              <ToolbarItem>
                                                <div
                                                  className="pf-c-toolbar__item"
                                                >
                                                  <ExportCSVButton
                                                    dropdownItems={
                                                      Array [
                                                        <DropdownItem
                                                          component="button"
                                                          onClick={[Function]}
                                                        >
                                                          Export to CSV
                                                        </DropdownItem>,
                                                      ]
                                                    }
                                                    isOpen={false}
                                                    onToggle={[Function]}
                                                  >
                                                    <Dropdown
                                                      dropdownItems={
                                                        Array [
                                                          <DropdownItem
                                                            component="button"
                                                            onClick={[Function]}
                                                          >
                                                            Export to CSV
                                                          </DropdownItem>,
                                                        ]
                                                      }
                                                      isOpen={false}
                                                      isPlain={true}
                                                      ouiaId="export"
                                                      position="left"
                                                      toggle={
                                                        <DropdownToggle
                                                          onToggle={[Function]}
                                                          toggleIndicator={null}
                                                        >
                                                          <ExportIcon
                                                            className="pointer not-active"
                                                            color="currentColor"
                                                            noVerticalAlign={false}
                                                            size="sm"
                                                          />
                                                        </DropdownToggle>
                                                      }
                                                    >
                                                      <DropdownWithContext
                                                        autoFocus={true}
                                                        className=""
                                                        direction="down"
                                                        dropdownItems={
                                                          Array [
                                                            <DropdownItem
                                                              component="button"
                                                              onClick={[Function]}
                                                            >
                                                              Export to CSV
                                                            </DropdownItem>,
                                                          ]
                                                        }
                                                        isGrouped={false}
                                                        isOpen={false}
                                                        isPlain={true}
                                                        menuAppendTo="inline"
                                                        onSelect={[Function]}
                                                        position="left"
                                                        toggle={
                                                          <DropdownToggle
                                                            onToggle={[Function]}
                                                            toggleIndicator={null}
                                                          >
                                                            <ExportIcon
                                                              className="pointer not-active"
                                                              color="currentColor"
                                                              noVerticalAlign={false}
                                                              size="sm"
                                                            />
                                                          </DropdownToggle>
                                                        }
                                                      >
                                                        <div
                                                          className="pf-c-dropdown"
                                                          data-ouia-component-id="export"
                                                          data-ouia-component-type="PF4/Dropdown"
                                                          data-ouia-safe={true}
                                                        >
                                                          <DropdownToggle
                                                            aria-haspopup={true}
                                                            getMenuRef={[Function]}
                                                            id="pf-dropdown-toggle-id-16"
                                                            isOpen={false}
                                                            isPlain={true}
                                                            key=".0"
                                                            onEnter={[Function]}
                                                            onToggle={[Function]}
                                                            parentRef={
                                                              Object {
                                                                "current": <div
                                                                  class="pf-c-dropdown"
                                                                  data-ouia-component-id="export"
                                                                  data-ouia-component-type="PF4/Dropdown"
                                                                  data-ouia-safe="true"
                                                                >
                                                                  <button
                                                                    aria-expanded="false"
                                                                    aria-haspopup="true"
                                                                    class="pf-c-dropdown__toggle pf-m-plain"
                                                                    data-ouia-component-id="OUIA-Generated-DropdownToggle-10"
                                                                    data-ouia-component-type="PF4/DropdownToggle"
                                                                    data-ouia-safe="true"
                                                                    id="pf-dropdown-toggle-id-16"
                                                                    type="button"
                                                                  >
                                                                    <span>
                                                                      <svg
                                                                        aria-hidden="true"
                                                                        class="pointer not-active"
                                                                        fill="currentColor"
                                                                        height="1em"
                                                                        role="img"
                                                                        style="vertical-align: -0.125em;"
                                                                        viewBox="0 0 1024 1024"
                                                                        width="1em"
                                                                      >
                                                                        <path
                                                                          d="M975.8,636.9 L870.9,741.8 L457.9,328.6 C452.1,322.8 445.4,319.9 437.9,319.9 C430.4,319.9 423.7,322.8 417.9,328.6 L328.8,417.7 C323,423.5 320.1,430.2 320.1,437.7 C320.1,445.2 323,451.9 328.8,457.7 L742,870.7 L636.9,975.8 C610.5,1002.2 619.4,1024 656.8,1024 L956,1024 C1014.5,1024 1024,1013.7 1024,955.9 L1024,656.7 C1023.9,619.4 1002.2,610.5 975.8,636.9 Z M128,128 L896,128 L896,361.7 C896.007942,370.182681 899.389907,378.313788 905.4,384.3 L996.7,475.6 C1006.8,485.7 1024,478.5 1024,464.3 L1024,22.7 C1024,16.1 1021.9,10.7 1017.6,6.4 C1013.3,2.1 1007.9,0 1001.3,0 L22.7,0 C16.1,0 10.7,2.1 6.4,6.4 C2.1,10.7 0,16.1 0,22.7 L0,1001.3 C0,1007.9 2.1,1013.3 6.4,1017.6 C10.7,1021.9 16.1,1024 22.7,1024 L463.4,1024 C469.862884,1023.98894 475.684489,1020.0908 478.156232,1014.11925 C480.627976,1008.14769 479.264428,1001.27548 474.7,996.7 L383.4,905.4 C377.413788,899.389907 369.282681,896.007942 360.8,896 L128,896 L128,128 Z"
                                                                        />
                                                                      </svg>
                                                                    </span>
                                                                  </button>
                                                                </div>,
                                                              }
                                                            }
                                                            toggleIndicator={null}
                                                          >
                                                            <Toggle
                                                              aria-haspopup={true}
                                                              bubbleEvent={false}
                                                              className=""
                                                              data-ouia-component-id="OUIA-Generated-DropdownToggle-10"
                                                              data-ouia-component-type="PF4/DropdownToggle"
                                                              data-ouia-safe={true}
                                                              getMenuRef={[Function]}
                                                              id="pf-dropdown-toggle-id-16"
                                                              isActive={false}
                                                              isDisabled={false}
                                                              isOpen={false}
                                                              isPlain={true}
                                                              isPrimary={false}
                                                              isSplitButton={false}
                                                              onEnter={[Function]}
                                                              onToggle={[Function]}
                                                              parentRef={
                                                                Object {
                                                                  "current": <div
                                                                    class="pf-c-dropdown"
                                                                    data-ouia-component-id="export"
                                                                    data-ouia-component-type="PF4/Dropdown"
                                                                    data-ouia-safe="true"
                                                                  >
                                                                    <button
                                                                      aria-expanded="false"
                                                                      aria-haspopup="true"
                                                                      class="pf-c-dropdown__toggle pf-m-plain"
                                                                      data-ouia-component-id="OUIA-Generated-DropdownToggle-10"
                                                                      data-ouia-component-type="PF4/DropdownToggle"
                                                                      data-ouia-safe="true"
                                                                      id="pf-dropdown-toggle-id-16"
                                                                      type="button"
                                                                    >
                                                                      <span>
                                                                        <svg
                                                                          aria-hidden="true"
                                                                          class="pointer not-active"
                                                                          fill="currentColor"
                                                                          height="1em"
                                                                          role="img"
                                                                          style="vertical-align: -0.125em;"
                                                                          viewBox="0 0 1024 1024"
                                                                          width="1em"
                                                                        >
                                                                          <path
                                                                            d="M975.8,636.9 L870.9,741.8 L457.9,328.6 C452.1,322.8 445.4,319.9 437.9,319.9 C430.4,319.9 423.7,322.8 417.9,328.6 L328.8,417.7 C323,423.5 320.1,430.2 320.1,437.7 C320.1,445.2 323,451.9 328.8,457.7 L742,870.7 L636.9,975.8 C610.5,1002.2 619.4,1024 656.8,1024 L956,1024 C1014.5,1024 1024,1013.7 1024,955.9 L1024,656.7 C1023.9,619.4 1002.2,610.5 975.8,636.9 Z M128,128 L896,128 L896,361.7 C896.007942,370.182681 899.389907,378.313788 905.4,384.3 L996.7,475.6 C1006.8,485.7 1024,478.5 1024,464.3 L1024,22.7 C1024,16.1 1021.9,10.7 1017.6,6.4 C1013.3,2.1 1007.9,0 1001.3,0 L22.7,0 C16.1,0 10.7,2.1 6.4,6.4 C2.1,10.7 0,16.1 0,22.7 L0,1001.3 C0,1007.9 2.1,1013.3 6.4,1017.6 C10.7,1021.9 16.1,1024 22.7,1024 L463.4,1024 C469.862884,1023.98894 475.684489,1020.0908 478.156232,1014.11925 C480.627976,1008.14769 479.264428,1001.27548 474.7,996.7 L383.4,905.4 C377.413788,899.389907 369.282681,896.007942 360.8,896 L128,896 L128,128 Z"
                                                                          />
                                                                        </svg>
                                                                      </span>
                                                                    </button>
                                                                  </div>,
                                                                }
                                                              }
                                                            >
                                                              <button
                                                                aria-expanded={false}
                                                                aria-haspopup={true}
                                                                className="pf-c-dropdown__toggle pf-m-plain"
                                                                data-ouia-component-id="OUIA-Generated-DropdownToggle-10"
                                                                data-ouia-component-type="PF4/DropdownToggle"
                                                                data-ouia-safe={true}
                                                                disabled={false}
                                                                id="pf-dropdown-toggle-id-16"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className={null}
                                                                >
                                                                  <ExportIcon
                                                                    className="pointer not-active"
                                                                    color="currentColor"
                                                                    noVerticalAlign={false}
                                                                    size="sm"
                                                                  >
                                                                    <svg
                                                                      aria-hidden={true}
                                                                      aria-labelledby={null}
                                                                      className="pointer not-active"
                                                                      fill="currentColor"
                                                                      height="1em"
                                                                      role="img"
                                                                      style={
                                                                        Object {
                                                                          "verticalAlign": "-0.125em",
                                                                        }
                                                                      }
                                                                      viewBox="0 0 1024 1024"
                                                                      width="1em"
                                                                    >
                                                                      <path
                                                                        d="M975.8,636.9 L870.9,741.8 L457.9,328.6 C452.1,322.8 445.4,319.9 437.9,319.9 C430.4,319.9 423.7,322.8 417.9,328.6 L328.8,417.7 C323,423.5 320.1,430.2 320.1,437.7 C320.1,445.2 323,451.9 328.8,457.7 L742,870.7 L636.9,975.8 C610.5,1002.2 619.4,1024 656.8,1024 L956,1024 C1014.5,1024 1024,1013.7 1024,955.9 L1024,656.7 C1023.9,619.4 1002.2,610.5 975.8,636.9 Z M128,128 L896,128 L896,361.7 C896.007942,370.182681 899.389907,378.313788 905.4,384.3 L996.7,475.6 C1006.8,485.7 1024,478.5 1024,464.3 L1024,22.7 C1024,16.1 1021.9,10.7 1017.6,6.4 C1013.3,2.1 1007.9,0 1001.3,0 L22.7,0 C16.1,0 10.7,2.1 6.4,6.4 C2.1,10.7 0,16.1 0,22.7 L0,1001.3 C0,1007.9 2.1,1013.3 6.4,1017.6 C10.7,1021.9 16.1,1024 22.7,1024 L463.4,1024 C469.862884,1023.98894 475.684489,1020.0908 478.156232,1014.11925 C480.627976,1008.14769 479.264428,1001.27548 474.7,996.7 L383.4,905.4 C377.413788,899.389907 369.282681,896.007942 360.8,896 L128,896 L128,128 Z"
                                                                      />
                                                                    </svg>
                                                                  </ExportIcon>
                                                                </span>
                                                              </button>
                                                            </Toggle>
                                                          </DropdownToggle>
                                                        </div>
                                                      </DropdownWithContext>
                                                    </Dropdown>
                                                  </ExportCSVButton>
                                                </div>
                                              </ToolbarItem>
                                              <ToolbarItem>
                                                <div
                                                  className="pf-c-toolbar__item"
                                                >
                                                  <Connect(EditBaselineKebab)>
                                                    <EditBaselineKebab
                                                      dispatch={[Function]}
                                                      editBaselineTableData={
                                                        Array [
                                                          Array [
                                                            0,
                                                            "Sauron",
                                                            "the Dark Lord",
                                                          ],
                                                          Array [
                                                            1,
                                                            "Galadriel",
                                                            "the Elven Queen",
                                                          ],
                                                          Array [
                                                            2,
                                                            "The Fellowship of the Ring",
                                                            Array [
                                                              Array [
                                                                3,
                                                                "Frodo",
                                                                "Baggins",
                                                              ],
                                                              Array [
                                                                4,
                                                                "Samwise",
                                                                "Gamgee",
                                                              ],
                                                              Array [
                                                                5,
                                                                "Gandalf",
                                                                "the Grey",
                                                              ],
                                                              Array [
                                                                6,
                                                                "Meriadoc",
                                                                "Brandybuck",
                                                              ],
                                                              Array [
                                                                7,
                                                                "Peregrin",
                                                                "Took",
                                                              ],
                                                              Array [
                                                                8,
                                                                "Gimli",
                                                                "son of Gloin",
                                                              ],
                                                              Array [
                                                                9,
                                                                "Legolas",
                                                                "Greenleaf",
                                                              ],
                                                              Array [
                                                                10,
                                                                "Boromir",
                                                                "son of Denethor",
                                                              ],
                                                              Array [
                                                                11,
                                                                "Aragorn",
                                                                "son of Arathorn",
                                                              ],
                                                            ],
                                                          ],
                                                        ]
                                                      }
                                                    >
                                                      <Dropdown
                                                        dropdownItems={
                                                          Array [
                                                            <DropdownItem
                                                              component="button"
                                                              isDisabled={true}
                                                              onClick={[Function]}
                                                            >
                                                              Delete facts
                                                            </DropdownItem>,
                                                          ]
                                                        }
                                                        isOpen={false}
                                                        isPlain={true}
                                                        ouiaId="actions"
                                                        style={
                                                          Object {
                                                            "float": "left",
                                                          }
                                                        }
                                                        toggle={
                                                          <KebabToggle
                                                            onToggle={[Function]}
                                                          />
                                                        }
                                                      >
                                                        <DropdownWithContext
                                                          autoFocus={true}
                                                          className=""
                                                          direction="down"
                                                          dropdownItems={
                                                            Array [
                                                              <DropdownItem
                                                                component="button"
                                                                isDisabled={true}
                                                                onClick={[Function]}
                                                              >
                                                                Delete facts
                                                              </DropdownItem>,
                                                            ]
                                                          }
                                                          isGrouped={false}
                                                          isOpen={false}
                                                          isPlain={true}
                                                          menuAppendTo="inline"
                                                          onSelect={[Function]}
                                                          position="left"
                                                          style={
                                                            Object {
                                                              "float": "left",
                                                            }
                                                          }
                                                          toggle={
                                                            <KebabToggle
                                                              onToggle={[Function]}
                                                            />
                                                          }
                                                        >
                                                          <div
                                                            className="pf-c-dropdown"
                                                            data-ouia-component-id="actions"
                                                            data-ouia-component-type="PF4/Dropdown"
                                                            data-ouia-safe={true}
                                                            style={
                                                              Object {
                                                                "float": "left",
                                                              }
                                                            }
                                                          >
                                                            <KebabToggle
                                                              aria-haspopup={true}
                                                              getMenuRef={[Function]}
                                                              id="pf-dropdown-toggle-id-17"
                                                              isOpen={false}
                                                              isPlain={true}
                                                              key=".0"
                                                              onEnter={[Function]}
                                                              onToggle={[Function]}
                                                              parentRef={
                                                                Object {
                                                                  "current": <div
                                                                    class="pf-c-dropdown"
                                                                    data-ouia-component-id="actions"
                                                                    data-ouia-component-type="PF4/Dropdown"
                                                                    data-ouia-safe="true"
                                                                    style="float: left;"
                                                                  >
                                                                    <button
                                                                      aria-expanded="false"
                                                                      aria-haspopup="true"
                                                                      aria-label="Actions"
                                                                      class="pf-c-dropdown__toggle pf-m-plain"
                                                                      id="pf-dropdown-toggle-id-17"
                                                                      type="button"
                                                                    >
                                                                      <svg
                                                                        aria-hidden="true"
                                                                        fill="currentColor"
                                                                        height="1em"
                                                                        role="img"
                                                                        style="vertical-align: -0.125em;"
                                                                        viewBox="0 0 192 512"
                                                                        width="1em"
                                                                      >
                                                                        <path
                                                                          d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                                        />
                                                                      </svg>
                                                                    </button>
                                                                  </div>,
                                                                }
                                                              }
                                                            >
                                                              <Toggle
                                                                aria-haspopup={true}
                                                                aria-label="Actions"
                                                                bubbleEvent={false}
                                                                className=""
                                                                getMenuRef={[Function]}
                                                                id="pf-dropdown-toggle-id-17"
                                                                isActive={false}
                                                                isDisabled={false}
                                                                isOpen={false}
                                                                isPlain={true}
                                                                isPrimary={false}
                                                                isSplitButton={false}
                                                                onEnter={[Function]}
                                                                onToggle={[Function]}
                                                                parentRef={
                                                                  Object {
                                                                    "current": <div
                                                                      class="pf-c-dropdown"
                                                                      data-ouia-component-id="actions"
                                                                      data-ouia-component-type="PF4/Dropdown"
                                                                      data-ouia-safe="true"
                                                                      style="float: left;"
                                                                    >
                                                                      <button
                                                                        aria-expanded="false"
                                                                        aria-haspopup="true"
                                                                        aria-label="Actions"
                                                                        class="pf-c-dropdown__toggle pf-m-plain"
                                                                        id="pf-dropdown-toggle-id-17"
                                                                        type="button"
                                                                      >
                                                                        <svg
                                                                          aria-hidden="true"
                                                                          fill="currentColor"
                                                                          height="1em"
                                                                          role="img"
                                                                          style="vertical-align: -0.125em;"
                                                                          viewBox="0 0 192 512"
                                                                          width="1em"
                                                                        >
                                                                          <path
                                                                            d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                                          />
                                                                        </svg>
                                                                      </button>
                                                                    </div>,
                                                                  }
                                                                }
                                                              >
                                                                <button
                                                                  aria-expanded={false}
                                                                  aria-haspopup={true}
                                                                  aria-label="Actions"
                                                                  className="pf-c-dropdown__toggle pf-m-plain"
                                                                  disabled={false}
                                                                  id="pf-dropdown-toggle-id-17"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  type="button"
                                                                >
                                                                  <EllipsisVIcon
                                                                    color="currentColor"
                                                                    noVerticalAlign={false}
                                                                    size="sm"
                                                                  >
                                                                    <svg
                                                                      aria-hidden={true}
                                                                      aria-labelledby={null}
                                                                      fill="currentColor"
                                                                      height="1em"
                                                                      role="img"
                                                                      style={
                                                                        Object {
                                                                          "verticalAlign": "-0.125em",
                                                                        }
                                                                      }
                                                                      viewBox="0 0 192 512"
                                                                      width="1em"
                                                                    >
                                                                      <path
                                                                        d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                                      />
                                                                    </svg>
                                                                  </EllipsisVIcon>
                                                                </button>
                                                              </Toggle>
                                                            </KebabToggle>
                                                          </div>
                                                        </DropdownWithContext>
                                                      </Dropdown>
                                                    </EditBaselineKebab>
                                                  </Connect(EditBaselineKebab)>
                                                </div>
                                              </ToolbarItem>
                                            </div>
                                          </ToolbarGroupWithRef>
                                        </ForwardRef>
                                      </div>
                                      <ToolbarExpandableContent
                                        chipContainerRef={
                                          Object {
                                            "current": null,
                                          }
                                        }
                                        clearFiltersButtonText="Clear all filters"
                                        expandableContentRef={
                                          Object {
                                            "current": <div
                                              class="pf-c-toolbar__expandable-content"
                                              id="pf-random-id-4-expandable-content-4"
                                            >
                                              <div
                                                class="pf-c-toolbar__group"
                                              />
                                            </div>,
                                          }
                                        }
                                        id="pf-random-id-4-expandable-content-4"
                                        isExpanded={false}
                                        showClearFiltersButton={false}
                                      >
                                        <div
                                          className="pf-c-toolbar__expandable-content"
                                          id="pf-random-id-4-expandable-content-4"
                                        >
                                          <ForwardRef>
                                            <ToolbarGroupWithRef
                                              innerRef={null}
                                            >
                                              <div
                                                className="pf-c-toolbar__group"
                                              />
                                            </ToolbarGroupWithRef>
                                          </ForwardRef>
                                        </div>
                                      </ToolbarExpandableContent>
                                    </div>
                                  </ToolbarContent>
                                  <ToolbarChipGroupContent
                                    chipGroupContentRef={
                                      Object {
                                        "current": <div
                                          class="pf-c-toolbar__content pf-m-hidden"
                                          hidden=""
                                        >
                                          <div
                                            class="pf-c-toolbar__group"
                                          />
                                        </div>,
                                      }
                                    }
                                    clearFiltersButtonText="Clear all filters"
                                    collapseListedFiltersBreakpoint="lg"
                                    isExpanded={false}
                                    numberOfFilters={0}
                                    showClearFiltersButton={false}
                                  >
                                    <div
                                      className="pf-c-toolbar__content pf-m-hidden"
                                      hidden={true}
                                    >
                                      <ForwardRef
                                        className=""
                                      >
                                        <ToolbarGroupWithRef
                                          className=""
                                          innerRef={null}
                                        >
                                          <div
                                            className="pf-c-toolbar__group"
                                          />
                                        </ToolbarGroupWithRef>
                                      </ForwardRef>
                                    </div>
                                  </ToolbarChipGroupContent>
                                </div>
                              </GenerateId>
                            </Toolbar>
                          </EditBaselineToolbar>
                          <table
                            className="pf-c-table ins-c-table pf-m-grid-md ins-entity-table"
                          >
                            <thead>
                              <tr
                                key="edit-baseline-table-header"
                              >
                                <th />
                                <th
                                  className="edit-baseline-header"
                                >
                                  <div>
                                    Fact
                                  </div>
                                </th>
                                <th
                                  className="edit-baseline-header"
                                >
                                  <div>
                                    Value
                                  </div>
                                </th>
                                <th />
                              </tr>
                            </thead>
                            <tbody
                              key="edit-baseline-table"
                            >
                              <tr
                                key="Sauron"
                              >
                                <td
                                  className="pf-c-table__check"
                                >
                                  <Checkbox
                                    className=""
                                    id="fact-0"
                                    isChecked={false}
                                    isDisabled={false}
                                    isValid={true}
                                    name={0}
                                    onChange={[Function]}
                                  >
                                    <div
                                      className="pf-c-check"
                                    >
                                      <input
                                        aria-invalid={false}
                                        checked={false}
                                        className="pf-c-check__input"
                                        disabled={false}
                                        id="fact-0"
                                        name={0}
                                        onChange={[Function]}
                                        type="checkbox"
                                      />
                                    </div>
                                  </Checkbox>
                                </td>
                                <td>
                                  Sauron
                                </td>
                                <td>
                                  the Dark Lord
                                </td>
                                <td>
                                  <Connect(FactKebab)
                                    fact={
                                      Object {
                                        "name": "Sauron",
                                        "value": "the Dark Lord",
                                      }
                                    }
                                    factName="Sauron"
                                    factValue="the Dark Lord"
                                  >
                                    <FactKebab
                                      baselineData={
                                        Object {
                                          "baseline_facts": Array [
                                            Object {
                                              "name": "Sauron",
                                              "value": "the Dark Lord",
                                            },
                                            Object {
                                              "name": "Galadriel",
                                              "value": "the Elven Queen",
                                            },
                                            Object {
                                              "name": "The Fellowship of the Ring",
                                              "values": Array [
                                                Object {
                                                  "name": "Frodo",
                                                  "value": "Baggins",
                                                },
                                                Object {
                                                  "name": "Samwise",
                                                  "value": "Gamgee",
                                                },
                                                Object {
                                                  "name": "Gandalf",
                                                  "value": "the Grey",
                                                },
                                                Object {
                                                  "name": "Meriadoc",
                                                  "value": "Brandybuck",
                                                },
                                                Object {
                                                  "name": "Peregrin",
                                                  "value": "Took",
                                                },
                                                Object {
                                                  "name": "Gimli",
                                                  "value": "song of Gloin",
                                                },
                                                Object {
                                                  "name": "Legolas",
                                                  "value": "Greenleaf",
                                                },
                                                Object {
                                                  "name": "Boromir",
                                                  "value": "son of Denethor",
                                                },
                                                Object {
                                                  "name": "Aragorn",
                                                  "value": "son of Arathorn",
                                                },
                                              ],
                                            },
                                          ],
                                          "display_name": "lotr_baseline",
                                          "id": "38gnw73l-fn36-5829-1287-2m5ghs46801c",
                                        }
                                      }
                                      deleteBaselineData={[Function]}
                                      fact={
                                        Object {
                                          "name": "Sauron",
                                          "value": "the Dark Lord",
                                        }
                                      }
                                      factName="Sauron"
                                      factValue="the Dark Lord"
                                      fetchBaselineData={[Function]}
                                      setFactData={[Function]}
                                      toggleFactModal={[Function]}
                                    >
                                      <Dropdown
                                        className="baseline-fact-kebab"
                                        dropdownItems={
                                          Array [
                                            <DropdownItem
                                              component="button"
                                              onClick={[Function]}
                                            >
                                              Edit fact
                                            </DropdownItem>,
                                            <DropdownItem
                                              component="button"
                                              onClick={[Function]}
                                            >
                                              Delete fact
                                            </DropdownItem>,
                                          ]
                                        }
                                        isOpen={false}
                                        isPlain={true}
                                        position="right"
                                        style={
                                          Object {
                                            "float": "right",
                                          }
                                        }
                                        toggle={
                                          <KebabToggle
                                            onToggle={[Function]}
                                          />
                                        }
                                      >
                                        <DropdownWithContext
                                          autoFocus={true}
                                          className="baseline-fact-kebab"
                                          direction="down"
                                          dropdownItems={
                                            Array [
                                              <DropdownItem
                                                component="button"
                                                onClick={[Function]}
                                              >
                                                Edit fact
                                              </DropdownItem>,
                                              <DropdownItem
                                                component="button"
                                                onClick={[Function]}
                                              >
                                                Delete fact
                                              </DropdownItem>,
                                            ]
                                          }
                                          isGrouped={false}
                                          isOpen={false}
                                          isPlain={true}
                                          menuAppendTo="inline"
                                          onSelect={[Function]}
                                          position="right"
                                          style={
                                            Object {
                                              "float": "right",
                                            }
                                          }
                                          toggle={
                                            <KebabToggle
                                              onToggle={[Function]}
                                            />
                                          }
                                        >
                                          <div
                                            className="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                            data-ouia-component-id="OUIA-Generated-Dropdown-9"
                                            data-ouia-component-type="PF4/Dropdown"
                                            data-ouia-safe={true}
                                            style={
                                              Object {
                                                "float": "right",
                                              }
                                            }
                                          >
                                            <KebabToggle
                                              aria-haspopup={true}
                                              getMenuRef={[Function]}
                                              id="pf-dropdown-toggle-id-18"
                                              isOpen={false}
                                              isPlain={true}
                                              key=".0"
                                              onEnter={[Function]}
                                              onToggle={[Function]}
                                              parentRef={
                                                Object {
                                                  "current": <div
                                                    class="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                                    data-ouia-component-id="OUIA-Generated-Dropdown-9"
                                                    data-ouia-component-type="PF4/Dropdown"
                                                    data-ouia-safe="true"
                                                    style="float: right;"
                                                  >
                                                    <button
                                                      aria-expanded="false"
                                                      aria-haspopup="true"
                                                      aria-label="Actions"
                                                      class="pf-c-dropdown__toggle pf-m-plain"
                                                      id="pf-dropdown-toggle-id-18"
                                                      type="button"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        fill="currentColor"
                                                        height="1em"
                                                        role="img"
                                                        style="vertical-align: -0.125em;"
                                                        viewBox="0 0 192 512"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                        />
                                                      </svg>
                                                    </button>
                                                  </div>,
                                                }
                                              }
                                            >
                                              <Toggle
                                                aria-haspopup={true}
                                                aria-label="Actions"
                                                bubbleEvent={false}
                                                className=""
                                                getMenuRef={[Function]}
                                                id="pf-dropdown-toggle-id-18"
                                                isActive={false}
                                                isDisabled={false}
                                                isOpen={false}
                                                isPlain={true}
                                                isPrimary={false}
                                                isSplitButton={false}
                                                onEnter={[Function]}
                                                onToggle={[Function]}
                                                parentRef={
                                                  Object {
                                                    "current": <div
                                                      class="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                                      data-ouia-component-id="OUIA-Generated-Dropdown-9"
                                                      data-ouia-component-type="PF4/Dropdown"
                                                      data-ouia-safe="true"
                                                      style="float: right;"
                                                    >
                                                      <button
                                                        aria-expanded="false"
                                                        aria-haspopup="true"
                                                        aria-label="Actions"
                                                        class="pf-c-dropdown__toggle pf-m-plain"
                                                        id="pf-dropdown-toggle-id-18"
                                                        type="button"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          fill="currentColor"
                                                          height="1em"
                                                          role="img"
                                                          style="vertical-align: -0.125em;"
                                                          viewBox="0 0 192 512"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                          />
                                                        </svg>
                                                      </button>
                                                    </div>,
                                                  }
                                                }
                                              >
                                                <button
                                                  aria-expanded={false}
                                                  aria-haspopup={true}
                                                  aria-label="Actions"
                                                  className="pf-c-dropdown__toggle pf-m-plain"
                                                  disabled={false}
                                                  id="pf-dropdown-toggle-id-18"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  type="button"
                                                >
                                                  <EllipsisVIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 192 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                      />
                                                    </svg>
                                                  </EllipsisVIcon>
                                                </button>
                                              </Toggle>
                                            </KebabToggle>
                                          </div>
                                        </DropdownWithContext>
                                      </Dropdown>
                                    </FactKebab>
                                  </Connect(FactKebab)>
                                </td>
                              </tr>
                              <tr
                                key="Galadriel"
                              >
                                <td
                                  className="pf-c-table__check"
                                >
                                  <Checkbox
                                    className=""
                                    id="fact-1"
                                    isChecked={false}
                                    isDisabled={false}
                                    isValid={true}
                                    name={1}
                                    onChange={[Function]}
                                  >
                                    <div
                                      className="pf-c-check"
                                    >
                                      <input
                                        aria-invalid={false}
                                        checked={false}
                                        className="pf-c-check__input"
                                        disabled={false}
                                        id="fact-1"
                                        name={1}
                                        onChange={[Function]}
                                        type="checkbox"
                                      />
                                    </div>
                                  </Checkbox>
                                </td>
                                <td>
                                  Galadriel
                                </td>
                                <td>
                                  the Elven Queen
                                </td>
                                <td>
                                  <Connect(FactKebab)
                                    fact={
                                      Object {
                                        "name": "Galadriel",
                                        "value": "the Elven Queen",
                                      }
                                    }
                                    factName="Galadriel"
                                    factValue="the Elven Queen"
                                  >
                                    <FactKebab
                                      baselineData={
                                        Object {
                                          "baseline_facts": Array [
                                            Object {
                                              "name": "Sauron",
                                              "value": "the Dark Lord",
                                            },
                                            Object {
                                              "name": "Galadriel",
                                              "value": "the Elven Queen",
                                            },
                                            Object {
                                              "name": "The Fellowship of the Ring",
                                              "values": Array [
                                                Object {
                                                  "name": "Frodo",
                                                  "value": "Baggins",
                                                },
                                                Object {
                                                  "name": "Samwise",
                                                  "value": "Gamgee",
                                                },
                                                Object {
                                                  "name": "Gandalf",
                                                  "value": "the Grey",
                                                },
                                                Object {
                                                  "name": "Meriadoc",
                                                  "value": "Brandybuck",
                                                },
                                                Object {
                                                  "name": "Peregrin",
                                                  "value": "Took",
                                                },
                                                Object {
                                                  "name": "Gimli",
                                                  "value": "song of Gloin",
                                                },
                                                Object {
                                                  "name": "Legolas",
                                                  "value": "Greenleaf",
                                                },
                                                Object {
                                                  "name": "Boromir",
                                                  "value": "son of Denethor",
                                                },
                                                Object {
                                                  "name": "Aragorn",
                                                  "value": "son of Arathorn",
                                                },
                                              ],
                                            },
                                          ],
                                          "display_name": "lotr_baseline",
                                          "id": "38gnw73l-fn36-5829-1287-2m5ghs46801c",
                                        }
                                      }
                                      deleteBaselineData={[Function]}
                                      fact={
                                        Object {
                                          "name": "Galadriel",
                                          "value": "the Elven Queen",
                                        }
                                      }
                                      factName="Galadriel"
                                      factValue="the Elven Queen"
                                      fetchBaselineData={[Function]}
                                      setFactData={[Function]}
                                      toggleFactModal={[Function]}
                                    >
                                      <Dropdown
                                        className="baseline-fact-kebab"
                                        dropdownItems={
                                          Array [
                                            <DropdownItem
                                              component="button"
                                              onClick={[Function]}
                                            >
                                              Edit fact
                                            </DropdownItem>,
                                            <DropdownItem
                                              component="button"
                                              onClick={[Function]}
                                            >
                                              Delete fact
                                            </DropdownItem>,
                                          ]
                                        }
                                        isOpen={false}
                                        isPlain={true}
                                        position="right"
                                        style={
                                          Object {
                                            "float": "right",
                                          }
                                        }
                                        toggle={
                                          <KebabToggle
                                            onToggle={[Function]}
                                          />
                                        }
                                      >
                                        <DropdownWithContext
                                          autoFocus={true}
                                          className="baseline-fact-kebab"
                                          direction="down"
                                          dropdownItems={
                                            Array [
                                              <DropdownItem
                                                component="button"
                                                onClick={[Function]}
                                              >
                                                Edit fact
                                              </DropdownItem>,
                                              <DropdownItem
                                                component="button"
                                                onClick={[Function]}
                                              >
                                                Delete fact
                                              </DropdownItem>,
                                            ]
                                          }
                                          isGrouped={false}
                                          isOpen={false}
                                          isPlain={true}
                                          menuAppendTo="inline"
                                          onSelect={[Function]}
                                          position="right"
                                          style={
                                            Object {
                                              "float": "right",
                                            }
                                          }
                                          toggle={
                                            <KebabToggle
                                              onToggle={[Function]}
                                            />
                                          }
                                        >
                                          <div
                                            className="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                            data-ouia-component-id="OUIA-Generated-Dropdown-10"
                                            data-ouia-component-type="PF4/Dropdown"
                                            data-ouia-safe={true}
                                            style={
                                              Object {
                                                "float": "right",
                                              }
                                            }
                                          >
                                            <KebabToggle
                                              aria-haspopup={true}
                                              getMenuRef={[Function]}
                                              id="pf-dropdown-toggle-id-19"
                                              isOpen={false}
                                              isPlain={true}
                                              key=".0"
                                              onEnter={[Function]}
                                              onToggle={[Function]}
                                              parentRef={
                                                Object {
                                                  "current": <div
                                                    class="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                                    data-ouia-component-id="OUIA-Generated-Dropdown-10"
                                                    data-ouia-component-type="PF4/Dropdown"
                                                    data-ouia-safe="true"
                                                    style="float: right;"
                                                  >
                                                    <button
                                                      aria-expanded="false"
                                                      aria-haspopup="true"
                                                      aria-label="Actions"
                                                      class="pf-c-dropdown__toggle pf-m-plain"
                                                      id="pf-dropdown-toggle-id-19"
                                                      type="button"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        fill="currentColor"
                                                        height="1em"
                                                        role="img"
                                                        style="vertical-align: -0.125em;"
                                                        viewBox="0 0 192 512"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                        />
                                                      </svg>
                                                    </button>
                                                  </div>,
                                                }
                                              }
                                            >
                                              <Toggle
                                                aria-haspopup={true}
                                                aria-label="Actions"
                                                bubbleEvent={false}
                                                className=""
                                                getMenuRef={[Function]}
                                                id="pf-dropdown-toggle-id-19"
                                                isActive={false}
                                                isDisabled={false}
                                                isOpen={false}
                                                isPlain={true}
                                                isPrimary={false}
                                                isSplitButton={false}
                                                onEnter={[Function]}
                                                onToggle={[Function]}
                                                parentRef={
                                                  Object {
                                                    "current": <div
                                                      class="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                                      data-ouia-component-id="OUIA-Generated-Dropdown-10"
                                                      data-ouia-component-type="PF4/Dropdown"
                                                      data-ouia-safe="true"
                                                      style="float: right;"
                                                    >
                                                      <button
                                                        aria-expanded="false"
                                                        aria-haspopup="true"
                                                        aria-label="Actions"
                                                        class="pf-c-dropdown__toggle pf-m-plain"
                                                        id="pf-dropdown-toggle-id-19"
                                                        type="button"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          fill="currentColor"
                                                          height="1em"
                                                          role="img"
                                                          style="vertical-align: -0.125em;"
                                                          viewBox="0 0 192 512"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                          />
                                                        </svg>
                                                      </button>
                                                    </div>,
                                                  }
                                                }
                                              >
                                                <button
                                                  aria-expanded={false}
                                                  aria-haspopup={true}
                                                  aria-label="Actions"
                                                  className="pf-c-dropdown__toggle pf-m-plain"
                                                  disabled={false}
                                                  id="pf-dropdown-toggle-id-19"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  type="button"
                                                >
                                                  <EllipsisVIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 192 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                      />
                                                    </svg>
                                                  </EllipsisVIcon>
                                                </button>
                                              </Toggle>
                                            </KebabToggle>
                                          </div>
                                        </DropdownWithContext>
                                      </Dropdown>
                                    </FactKebab>
                                  </Connect(FactKebab)>
                                </td>
                              </tr>
                              <tr
                                key="The Fellowship of the Ring"
                              >
                                <td
                                  className="pf-c-table__check"
                                >
                                  <Checkbox
                                    className=""
                                    id="category-2"
                                    isChecked={false}
                                    isDisabled={false}
                                    isValid={true}
                                    name={2}
                                    onChange={[Function]}
                                  >
                                    <div
                                      className="pf-c-check"
                                    >
                                      <input
                                        aria-invalid={false}
                                        checked={false}
                                        className="pf-c-check__input"
                                        disabled={false}
                                        id="category-2"
                                        name={2}
                                        onChange={[Function]}
                                        type="checkbox"
                                      />
                                    </div>
                                  </Checkbox>
                                </td>
                                <td>
                                  <AngleRightIcon
                                    className="pointer"
                                    color="currentColor"
                                    noVerticalAlign={false}
                                    onClick={[Function]}
                                    size="sm"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      aria-labelledby={null}
                                      className="pointer"
                                      fill="currentColor"
                                      height="1em"
                                      onClick={[Function]}
                                      role="img"
                                      style={
                                        Object {
                                          "verticalAlign": "-0.125em",
                                        }
                                      }
                                      viewBox="0 0 256 512"
                                      width="1em"
                                    >
                                      <path
                                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                      />
                                    </svg>
                                  </AngleRightIcon>
                                   
                                  The Fellowship of the Ring
                                </td>
                                <td />
                                <td>
                                  <Connect(FactKebab)
                                    fact={
                                      Object {
                                        "name": "The Fellowship of the Ring",
                                        "values": Array [
                                          Object {
                                            "name": "Frodo",
                                            "value": "Baggins",
                                          },
                                          Object {
                                            "name": "Samwise",
                                            "value": "Gamgee",
                                          },
                                          Object {
                                            "name": "Gandalf",
                                            "value": "the Grey",
                                          },
                                          Object {
                                            "name": "Meriadoc",
                                            "value": "Brandybuck",
                                          },
                                          Object {
                                            "name": "Peregrin",
                                            "value": "Took",
                                          },
                                          Object {
                                            "name": "Gimli",
                                            "value": "song of Gloin",
                                          },
                                          Object {
                                            "name": "Legolas",
                                            "value": "Greenleaf",
                                          },
                                          Object {
                                            "name": "Boromir",
                                            "value": "son of Denethor",
                                          },
                                          Object {
                                            "name": "Aragorn",
                                            "value": "son of Arathorn",
                                          },
                                        ],
                                      }
                                    }
                                    factName="The Fellowship of the Ring"
                                    isCategory={true}
                                  >
                                    <FactKebab
                                      baselineData={
                                        Object {
                                          "baseline_facts": Array [
                                            Object {
                                              "name": "Sauron",
                                              "value": "the Dark Lord",
                                            },
                                            Object {
                                              "name": "Galadriel",
                                              "value": "the Elven Queen",
                                            },
                                            Object {
                                              "name": "The Fellowship of the Ring",
                                              "values": Array [
                                                Object {
                                                  "name": "Frodo",
                                                  "value": "Baggins",
                                                },
                                                Object {
                                                  "name": "Samwise",
                                                  "value": "Gamgee",
                                                },
                                                Object {
                                                  "name": "Gandalf",
                                                  "value": "the Grey",
                                                },
                                                Object {
                                                  "name": "Meriadoc",
                                                  "value": "Brandybuck",
                                                },
                                                Object {
                                                  "name": "Peregrin",
                                                  "value": "Took",
                                                },
                                                Object {
                                                  "name": "Gimli",
                                                  "value": "song of Gloin",
                                                },
                                                Object {
                                                  "name": "Legolas",
                                                  "value": "Greenleaf",
                                                },
                                                Object {
                                                  "name": "Boromir",
                                                  "value": "son of Denethor",
                                                },
                                                Object {
                                                  "name": "Aragorn",
                                                  "value": "son of Arathorn",
                                                },
                                              ],
                                            },
                                          ],
                                          "display_name": "lotr_baseline",
                                          "id": "38gnw73l-fn36-5829-1287-2m5ghs46801c",
                                        }
                                      }
                                      deleteBaselineData={[Function]}
                                      fact={
                                        Object {
                                          "name": "The Fellowship of the Ring",
                                          "values": Array [
                                            Object {
                                              "name": "Frodo",
                                              "value": "Baggins",
                                            },
                                            Object {
                                              "name": "Samwise",
                                              "value": "Gamgee",
                                            },
                                            Object {
                                              "name": "Gandalf",
                                              "value": "the Grey",
                                            },
                                            Object {
                                              "name": "Meriadoc",
                                              "value": "Brandybuck",
                                            },
                                            Object {
                                              "name": "Peregrin",
                                              "value": "Took",
                                            },
                                            Object {
                                              "name": "Gimli",
                                              "value": "song of Gloin",
                                            },
                                            Object {
                                              "name": "Legolas",
                                              "value": "Greenleaf",
                                            },
                                            Object {
                                              "name": "Boromir",
                                              "value": "son of Denethor",
                                            },
                                            Object {
                                              "name": "Aragorn",
                                              "value": "son of Arathorn",
                                            },
                                          ],
                                        }
                                      }
                                      factName="The Fellowship of the Ring"
                                      fetchBaselineData={[Function]}
                                      isCategory={true}
                                      setFactData={[Function]}
                                      toggleFactModal={[Function]}
                                    >
                                      <Dropdown
                                        className="baseline-fact-kebab"
                                        dropdownItems={
                                          Array [
                                            <DropdownItem
                                              component="button"
                                              onClick={[Function]}
                                            >
                                              Add sub fact
                                            </DropdownItem>,
                                            <DropdownItem
                                              component="button"
                                              onClick={[Function]}
                                            >
                                              Edit category
                                            </DropdownItem>,
                                            <DropdownItem
                                              component="button"
                                              onClick={[Function]}
                                            >
                                              Delete category
                                            </DropdownItem>,
                                          ]
                                        }
                                        isOpen={false}
                                        isPlain={true}
                                        position="right"
                                        style={
                                          Object {
                                            "float": "right",
                                          }
                                        }
                                        toggle={
                                          <KebabToggle
                                            onToggle={[Function]}
                                          />
                                        }
                                      >
                                        <DropdownWithContext
                                          autoFocus={true}
                                          className="baseline-fact-kebab"
                                          direction="down"
                                          dropdownItems={
                                            Array [
                                              <DropdownItem
                                                component="button"
                                                onClick={[Function]}
                                              >
                                                Add sub fact
                                              </DropdownItem>,
                                              <DropdownItem
                                                component="button"
                                                onClick={[Function]}
                                              >
                                                Edit category
                                              </DropdownItem>,
                                              <DropdownItem
                                                component="button"
                                                onClick={[Function]}
                                              >
                                                Delete category
                                              </DropdownItem>,
                                            ]
                                          }
                                          isGrouped={false}
                                          isOpen={false}
                                          isPlain={true}
                                          menuAppendTo="inline"
                                          onSelect={[Function]}
                                          position="right"
                                          style={
                                            Object {
                                              "float": "right",
                                            }
                                          }
                                          toggle={
                                            <KebabToggle
                                              onToggle={[Function]}
                                            />
                                          }
                                        >
                                          <div
                                            className="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                            data-ouia-component-id="OUIA-Generated-Dropdown-11"
                                            data-ouia-component-type="PF4/Dropdown"
                                            data-ouia-safe={true}
                                            style={
                                              Object {
                                                "float": "right",
                                              }
                                            }
                                          >
                                            <KebabToggle
                                              aria-haspopup={true}
                                              getMenuRef={[Function]}
                                              id="pf-dropdown-toggle-id-20"
                                              isOpen={false}
                                              isPlain={true}
                                              key=".0"
                                              onEnter={[Function]}
                                              onToggle={[Function]}
                                              parentRef={
                                                Object {
                                                  "current": <div
                                                    class="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                                    data-ouia-component-id="OUIA-Generated-Dropdown-11"
                                                    data-ouia-component-type="PF4/Dropdown"
                                                    data-ouia-safe="true"
                                                    style="float: right;"
                                                  >
                                                    <button
                                                      aria-expanded="false"
                                                      aria-haspopup="true"
                                                      aria-label="Actions"
                                                      class="pf-c-dropdown__toggle pf-m-plain"
                                                      id="pf-dropdown-toggle-id-20"
                                                      type="button"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        fill="currentColor"
                                                        height="1em"
                                                        role="img"
                                                        style="vertical-align: -0.125em;"
                                                        viewBox="0 0 192 512"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                        />
                                                      </svg>
                                                    </button>
                                                  </div>,
                                                }
                                              }
                                            >
                                              <Toggle
                                                aria-haspopup={true}
                                                aria-label="Actions"
                                                bubbleEvent={false}
                                                className=""
                                                getMenuRef={[Function]}
                                                id="pf-dropdown-toggle-id-20"
                                                isActive={false}
                                                isDisabled={false}
                                                isOpen={false}
                                                isPlain={true}
                                                isPrimary={false}
                                                isSplitButton={false}
                                                onEnter={[Function]}
                                                onToggle={[Function]}
                                                parentRef={
                                                  Object {
                                                    "current": <div
                                                      class="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                                      data-ouia-component-id="OUIA-Generated-Dropdown-11"
                                                      data-ouia-component-type="PF4/Dropdown"
                                                      data-ouia-safe="true"
                                                      style="float: right;"
                                                    >
                                                      <button
                                                        aria-expanded="false"
                                                        aria-haspopup="true"
                                                        aria-label="Actions"
                                                        class="pf-c-dropdown__toggle pf-m-plain"
                                                        id="pf-dropdown-toggle-id-20"
                                                        type="button"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          fill="currentColor"
                                                          height="1em"
                                                          role="img"
                                                          style="vertical-align: -0.125em;"
                                                          viewBox="0 0 192 512"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                          />
                                                        </svg>
                                                      </button>
                                                    </div>,
                                                  }
                                                }
                                              >
                                                <button
                                                  aria-expanded={false}
                                                  aria-haspopup={true}
                                                  aria-label="Actions"
                                                  className="pf-c-dropdown__toggle pf-m-plain"
                                                  disabled={false}
                                                  id="pf-dropdown-toggle-id-20"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  type="button"
                                                >
                                                  <EllipsisVIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 192 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                      />
                                                    </svg>
                                                  </EllipsisVIcon>
                                                </button>
                                              </Toggle>
                                            </KebabToggle>
                                          </div>
                                        </DropdownWithContext>
                                      </Dropdown>
                                    </FactKebab>
                                  </Connect(FactKebab)>
                                </td>
                              </tr>
                            </tbody>
                          </table>
                        </div>
                      </CardBody>
                    </article>
                  </Card>
                </section>
              </Main>
            </Connect(Main)>
          </EditBaseline>
        </Connect(EditBaseline)>
      </withRouter(Connect(EditBaseline))>
    </Provider>
  </Router>
</MemoryRouter>
`;

exports[`ConnectedEditBaseline should render expandable rows opened 1`] = `
<MemoryRouter
  keyLength={0}
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <withRouter(Connect(EditBaseline))>
        <Connect(EditBaseline)
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "canGo": [Function],
              "createHref": [Function],
              "entries": Array [
                Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              ],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "index": 0,
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
          location={
            Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            }
          }
          match={
            Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            }
          }
        >
          <EditBaseline
            baselineData={
              Object {
                "baseline_facts": Array [
                  Object {
                    "name": "Sauron",
                    "value": "the Dark Lord",
                  },
                  Object {
                    "name": "Galadriel",
                    "value": "the Elven Queen",
                  },
                  Object {
                    "name": "The Fellowship of the Ring",
                    "values": Array [
                      Object {
                        "name": "Frodo",
                        "value": "Baggins",
                      },
                      Object {
                        "name": "Samwise",
                        "value": "Gamgee",
                      },
                      Object {
                        "name": "Gandalf",
                        "value": "the Grey",
                      },
                      Object {
                        "name": "Meriadoc",
                        "value": "Brandybuck",
                      },
                      Object {
                        "name": "Peregrin",
                        "value": "Took",
                      },
                      Object {
                        "name": "Gimli",
                        "value": "song of Gloin",
                      },
                      Object {
                        "name": "Legolas",
                        "value": "Greenleaf",
                      },
                      Object {
                        "name": "Boromir",
                        "value": "son of Denethor",
                      },
                      Object {
                        "name": "Aragorn",
                        "value": "son of Arathorn",
                      },
                    ],
                  },
                ],
                "display_name": "lotr_baseline",
                "id": "38gnw73l-fn36-5829-1287-2m5ghs46801c",
              }
            }
            baselineDataLoading={false}
            clearBaselineData={[Function]}
            clearErrorData={[Function]}
            editBaselineEmptyState={false}
            editBaselineError={Object {}}
            editBaselineTableData={
              Array [
                Array [
                  0,
                  "Sauron",
                  "the Dark Lord",
                ],
                Array [
                  1,
                  "Galadriel",
                  "the Elven Queen",
                ],
                Array [
                  2,
                  "The Fellowship of the Ring",
                  Array [
                    Array [
                      3,
                      "Frodo",
                      "Baggins",
                    ],
                    Array [
                      4,
                      "Samwise",
                      "Gamgee",
                    ],
                    Array [
                      5,
                      "Gandalf",
                      "the Grey",
                    ],
                    Array [
                      6,
                      "Meriadoc",
                      "Brandybuck",
                    ],
                    Array [
                      7,
                      "Peregrin",
                      "Took",
                    ],
                    Array [
                      8,
                      "Gimli",
                      "son of Gloin",
                    ],
                    Array [
                      9,
                      "Legolas",
                      "Greenleaf",
                    ],
                    Array [
                      10,
                      "Boromir",
                      "son of Denethor",
                    ],
                    Array [
                      11,
                      "Aragorn",
                      "son of Arathorn",
                    ],
                  ],
                ],
              ]
            }
            expandRow={[Function]}
            expandedRows={
              Array [
                "The Fellowship of the Ring",
              ]
            }
            exportToCSV={[Function]}
            factModalOpened={false}
            fetchBaselineData={[Function]}
            fetchBaselines={[Function]}
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            inlineError={Object {}}
            location={
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              }
            }
            match={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
            selectFact={[Function]}
          >
            <Connect(EditBaselineNameModal)
              baselineData={
                Object {
                  "baseline_facts": Array [
                    Object {
                      "name": "Sauron",
                      "value": "the Dark Lord",
                    },
                    Object {
                      "name": "Galadriel",
                      "value": "the Elven Queen",
                    },
                    Object {
                      "name": "The Fellowship of the Ring",
                      "values": Array [
                        Object {
                          "name": "Frodo",
                          "value": "Baggins",
                        },
                        Object {
                          "name": "Samwise",
                          "value": "Gamgee",
                        },
                        Object {
                          "name": "Gandalf",
                          "value": "the Grey",
                        },
                        Object {
                          "name": "Meriadoc",
                          "value": "Brandybuck",
                        },
                        Object {
                          "name": "Peregrin",
                          "value": "Took",
                        },
                        Object {
                          "name": "Gimli",
                          "value": "song of Gloin",
                        },
                        Object {
                          "name": "Legolas",
                          "value": "Greenleaf",
                        },
                        Object {
                          "name": "Boromir",
                          "value": "son of Denethor",
                        },
                        Object {
                          "name": "Aragorn",
                          "value": "son of Arathorn",
                        },
                      ],
                    },
                  ],
                  "display_name": "lotr_baseline",
                  "id": "38gnw73l-fn36-5829-1287-2m5ghs46801c",
                }
              }
              error={Object {}}
              modalOpened={false}
              toggleEditNameModal={[Function]}
            >
              <EditBaselineNameModal
                baselineData={
                  Object {
                    "baseline_facts": Array [
                      Object {
                        "name": "Sauron",
                        "value": "the Dark Lord",
                      },
                      Object {
                        "name": "Galadriel",
                        "value": "the Elven Queen",
                      },
                      Object {
                        "name": "The Fellowship of the Ring",
                        "values": Array [
                          Object {
                            "name": "Frodo",
                            "value": "Baggins",
                          },
                          Object {
                            "name": "Samwise",
                            "value": "Gamgee",
                          },
                          Object {
                            "name": "Gandalf",
                            "value": "the Grey",
                          },
                          Object {
                            "name": "Meriadoc",
                            "value": "Brandybuck",
                          },
                          Object {
                            "name": "Peregrin",
                            "value": "Took",
                          },
                          Object {
                            "name": "Gimli",
                            "value": "song of Gloin",
                          },
                          Object {
                            "name": "Legolas",
                            "value": "Greenleaf",
                          },
                          Object {
                            "name": "Boromir",
                            "value": "son of Denethor",
                          },
                          Object {
                            "name": "Aragorn",
                            "value": "son of Arathorn",
                          },
                        ],
                      },
                    ],
                    "display_name": "lotr_baseline",
                    "id": "38gnw73l-fn36-5829-1287-2m5ghs46801c",
                  }
                }
                error={Object {}}
                modalOpened={false}
                patchBaseline={[Function]}
                toggleEditNameModal={[Function]}
              >
                <Modal
                  actions={
                    Array [
                      <Button
                        onClick={[Function]}
                        ouiaId="save"
                        variant="primary"
                      >
                        Save
                      </Button>,
                      <Button
                        onClick={[Function]}
                        ouiaId="cancel"
                        variant="link"
                      >
                        Cancel
                      </Button>,
                    ]
                  }
                  appendTo={[Function]}
                  aria-describedby=""
                  aria-label=""
                  aria-labelledby=""
                  className=""
                  hasNoBodyWrapper={false}
                  isOpen={false}
                  onClose={[Function]}
                  ouiaSafe={true}
                  showClose={true}
                  title="Edit name"
                  titleIconVariant={null}
                  titleLabel=""
                  variant="small"
                >
                  <Portal
                    containerInfo={<div />}
                  >
                    <ModalContent
                      actions={
                        Array [
                          <Button
                            onClick={[Function]}
                            ouiaId="save"
                            variant="primary"
                          >
                            Save
                          </Button>,
                          <Button
                            onClick={[Function]}
                            ouiaId="cancel"
                            variant="link"
                          >
                            Cancel
                          </Button>,
                        ]
                      }
                      aria-describedby=""
                      aria-label=""
                      aria-labelledby=""
                      boxId="pf-modal-part-7"
                      className=""
                      descriptorId="pf-modal-part-9"
                      hasNoBodyWrapper={false}
                      isOpen={false}
                      labelId="pf-modal-part-8"
                      onClose={[Function]}
                      ouiaId="OUIA-Generated-Modal-small-8"
                      ouiaSafe={true}
                      showClose={true}
                      title="Edit name"
                      titleIconVariant={null}
                      titleLabel=""
                      variant="small"
                    />
                  </Portal>
                </Modal>
              </EditBaselineNameModal>
            </Connect(EditBaselineNameModal)>
            <PageHeader>
              <section
                className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                widget-type="InsightsPageHeader"
              >
                <Breadcrumb>
                  <nav
                    aria-label="Breadcrumb"
                    className="pf-c-breadcrumb"
                    data-ouia-component-id="OUIA-Generated-Breadcrumb-8"
                    data-ouia-component-type="PF4/Breadcrumb"
                    data-ouia-safe={true}
                  >
                    <ol
                      className="pf-c-breadcrumb__list"
                    >
                      <BreadcrumbItem
                        key=".0"
                        showDivider={false}
                      >
                        <li
                          className="pf-c-breadcrumb__item"
                        >
                          <a
                            onClick={[Function]}
                          >
                            Baselines
                          </a>
                        </li>
                      </BreadcrumbItem>
                      <BreadcrumbHeading
                        key=".1"
                        showDivider={true}
                      >
                        <li
                          className="pf-c-breadcrumb__item"
                        >
                          <h1
                            className="pf-c-breadcrumb__heading"
                          >
                            <span
                              className="pf-c-breadcrumb__item-divider"
                            >
                              <AngleRightIcon
                                color="currentColor"
                                noVerticalAlign={false}
                                size="sm"
                              >
                                <svg
                                  aria-hidden={true}
                                  aria-labelledby={null}
                                  fill="currentColor"
                                  height="1em"
                                  role="img"
                                  style={
                                    Object {
                                      "verticalAlign": "-0.125em",
                                    }
                                  }
                                  viewBox="0 0 256 512"
                                  width="1em"
                                >
                                  <path
                                    d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                  />
                                </svg>
                              </AngleRightIcon>
                            </span>
                            lotr_baseline
                          </h1>
                        </li>
                      </BreadcrumbHeading>
                    </ol>
                  </nav>
                </Breadcrumb>
                <div
                  id="edit-baseline-title"
                >
                  <span
                    className="pf-c-title pf-m-2xl"
                  >
                    lotr_baseline
                  </span>
                  <span>
                    <EditAltIcon
                      className="pointer not-active edit-icon-margin"
                      color="currentColor"
                      noVerticalAlign={false}
                      onClick={[Function]}
                      size="sm"
                    >
                      <svg
                        aria-hidden={true}
                        aria-labelledby={null}
                        className="pointer not-active edit-icon-margin"
                        fill="currentColor"
                        height="1em"
                        onClick={[Function]}
                        role="img"
                        style={
                          Object {
                            "verticalAlign": "-0.125em",
                          }
                        }
                        viewBox="0 0 1024 1024"
                        width="1em"
                      >
                        <path
                          d="M1024,187.9 C1024,207 1017.3,223.1 1004,236.4 L857.5,386.9 L638.8,168.4 L787.3,20.5 C800.3,6.83333333 816.5,0 835.9,0 C855,0 871.366667,6.83333333 885,20.5 L1004,138.9 C1017.3,152.9 1023.96667,169.233333 1024,187.9 Z M806.2,438.9 L219.4,1024 L0,1024 L0,804.6 L586.6,219.5 L806.2,438.9 Z M219.6,950.9 L292.9,877.8 L146.3,731.4 L73.2,804.5 L73.2,877.6 L146.3,877.6 L146.3,951 L219.6,950.9 Z"
                        />
                      </svg>
                    </EditAltIcon>
                  </span>
                </div>
              </section>
            </PageHeader>
            <Connect(Main)>
              <Main>
                <section
                  className="pf-l-page__main-section pf-c-page__main-section"
                  page-type=""
                >
                  <div />
                  <Connect(ErrorAlert)
                    error={Object {}}
                    onClose={[Function]}
                  >
                    <ErrorAlert
                      addNotification={[Function]}
                      error={Object {}}
                      onClose={[Function]}
                    />
                  </Connect(ErrorAlert)>
                  <Card
                    className="pf-t-light pf-m-opaque-100"
                  >
                    <article
                      className="pf-c-card pf-t-light pf-m-opaque-100"
                      data-ouia-component-id="OUIA-Generated-Card-6"
                      data-ouia-component-type="PF4/Card"
                      data-ouia-safe={true}
                      id=""
                    >
                      <CardBody>
                        <div
                          className="pf-c-card__body"
                        >
                          <EditBaselineToolbar
                            baselineData={
                              Object {
                                "baseline_facts": Array [
                                  Object {
                                    "name": "Sauron",
                                    "value": "the Dark Lord",
                                  },
                                  Object {
                                    "name": "Galadriel",
                                    "value": "the Elven Queen",
                                  },
                                  Object {
                                    "name": "The Fellowship of the Ring",
                                    "values": Array [
                                      Object {
                                        "name": "Frodo",
                                        "value": "Baggins",
                                      },
                                      Object {
                                        "name": "Samwise",
                                        "value": "Gamgee",
                                      },
                                      Object {
                                        "name": "Gandalf",
                                        "value": "the Grey",
                                      },
                                      Object {
                                        "name": "Meriadoc",
                                        "value": "Brandybuck",
                                      },
                                      Object {
                                        "name": "Peregrin",
                                        "value": "Took",
                                      },
                                      Object {
                                        "name": "Gimli",
                                        "value": "song of Gloin",
                                      },
                                      Object {
                                        "name": "Legolas",
                                        "value": "Greenleaf",
                                      },
                                      Object {
                                        "name": "Boromir",
                                        "value": "son of Denethor",
                                      },
                                      Object {
                                        "name": "Aragorn",
                                        "value": "son of Arathorn",
                                      },
                                    ],
                                  },
                                ],
                                "display_name": "lotr_baseline",
                                "id": "38gnw73l-fn36-5829-1287-2m5ghs46801c",
                              }
                            }
                            exportToCSV={[Function]}
                            hasWritePermissions={true}
                            isDisabled={false}
                            onBulkSelect={[Function]}
                            selected={0}
                            tableData={
                              Array [
                                Array [
                                  0,
                                  "Sauron",
                                  "the Dark Lord",
                                ],
                                Array [
                                  1,
                                  "Galadriel",
                                  "the Elven Queen",
                                ],
                                Array [
                                  2,
                                  "The Fellowship of the Ring",
                                  Array [
                                    Array [
                                      3,
                                      "Frodo",
                                      "Baggins",
                                    ],
                                    Array [
                                      4,
                                      "Samwise",
                                      "Gamgee",
                                    ],
                                    Array [
                                      5,
                                      "Gandalf",
                                      "the Grey",
                                    ],
                                    Array [
                                      6,
                                      "Meriadoc",
                                      "Brandybuck",
                                    ],
                                    Array [
                                      7,
                                      "Peregrin",
                                      "Took",
                                    ],
                                    Array [
                                      8,
                                      "Gimli",
                                      "son of Gloin",
                                    ],
                                    Array [
                                      9,
                                      "Legolas",
                                      "Greenleaf",
                                    ],
                                    Array [
                                      10,
                                      "Boromir",
                                      "son of Denethor",
                                    ],
                                    Array [
                                      11,
                                      "Aragorn",
                                      "son of Arathorn",
                                    ],
                                  ],
                                ],
                              ]
                            }
                            totalFacts={11}
                          >
                            <Toolbar
                              className="drift-toolbar"
                            >
                              <GenerateId
                                prefix="pf-random-id-"
                              >
                                <div
                                  className="pf-c-toolbar drift-toolbar"
                                  id="pf-random-id-5"
                                >
                                  <ToolbarContent
                                    isExpanded={false}
                                    showClearFiltersButton={false}
                                  >
                                    <div
                                      className="pf-c-toolbar__content"
                                    >
                                      <div
                                        className="pf-c-toolbar__content-section"
                                      >
                                        <ToolbarItem>
                                          <div
                                            className="pf-c-toolbar__item"
                                          >
                                            <BulkSelect
                                              checked={false}
                                              className=""
                                              count={null}
                                              isDisabled={false}
                                              items={
                                                Array [
                                                  Object {
                                                    "key": "select-all",
                                                    "onClick": [Function],
                                                    "title": "Select all",
                                                  },
                                                  Object {
                                                    "key": "select-none",
                                                    "onClick": [Function],
                                                    "title": "Select none",
                                                  },
                                                ]
                                              }
                                              onSelect={[Function]}
                                            >
                                              <Dropdown
                                                className="ins-c-bulk-select"
                                                dropdownItems={
                                                  Array [
                                                    <DropdownItem
                                                      component="button"
                                                      onClick={[Function]}
                                                    >
                                                      Select all
                                                    </DropdownItem>,
                                                    <DropdownItem
                                                      component="button"
                                                      onClick={[Function]}
                                                    >
                                                      Select none
                                                    </DropdownItem>,
                                                  ]
                                                }
                                                isOpen={false}
                                                onSelect={[Function]}
                                                toggle={
                                                  <DropdownToggle
                                                    isDisabled={false}
                                                    onToggle={[Function]}
                                                    splitButtonItems={
                                                      Array [
                                                        <React.Fragment>
                                                          <DropdownToggleCheckbox
                                                            aria-label="Select all"
                                                            className=""
                                                            id="toggle-checkbox"
                                                            isChecked={false}
                                                            isDisabled={false}
                                                            isValid={true}
                                                            onChange={[Function]}
                                                          >
                                                            
                                                          </DropdownToggleCheckbox>
                                                        </React.Fragment>,
                                                      ]
                                                    }
                                                  />
                                                }
                                              >
                                                <DropdownWithContext
                                                  autoFocus={true}
                                                  className="ins-c-bulk-select"
                                                  direction="down"
                                                  dropdownItems={
                                                    Array [
                                                      <DropdownItem
                                                        component="button"
                                                        onClick={[Function]}
                                                      >
                                                        Select all
                                                      </DropdownItem>,
                                                      <DropdownItem
                                                        component="button"
                                                        onClick={[Function]}
                                                      >
                                                        Select none
                                                      </DropdownItem>,
                                                    ]
                                                  }
                                                  isGrouped={false}
                                                  isOpen={false}
                                                  isPlain={false}
                                                  menuAppendTo="inline"
                                                  onSelect={[Function]}
                                                  position="left"
                                                  toggle={
                                                    <DropdownToggle
                                                      isDisabled={false}
                                                      onToggle={[Function]}
                                                      splitButtonItems={
                                                        Array [
                                                          <React.Fragment>
                                                            <DropdownToggleCheckbox
                                                              aria-label="Select all"
                                                              className=""
                                                              id="toggle-checkbox"
                                                              isChecked={false}
                                                              isDisabled={false}
                                                              isValid={true}
                                                              onChange={[Function]}
                                                            >
                                                              
                                                            </DropdownToggleCheckbox>
                                                          </React.Fragment>,
                                                        ]
                                                      }
                                                    />
                                                  }
                                                >
                                                  <div
                                                    className="pf-c-dropdown ins-c-bulk-select"
                                                    data-ouia-component-id="OUIA-Generated-Dropdown-12"
                                                    data-ouia-component-type="PF4/Dropdown"
                                                    data-ouia-safe={true}
                                                  >
                                                    <DropdownToggle
                                                      aria-haspopup={true}
                                                      getMenuRef={[Function]}
                                                      id="pf-dropdown-toggle-id-21"
                                                      isDisabled={false}
                                                      isOpen={false}
                                                      isPlain={false}
                                                      key=".0"
                                                      onEnter={[Function]}
                                                      onToggle={[Function]}
                                                      parentRef={
                                                        Object {
                                                          "current": <div
                                                            class="pf-c-dropdown ins-c-bulk-select"
                                                            data-ouia-component-id="OUIA-Generated-Dropdown-12"
                                                            data-ouia-component-type="PF4/Dropdown"
                                                            data-ouia-safe="true"
                                                          >
                                                            <div
                                                              class="pf-c-dropdown__toggle pf-m-split-button"
                                                            >
                                                              <label
                                                                class="pf-c-dropdown__toggle-check"
                                                                for="toggle-checkbox"
                                                              >
                                                                <input
                                                                  aria-invalid="false"
                                                                  aria-label="Select all"
                                                                  data-ouia-component-id="OUIA-Generated-DropdownToggleCheckbox-6"
                                                                  data-ouia-component-type="PF4/DropdownToggleCheckbox"
                                                                  data-ouia-safe="true"
                                                                  id="toggle-checkbox"
                                                                  type="checkbox"
                                                                />
                                                                
                                                              </label>
                                                              <button
                                                                aria-expanded="false"
                                                                aria-haspopup="true"
                                                                aria-label="Select"
                                                                class="pf-c-dropdown__toggle-button"
                                                                data-ouia-component-id="OUIA-Generated-DropdownToggle-11"
                                                                data-ouia-component-type="PF4/DropdownToggle"
                                                                data-ouia-safe="true"
                                                                id="pf-dropdown-toggle-id-21"
                                                                type="button"
                                                              >
                                                                <span
                                                                  class=""
                                                                >
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    fill="currentColor"
                                                                    height="1em"
                                                                    role="img"
                                                                    style="vertical-align: -0.125em;"
                                                                    viewBox="0 0 320 512"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                    />
                                                                  </svg>
                                                                </span>
                                                              </button>
                                                            </div>
                                                          </div>,
                                                        }
                                                      }
                                                      splitButtonItems={
                                                        Array [
                                                          <React.Fragment>
                                                            <DropdownToggleCheckbox
                                                              aria-label="Select all"
                                                              className=""
                                                              id="toggle-checkbox"
                                                              isChecked={false}
                                                              isDisabled={false}
                                                              isValid={true}
                                                              onChange={[Function]}
                                                            >
                                                              
                                                            </DropdownToggleCheckbox>
                                                          </React.Fragment>,
                                                        ]
                                                      }
                                                    >
                                                      <div
                                                        className="pf-c-dropdown__toggle pf-m-split-button"
                                                      >
                                                        <DropdownToggleCheckbox
                                                          aria-label="Select all"
                                                          className=""
                                                          id="toggle-checkbox"
                                                          isChecked={false}
                                                          isDisabled={false}
                                                          isValid={true}
                                                          onChange={[Function]}
                                                        >
                                                          <label
                                                            className="pf-c-dropdown__toggle-check"
                                                            htmlFor="toggle-checkbox"
                                                          >
                                                            <input
                                                              aria-invalid={false}
                                                              aria-label="Select all"
                                                              checked={false}
                                                              data-ouia-component-id="OUIA-Generated-DropdownToggleCheckbox-6"
                                                              data-ouia-component-type="PF4/DropdownToggleCheckbox"
                                                              data-ouia-safe={true}
                                                              disabled={false}
                                                              id="toggle-checkbox"
                                                              onChange={[Function]}
                                                              type="checkbox"
                                                            />
                                                          </label>
                                                        </DropdownToggleCheckbox>
                                                        <Toggle
                                                          aria-haspopup={true}
                                                          aria-label="Select"
                                                          bubbleEvent={false}
                                                          className=""
                                                          data-ouia-component-id="OUIA-Generated-DropdownToggle-11"
                                                          data-ouia-component-type="PF4/DropdownToggle"
                                                          data-ouia-safe={true}
                                                          getMenuRef={[Function]}
                                                          id="pf-dropdown-toggle-id-21"
                                                          isActive={false}
                                                          isDisabled={false}
                                                          isOpen={false}
                                                          isPlain={false}
                                                          isPrimary={false}
                                                          isSplitButton={true}
                                                          onEnter={[Function]}
                                                          onToggle={[Function]}
                                                          parentRef={
                                                            Object {
                                                              "current": <div
                                                                class="pf-c-dropdown ins-c-bulk-select"
                                                                data-ouia-component-id="OUIA-Generated-Dropdown-12"
                                                                data-ouia-component-type="PF4/Dropdown"
                                                                data-ouia-safe="true"
                                                              >
                                                                <div
                                                                  class="pf-c-dropdown__toggle pf-m-split-button"
                                                                >
                                                                  <label
                                                                    class="pf-c-dropdown__toggle-check"
                                                                    for="toggle-checkbox"
                                                                  >
                                                                    <input
                                                                      aria-invalid="false"
                                                                      aria-label="Select all"
                                                                      data-ouia-component-id="OUIA-Generated-DropdownToggleCheckbox-6"
                                                                      data-ouia-component-type="PF4/DropdownToggleCheckbox"
                                                                      data-ouia-safe="true"
                                                                      id="toggle-checkbox"
                                                                      type="checkbox"
                                                                    />
                                                                    
                                                                  </label>
                                                                  <button
                                                                    aria-expanded="false"
                                                                    aria-haspopup="true"
                                                                    aria-label="Select"
                                                                    class="pf-c-dropdown__toggle-button"
                                                                    data-ouia-component-id="OUIA-Generated-DropdownToggle-11"
                                                                    data-ouia-component-type="PF4/DropdownToggle"
                                                                    data-ouia-safe="true"
                                                                    id="pf-dropdown-toggle-id-21"
                                                                    type="button"
                                                                  >
                                                                    <span
                                                                      class=""
                                                                    >
                                                                      <svg
                                                                        aria-hidden="true"
                                                                        fill="currentColor"
                                                                        height="1em"
                                                                        role="img"
                                                                        style="vertical-align: -0.125em;"
                                                                        viewBox="0 0 320 512"
                                                                        width="1em"
                                                                      >
                                                                        <path
                                                                          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                        />
                                                                      </svg>
                                                                    </span>
                                                                  </button>
                                                                </div>
                                                              </div>,
                                                            }
                                                          }
                                                        >
                                                          <button
                                                            aria-expanded={false}
                                                            aria-haspopup={true}
                                                            aria-label="Select"
                                                            className="pf-c-dropdown__toggle-button"
                                                            data-ouia-component-id="OUIA-Generated-DropdownToggle-11"
                                                            data-ouia-component-type="PF4/DropdownToggle"
                                                            data-ouia-safe={true}
                                                            disabled={false}
                                                            id="pf-dropdown-toggle-id-21"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            type="button"
                                                          >
                                                            <span
                                                              className=""
                                                            >
                                                              <CaretDownIcon
                                                                color="currentColor"
                                                                noVerticalAlign={false}
                                                                size="sm"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  aria-labelledby={null}
                                                                  fill="currentColor"
                                                                  height="1em"
                                                                  role="img"
                                                                  style={
                                                                    Object {
                                                                      "verticalAlign": "-0.125em",
                                                                    }
                                                                  }
                                                                  viewBox="0 0 320 512"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                  />
                                                                </svg>
                                                              </CaretDownIcon>
                                                            </span>
                                                          </button>
                                                        </Toggle>
                                                      </div>
                                                    </DropdownToggle>
                                                  </div>
                                                </DropdownWithContext>
                                              </Dropdown>
                                            </BulkSelect>
                                          </div>
                                        </ToolbarItem>
                                        <ToolbarItem>
                                          <div
                                            className="pf-c-toolbar__item"
                                          >
                                            <Connect(AddFactButton)
                                              hasWritePermissions={true}
                                              isDisabled={false}
                                            >
                                              <AddFactButton
                                                hasWritePermissions={true}
                                                isDisabled={false}
                                                setFactData={[Function]}
                                                toggleFactModal={[Function]}
                                              >
                                                <Button
                                                  isDisabled={false}
                                                  onClick={[Function]}
                                                  ouiaId="add_fact"
                                                  variant="primary"
                                                >
                                                  <button
                                                    aria-disabled={false}
                                                    aria-label={null}
                                                    className="pf-c-button pf-m-primary"
                                                    data-ouia-component-id="add_fact"
                                                    data-ouia-component-type="PF4/Button"
                                                    data-ouia-safe={true}
                                                    disabled={false}
                                                    onClick={[Function]}
                                                    role={null}
                                                    type="button"
                                                  >
                                                    Add fact or category
                                                  </button>
                                                </Button>
                                              </AddFactButton>
                                            </Connect(AddFactButton)>
                                          </div>
                                        </ToolbarItem>
                                        <ForwardRef
                                          variant="icon-button-group"
                                        >
                                          <ToolbarGroupWithRef
                                            innerRef={null}
                                            variant="icon-button-group"
                                          >
                                            <div
                                              className="pf-c-toolbar__group pf-m-icon-button-group"
                                            >
                                              <ToolbarItem>
                                                <div
                                                  className="pf-c-toolbar__item"
                                                >
                                                  <ExportCSVButton
                                                    dropdownItems={
                                                      Array [
                                                        <DropdownItem
                                                          component="button"
                                                          onClick={[Function]}
                                                        >
                                                          Export to CSV
                                                        </DropdownItem>,
                                                      ]
                                                    }
                                                    isOpen={false}
                                                    onToggle={[Function]}
                                                  >
                                                    <Dropdown
                                                      dropdownItems={
                                                        Array [
                                                          <DropdownItem
                                                            component="button"
                                                            onClick={[Function]}
                                                          >
                                                            Export to CSV
                                                          </DropdownItem>,
                                                        ]
                                                      }
                                                      isOpen={false}
                                                      isPlain={true}
                                                      ouiaId="export"
                                                      position="left"
                                                      toggle={
                                                        <DropdownToggle
                                                          onToggle={[Function]}
                                                          toggleIndicator={null}
                                                        >
                                                          <ExportIcon
                                                            className="pointer not-active"
                                                            color="currentColor"
                                                            noVerticalAlign={false}
                                                            size="sm"
                                                          />
                                                        </DropdownToggle>
                                                      }
                                                    >
                                                      <DropdownWithContext
                                                        autoFocus={true}
                                                        className=""
                                                        direction="down"
                                                        dropdownItems={
                                                          Array [
                                                            <DropdownItem
                                                              component="button"
                                                              onClick={[Function]}
                                                            >
                                                              Export to CSV
                                                            </DropdownItem>,
                                                          ]
                                                        }
                                                        isGrouped={false}
                                                        isOpen={false}
                                                        isPlain={true}
                                                        menuAppendTo="inline"
                                                        onSelect={[Function]}
                                                        position="left"
                                                        toggle={
                                                          <DropdownToggle
                                                            onToggle={[Function]}
                                                            toggleIndicator={null}
                                                          >
                                                            <ExportIcon
                                                              className="pointer not-active"
                                                              color="currentColor"
                                                              noVerticalAlign={false}
                                                              size="sm"
                                                            />
                                                          </DropdownToggle>
                                                        }
                                                      >
                                                        <div
                                                          className="pf-c-dropdown"
                                                          data-ouia-component-id="export"
                                                          data-ouia-component-type="PF4/Dropdown"
                                                          data-ouia-safe={true}
                                                        >
                                                          <DropdownToggle
                                                            aria-haspopup={true}
                                                            getMenuRef={[Function]}
                                                            id="pf-dropdown-toggle-id-22"
                                                            isOpen={false}
                                                            isPlain={true}
                                                            key=".0"
                                                            onEnter={[Function]}
                                                            onToggle={[Function]}
                                                            parentRef={
                                                              Object {
                                                                "current": <div
                                                                  class="pf-c-dropdown"
                                                                  data-ouia-component-id="export"
                                                                  data-ouia-component-type="PF4/Dropdown"
                                                                  data-ouia-safe="true"
                                                                >
                                                                  <button
                                                                    aria-expanded="false"
                                                                    aria-haspopup="true"
                                                                    class="pf-c-dropdown__toggle pf-m-plain"
                                                                    data-ouia-component-id="OUIA-Generated-DropdownToggle-12"
                                                                    data-ouia-component-type="PF4/DropdownToggle"
                                                                    data-ouia-safe="true"
                                                                    id="pf-dropdown-toggle-id-22"
                                                                    type="button"
                                                                  >
                                                                    <span>
                                                                      <svg
                                                                        aria-hidden="true"
                                                                        class="pointer not-active"
                                                                        fill="currentColor"
                                                                        height="1em"
                                                                        role="img"
                                                                        style="vertical-align: -0.125em;"
                                                                        viewBox="0 0 1024 1024"
                                                                        width="1em"
                                                                      >
                                                                        <path
                                                                          d="M975.8,636.9 L870.9,741.8 L457.9,328.6 C452.1,322.8 445.4,319.9 437.9,319.9 C430.4,319.9 423.7,322.8 417.9,328.6 L328.8,417.7 C323,423.5 320.1,430.2 320.1,437.7 C320.1,445.2 323,451.9 328.8,457.7 L742,870.7 L636.9,975.8 C610.5,1002.2 619.4,1024 656.8,1024 L956,1024 C1014.5,1024 1024,1013.7 1024,955.9 L1024,656.7 C1023.9,619.4 1002.2,610.5 975.8,636.9 Z M128,128 L896,128 L896,361.7 C896.007942,370.182681 899.389907,378.313788 905.4,384.3 L996.7,475.6 C1006.8,485.7 1024,478.5 1024,464.3 L1024,22.7 C1024,16.1 1021.9,10.7 1017.6,6.4 C1013.3,2.1 1007.9,0 1001.3,0 L22.7,0 C16.1,0 10.7,2.1 6.4,6.4 C2.1,10.7 0,16.1 0,22.7 L0,1001.3 C0,1007.9 2.1,1013.3 6.4,1017.6 C10.7,1021.9 16.1,1024 22.7,1024 L463.4,1024 C469.862884,1023.98894 475.684489,1020.0908 478.156232,1014.11925 C480.627976,1008.14769 479.264428,1001.27548 474.7,996.7 L383.4,905.4 C377.413788,899.389907 369.282681,896.007942 360.8,896 L128,896 L128,128 Z"
                                                                        />
                                                                      </svg>
                                                                    </span>
                                                                  </button>
                                                                </div>,
                                                              }
                                                            }
                                                            toggleIndicator={null}
                                                          >
                                                            <Toggle
                                                              aria-haspopup={true}
                                                              bubbleEvent={false}
                                                              className=""
                                                              data-ouia-component-id="OUIA-Generated-DropdownToggle-12"
                                                              data-ouia-component-type="PF4/DropdownToggle"
                                                              data-ouia-safe={true}
                                                              getMenuRef={[Function]}
                                                              id="pf-dropdown-toggle-id-22"
                                                              isActive={false}
                                                              isDisabled={false}
                                                              isOpen={false}
                                                              isPlain={true}
                                                              isPrimary={false}
                                                              isSplitButton={false}
                                                              onEnter={[Function]}
                                                              onToggle={[Function]}
                                                              parentRef={
                                                                Object {
                                                                  "current": <div
                                                                    class="pf-c-dropdown"
                                                                    data-ouia-component-id="export"
                                                                    data-ouia-component-type="PF4/Dropdown"
                                                                    data-ouia-safe="true"
                                                                  >
                                                                    <button
                                                                      aria-expanded="false"
                                                                      aria-haspopup="true"
                                                                      class="pf-c-dropdown__toggle pf-m-plain"
                                                                      data-ouia-component-id="OUIA-Generated-DropdownToggle-12"
                                                                      data-ouia-component-type="PF4/DropdownToggle"
                                                                      data-ouia-safe="true"
                                                                      id="pf-dropdown-toggle-id-22"
                                                                      type="button"
                                                                    >
                                                                      <span>
                                                                        <svg
                                                                          aria-hidden="true"
                                                                          class="pointer not-active"
                                                                          fill="currentColor"
                                                                          height="1em"
                                                                          role="img"
                                                                          style="vertical-align: -0.125em;"
                                                                          viewBox="0 0 1024 1024"
                                                                          width="1em"
                                                                        >
                                                                          <path
                                                                            d="M975.8,636.9 L870.9,741.8 L457.9,328.6 C452.1,322.8 445.4,319.9 437.9,319.9 C430.4,319.9 423.7,322.8 417.9,328.6 L328.8,417.7 C323,423.5 320.1,430.2 320.1,437.7 C320.1,445.2 323,451.9 328.8,457.7 L742,870.7 L636.9,975.8 C610.5,1002.2 619.4,1024 656.8,1024 L956,1024 C1014.5,1024 1024,1013.7 1024,955.9 L1024,656.7 C1023.9,619.4 1002.2,610.5 975.8,636.9 Z M128,128 L896,128 L896,361.7 C896.007942,370.182681 899.389907,378.313788 905.4,384.3 L996.7,475.6 C1006.8,485.7 1024,478.5 1024,464.3 L1024,22.7 C1024,16.1 1021.9,10.7 1017.6,6.4 C1013.3,2.1 1007.9,0 1001.3,0 L22.7,0 C16.1,0 10.7,2.1 6.4,6.4 C2.1,10.7 0,16.1 0,22.7 L0,1001.3 C0,1007.9 2.1,1013.3 6.4,1017.6 C10.7,1021.9 16.1,1024 22.7,1024 L463.4,1024 C469.862884,1023.98894 475.684489,1020.0908 478.156232,1014.11925 C480.627976,1008.14769 479.264428,1001.27548 474.7,996.7 L383.4,905.4 C377.413788,899.389907 369.282681,896.007942 360.8,896 L128,896 L128,128 Z"
                                                                          />
                                                                        </svg>
                                                                      </span>
                                                                    </button>
                                                                  </div>,
                                                                }
                                                              }
                                                            >
                                                              <button
                                                                aria-expanded={false}
                                                                aria-haspopup={true}
                                                                className="pf-c-dropdown__toggle pf-m-plain"
                                                                data-ouia-component-id="OUIA-Generated-DropdownToggle-12"
                                                                data-ouia-component-type="PF4/DropdownToggle"
                                                                data-ouia-safe={true}
                                                                disabled={false}
                                                                id="pf-dropdown-toggle-id-22"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className={null}
                                                                >
                                                                  <ExportIcon
                                                                    className="pointer not-active"
                                                                    color="currentColor"
                                                                    noVerticalAlign={false}
                                                                    size="sm"
                                                                  >
                                                                    <svg
                                                                      aria-hidden={true}
                                                                      aria-labelledby={null}
                                                                      className="pointer not-active"
                                                                      fill="currentColor"
                                                                      height="1em"
                                                                      role="img"
                                                                      style={
                                                                        Object {
                                                                          "verticalAlign": "-0.125em",
                                                                        }
                                                                      }
                                                                      viewBox="0 0 1024 1024"
                                                                      width="1em"
                                                                    >
                                                                      <path
                                                                        d="M975.8,636.9 L870.9,741.8 L457.9,328.6 C452.1,322.8 445.4,319.9 437.9,319.9 C430.4,319.9 423.7,322.8 417.9,328.6 L328.8,417.7 C323,423.5 320.1,430.2 320.1,437.7 C320.1,445.2 323,451.9 328.8,457.7 L742,870.7 L636.9,975.8 C610.5,1002.2 619.4,1024 656.8,1024 L956,1024 C1014.5,1024 1024,1013.7 1024,955.9 L1024,656.7 C1023.9,619.4 1002.2,610.5 975.8,636.9 Z M128,128 L896,128 L896,361.7 C896.007942,370.182681 899.389907,378.313788 905.4,384.3 L996.7,475.6 C1006.8,485.7 1024,478.5 1024,464.3 L1024,22.7 C1024,16.1 1021.9,10.7 1017.6,6.4 C1013.3,2.1 1007.9,0 1001.3,0 L22.7,0 C16.1,0 10.7,2.1 6.4,6.4 C2.1,10.7 0,16.1 0,22.7 L0,1001.3 C0,1007.9 2.1,1013.3 6.4,1017.6 C10.7,1021.9 16.1,1024 22.7,1024 L463.4,1024 C469.862884,1023.98894 475.684489,1020.0908 478.156232,1014.11925 C480.627976,1008.14769 479.264428,1001.27548 474.7,996.7 L383.4,905.4 C377.413788,899.389907 369.282681,896.007942 360.8,896 L128,896 L128,128 Z"
                                                                      />
                                                                    </svg>
                                                                  </ExportIcon>
                                                                </span>
                                                              </button>
                                                            </Toggle>
                                                          </DropdownToggle>
                                                        </div>
                                                      </DropdownWithContext>
                                                    </Dropdown>
                                                  </ExportCSVButton>
                                                </div>
                                              </ToolbarItem>
                                              <ToolbarItem>
                                                <div
                                                  className="pf-c-toolbar__item"
                                                >
                                                  <Connect(EditBaselineKebab)>
                                                    <EditBaselineKebab
                                                      dispatch={[Function]}
                                                      editBaselineTableData={
                                                        Array [
                                                          Array [
                                                            0,
                                                            "Sauron",
                                                            "the Dark Lord",
                                                          ],
                                                          Array [
                                                            1,
                                                            "Galadriel",
                                                            "the Elven Queen",
                                                          ],
                                                          Array [
                                                            2,
                                                            "The Fellowship of the Ring",
                                                            Array [
                                                              Array [
                                                                3,
                                                                "Frodo",
                                                                "Baggins",
                                                              ],
                                                              Array [
                                                                4,
                                                                "Samwise",
                                                                "Gamgee",
                                                              ],
                                                              Array [
                                                                5,
                                                                "Gandalf",
                                                                "the Grey",
                                                              ],
                                                              Array [
                                                                6,
                                                                "Meriadoc",
                                                                "Brandybuck",
                                                              ],
                                                              Array [
                                                                7,
                                                                "Peregrin",
                                                                "Took",
                                                              ],
                                                              Array [
                                                                8,
                                                                "Gimli",
                                                                "son of Gloin",
                                                              ],
                                                              Array [
                                                                9,
                                                                "Legolas",
                                                                "Greenleaf",
                                                              ],
                                                              Array [
                                                                10,
                                                                "Boromir",
                                                                "son of Denethor",
                                                              ],
                                                              Array [
                                                                11,
                                                                "Aragorn",
                                                                "son of Arathorn",
                                                              ],
                                                            ],
                                                          ],
                                                        ]
                                                      }
                                                    >
                                                      <Dropdown
                                                        dropdownItems={
                                                          Array [
                                                            <DropdownItem
                                                              component="button"
                                                              isDisabled={true}
                                                              onClick={[Function]}
                                                            >
                                                              Delete facts
                                                            </DropdownItem>,
                                                          ]
                                                        }
                                                        isOpen={false}
                                                        isPlain={true}
                                                        ouiaId="actions"
                                                        style={
                                                          Object {
                                                            "float": "left",
                                                          }
                                                        }
                                                        toggle={
                                                          <KebabToggle
                                                            onToggle={[Function]}
                                                          />
                                                        }
                                                      >
                                                        <DropdownWithContext
                                                          autoFocus={true}
                                                          className=""
                                                          direction="down"
                                                          dropdownItems={
                                                            Array [
                                                              <DropdownItem
                                                                component="button"
                                                                isDisabled={true}
                                                                onClick={[Function]}
                                                              >
                                                                Delete facts
                                                              </DropdownItem>,
                                                            ]
                                                          }
                                                          isGrouped={false}
                                                          isOpen={false}
                                                          isPlain={true}
                                                          menuAppendTo="inline"
                                                          onSelect={[Function]}
                                                          position="left"
                                                          style={
                                                            Object {
                                                              "float": "left",
                                                            }
                                                          }
                                                          toggle={
                                                            <KebabToggle
                                                              onToggle={[Function]}
                                                            />
                                                          }
                                                        >
                                                          <div
                                                            className="pf-c-dropdown"
                                                            data-ouia-component-id="actions"
                                                            data-ouia-component-type="PF4/Dropdown"
                                                            data-ouia-safe={true}
                                                            style={
                                                              Object {
                                                                "float": "left",
                                                              }
                                                            }
                                                          >
                                                            <KebabToggle
                                                              aria-haspopup={true}
                                                              getMenuRef={[Function]}
                                                              id="pf-dropdown-toggle-id-23"
                                                              isOpen={false}
                                                              isPlain={true}
                                                              key=".0"
                                                              onEnter={[Function]}
                                                              onToggle={[Function]}
                                                              parentRef={
                                                                Object {
                                                                  "current": <div
                                                                    class="pf-c-dropdown"
                                                                    data-ouia-component-id="actions"
                                                                    data-ouia-component-type="PF4/Dropdown"
                                                                    data-ouia-safe="true"
                                                                    style="float: left;"
                                                                  >
                                                                    <button
                                                                      aria-expanded="false"
                                                                      aria-haspopup="true"
                                                                      aria-label="Actions"
                                                                      class="pf-c-dropdown__toggle pf-m-plain"
                                                                      id="pf-dropdown-toggle-id-23"
                                                                      type="button"
                                                                    >
                                                                      <svg
                                                                        aria-hidden="true"
                                                                        fill="currentColor"
                                                                        height="1em"
                                                                        role="img"
                                                                        style="vertical-align: -0.125em;"
                                                                        viewBox="0 0 192 512"
                                                                        width="1em"
                                                                      >
                                                                        <path
                                                                          d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                                        />
                                                                      </svg>
                                                                    </button>
                                                                  </div>,
                                                                }
                                                              }
                                                            >
                                                              <Toggle
                                                                aria-haspopup={true}
                                                                aria-label="Actions"
                                                                bubbleEvent={false}
                                                                className=""
                                                                getMenuRef={[Function]}
                                                                id="pf-dropdown-toggle-id-23"
                                                                isActive={false}
                                                                isDisabled={false}
                                                                isOpen={false}
                                                                isPlain={true}
                                                                isPrimary={false}
                                                                isSplitButton={false}
                                                                onEnter={[Function]}
                                                                onToggle={[Function]}
                                                                parentRef={
                                                                  Object {
                                                                    "current": <div
                                                                      class="pf-c-dropdown"
                                                                      data-ouia-component-id="actions"
                                                                      data-ouia-component-type="PF4/Dropdown"
                                                                      data-ouia-safe="true"
                                                                      style="float: left;"
                                                                    >
                                                                      <button
                                                                        aria-expanded="false"
                                                                        aria-haspopup="true"
                                                                        aria-label="Actions"
                                                                        class="pf-c-dropdown__toggle pf-m-plain"
                                                                        id="pf-dropdown-toggle-id-23"
                                                                        type="button"
                                                                      >
                                                                        <svg
                                                                          aria-hidden="true"
                                                                          fill="currentColor"
                                                                          height="1em"
                                                                          role="img"
                                                                          style="vertical-align: -0.125em;"
                                                                          viewBox="0 0 192 512"
                                                                          width="1em"
                                                                        >
                                                                          <path
                                                                            d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                                          />
                                                                        </svg>
                                                                      </button>
                                                                    </div>,
                                                                  }
                                                                }
                                                              >
                                                                <button
                                                                  aria-expanded={false}
                                                                  aria-haspopup={true}
                                                                  aria-label="Actions"
                                                                  className="pf-c-dropdown__toggle pf-m-plain"
                                                                  disabled={false}
                                                                  id="pf-dropdown-toggle-id-23"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  type="button"
                                                                >
                                                                  <EllipsisVIcon
                                                                    color="currentColor"
                                                                    noVerticalAlign={false}
                                                                    size="sm"
                                                                  >
                                                                    <svg
                                                                      aria-hidden={true}
                                                                      aria-labelledby={null}
                                                                      fill="currentColor"
                                                                      height="1em"
                                                                      role="img"
                                                                      style={
                                                                        Object {
                                                                          "verticalAlign": "-0.125em",
                                                                        }
                                                                      }
                                                                      viewBox="0 0 192 512"
                                                                      width="1em"
                                                                    >
                                                                      <path
                                                                        d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                                      />
                                                                    </svg>
                                                                  </EllipsisVIcon>
                                                                </button>
                                                              </Toggle>
                                                            </KebabToggle>
                                                          </div>
                                                        </DropdownWithContext>
                                                      </Dropdown>
                                                    </EditBaselineKebab>
                                                  </Connect(EditBaselineKebab)>
                                                </div>
                                              </ToolbarItem>
                                            </div>
                                          </ToolbarGroupWithRef>
                                        </ForwardRef>
                                      </div>
                                      <ToolbarExpandableContent
                                        chipContainerRef={
                                          Object {
                                            "current": null,
                                          }
                                        }
                                        clearFiltersButtonText="Clear all filters"
                                        expandableContentRef={
                                          Object {
                                            "current": <div
                                              class="pf-c-toolbar__expandable-content"
                                              id="pf-random-id-5-expandable-content-5"
                                            >
                                              <div
                                                class="pf-c-toolbar__group"
                                              />
                                            </div>,
                                          }
                                        }
                                        id="pf-random-id-5-expandable-content-5"
                                        isExpanded={false}
                                        showClearFiltersButton={false}
                                      >
                                        <div
                                          className="pf-c-toolbar__expandable-content"
                                          id="pf-random-id-5-expandable-content-5"
                                        >
                                          <ForwardRef>
                                            <ToolbarGroupWithRef
                                              innerRef={null}
                                            >
                                              <div
                                                className="pf-c-toolbar__group"
                                              />
                                            </ToolbarGroupWithRef>
                                          </ForwardRef>
                                        </div>
                                      </ToolbarExpandableContent>
                                    </div>
                                  </ToolbarContent>
                                  <ToolbarChipGroupContent
                                    chipGroupContentRef={
                                      Object {
                                        "current": <div
                                          class="pf-c-toolbar__content pf-m-hidden"
                                          hidden=""
                                        >
                                          <div
                                            class="pf-c-toolbar__group"
                                          />
                                        </div>,
                                      }
                                    }
                                    clearFiltersButtonText="Clear all filters"
                                    collapseListedFiltersBreakpoint="lg"
                                    isExpanded={false}
                                    numberOfFilters={0}
                                    showClearFiltersButton={false}
                                  >
                                    <div
                                      className="pf-c-toolbar__content pf-m-hidden"
                                      hidden={true}
                                    >
                                      <ForwardRef
                                        className=""
                                      >
                                        <ToolbarGroupWithRef
                                          className=""
                                          innerRef={null}
                                        >
                                          <div
                                            className="pf-c-toolbar__group"
                                          />
                                        </ToolbarGroupWithRef>
                                      </ForwardRef>
                                    </div>
                                  </ToolbarChipGroupContent>
                                </div>
                              </GenerateId>
                            </Toolbar>
                          </EditBaselineToolbar>
                          <table
                            className="pf-c-table ins-c-table pf-m-grid-md ins-entity-table"
                          >
                            <thead>
                              <tr
                                key="edit-baseline-table-header"
                              >
                                <th />
                                <th
                                  className="edit-baseline-header"
                                >
                                  <div>
                                    Fact
                                  </div>
                                </th>
                                <th
                                  className="edit-baseline-header"
                                >
                                  <div>
                                    Value
                                  </div>
                                </th>
                                <th />
                              </tr>
                            </thead>
                            <tbody
                              key="edit-baseline-table"
                            >
                              <tr
                                key="Sauron"
                              >
                                <td
                                  className="pf-c-table__check"
                                >
                                  <Checkbox
                                    className=""
                                    id="fact-0"
                                    isChecked={false}
                                    isDisabled={false}
                                    isValid={true}
                                    name={0}
                                    onChange={[Function]}
                                  >
                                    <div
                                      className="pf-c-check"
                                    >
                                      <input
                                        aria-invalid={false}
                                        checked={false}
                                        className="pf-c-check__input"
                                        disabled={false}
                                        id="fact-0"
                                        name={0}
                                        onChange={[Function]}
                                        type="checkbox"
                                      />
                                    </div>
                                  </Checkbox>
                                </td>
                                <td>
                                  Sauron
                                </td>
                                <td>
                                  the Dark Lord
                                </td>
                                <td>
                                  <Connect(FactKebab)
                                    fact={
                                      Object {
                                        "name": "Sauron",
                                        "value": "the Dark Lord",
                                      }
                                    }
                                    factName="Sauron"
                                    factValue="the Dark Lord"
                                  >
                                    <FactKebab
                                      baselineData={
                                        Object {
                                          "baseline_facts": Array [
                                            Object {
                                              "name": "Sauron",
                                              "value": "the Dark Lord",
                                            },
                                            Object {
                                              "name": "Galadriel",
                                              "value": "the Elven Queen",
                                            },
                                            Object {
                                              "name": "The Fellowship of the Ring",
                                              "values": Array [
                                                Object {
                                                  "name": "Frodo",
                                                  "value": "Baggins",
                                                },
                                                Object {
                                                  "name": "Samwise",
                                                  "value": "Gamgee",
                                                },
                                                Object {
                                                  "name": "Gandalf",
                                                  "value": "the Grey",
                                                },
                                                Object {
                                                  "name": "Meriadoc",
                                                  "value": "Brandybuck",
                                                },
                                                Object {
                                                  "name": "Peregrin",
                                                  "value": "Took",
                                                },
                                                Object {
                                                  "name": "Gimli",
                                                  "value": "song of Gloin",
                                                },
                                                Object {
                                                  "name": "Legolas",
                                                  "value": "Greenleaf",
                                                },
                                                Object {
                                                  "name": "Boromir",
                                                  "value": "son of Denethor",
                                                },
                                                Object {
                                                  "name": "Aragorn",
                                                  "value": "son of Arathorn",
                                                },
                                              ],
                                            },
                                          ],
                                          "display_name": "lotr_baseline",
                                          "id": "38gnw73l-fn36-5829-1287-2m5ghs46801c",
                                        }
                                      }
                                      deleteBaselineData={[Function]}
                                      fact={
                                        Object {
                                          "name": "Sauron",
                                          "value": "the Dark Lord",
                                        }
                                      }
                                      factName="Sauron"
                                      factValue="the Dark Lord"
                                      fetchBaselineData={[Function]}
                                      setFactData={[Function]}
                                      toggleFactModal={[Function]}
                                    >
                                      <Dropdown
                                        className="baseline-fact-kebab"
                                        dropdownItems={
                                          Array [
                                            <DropdownItem
                                              component="button"
                                              onClick={[Function]}
                                            >
                                              Edit fact
                                            </DropdownItem>,
                                            <DropdownItem
                                              component="button"
                                              onClick={[Function]}
                                            >
                                              Delete fact
                                            </DropdownItem>,
                                          ]
                                        }
                                        isOpen={false}
                                        isPlain={true}
                                        position="right"
                                        style={
                                          Object {
                                            "float": "right",
                                          }
                                        }
                                        toggle={
                                          <KebabToggle
                                            onToggle={[Function]}
                                          />
                                        }
                                      >
                                        <DropdownWithContext
                                          autoFocus={true}
                                          className="baseline-fact-kebab"
                                          direction="down"
                                          dropdownItems={
                                            Array [
                                              <DropdownItem
                                                component="button"
                                                onClick={[Function]}
                                              >
                                                Edit fact
                                              </DropdownItem>,
                                              <DropdownItem
                                                component="button"
                                                onClick={[Function]}
                                              >
                                                Delete fact
                                              </DropdownItem>,
                                            ]
                                          }
                                          isGrouped={false}
                                          isOpen={false}
                                          isPlain={true}
                                          menuAppendTo="inline"
                                          onSelect={[Function]}
                                          position="right"
                                          style={
                                            Object {
                                              "float": "right",
                                            }
                                          }
                                          toggle={
                                            <KebabToggle
                                              onToggle={[Function]}
                                            />
                                          }
                                        >
                                          <div
                                            className="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                            data-ouia-component-id="OUIA-Generated-Dropdown-13"
                                            data-ouia-component-type="PF4/Dropdown"
                                            data-ouia-safe={true}
                                            style={
                                              Object {
                                                "float": "right",
                                              }
                                            }
                                          >
                                            <KebabToggle
                                              aria-haspopup={true}
                                              getMenuRef={[Function]}
                                              id="pf-dropdown-toggle-id-24"
                                              isOpen={false}
                                              isPlain={true}
                                              key=".0"
                                              onEnter={[Function]}
                                              onToggle={[Function]}
                                              parentRef={
                                                Object {
                                                  "current": <div
                                                    class="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                                    data-ouia-component-id="OUIA-Generated-Dropdown-13"
                                                    data-ouia-component-type="PF4/Dropdown"
                                                    data-ouia-safe="true"
                                                    style="float: right;"
                                                  >
                                                    <button
                                                      aria-expanded="false"
                                                      aria-haspopup="true"
                                                      aria-label="Actions"
                                                      class="pf-c-dropdown__toggle pf-m-plain"
                                                      id="pf-dropdown-toggle-id-24"
                                                      type="button"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        fill="currentColor"
                                                        height="1em"
                                                        role="img"
                                                        style="vertical-align: -0.125em;"
                                                        viewBox="0 0 192 512"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                        />
                                                      </svg>
                                                    </button>
                                                  </div>,
                                                }
                                              }
                                            >
                                              <Toggle
                                                aria-haspopup={true}
                                                aria-label="Actions"
                                                bubbleEvent={false}
                                                className=""
                                                getMenuRef={[Function]}
                                                id="pf-dropdown-toggle-id-24"
                                                isActive={false}
                                                isDisabled={false}
                                                isOpen={false}
                                                isPlain={true}
                                                isPrimary={false}
                                                isSplitButton={false}
                                                onEnter={[Function]}
                                                onToggle={[Function]}
                                                parentRef={
                                                  Object {
                                                    "current": <div
                                                      class="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                                      data-ouia-component-id="OUIA-Generated-Dropdown-13"
                                                      data-ouia-component-type="PF4/Dropdown"
                                                      data-ouia-safe="true"
                                                      style="float: right;"
                                                    >
                                                      <button
                                                        aria-expanded="false"
                                                        aria-haspopup="true"
                                                        aria-label="Actions"
                                                        class="pf-c-dropdown__toggle pf-m-plain"
                                                        id="pf-dropdown-toggle-id-24"
                                                        type="button"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          fill="currentColor"
                                                          height="1em"
                                                          role="img"
                                                          style="vertical-align: -0.125em;"
                                                          viewBox="0 0 192 512"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                          />
                                                        </svg>
                                                      </button>
                                                    </div>,
                                                  }
                                                }
                                              >
                                                <button
                                                  aria-expanded={false}
                                                  aria-haspopup={true}
                                                  aria-label="Actions"
                                                  className="pf-c-dropdown__toggle pf-m-plain"
                                                  disabled={false}
                                                  id="pf-dropdown-toggle-id-24"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  type="button"
                                                >
                                                  <EllipsisVIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 192 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                      />
                                                    </svg>
                                                  </EllipsisVIcon>
                                                </button>
                                              </Toggle>
                                            </KebabToggle>
                                          </div>
                                        </DropdownWithContext>
                                      </Dropdown>
                                    </FactKebab>
                                  </Connect(FactKebab)>
                                </td>
                              </tr>
                              <tr
                                key="Galadriel"
                              >
                                <td
                                  className="pf-c-table__check"
                                >
                                  <Checkbox
                                    className=""
                                    id="fact-1"
                                    isChecked={false}
                                    isDisabled={false}
                                    isValid={true}
                                    name={1}
                                    onChange={[Function]}
                                  >
                                    <div
                                      className="pf-c-check"
                                    >
                                      <input
                                        aria-invalid={false}
                                        checked={false}
                                        className="pf-c-check__input"
                                        disabled={false}
                                        id="fact-1"
                                        name={1}
                                        onChange={[Function]}
                                        type="checkbox"
                                      />
                                    </div>
                                  </Checkbox>
                                </td>
                                <td>
                                  Galadriel
                                </td>
                                <td>
                                  the Elven Queen
                                </td>
                                <td>
                                  <Connect(FactKebab)
                                    fact={
                                      Object {
                                        "name": "Galadriel",
                                        "value": "the Elven Queen",
                                      }
                                    }
                                    factName="Galadriel"
                                    factValue="the Elven Queen"
                                  >
                                    <FactKebab
                                      baselineData={
                                        Object {
                                          "baseline_facts": Array [
                                            Object {
                                              "name": "Sauron",
                                              "value": "the Dark Lord",
                                            },
                                            Object {
                                              "name": "Galadriel",
                                              "value": "the Elven Queen",
                                            },
                                            Object {
                                              "name": "The Fellowship of the Ring",
                                              "values": Array [
                                                Object {
                                                  "name": "Frodo",
                                                  "value": "Baggins",
                                                },
                                                Object {
                                                  "name": "Samwise",
                                                  "value": "Gamgee",
                                                },
                                                Object {
                                                  "name": "Gandalf",
                                                  "value": "the Grey",
                                                },
                                                Object {
                                                  "name": "Meriadoc",
                                                  "value": "Brandybuck",
                                                },
                                                Object {
                                                  "name": "Peregrin",
                                                  "value": "Took",
                                                },
                                                Object {
                                                  "name": "Gimli",
                                                  "value": "song of Gloin",
                                                },
                                                Object {
                                                  "name": "Legolas",
                                                  "value": "Greenleaf",
                                                },
                                                Object {
                                                  "name": "Boromir",
                                                  "value": "son of Denethor",
                                                },
                                                Object {
                                                  "name": "Aragorn",
                                                  "value": "son of Arathorn",
                                                },
                                              ],
                                            },
                                          ],
                                          "display_name": "lotr_baseline",
                                          "id": "38gnw73l-fn36-5829-1287-2m5ghs46801c",
                                        }
                                      }
                                      deleteBaselineData={[Function]}
                                      fact={
                                        Object {
                                          "name": "Galadriel",
                                          "value": "the Elven Queen",
                                        }
                                      }
                                      factName="Galadriel"
                                      factValue="the Elven Queen"
                                      fetchBaselineData={[Function]}
                                      setFactData={[Function]}
                                      toggleFactModal={[Function]}
                                    >
                                      <Dropdown
                                        className="baseline-fact-kebab"
                                        dropdownItems={
                                          Array [
                                            <DropdownItem
                                              component="button"
                                              onClick={[Function]}
                                            >
                                              Edit fact
                                            </DropdownItem>,
                                            <DropdownItem
                                              component="button"
                                              onClick={[Function]}
                                            >
                                              Delete fact
                                            </DropdownItem>,
                                          ]
                                        }
                                        isOpen={false}
                                        isPlain={true}
                                        position="right"
                                        style={
                                          Object {
                                            "float": "right",
                                          }
                                        }
                                        toggle={
                                          <KebabToggle
                                            onToggle={[Function]}
                                          />
                                        }
                                      >
                                        <DropdownWithContext
                                          autoFocus={true}
                                          className="baseline-fact-kebab"
                                          direction="down"
                                          dropdownItems={
                                            Array [
                                              <DropdownItem
                                                component="button"
                                                onClick={[Function]}
                                              >
                                                Edit fact
                                              </DropdownItem>,
                                              <DropdownItem
                                                component="button"
                                                onClick={[Function]}
                                              >
                                                Delete fact
                                              </DropdownItem>,
                                            ]
                                          }
                                          isGrouped={false}
                                          isOpen={false}
                                          isPlain={true}
                                          menuAppendTo="inline"
                                          onSelect={[Function]}
                                          position="right"
                                          style={
                                            Object {
                                              "float": "right",
                                            }
                                          }
                                          toggle={
                                            <KebabToggle
                                              onToggle={[Function]}
                                            />
                                          }
                                        >
                                          <div
                                            className="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                            data-ouia-component-id="OUIA-Generated-Dropdown-14"
                                            data-ouia-component-type="PF4/Dropdown"
                                            data-ouia-safe={true}
                                            style={
                                              Object {
                                                "float": "right",
                                              }
                                            }
                                          >
                                            <KebabToggle
                                              aria-haspopup={true}
                                              getMenuRef={[Function]}
                                              id="pf-dropdown-toggle-id-25"
                                              isOpen={false}
                                              isPlain={true}
                                              key=".0"
                                              onEnter={[Function]}
                                              onToggle={[Function]}
                                              parentRef={
                                                Object {
                                                  "current": <div
                                                    class="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                                    data-ouia-component-id="OUIA-Generated-Dropdown-14"
                                                    data-ouia-component-type="PF4/Dropdown"
                                                    data-ouia-safe="true"
                                                    style="float: right;"
                                                  >
                                                    <button
                                                      aria-expanded="false"
                                                      aria-haspopup="true"
                                                      aria-label="Actions"
                                                      class="pf-c-dropdown__toggle pf-m-plain"
                                                      id="pf-dropdown-toggle-id-25"
                                                      type="button"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        fill="currentColor"
                                                        height="1em"
                                                        role="img"
                                                        style="vertical-align: -0.125em;"
                                                        viewBox="0 0 192 512"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                        />
                                                      </svg>
                                                    </button>
                                                  </div>,
                                                }
                                              }
                                            >
                                              <Toggle
                                                aria-haspopup={true}
                                                aria-label="Actions"
                                                bubbleEvent={false}
                                                className=""
                                                getMenuRef={[Function]}
                                                id="pf-dropdown-toggle-id-25"
                                                isActive={false}
                                                isDisabled={false}
                                                isOpen={false}
                                                isPlain={true}
                                                isPrimary={false}
                                                isSplitButton={false}
                                                onEnter={[Function]}
                                                onToggle={[Function]}
                                                parentRef={
                                                  Object {
                                                    "current": <div
                                                      class="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                                      data-ouia-component-id="OUIA-Generated-Dropdown-14"
                                                      data-ouia-component-type="PF4/Dropdown"
                                                      data-ouia-safe="true"
                                                      style="float: right;"
                                                    >
                                                      <button
                                                        aria-expanded="false"
                                                        aria-haspopup="true"
                                                        aria-label="Actions"
                                                        class="pf-c-dropdown__toggle pf-m-plain"
                                                        id="pf-dropdown-toggle-id-25"
                                                        type="button"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          fill="currentColor"
                                                          height="1em"
                                                          role="img"
                                                          style="vertical-align: -0.125em;"
                                                          viewBox="0 0 192 512"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                          />
                                                        </svg>
                                                      </button>
                                                    </div>,
                                                  }
                                                }
                                              >
                                                <button
                                                  aria-expanded={false}
                                                  aria-haspopup={true}
                                                  aria-label="Actions"
                                                  className="pf-c-dropdown__toggle pf-m-plain"
                                                  disabled={false}
                                                  id="pf-dropdown-toggle-id-25"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  type="button"
                                                >
                                                  <EllipsisVIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 192 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                      />
                                                    </svg>
                                                  </EllipsisVIcon>
                                                </button>
                                              </Toggle>
                                            </KebabToggle>
                                          </div>
                                        </DropdownWithContext>
                                      </Dropdown>
                                    </FactKebab>
                                  </Connect(FactKebab)>
                                </td>
                              </tr>
                              <tr
                                key="The Fellowship of the Ring"
                              >
                                <td
                                  className="pf-c-table__check nested-fact"
                                >
                                  <Checkbox
                                    className=""
                                    id="category-2"
                                    isChecked={false}
                                    isDisabled={false}
                                    isValid={true}
                                    name={2}
                                    onChange={[Function]}
                                  >
                                    <div
                                      className="pf-c-check"
                                    >
                                      <input
                                        aria-invalid={false}
                                        checked={false}
                                        className="pf-c-check__input"
                                        disabled={false}
                                        id="category-2"
                                        name={2}
                                        onChange={[Function]}
                                        type="checkbox"
                                      />
                                    </div>
                                  </Checkbox>
                                </td>
                                <td>
                                  <AngleDownIcon
                                    className="pointer active-blue"
                                    color="currentColor"
                                    noVerticalAlign={false}
                                    onClick={[Function]}
                                    size="sm"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      aria-labelledby={null}
                                      className="pointer active-blue"
                                      fill="currentColor"
                                      height="1em"
                                      onClick={[Function]}
                                      role="img"
                                      style={
                                        Object {
                                          "verticalAlign": "-0.125em",
                                        }
                                      }
                                      viewBox="0 0 320 512"
                                      width="1em"
                                    >
                                      <path
                                        d="M143 352.3L7 216.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.2 9.4-24.4 9.4-33.8 0z"
                                      />
                                    </svg>
                                  </AngleDownIcon>
                                   
                                  The Fellowship of the Ring
                                </td>
                                <td />
                                <td>
                                  <Connect(FactKebab)
                                    fact={
                                      Object {
                                        "name": "The Fellowship of the Ring",
                                        "values": Array [
                                          Object {
                                            "name": "Frodo",
                                            "value": "Baggins",
                                          },
                                          Object {
                                            "name": "Samwise",
                                            "value": "Gamgee",
                                          },
                                          Object {
                                            "name": "Gandalf",
                                            "value": "the Grey",
                                          },
                                          Object {
                                            "name": "Meriadoc",
                                            "value": "Brandybuck",
                                          },
                                          Object {
                                            "name": "Peregrin",
                                            "value": "Took",
                                          },
                                          Object {
                                            "name": "Gimli",
                                            "value": "song of Gloin",
                                          },
                                          Object {
                                            "name": "Legolas",
                                            "value": "Greenleaf",
                                          },
                                          Object {
                                            "name": "Boromir",
                                            "value": "son of Denethor",
                                          },
                                          Object {
                                            "name": "Aragorn",
                                            "value": "son of Arathorn",
                                          },
                                        ],
                                      }
                                    }
                                    factName="The Fellowship of the Ring"
                                    isCategory={true}
                                  >
                                    <FactKebab
                                      baselineData={
                                        Object {
                                          "baseline_facts": Array [
                                            Object {
                                              "name": "Sauron",
                                              "value": "the Dark Lord",
                                            },
                                            Object {
                                              "name": "Galadriel",
                                              "value": "the Elven Queen",
                                            },
                                            Object {
                                              "name": "The Fellowship of the Ring",
                                              "values": Array [
                                                Object {
                                                  "name": "Frodo",
                                                  "value": "Baggins",
                                                },
                                                Object {
                                                  "name": "Samwise",
                                                  "value": "Gamgee",
                                                },
                                                Object {
                                                  "name": "Gandalf",
                                                  "value": "the Grey",
                                                },
                                                Object {
                                                  "name": "Meriadoc",
                                                  "value": "Brandybuck",
                                                },
                                                Object {
                                                  "name": "Peregrin",
                                                  "value": "Took",
                                                },
                                                Object {
                                                  "name": "Gimli",
                                                  "value": "song of Gloin",
                                                },
                                                Object {
                                                  "name": "Legolas",
                                                  "value": "Greenleaf",
                                                },
                                                Object {
                                                  "name": "Boromir",
                                                  "value": "son of Denethor",
                                                },
                                                Object {
                                                  "name": "Aragorn",
                                                  "value": "son of Arathorn",
                                                },
                                              ],
                                            },
                                          ],
                                          "display_name": "lotr_baseline",
                                          "id": "38gnw73l-fn36-5829-1287-2m5ghs46801c",
                                        }
                                      }
                                      deleteBaselineData={[Function]}
                                      fact={
                                        Object {
                                          "name": "The Fellowship of the Ring",
                                          "values": Array [
                                            Object {
                                              "name": "Frodo",
                                              "value": "Baggins",
                                            },
                                            Object {
                                              "name": "Samwise",
                                              "value": "Gamgee",
                                            },
                                            Object {
                                              "name": "Gandalf",
                                              "value": "the Grey",
                                            },
                                            Object {
                                              "name": "Meriadoc",
                                              "value": "Brandybuck",
                                            },
                                            Object {
                                              "name": "Peregrin",
                                              "value": "Took",
                                            },
                                            Object {
                                              "name": "Gimli",
                                              "value": "song of Gloin",
                                            },
                                            Object {
                                              "name": "Legolas",
                                              "value": "Greenleaf",
                                            },
                                            Object {
                                              "name": "Boromir",
                                              "value": "son of Denethor",
                                            },
                                            Object {
                                              "name": "Aragorn",
                                              "value": "son of Arathorn",
                                            },
                                          ],
                                        }
                                      }
                                      factName="The Fellowship of the Ring"
                                      fetchBaselineData={[Function]}
                                      isCategory={true}
                                      setFactData={[Function]}
                                      toggleFactModal={[Function]}
                                    >
                                      <Dropdown
                                        className="baseline-fact-kebab"
                                        dropdownItems={
                                          Array [
                                            <DropdownItem
                                              component="button"
                                              onClick={[Function]}
                                            >
                                              Add sub fact
                                            </DropdownItem>,
                                            <DropdownItem
                                              component="button"
                                              onClick={[Function]}
                                            >
                                              Edit category
                                            </DropdownItem>,
                                            <DropdownItem
                                              component="button"
                                              onClick={[Function]}
                                            >
                                              Delete category
                                            </DropdownItem>,
                                          ]
                                        }
                                        isOpen={false}
                                        isPlain={true}
                                        position="right"
                                        style={
                                          Object {
                                            "float": "right",
                                          }
                                        }
                                        toggle={
                                          <KebabToggle
                                            onToggle={[Function]}
                                          />
                                        }
                                      >
                                        <DropdownWithContext
                                          autoFocus={true}
                                          className="baseline-fact-kebab"
                                          direction="down"
                                          dropdownItems={
                                            Array [
                                              <DropdownItem
                                                component="button"
                                                onClick={[Function]}
                                              >
                                                Add sub fact
                                              </DropdownItem>,
                                              <DropdownItem
                                                component="button"
                                                onClick={[Function]}
                                              >
                                                Edit category
                                              </DropdownItem>,
                                              <DropdownItem
                                                component="button"
                                                onClick={[Function]}
                                              >
                                                Delete category
                                              </DropdownItem>,
                                            ]
                                          }
                                          isGrouped={false}
                                          isOpen={false}
                                          isPlain={true}
                                          menuAppendTo="inline"
                                          onSelect={[Function]}
                                          position="right"
                                          style={
                                            Object {
                                              "float": "right",
                                            }
                                          }
                                          toggle={
                                            <KebabToggle
                                              onToggle={[Function]}
                                            />
                                          }
                                        >
                                          <div
                                            className="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                            data-ouia-component-id="OUIA-Generated-Dropdown-15"
                                            data-ouia-component-type="PF4/Dropdown"
                                            data-ouia-safe={true}
                                            style={
                                              Object {
                                                "float": "right",
                                              }
                                            }
                                          >
                                            <KebabToggle
                                              aria-haspopup={true}
                                              getMenuRef={[Function]}
                                              id="pf-dropdown-toggle-id-26"
                                              isOpen={false}
                                              isPlain={true}
                                              key=".0"
                                              onEnter={[Function]}
                                              onToggle={[Function]}
                                              parentRef={
                                                Object {
                                                  "current": <div
                                                    class="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                                    data-ouia-component-id="OUIA-Generated-Dropdown-15"
                                                    data-ouia-component-type="PF4/Dropdown"
                                                    data-ouia-safe="true"
                                                    style="float: right;"
                                                  >
                                                    <button
                                                      aria-expanded="false"
                                                      aria-haspopup="true"
                                                      aria-label="Actions"
                                                      class="pf-c-dropdown__toggle pf-m-plain"
                                                      id="pf-dropdown-toggle-id-26"
                                                      type="button"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        fill="currentColor"
                                                        height="1em"
                                                        role="img"
                                                        style="vertical-align: -0.125em;"
                                                        viewBox="0 0 192 512"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                        />
                                                      </svg>
                                                    </button>
                                                  </div>,
                                                }
                                              }
                                            >
                                              <Toggle
                                                aria-haspopup={true}
                                                aria-label="Actions"
                                                bubbleEvent={false}
                                                className=""
                                                getMenuRef={[Function]}
                                                id="pf-dropdown-toggle-id-26"
                                                isActive={false}
                                                isDisabled={false}
                                                isOpen={false}
                                                isPlain={true}
                                                isPrimary={false}
                                                isSplitButton={false}
                                                onEnter={[Function]}
                                                onToggle={[Function]}
                                                parentRef={
                                                  Object {
                                                    "current": <div
                                                      class="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                                      data-ouia-component-id="OUIA-Generated-Dropdown-15"
                                                      data-ouia-component-type="PF4/Dropdown"
                                                      data-ouia-safe="true"
                                                      style="float: right;"
                                                    >
                                                      <button
                                                        aria-expanded="false"
                                                        aria-haspopup="true"
                                                        aria-label="Actions"
                                                        class="pf-c-dropdown__toggle pf-m-plain"
                                                        id="pf-dropdown-toggle-id-26"
                                                        type="button"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          fill="currentColor"
                                                          height="1em"
                                                          role="img"
                                                          style="vertical-align: -0.125em;"
                                                          viewBox="0 0 192 512"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                          />
                                                        </svg>
                                                      </button>
                                                    </div>,
                                                  }
                                                }
                                              >
                                                <button
                                                  aria-expanded={false}
                                                  aria-haspopup={true}
                                                  aria-label="Actions"
                                                  className="pf-c-dropdown__toggle pf-m-plain"
                                                  disabled={false}
                                                  id="pf-dropdown-toggle-id-26"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  type="button"
                                                >
                                                  <EllipsisVIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 192 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                      />
                                                    </svg>
                                                  </EllipsisVIcon>
                                                </button>
                                              </Toggle>
                                            </KebabToggle>
                                          </div>
                                        </DropdownWithContext>
                                      </Dropdown>
                                    </FactKebab>
                                  </Connect(FactKebab)>
                                </td>
                              </tr>
                              <tr
                                key="Frodo"
                              >
                                <td
                                  className="pf-c-table__check nested-fact"
                                >
                                  <Checkbox
                                    className=""
                                    id="fact-3"
                                    isChecked={false}
                                    isDisabled={false}
                                    isValid={true}
                                    name={3}
                                    onChange={[Function]}
                                  >
                                    <div
                                      className="pf-c-check"
                                    >
                                      <input
                                        aria-invalid={false}
                                        checked={false}
                                        className="pf-c-check__input"
                                        disabled={false}
                                        id="fact-3"
                                        name={3}
                                        onChange={[Function]}
                                        type="checkbox"
                                      />
                                    </div>
                                  </Checkbox>
                                </td>
                                <td>
                                  <p
                                    className="child-row"
                                  >
                                    Frodo
                                  </p>
                                </td>
                                <td>
                                  Baggins
                                </td>
                                <td>
                                  <Connect(FactKebab)
                                    fact={
                                      Object {
                                        "name": "The Fellowship of the Ring",
                                        "values": Array [
                                          Object {
                                            "name": "Frodo",
                                            "value": "Baggins",
                                          },
                                          Object {
                                            "name": "Samwise",
                                            "value": "Gamgee",
                                          },
                                          Object {
                                            "name": "Gandalf",
                                            "value": "the Grey",
                                          },
                                          Object {
                                            "name": "Meriadoc",
                                            "value": "Brandybuck",
                                          },
                                          Object {
                                            "name": "Peregrin",
                                            "value": "Took",
                                          },
                                          Object {
                                            "name": "Gimli",
                                            "value": "song of Gloin",
                                          },
                                          Object {
                                            "name": "Legolas",
                                            "value": "Greenleaf",
                                          },
                                          Object {
                                            "name": "Boromir",
                                            "value": "son of Denethor",
                                          },
                                          Object {
                                            "name": "Aragorn",
                                            "value": "son of Arathorn",
                                          },
                                        ],
                                      }
                                    }
                                    factName="Frodo"
                                    factValue="Baggins"
                                    isSubFact={true}
                                  >
                                    <FactKebab
                                      baselineData={
                                        Object {
                                          "baseline_facts": Array [
                                            Object {
                                              "name": "Sauron",
                                              "value": "the Dark Lord",
                                            },
                                            Object {
                                              "name": "Galadriel",
                                              "value": "the Elven Queen",
                                            },
                                            Object {
                                              "name": "The Fellowship of the Ring",
                                              "values": Array [
                                                Object {
                                                  "name": "Frodo",
                                                  "value": "Baggins",
                                                },
                                                Object {
                                                  "name": "Samwise",
                                                  "value": "Gamgee",
                                                },
                                                Object {
                                                  "name": "Gandalf",
                                                  "value": "the Grey",
                                                },
                                                Object {
                                                  "name": "Meriadoc",
                                                  "value": "Brandybuck",
                                                },
                                                Object {
                                                  "name": "Peregrin",
                                                  "value": "Took",
                                                },
                                                Object {
                                                  "name": "Gimli",
                                                  "value": "song of Gloin",
                                                },
                                                Object {
                                                  "name": "Legolas",
                                                  "value": "Greenleaf",
                                                },
                                                Object {
                                                  "name": "Boromir",
                                                  "value": "son of Denethor",
                                                },
                                                Object {
                                                  "name": "Aragorn",
                                                  "value": "son of Arathorn",
                                                },
                                              ],
                                            },
                                          ],
                                          "display_name": "lotr_baseline",
                                          "id": "38gnw73l-fn36-5829-1287-2m5ghs46801c",
                                        }
                                      }
                                      deleteBaselineData={[Function]}
                                      fact={
                                        Object {
                                          "name": "The Fellowship of the Ring",
                                          "values": Array [
                                            Object {
                                              "name": "Frodo",
                                              "value": "Baggins",
                                            },
                                            Object {
                                              "name": "Samwise",
                                              "value": "Gamgee",
                                            },
                                            Object {
                                              "name": "Gandalf",
                                              "value": "the Grey",
                                            },
                                            Object {
                                              "name": "Meriadoc",
                                              "value": "Brandybuck",
                                            },
                                            Object {
                                              "name": "Peregrin",
                                              "value": "Took",
                                            },
                                            Object {
                                              "name": "Gimli",
                                              "value": "song of Gloin",
                                            },
                                            Object {
                                              "name": "Legolas",
                                              "value": "Greenleaf",
                                            },
                                            Object {
                                              "name": "Boromir",
                                              "value": "son of Denethor",
                                            },
                                            Object {
                                              "name": "Aragorn",
                                              "value": "son of Arathorn",
                                            },
                                          ],
                                        }
                                      }
                                      factName="Frodo"
                                      factValue="Baggins"
                                      fetchBaselineData={[Function]}
                                      isSubFact={true}
                                      setFactData={[Function]}
                                      toggleFactModal={[Function]}
                                    >
                                      <Dropdown
                                        className="baseline-fact-kebab"
                                        dropdownItems={
                                          Array [
                                            <DropdownItem
                                              component="button"
                                              onClick={[Function]}
                                            >
                                              Edit fact
                                            </DropdownItem>,
                                            <DropdownItem
                                              component="button"
                                              onClick={[Function]}
                                            >
                                              Delete fact
                                            </DropdownItem>,
                                          ]
                                        }
                                        isOpen={false}
                                        isPlain={true}
                                        position="right"
                                        style={
                                          Object {
                                            "float": "right",
                                          }
                                        }
                                        toggle={
                                          <KebabToggle
                                            onToggle={[Function]}
                                          />
                                        }
                                      >
                                        <DropdownWithContext
                                          autoFocus={true}
                                          className="baseline-fact-kebab"
                                          direction="down"
                                          dropdownItems={
                                            Array [
                                              <DropdownItem
                                                component="button"
                                                onClick={[Function]}
                                              >
                                                Edit fact
                                              </DropdownItem>,
                                              <DropdownItem
                                                component="button"
                                                onClick={[Function]}
                                              >
                                                Delete fact
                                              </DropdownItem>,
                                            ]
                                          }
                                          isGrouped={false}
                                          isOpen={false}
                                          isPlain={true}
                                          menuAppendTo="inline"
                                          onSelect={[Function]}
                                          position="right"
                                          style={
                                            Object {
                                              "float": "right",
                                            }
                                          }
                                          toggle={
                                            <KebabToggle
                                              onToggle={[Function]}
                                            />
                                          }
                                        >
                                          <div
                                            className="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                            data-ouia-component-id="OUIA-Generated-Dropdown-16"
                                            data-ouia-component-type="PF4/Dropdown"
                                            data-ouia-safe={true}
                                            style={
                                              Object {
                                                "float": "right",
                                              }
                                            }
                                          >
                                            <KebabToggle
                                              aria-haspopup={true}
                                              getMenuRef={[Function]}
                                              id="pf-dropdown-toggle-id-27"
                                              isOpen={false}
                                              isPlain={true}
                                              key=".0"
                                              onEnter={[Function]}
                                              onToggle={[Function]}
                                              parentRef={
                                                Object {
                                                  "current": <div
                                                    class="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                                    data-ouia-component-id="OUIA-Generated-Dropdown-16"
                                                    data-ouia-component-type="PF4/Dropdown"
                                                    data-ouia-safe="true"
                                                    style="float: right;"
                                                  >
                                                    <button
                                                      aria-expanded="false"
                                                      aria-haspopup="true"
                                                      aria-label="Actions"
                                                      class="pf-c-dropdown__toggle pf-m-plain"
                                                      id="pf-dropdown-toggle-id-27"
                                                      type="button"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        fill="currentColor"
                                                        height="1em"
                                                        role="img"
                                                        style="vertical-align: -0.125em;"
                                                        viewBox="0 0 192 512"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                        />
                                                      </svg>
                                                    </button>
                                                  </div>,
                                                }
                                              }
                                            >
                                              <Toggle
                                                aria-haspopup={true}
                                                aria-label="Actions"
                                                bubbleEvent={false}
                                                className=""
                                                getMenuRef={[Function]}
                                                id="pf-dropdown-toggle-id-27"
                                                isActive={false}
                                                isDisabled={false}
                                                isOpen={false}
                                                isPlain={true}
                                                isPrimary={false}
                                                isSplitButton={false}
                                                onEnter={[Function]}
                                                onToggle={[Function]}
                                                parentRef={
                                                  Object {
                                                    "current": <div
                                                      class="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                                      data-ouia-component-id="OUIA-Generated-Dropdown-16"
                                                      data-ouia-component-type="PF4/Dropdown"
                                                      data-ouia-safe="true"
                                                      style="float: right;"
                                                    >
                                                      <button
                                                        aria-expanded="false"
                                                        aria-haspopup="true"
                                                        aria-label="Actions"
                                                        class="pf-c-dropdown__toggle pf-m-plain"
                                                        id="pf-dropdown-toggle-id-27"
                                                        type="button"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          fill="currentColor"
                                                          height="1em"
                                                          role="img"
                                                          style="vertical-align: -0.125em;"
                                                          viewBox="0 0 192 512"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                          />
                                                        </svg>
                                                      </button>
                                                    </div>,
                                                  }
                                                }
                                              >
                                                <button
                                                  aria-expanded={false}
                                                  aria-haspopup={true}
                                                  aria-label="Actions"
                                                  className="pf-c-dropdown__toggle pf-m-plain"
                                                  disabled={false}
                                                  id="pf-dropdown-toggle-id-27"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  type="button"
                                                >
                                                  <EllipsisVIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 192 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                      />
                                                    </svg>
                                                  </EllipsisVIcon>
                                                </button>
                                              </Toggle>
                                            </KebabToggle>
                                          </div>
                                        </DropdownWithContext>
                                      </Dropdown>
                                    </FactKebab>
                                  </Connect(FactKebab)>
                                </td>
                              </tr>
                              <tr
                                key="Samwise"
                              >
                                <td
                                  className="pf-c-table__check nested-fact"
                                >
                                  <Checkbox
                                    className=""
                                    id="fact-4"
                                    isChecked={false}
                                    isDisabled={false}
                                    isValid={true}
                                    name={4}
                                    onChange={[Function]}
                                  >
                                    <div
                                      className="pf-c-check"
                                    >
                                      <input
                                        aria-invalid={false}
                                        checked={false}
                                        className="pf-c-check__input"
                                        disabled={false}
                                        id="fact-4"
                                        name={4}
                                        onChange={[Function]}
                                        type="checkbox"
                                      />
                                    </div>
                                  </Checkbox>
                                </td>
                                <td>
                                  <p
                                    className="child-row"
                                  >
                                    Samwise
                                  </p>
                                </td>
                                <td>
                                  Gamgee
                                </td>
                                <td>
                                  <Connect(FactKebab)
                                    fact={
                                      Object {
                                        "name": "The Fellowship of the Ring",
                                        "values": Array [
                                          Object {
                                            "name": "Frodo",
                                            "value": "Baggins",
                                          },
                                          Object {
                                            "name": "Samwise",
                                            "value": "Gamgee",
                                          },
                                          Object {
                                            "name": "Gandalf",
                                            "value": "the Grey",
                                          },
                                          Object {
                                            "name": "Meriadoc",
                                            "value": "Brandybuck",
                                          },
                                          Object {
                                            "name": "Peregrin",
                                            "value": "Took",
                                          },
                                          Object {
                                            "name": "Gimli",
                                            "value": "song of Gloin",
                                          },
                                          Object {
                                            "name": "Legolas",
                                            "value": "Greenleaf",
                                          },
                                          Object {
                                            "name": "Boromir",
                                            "value": "son of Denethor",
                                          },
                                          Object {
                                            "name": "Aragorn",
                                            "value": "son of Arathorn",
                                          },
                                        ],
                                      }
                                    }
                                    factName="Samwise"
                                    factValue="Gamgee"
                                    isSubFact={true}
                                  >
                                    <FactKebab
                                      baselineData={
                                        Object {
                                          "baseline_facts": Array [
                                            Object {
                                              "name": "Sauron",
                                              "value": "the Dark Lord",
                                            },
                                            Object {
                                              "name": "Galadriel",
                                              "value": "the Elven Queen",
                                            },
                                            Object {
                                              "name": "The Fellowship of the Ring",
                                              "values": Array [
                                                Object {
                                                  "name": "Frodo",
                                                  "value": "Baggins",
                                                },
                                                Object {
                                                  "name": "Samwise",
                                                  "value": "Gamgee",
                                                },
                                                Object {
                                                  "name": "Gandalf",
                                                  "value": "the Grey",
                                                },
                                                Object {
                                                  "name": "Meriadoc",
                                                  "value": "Brandybuck",
                                                },
                                                Object {
                                                  "name": "Peregrin",
                                                  "value": "Took",
                                                },
                                                Object {
                                                  "name": "Gimli",
                                                  "value": "song of Gloin",
                                                },
                                                Object {
                                                  "name": "Legolas",
                                                  "value": "Greenleaf",
                                                },
                                                Object {
                                                  "name": "Boromir",
                                                  "value": "son of Denethor",
                                                },
                                                Object {
                                                  "name": "Aragorn",
                                                  "value": "son of Arathorn",
                                                },
                                              ],
                                            },
                                          ],
                                          "display_name": "lotr_baseline",
                                          "id": "38gnw73l-fn36-5829-1287-2m5ghs46801c",
                                        }
                                      }
                                      deleteBaselineData={[Function]}
                                      fact={
                                        Object {
                                          "name": "The Fellowship of the Ring",
                                          "values": Array [
                                            Object {
                                              "name": "Frodo",
                                              "value": "Baggins",
                                            },
                                            Object {
                                              "name": "Samwise",
                                              "value": "Gamgee",
                                            },
                                            Object {
                                              "name": "Gandalf",
                                              "value": "the Grey",
                                            },
                                            Object {
                                              "name": "Meriadoc",
                                              "value": "Brandybuck",
                                            },
                                            Object {
                                              "name": "Peregrin",
                                              "value": "Took",
                                            },
                                            Object {
                                              "name": "Gimli",
                                              "value": "song of Gloin",
                                            },
                                            Object {
                                              "name": "Legolas",
                                              "value": "Greenleaf",
                                            },
                                            Object {
                                              "name": "Boromir",
                                              "value": "son of Denethor",
                                            },
                                            Object {
                                              "name": "Aragorn",
                                              "value": "son of Arathorn",
                                            },
                                          ],
                                        }
                                      }
                                      factName="Samwise"
                                      factValue="Gamgee"
                                      fetchBaselineData={[Function]}
                                      isSubFact={true}
                                      setFactData={[Function]}
                                      toggleFactModal={[Function]}
                                    >
                                      <Dropdown
                                        className="baseline-fact-kebab"
                                        dropdownItems={
                                          Array [
                                            <DropdownItem
                                              component="button"
                                              onClick={[Function]}
                                            >
                                              Edit fact
                                            </DropdownItem>,
                                            <DropdownItem
                                              component="button"
                                              onClick={[Function]}
                                            >
                                              Delete fact
                                            </DropdownItem>,
                                          ]
                                        }
                                        isOpen={false}
                                        isPlain={true}
                                        position="right"
                                        style={
                                          Object {
                                            "float": "right",
                                          }
                                        }
                                        toggle={
                                          <KebabToggle
                                            onToggle={[Function]}
                                          />
                                        }
                                      >
                                        <DropdownWithContext
                                          autoFocus={true}
                                          className="baseline-fact-kebab"
                                          direction="down"
                                          dropdownItems={
                                            Array [
                                              <DropdownItem
                                                component="button"
                                                onClick={[Function]}
                                              >
                                                Edit fact
                                              </DropdownItem>,
                                              <DropdownItem
                                                component="button"
                                                onClick={[Function]}
                                              >
                                                Delete fact
                                              </DropdownItem>,
                                            ]
                                          }
                                          isGrouped={false}
                                          isOpen={false}
                                          isPlain={true}
                                          menuAppendTo="inline"
                                          onSelect={[Function]}
                                          position="right"
                                          style={
                                            Object {
                                              "float": "right",
                                            }
                                          }
                                          toggle={
                                            <KebabToggle
                                              onToggle={[Function]}
                                            />
                                          }
                                        >
                                          <div
                                            className="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                            data-ouia-component-id="OUIA-Generated-Dropdown-17"
                                            data-ouia-component-type="PF4/Dropdown"
                                            data-ouia-safe={true}
                                            style={
                                              Object {
                                                "float": "right",
                                              }
                                            }
                                          >
                                            <KebabToggle
                                              aria-haspopup={true}
                                              getMenuRef={[Function]}
                                              id="pf-dropdown-toggle-id-28"
                                              isOpen={false}
                                              isPlain={true}
                                              key=".0"
                                              onEnter={[Function]}
                                              onToggle={[Function]}
                                              parentRef={
                                                Object {
                                                  "current": <div
                                                    class="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                                    data-ouia-component-id="OUIA-Generated-Dropdown-17"
                                                    data-ouia-component-type="PF4/Dropdown"
                                                    data-ouia-safe="true"
                                                    style="float: right;"
                                                  >
                                                    <button
                                                      aria-expanded="false"
                                                      aria-haspopup="true"
                                                      aria-label="Actions"
                                                      class="pf-c-dropdown__toggle pf-m-plain"
                                                      id="pf-dropdown-toggle-id-28"
                                                      type="button"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        fill="currentColor"
                                                        height="1em"
                                                        role="img"
                                                        style="vertical-align: -0.125em;"
                                                        viewBox="0 0 192 512"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                        />
                                                      </svg>
                                                    </button>
                                                  </div>,
                                                }
                                              }
                                            >
                                              <Toggle
                                                aria-haspopup={true}
                                                aria-label="Actions"
                                                bubbleEvent={false}
                                                className=""
                                                getMenuRef={[Function]}
                                                id="pf-dropdown-toggle-id-28"
                                                isActive={false}
                                                isDisabled={false}
                                                isOpen={false}
                                                isPlain={true}
                                                isPrimary={false}
                                                isSplitButton={false}
                                                onEnter={[Function]}
                                                onToggle={[Function]}
                                                parentRef={
                                                  Object {
                                                    "current": <div
                                                      class="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                                      data-ouia-component-id="OUIA-Generated-Dropdown-17"
                                                      data-ouia-component-type="PF4/Dropdown"
                                                      data-ouia-safe="true"
                                                      style="float: right;"
                                                    >
                                                      <button
                                                        aria-expanded="false"
                                                        aria-haspopup="true"
                                                        aria-label="Actions"
                                                        class="pf-c-dropdown__toggle pf-m-plain"
                                                        id="pf-dropdown-toggle-id-28"
                                                        type="button"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          fill="currentColor"
                                                          height="1em"
                                                          role="img"
                                                          style="vertical-align: -0.125em;"
                                                          viewBox="0 0 192 512"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                          />
                                                        </svg>
                                                      </button>
                                                    </div>,
                                                  }
                                                }
                                              >
                                                <button
                                                  aria-expanded={false}
                                                  aria-haspopup={true}
                                                  aria-label="Actions"
                                                  className="pf-c-dropdown__toggle pf-m-plain"
                                                  disabled={false}
                                                  id="pf-dropdown-toggle-id-28"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  type="button"
                                                >
                                                  <EllipsisVIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 192 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                      />
                                                    </svg>
                                                  </EllipsisVIcon>
                                                </button>
                                              </Toggle>
                                            </KebabToggle>
                                          </div>
                                        </DropdownWithContext>
                                      </Dropdown>
                                    </FactKebab>
                                  </Connect(FactKebab)>
                                </td>
                              </tr>
                              <tr
                                key="Gandalf"
                              >
                                <td
                                  className="pf-c-table__check nested-fact"
                                >
                                  <Checkbox
                                    className=""
                                    id="fact-5"
                                    isChecked={false}
                                    isDisabled={false}
                                    isValid={true}
                                    name={5}
                                    onChange={[Function]}
                                  >
                                    <div
                                      className="pf-c-check"
                                    >
                                      <input
                                        aria-invalid={false}
                                        checked={false}
                                        className="pf-c-check__input"
                                        disabled={false}
                                        id="fact-5"
                                        name={5}
                                        onChange={[Function]}
                                        type="checkbox"
                                      />
                                    </div>
                                  </Checkbox>
                                </td>
                                <td>
                                  <p
                                    className="child-row"
                                  >
                                    Gandalf
                                  </p>
                                </td>
                                <td>
                                  the Grey
                                </td>
                                <td>
                                  <Connect(FactKebab)
                                    fact={
                                      Object {
                                        "name": "The Fellowship of the Ring",
                                        "values": Array [
                                          Object {
                                            "name": "Frodo",
                                            "value": "Baggins",
                                          },
                                          Object {
                                            "name": "Samwise",
                                            "value": "Gamgee",
                                          },
                                          Object {
                                            "name": "Gandalf",
                                            "value": "the Grey",
                                          },
                                          Object {
                                            "name": "Meriadoc",
                                            "value": "Brandybuck",
                                          },
                                          Object {
                                            "name": "Peregrin",
                                            "value": "Took",
                                          },
                                          Object {
                                            "name": "Gimli",
                                            "value": "song of Gloin",
                                          },
                                          Object {
                                            "name": "Legolas",
                                            "value": "Greenleaf",
                                          },
                                          Object {
                                            "name": "Boromir",
                                            "value": "son of Denethor",
                                          },
                                          Object {
                                            "name": "Aragorn",
                                            "value": "son of Arathorn",
                                          },
                                        ],
                                      }
                                    }
                                    factName="Gandalf"
                                    factValue="the Grey"
                                    isSubFact={true}
                                  >
                                    <FactKebab
                                      baselineData={
                                        Object {
                                          "baseline_facts": Array [
                                            Object {
                                              "name": "Sauron",
                                              "value": "the Dark Lord",
                                            },
                                            Object {
                                              "name": "Galadriel",
                                              "value": "the Elven Queen",
                                            },
                                            Object {
                                              "name": "The Fellowship of the Ring",
                                              "values": Array [
                                                Object {
                                                  "name": "Frodo",
                                                  "value": "Baggins",
                                                },
                                                Object {
                                                  "name": "Samwise",
                                                  "value": "Gamgee",
                                                },
                                                Object {
                                                  "name": "Gandalf",
                                                  "value": "the Grey",
                                                },
                                                Object {
                                                  "name": "Meriadoc",
                                                  "value": "Brandybuck",
                                                },
                                                Object {
                                                  "name": "Peregrin",
                                                  "value": "Took",
                                                },
                                                Object {
                                                  "name": "Gimli",
                                                  "value": "song of Gloin",
                                                },
                                                Object {
                                                  "name": "Legolas",
                                                  "value": "Greenleaf",
                                                },
                                                Object {
                                                  "name": "Boromir",
                                                  "value": "son of Denethor",
                                                },
                                                Object {
                                                  "name": "Aragorn",
                                                  "value": "son of Arathorn",
                                                },
                                              ],
                                            },
                                          ],
                                          "display_name": "lotr_baseline",
                                          "id": "38gnw73l-fn36-5829-1287-2m5ghs46801c",
                                        }
                                      }
                                      deleteBaselineData={[Function]}
                                      fact={
                                        Object {
                                          "name": "The Fellowship of the Ring",
                                          "values": Array [
                                            Object {
                                              "name": "Frodo",
                                              "value": "Baggins",
                                            },
                                            Object {
                                              "name": "Samwise",
                                              "value": "Gamgee",
                                            },
                                            Object {
                                              "name": "Gandalf",
                                              "value": "the Grey",
                                            },
                                            Object {
                                              "name": "Meriadoc",
                                              "value": "Brandybuck",
                                            },
                                            Object {
                                              "name": "Peregrin",
                                              "value": "Took",
                                            },
                                            Object {
                                              "name": "Gimli",
                                              "value": "song of Gloin",
                                            },
                                            Object {
                                              "name": "Legolas",
                                              "value": "Greenleaf",
                                            },
                                            Object {
                                              "name": "Boromir",
                                              "value": "son of Denethor",
                                            },
                                            Object {
                                              "name": "Aragorn",
                                              "value": "son of Arathorn",
                                            },
                                          ],
                                        }
                                      }
                                      factName="Gandalf"
                                      factValue="the Grey"
                                      fetchBaselineData={[Function]}
                                      isSubFact={true}
                                      setFactData={[Function]}
                                      toggleFactModal={[Function]}
                                    >
                                      <Dropdown
                                        className="baseline-fact-kebab"
                                        dropdownItems={
                                          Array [
                                            <DropdownItem
                                              component="button"
                                              onClick={[Function]}
                                            >
                                              Edit fact
                                            </DropdownItem>,
                                            <DropdownItem
                                              component="button"
                                              onClick={[Function]}
                                            >
                                              Delete fact
                                            </DropdownItem>,
                                          ]
                                        }
                                        isOpen={false}
                                        isPlain={true}
                                        position="right"
                                        style={
                                          Object {
                                            "float": "right",
                                          }
                                        }
                                        toggle={
                                          <KebabToggle
                                            onToggle={[Function]}
                                          />
                                        }
                                      >
                                        <DropdownWithContext
                                          autoFocus={true}
                                          className="baseline-fact-kebab"
                                          direction="down"
                                          dropdownItems={
                                            Array [
                                              <DropdownItem
                                                component="button"
                                                onClick={[Function]}
                                              >
                                                Edit fact
                                              </DropdownItem>,
                                              <DropdownItem
                                                component="button"
                                                onClick={[Function]}
                                              >
                                                Delete fact
                                              </DropdownItem>,
                                            ]
                                          }
                                          isGrouped={false}
                                          isOpen={false}
                                          isPlain={true}
                                          menuAppendTo="inline"
                                          onSelect={[Function]}
                                          position="right"
                                          style={
                                            Object {
                                              "float": "right",
                                            }
                                          }
                                          toggle={
                                            <KebabToggle
                                              onToggle={[Function]}
                                            />
                                          }
                                        >
                                          <div
                                            className="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                            data-ouia-component-id="OUIA-Generated-Dropdown-18"
                                            data-ouia-component-type="PF4/Dropdown"
                                            data-ouia-safe={true}
                                            style={
                                              Object {
                                                "float": "right",
                                              }
                                            }
                                          >
                                            <KebabToggle
                                              aria-haspopup={true}
                                              getMenuRef={[Function]}
                                              id="pf-dropdown-toggle-id-29"
                                              isOpen={false}
                                              isPlain={true}
                                              key=".0"
                                              onEnter={[Function]}
                                              onToggle={[Function]}
                                              parentRef={
                                                Object {
                                                  "current": <div
                                                    class="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                                    data-ouia-component-id="OUIA-Generated-Dropdown-18"
                                                    data-ouia-component-type="PF4/Dropdown"
                                                    data-ouia-safe="true"
                                                    style="float: right;"
                                                  >
                                                    <button
                                                      aria-expanded="false"
                                                      aria-haspopup="true"
                                                      aria-label="Actions"
                                                      class="pf-c-dropdown__toggle pf-m-plain"
                                                      id="pf-dropdown-toggle-id-29"
                                                      type="button"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        fill="currentColor"
                                                        height="1em"
                                                        role="img"
                                                        style="vertical-align: -0.125em;"
                                                        viewBox="0 0 192 512"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                        />
                                                      </svg>
                                                    </button>
                                                  </div>,
                                                }
                                              }
                                            >
                                              <Toggle
                                                aria-haspopup={true}
                                                aria-label="Actions"
                                                bubbleEvent={false}
                                                className=""
                                                getMenuRef={[Function]}
                                                id="pf-dropdown-toggle-id-29"
                                                isActive={false}
                                                isDisabled={false}
                                                isOpen={false}
                                                isPlain={true}
                                                isPrimary={false}
                                                isSplitButton={false}
                                                onEnter={[Function]}
                                                onToggle={[Function]}
                                                parentRef={
                                                  Object {
                                                    "current": <div
                                                      class="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                                      data-ouia-component-id="OUIA-Generated-Dropdown-18"
                                                      data-ouia-component-type="PF4/Dropdown"
                                                      data-ouia-safe="true"
                                                      style="float: right;"
                                                    >
                                                      <button
                                                        aria-expanded="false"
                                                        aria-haspopup="true"
                                                        aria-label="Actions"
                                                        class="pf-c-dropdown__toggle pf-m-plain"
                                                        id="pf-dropdown-toggle-id-29"
                                                        type="button"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          fill="currentColor"
                                                          height="1em"
                                                          role="img"
                                                          style="vertical-align: -0.125em;"
                                                          viewBox="0 0 192 512"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                          />
                                                        </svg>
                                                      </button>
                                                    </div>,
                                                  }
                                                }
                                              >
                                                <button
                                                  aria-expanded={false}
                                                  aria-haspopup={true}
                                                  aria-label="Actions"
                                                  className="pf-c-dropdown__toggle pf-m-plain"
                                                  disabled={false}
                                                  id="pf-dropdown-toggle-id-29"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  type="button"
                                                >
                                                  <EllipsisVIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 192 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                      />
                                                    </svg>
                                                  </EllipsisVIcon>
                                                </button>
                                              </Toggle>
                                            </KebabToggle>
                                          </div>
                                        </DropdownWithContext>
                                      </Dropdown>
                                    </FactKebab>
                                  </Connect(FactKebab)>
                                </td>
                              </tr>
                              <tr
                                key="Meriadoc"
                              >
                                <td
                                  className="pf-c-table__check nested-fact"
                                >
                                  <Checkbox
                                    className=""
                                    id="fact-6"
                                    isChecked={false}
                                    isDisabled={false}
                                    isValid={true}
                                    name={6}
                                    onChange={[Function]}
                                  >
                                    <div
                                      className="pf-c-check"
                                    >
                                      <input
                                        aria-invalid={false}
                                        checked={false}
                                        className="pf-c-check__input"
                                        disabled={false}
                                        id="fact-6"
                                        name={6}
                                        onChange={[Function]}
                                        type="checkbox"
                                      />
                                    </div>
                                  </Checkbox>
                                </td>
                                <td>
                                  <p
                                    className="child-row"
                                  >
                                    Meriadoc
                                  </p>
                                </td>
                                <td>
                                  Brandybuck
                                </td>
                                <td>
                                  <Connect(FactKebab)
                                    fact={
                                      Object {
                                        "name": "The Fellowship of the Ring",
                                        "values": Array [
                                          Object {
                                            "name": "Frodo",
                                            "value": "Baggins",
                                          },
                                          Object {
                                            "name": "Samwise",
                                            "value": "Gamgee",
                                          },
                                          Object {
                                            "name": "Gandalf",
                                            "value": "the Grey",
                                          },
                                          Object {
                                            "name": "Meriadoc",
                                            "value": "Brandybuck",
                                          },
                                          Object {
                                            "name": "Peregrin",
                                            "value": "Took",
                                          },
                                          Object {
                                            "name": "Gimli",
                                            "value": "song of Gloin",
                                          },
                                          Object {
                                            "name": "Legolas",
                                            "value": "Greenleaf",
                                          },
                                          Object {
                                            "name": "Boromir",
                                            "value": "son of Denethor",
                                          },
                                          Object {
                                            "name": "Aragorn",
                                            "value": "son of Arathorn",
                                          },
                                        ],
                                      }
                                    }
                                    factName="Meriadoc"
                                    factValue="Brandybuck"
                                    isSubFact={true}
                                  >
                                    <FactKebab
                                      baselineData={
                                        Object {
                                          "baseline_facts": Array [
                                            Object {
                                              "name": "Sauron",
                                              "value": "the Dark Lord",
                                            },
                                            Object {
                                              "name": "Galadriel",
                                              "value": "the Elven Queen",
                                            },
                                            Object {
                                              "name": "The Fellowship of the Ring",
                                              "values": Array [
                                                Object {
                                                  "name": "Frodo",
                                                  "value": "Baggins",
                                                },
                                                Object {
                                                  "name": "Samwise",
                                                  "value": "Gamgee",
                                                },
                                                Object {
                                                  "name": "Gandalf",
                                                  "value": "the Grey",
                                                },
                                                Object {
                                                  "name": "Meriadoc",
                                                  "value": "Brandybuck",
                                                },
                                                Object {
                                                  "name": "Peregrin",
                                                  "value": "Took",
                                                },
                                                Object {
                                                  "name": "Gimli",
                                                  "value": "song of Gloin",
                                                },
                                                Object {
                                                  "name": "Legolas",
                                                  "value": "Greenleaf",
                                                },
                                                Object {
                                                  "name": "Boromir",
                                                  "value": "son of Denethor",
                                                },
                                                Object {
                                                  "name": "Aragorn",
                                                  "value": "son of Arathorn",
                                                },
                                              ],
                                            },
                                          ],
                                          "display_name": "lotr_baseline",
                                          "id": "38gnw73l-fn36-5829-1287-2m5ghs46801c",
                                        }
                                      }
                                      deleteBaselineData={[Function]}
                                      fact={
                                        Object {
                                          "name": "The Fellowship of the Ring",
                                          "values": Array [
                                            Object {
                                              "name": "Frodo",
                                              "value": "Baggins",
                                            },
                                            Object {
                                              "name": "Samwise",
                                              "value": "Gamgee",
                                            },
                                            Object {
                                              "name": "Gandalf",
                                              "value": "the Grey",
                                            },
                                            Object {
                                              "name": "Meriadoc",
                                              "value": "Brandybuck",
                                            },
                                            Object {
                                              "name": "Peregrin",
                                              "value": "Took",
                                            },
                                            Object {
                                              "name": "Gimli",
                                              "value": "song of Gloin",
                                            },
                                            Object {
                                              "name": "Legolas",
                                              "value": "Greenleaf",
                                            },
                                            Object {
                                              "name": "Boromir",
                                              "value": "son of Denethor",
                                            },
                                            Object {
                                              "name": "Aragorn",
                                              "value": "son of Arathorn",
                                            },
                                          ],
                                        }
                                      }
                                      factName="Meriadoc"
                                      factValue="Brandybuck"
                                      fetchBaselineData={[Function]}
                                      isSubFact={true}
                                      setFactData={[Function]}
                                      toggleFactModal={[Function]}
                                    >
                                      <Dropdown
                                        className="baseline-fact-kebab"
                                        dropdownItems={
                                          Array [
                                            <DropdownItem
                                              component="button"
                                              onClick={[Function]}
                                            >
                                              Edit fact
                                            </DropdownItem>,
                                            <DropdownItem
                                              component="button"
                                              onClick={[Function]}
                                            >
                                              Delete fact
                                            </DropdownItem>,
                                          ]
                                        }
                                        isOpen={false}
                                        isPlain={true}
                                        position="right"
                                        style={
                                          Object {
                                            "float": "right",
                                          }
                                        }
                                        toggle={
                                          <KebabToggle
                                            onToggle={[Function]}
                                          />
                                        }
                                      >
                                        <DropdownWithContext
                                          autoFocus={true}
                                          className="baseline-fact-kebab"
                                          direction="down"
                                          dropdownItems={
                                            Array [
                                              <DropdownItem
                                                component="button"
                                                onClick={[Function]}
                                              >
                                                Edit fact
                                              </DropdownItem>,
                                              <DropdownItem
                                                component="button"
                                                onClick={[Function]}
                                              >
                                                Delete fact
                                              </DropdownItem>,
                                            ]
                                          }
                                          isGrouped={false}
                                          isOpen={false}
                                          isPlain={true}
                                          menuAppendTo="inline"
                                          onSelect={[Function]}
                                          position="right"
                                          style={
                                            Object {
                                              "float": "right",
                                            }
                                          }
                                          toggle={
                                            <KebabToggle
                                              onToggle={[Function]}
                                            />
                                          }
                                        >
                                          <div
                                            className="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                            data-ouia-component-id="OUIA-Generated-Dropdown-19"
                                            data-ouia-component-type="PF4/Dropdown"
                                            data-ouia-safe={true}
                                            style={
                                              Object {
                                                "float": "right",
                                              }
                                            }
                                          >
                                            <KebabToggle
                                              aria-haspopup={true}
                                              getMenuRef={[Function]}
                                              id="pf-dropdown-toggle-id-30"
                                              isOpen={false}
                                              isPlain={true}
                                              key=".0"
                                              onEnter={[Function]}
                                              onToggle={[Function]}
                                              parentRef={
                                                Object {
                                                  "current": <div
                                                    class="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                                    data-ouia-component-id="OUIA-Generated-Dropdown-19"
                                                    data-ouia-component-type="PF4/Dropdown"
                                                    data-ouia-safe="true"
                                                    style="float: right;"
                                                  >
                                                    <button
                                                      aria-expanded="false"
                                                      aria-haspopup="true"
                                                      aria-label="Actions"
                                                      class="pf-c-dropdown__toggle pf-m-plain"
                                                      id="pf-dropdown-toggle-id-30"
                                                      type="button"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        fill="currentColor"
                                                        height="1em"
                                                        role="img"
                                                        style="vertical-align: -0.125em;"
                                                        viewBox="0 0 192 512"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                        />
                                                      </svg>
                                                    </button>
                                                  </div>,
                                                }
                                              }
                                            >
                                              <Toggle
                                                aria-haspopup={true}
                                                aria-label="Actions"
                                                bubbleEvent={false}
                                                className=""
                                                getMenuRef={[Function]}
                                                id="pf-dropdown-toggle-id-30"
                                                isActive={false}
                                                isDisabled={false}
                                                isOpen={false}
                                                isPlain={true}
                                                isPrimary={false}
                                                isSplitButton={false}
                                                onEnter={[Function]}
                                                onToggle={[Function]}
                                                parentRef={
                                                  Object {
                                                    "current": <div
                                                      class="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                                      data-ouia-component-id="OUIA-Generated-Dropdown-19"
                                                      data-ouia-component-type="PF4/Dropdown"
                                                      data-ouia-safe="true"
                                                      style="float: right;"
                                                    >
                                                      <button
                                                        aria-expanded="false"
                                                        aria-haspopup="true"
                                                        aria-label="Actions"
                                                        class="pf-c-dropdown__toggle pf-m-plain"
                                                        id="pf-dropdown-toggle-id-30"
                                                        type="button"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          fill="currentColor"
                                                          height="1em"
                                                          role="img"
                                                          style="vertical-align: -0.125em;"
                                                          viewBox="0 0 192 512"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                          />
                                                        </svg>
                                                      </button>
                                                    </div>,
                                                  }
                                                }
                                              >
                                                <button
                                                  aria-expanded={false}
                                                  aria-haspopup={true}
                                                  aria-label="Actions"
                                                  className="pf-c-dropdown__toggle pf-m-plain"
                                                  disabled={false}
                                                  id="pf-dropdown-toggle-id-30"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  type="button"
                                                >
                                                  <EllipsisVIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 192 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                      />
                                                    </svg>
                                                  </EllipsisVIcon>
                                                </button>
                                              </Toggle>
                                            </KebabToggle>
                                          </div>
                                        </DropdownWithContext>
                                      </Dropdown>
                                    </FactKebab>
                                  </Connect(FactKebab)>
                                </td>
                              </tr>
                              <tr
                                key="Peregrin"
                              >
                                <td
                                  className="pf-c-table__check nested-fact"
                                >
                                  <Checkbox
                                    className=""
                                    id="fact-7"
                                    isChecked={false}
                                    isDisabled={false}
                                    isValid={true}
                                    name={7}
                                    onChange={[Function]}
                                  >
                                    <div
                                      className="pf-c-check"
                                    >
                                      <input
                                        aria-invalid={false}
                                        checked={false}
                                        className="pf-c-check__input"
                                        disabled={false}
                                        id="fact-7"
                                        name={7}
                                        onChange={[Function]}
                                        type="checkbox"
                                      />
                                    </div>
                                  </Checkbox>
                                </td>
                                <td>
                                  <p
                                    className="child-row"
                                  >
                                    Peregrin
                                  </p>
                                </td>
                                <td>
                                  Took
                                </td>
                                <td>
                                  <Connect(FactKebab)
                                    fact={
                                      Object {
                                        "name": "The Fellowship of the Ring",
                                        "values": Array [
                                          Object {
                                            "name": "Frodo",
                                            "value": "Baggins",
                                          },
                                          Object {
                                            "name": "Samwise",
                                            "value": "Gamgee",
                                          },
                                          Object {
                                            "name": "Gandalf",
                                            "value": "the Grey",
                                          },
                                          Object {
                                            "name": "Meriadoc",
                                            "value": "Brandybuck",
                                          },
                                          Object {
                                            "name": "Peregrin",
                                            "value": "Took",
                                          },
                                          Object {
                                            "name": "Gimli",
                                            "value": "song of Gloin",
                                          },
                                          Object {
                                            "name": "Legolas",
                                            "value": "Greenleaf",
                                          },
                                          Object {
                                            "name": "Boromir",
                                            "value": "son of Denethor",
                                          },
                                          Object {
                                            "name": "Aragorn",
                                            "value": "son of Arathorn",
                                          },
                                        ],
                                      }
                                    }
                                    factName="Peregrin"
                                    factValue="Took"
                                    isSubFact={true}
                                  >
                                    <FactKebab
                                      baselineData={
                                        Object {
                                          "baseline_facts": Array [
                                            Object {
                                              "name": "Sauron",
                                              "value": "the Dark Lord",
                                            },
                                            Object {
                                              "name": "Galadriel",
                                              "value": "the Elven Queen",
                                            },
                                            Object {
                                              "name": "The Fellowship of the Ring",
                                              "values": Array [
                                                Object {
                                                  "name": "Frodo",
                                                  "value": "Baggins",
                                                },
                                                Object {
                                                  "name": "Samwise",
                                                  "value": "Gamgee",
                                                },
                                                Object {
                                                  "name": "Gandalf",
                                                  "value": "the Grey",
                                                },
                                                Object {
                                                  "name": "Meriadoc",
                                                  "value": "Brandybuck",
                                                },
                                                Object {
                                                  "name": "Peregrin",
                                                  "value": "Took",
                                                },
                                                Object {
                                                  "name": "Gimli",
                                                  "value": "song of Gloin",
                                                },
                                                Object {
                                                  "name": "Legolas",
                                                  "value": "Greenleaf",
                                                },
                                                Object {
                                                  "name": "Boromir",
                                                  "value": "son of Denethor",
                                                },
                                                Object {
                                                  "name": "Aragorn",
                                                  "value": "son of Arathorn",
                                                },
                                              ],
                                            },
                                          ],
                                          "display_name": "lotr_baseline",
                                          "id": "38gnw73l-fn36-5829-1287-2m5ghs46801c",
                                        }
                                      }
                                      deleteBaselineData={[Function]}
                                      fact={
                                        Object {
                                          "name": "The Fellowship of the Ring",
                                          "values": Array [
                                            Object {
                                              "name": "Frodo",
                                              "value": "Baggins",
                                            },
                                            Object {
                                              "name": "Samwise",
                                              "value": "Gamgee",
                                            },
                                            Object {
                                              "name": "Gandalf",
                                              "value": "the Grey",
                                            },
                                            Object {
                                              "name": "Meriadoc",
                                              "value": "Brandybuck",
                                            },
                                            Object {
                                              "name": "Peregrin",
                                              "value": "Took",
                                            },
                                            Object {
                                              "name": "Gimli",
                                              "value": "song of Gloin",
                                            },
                                            Object {
                                              "name": "Legolas",
                                              "value": "Greenleaf",
                                            },
                                            Object {
                                              "name": "Boromir",
                                              "value": "son of Denethor",
                                            },
                                            Object {
                                              "name": "Aragorn",
                                              "value": "son of Arathorn",
                                            },
                                          ],
                                        }
                                      }
                                      factName="Peregrin"
                                      factValue="Took"
                                      fetchBaselineData={[Function]}
                                      isSubFact={true}
                                      setFactData={[Function]}
                                      toggleFactModal={[Function]}
                                    >
                                      <Dropdown
                                        className="baseline-fact-kebab"
                                        dropdownItems={
                                          Array [
                                            <DropdownItem
                                              component="button"
                                              onClick={[Function]}
                                            >
                                              Edit fact
                                            </DropdownItem>,
                                            <DropdownItem
                                              component="button"
                                              onClick={[Function]}
                                            >
                                              Delete fact
                                            </DropdownItem>,
                                          ]
                                        }
                                        isOpen={false}
                                        isPlain={true}
                                        position="right"
                                        style={
                                          Object {
                                            "float": "right",
                                          }
                                        }
                                        toggle={
                                          <KebabToggle
                                            onToggle={[Function]}
                                          />
                                        }
                                      >
                                        <DropdownWithContext
                                          autoFocus={true}
                                          className="baseline-fact-kebab"
                                          direction="down"
                                          dropdownItems={
                                            Array [
                                              <DropdownItem
                                                component="button"
                                                onClick={[Function]}
                                              >
                                                Edit fact
                                              </DropdownItem>,
                                              <DropdownItem
                                                component="button"
                                                onClick={[Function]}
                                              >
                                                Delete fact
                                              </DropdownItem>,
                                            ]
                                          }
                                          isGrouped={false}
                                          isOpen={false}
                                          isPlain={true}
                                          menuAppendTo="inline"
                                          onSelect={[Function]}
                                          position="right"
                                          style={
                                            Object {
                                              "float": "right",
                                            }
                                          }
                                          toggle={
                                            <KebabToggle
                                              onToggle={[Function]}
                                            />
                                          }
                                        >
                                          <div
                                            className="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                            data-ouia-component-id="OUIA-Generated-Dropdown-20"
                                            data-ouia-component-type="PF4/Dropdown"
                                            data-ouia-safe={true}
                                            style={
                                              Object {
                                                "float": "right",
                                              }
                                            }
                                          >
                                            <KebabToggle
                                              aria-haspopup={true}
                                              getMenuRef={[Function]}
                                              id="pf-dropdown-toggle-id-31"
                                              isOpen={false}
                                              isPlain={true}
                                              key=".0"
                                              onEnter={[Function]}
                                              onToggle={[Function]}
                                              parentRef={
                                                Object {
                                                  "current": <div
                                                    class="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                                    data-ouia-component-id="OUIA-Generated-Dropdown-20"
                                                    data-ouia-component-type="PF4/Dropdown"
                                                    data-ouia-safe="true"
                                                    style="float: right;"
                                                  >
                                                    <button
                                                      aria-expanded="false"
                                                      aria-haspopup="true"
                                                      aria-label="Actions"
                                                      class="pf-c-dropdown__toggle pf-m-plain"
                                                      id="pf-dropdown-toggle-id-31"
                                                      type="button"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        fill="currentColor"
                                                        height="1em"
                                                        role="img"
                                                        style="vertical-align: -0.125em;"
                                                        viewBox="0 0 192 512"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                        />
                                                      </svg>
                                                    </button>
                                                  </div>,
                                                }
                                              }
                                            >
                                              <Toggle
                                                aria-haspopup={true}
                                                aria-label="Actions"
                                                bubbleEvent={false}
                                                className=""
                                                getMenuRef={[Function]}
                                                id="pf-dropdown-toggle-id-31"
                                                isActive={false}
                                                isDisabled={false}
                                                isOpen={false}
                                                isPlain={true}
                                                isPrimary={false}
                                                isSplitButton={false}
                                                onEnter={[Function]}
                                                onToggle={[Function]}
                                                parentRef={
                                                  Object {
                                                    "current": <div
                                                      class="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                                      data-ouia-component-id="OUIA-Generated-Dropdown-20"
                                                      data-ouia-component-type="PF4/Dropdown"
                                                      data-ouia-safe="true"
                                                      style="float: right;"
                                                    >
                                                      <button
                                                        aria-expanded="false"
                                                        aria-haspopup="true"
                                                        aria-label="Actions"
                                                        class="pf-c-dropdown__toggle pf-m-plain"
                                                        id="pf-dropdown-toggle-id-31"
                                                        type="button"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          fill="currentColor"
                                                          height="1em"
                                                          role="img"
                                                          style="vertical-align: -0.125em;"
                                                          viewBox="0 0 192 512"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                          />
                                                        </svg>
                                                      </button>
                                                    </div>,
                                                  }
                                                }
                                              >
                                                <button
                                                  aria-expanded={false}
                                                  aria-haspopup={true}
                                                  aria-label="Actions"
                                                  className="pf-c-dropdown__toggle pf-m-plain"
                                                  disabled={false}
                                                  id="pf-dropdown-toggle-id-31"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  type="button"
                                                >
                                                  <EllipsisVIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 192 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                      />
                                                    </svg>
                                                  </EllipsisVIcon>
                                                </button>
                                              </Toggle>
                                            </KebabToggle>
                                          </div>
                                        </DropdownWithContext>
                                      </Dropdown>
                                    </FactKebab>
                                  </Connect(FactKebab)>
                                </td>
                              </tr>
                              <tr
                                key="Gimli"
                              >
                                <td
                                  className="pf-c-table__check nested-fact"
                                >
                                  <Checkbox
                                    className=""
                                    id="fact-8"
                                    isChecked={false}
                                    isDisabled={false}
                                    isValid={true}
                                    name={8}
                                    onChange={[Function]}
                                  >
                                    <div
                                      className="pf-c-check"
                                    >
                                      <input
                                        aria-invalid={false}
                                        checked={false}
                                        className="pf-c-check__input"
                                        disabled={false}
                                        id="fact-8"
                                        name={8}
                                        onChange={[Function]}
                                        type="checkbox"
                                      />
                                    </div>
                                  </Checkbox>
                                </td>
                                <td>
                                  <p
                                    className="child-row"
                                  >
                                    Gimli
                                  </p>
                                </td>
                                <td>
                                  son of Gloin
                                </td>
                                <td>
                                  <Connect(FactKebab)
                                    fact={
                                      Object {
                                        "name": "The Fellowship of the Ring",
                                        "values": Array [
                                          Object {
                                            "name": "Frodo",
                                            "value": "Baggins",
                                          },
                                          Object {
                                            "name": "Samwise",
                                            "value": "Gamgee",
                                          },
                                          Object {
                                            "name": "Gandalf",
                                            "value": "the Grey",
                                          },
                                          Object {
                                            "name": "Meriadoc",
                                            "value": "Brandybuck",
                                          },
                                          Object {
                                            "name": "Peregrin",
                                            "value": "Took",
                                          },
                                          Object {
                                            "name": "Gimli",
                                            "value": "song of Gloin",
                                          },
                                          Object {
                                            "name": "Legolas",
                                            "value": "Greenleaf",
                                          },
                                          Object {
                                            "name": "Boromir",
                                            "value": "son of Denethor",
                                          },
                                          Object {
                                            "name": "Aragorn",
                                            "value": "son of Arathorn",
                                          },
                                        ],
                                      }
                                    }
                                    factName="Gimli"
                                    factValue="son of Gloin"
                                    isSubFact={true}
                                  >
                                    <FactKebab
                                      baselineData={
                                        Object {
                                          "baseline_facts": Array [
                                            Object {
                                              "name": "Sauron",
                                              "value": "the Dark Lord",
                                            },
                                            Object {
                                              "name": "Galadriel",
                                              "value": "the Elven Queen",
                                            },
                                            Object {
                                              "name": "The Fellowship of the Ring",
                                              "values": Array [
                                                Object {
                                                  "name": "Frodo",
                                                  "value": "Baggins",
                                                },
                                                Object {
                                                  "name": "Samwise",
                                                  "value": "Gamgee",
                                                },
                                                Object {
                                                  "name": "Gandalf",
                                                  "value": "the Grey",
                                                },
                                                Object {
                                                  "name": "Meriadoc",
                                                  "value": "Brandybuck",
                                                },
                                                Object {
                                                  "name": "Peregrin",
                                                  "value": "Took",
                                                },
                                                Object {
                                                  "name": "Gimli",
                                                  "value": "song of Gloin",
                                                },
                                                Object {
                                                  "name": "Legolas",
                                                  "value": "Greenleaf",
                                                },
                                                Object {
                                                  "name": "Boromir",
                                                  "value": "son of Denethor",
                                                },
                                                Object {
                                                  "name": "Aragorn",
                                                  "value": "son of Arathorn",
                                                },
                                              ],
                                            },
                                          ],
                                          "display_name": "lotr_baseline",
                                          "id": "38gnw73l-fn36-5829-1287-2m5ghs46801c",
                                        }
                                      }
                                      deleteBaselineData={[Function]}
                                      fact={
                                        Object {
                                          "name": "The Fellowship of the Ring",
                                          "values": Array [
                                            Object {
                                              "name": "Frodo",
                                              "value": "Baggins",
                                            },
                                            Object {
                                              "name": "Samwise",
                                              "value": "Gamgee",
                                            },
                                            Object {
                                              "name": "Gandalf",
                                              "value": "the Grey",
                                            },
                                            Object {
                                              "name": "Meriadoc",
                                              "value": "Brandybuck",
                                            },
                                            Object {
                                              "name": "Peregrin",
                                              "value": "Took",
                                            },
                                            Object {
                                              "name": "Gimli",
                                              "value": "song of Gloin",
                                            },
                                            Object {
                                              "name": "Legolas",
                                              "value": "Greenleaf",
                                            },
                                            Object {
                                              "name": "Boromir",
                                              "value": "son of Denethor",
                                            },
                                            Object {
                                              "name": "Aragorn",
                                              "value": "son of Arathorn",
                                            },
                                          ],
                                        }
                                      }
                                      factName="Gimli"
                                      factValue="son of Gloin"
                                      fetchBaselineData={[Function]}
                                      isSubFact={true}
                                      setFactData={[Function]}
                                      toggleFactModal={[Function]}
                                    >
                                      <Dropdown
                                        className="baseline-fact-kebab"
                                        dropdownItems={
                                          Array [
                                            <DropdownItem
                                              component="button"
                                              onClick={[Function]}
                                            >
                                              Edit fact
                                            </DropdownItem>,
                                            <DropdownItem
                                              component="button"
                                              onClick={[Function]}
                                            >
                                              Delete fact
                                            </DropdownItem>,
                                          ]
                                        }
                                        isOpen={false}
                                        isPlain={true}
                                        position="right"
                                        style={
                                          Object {
                                            "float": "right",
                                          }
                                        }
                                        toggle={
                                          <KebabToggle
                                            onToggle={[Function]}
                                          />
                                        }
                                      >
                                        <DropdownWithContext
                                          autoFocus={true}
                                          className="baseline-fact-kebab"
                                          direction="down"
                                          dropdownItems={
                                            Array [
                                              <DropdownItem
                                                component="button"
                                                onClick={[Function]}
                                              >
                                                Edit fact
                                              </DropdownItem>,
                                              <DropdownItem
                                                component="button"
                                                onClick={[Function]}
                                              >
                                                Delete fact
                                              </DropdownItem>,
                                            ]
                                          }
                                          isGrouped={false}
                                          isOpen={false}
                                          isPlain={true}
                                          menuAppendTo="inline"
                                          onSelect={[Function]}
                                          position="right"
                                          style={
                                            Object {
                                              "float": "right",
                                            }
                                          }
                                          toggle={
                                            <KebabToggle
                                              onToggle={[Function]}
                                            />
                                          }
                                        >
                                          <div
                                            className="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                            data-ouia-component-id="OUIA-Generated-Dropdown-21"
                                            data-ouia-component-type="PF4/Dropdown"
                                            data-ouia-safe={true}
                                            style={
                                              Object {
                                                "float": "right",
                                              }
                                            }
                                          >
                                            <KebabToggle
                                              aria-haspopup={true}
                                              getMenuRef={[Function]}
                                              id="pf-dropdown-toggle-id-32"
                                              isOpen={false}
                                              isPlain={true}
                                              key=".0"
                                              onEnter={[Function]}
                                              onToggle={[Function]}
                                              parentRef={
                                                Object {
                                                  "current": <div
                                                    class="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                                    data-ouia-component-id="OUIA-Generated-Dropdown-21"
                                                    data-ouia-component-type="PF4/Dropdown"
                                                    data-ouia-safe="true"
                                                    style="float: right;"
                                                  >
                                                    <button
                                                      aria-expanded="false"
                                                      aria-haspopup="true"
                                                      aria-label="Actions"
                                                      class="pf-c-dropdown__toggle pf-m-plain"
                                                      id="pf-dropdown-toggle-id-32"
                                                      type="button"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        fill="currentColor"
                                                        height="1em"
                                                        role="img"
                                                        style="vertical-align: -0.125em;"
                                                        viewBox="0 0 192 512"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                        />
                                                      </svg>
                                                    </button>
                                                  </div>,
                                                }
                                              }
                                            >
                                              <Toggle
                                                aria-haspopup={true}
                                                aria-label="Actions"
                                                bubbleEvent={false}
                                                className=""
                                                getMenuRef={[Function]}
                                                id="pf-dropdown-toggle-id-32"
                                                isActive={false}
                                                isDisabled={false}
                                                isOpen={false}
                                                isPlain={true}
                                                isPrimary={false}
                                                isSplitButton={false}
                                                onEnter={[Function]}
                                                onToggle={[Function]}
                                                parentRef={
                                                  Object {
                                                    "current": <div
                                                      class="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                                      data-ouia-component-id="OUIA-Generated-Dropdown-21"
                                                      data-ouia-component-type="PF4/Dropdown"
                                                      data-ouia-safe="true"
                                                      style="float: right;"
                                                    >
                                                      <button
                                                        aria-expanded="false"
                                                        aria-haspopup="true"
                                                        aria-label="Actions"
                                                        class="pf-c-dropdown__toggle pf-m-plain"
                                                        id="pf-dropdown-toggle-id-32"
                                                        type="button"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          fill="currentColor"
                                                          height="1em"
                                                          role="img"
                                                          style="vertical-align: -0.125em;"
                                                          viewBox="0 0 192 512"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                          />
                                                        </svg>
                                                      </button>
                                                    </div>,
                                                  }
                                                }
                                              >
                                                <button
                                                  aria-expanded={false}
                                                  aria-haspopup={true}
                                                  aria-label="Actions"
                                                  className="pf-c-dropdown__toggle pf-m-plain"
                                                  disabled={false}
                                                  id="pf-dropdown-toggle-id-32"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  type="button"
                                                >
                                                  <EllipsisVIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 192 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                      />
                                                    </svg>
                                                  </EllipsisVIcon>
                                                </button>
                                              </Toggle>
                                            </KebabToggle>
                                          </div>
                                        </DropdownWithContext>
                                      </Dropdown>
                                    </FactKebab>
                                  </Connect(FactKebab)>
                                </td>
                              </tr>
                              <tr
                                key="Legolas"
                              >
                                <td
                                  className="pf-c-table__check nested-fact"
                                >
                                  <Checkbox
                                    className=""
                                    id="fact-9"
                                    isChecked={false}
                                    isDisabled={false}
                                    isValid={true}
                                    name={9}
                                    onChange={[Function]}
                                  >
                                    <div
                                      className="pf-c-check"
                                    >
                                      <input
                                        aria-invalid={false}
                                        checked={false}
                                        className="pf-c-check__input"
                                        disabled={false}
                                        id="fact-9"
                                        name={9}
                                        onChange={[Function]}
                                        type="checkbox"
                                      />
                                    </div>
                                  </Checkbox>
                                </td>
                                <td>
                                  <p
                                    className="child-row"
                                  >
                                    Legolas
                                  </p>
                                </td>
                                <td>
                                  Greenleaf
                                </td>
                                <td>
                                  <Connect(FactKebab)
                                    fact={
                                      Object {
                                        "name": "The Fellowship of the Ring",
                                        "values": Array [
                                          Object {
                                            "name": "Frodo",
                                            "value": "Baggins",
                                          },
                                          Object {
                                            "name": "Samwise",
                                            "value": "Gamgee",
                                          },
                                          Object {
                                            "name": "Gandalf",
                                            "value": "the Grey",
                                          },
                                          Object {
                                            "name": "Meriadoc",
                                            "value": "Brandybuck",
                                          },
                                          Object {
                                            "name": "Peregrin",
                                            "value": "Took",
                                          },
                                          Object {
                                            "name": "Gimli",
                                            "value": "song of Gloin",
                                          },
                                          Object {
                                            "name": "Legolas",
                                            "value": "Greenleaf",
                                          },
                                          Object {
                                            "name": "Boromir",
                                            "value": "son of Denethor",
                                          },
                                          Object {
                                            "name": "Aragorn",
                                            "value": "son of Arathorn",
                                          },
                                        ],
                                      }
                                    }
                                    factName="Legolas"
                                    factValue="Greenleaf"
                                    isSubFact={true}
                                  >
                                    <FactKebab
                                      baselineData={
                                        Object {
                                          "baseline_facts": Array [
                                            Object {
                                              "name": "Sauron",
                                              "value": "the Dark Lord",
                                            },
                                            Object {
                                              "name": "Galadriel",
                                              "value": "the Elven Queen",
                                            },
                                            Object {
                                              "name": "The Fellowship of the Ring",
                                              "values": Array [
                                                Object {
                                                  "name": "Frodo",
                                                  "value": "Baggins",
                                                },
                                                Object {
                                                  "name": "Samwise",
                                                  "value": "Gamgee",
                                                },
                                                Object {
                                                  "name": "Gandalf",
                                                  "value": "the Grey",
                                                },
                                                Object {
                                                  "name": "Meriadoc",
                                                  "value": "Brandybuck",
                                                },
                                                Object {
                                                  "name": "Peregrin",
                                                  "value": "Took",
                                                },
                                                Object {
                                                  "name": "Gimli",
                                                  "value": "song of Gloin",
                                                },
                                                Object {
                                                  "name": "Legolas",
                                                  "value": "Greenleaf",
                                                },
                                                Object {
                                                  "name": "Boromir",
                                                  "value": "son of Denethor",
                                                },
                                                Object {
                                                  "name": "Aragorn",
                                                  "value": "son of Arathorn",
                                                },
                                              ],
                                            },
                                          ],
                                          "display_name": "lotr_baseline",
                                          "id": "38gnw73l-fn36-5829-1287-2m5ghs46801c",
                                        }
                                      }
                                      deleteBaselineData={[Function]}
                                      fact={
                                        Object {
                                          "name": "The Fellowship of the Ring",
                                          "values": Array [
                                            Object {
                                              "name": "Frodo",
                                              "value": "Baggins",
                                            },
                                            Object {
                                              "name": "Samwise",
                                              "value": "Gamgee",
                                            },
                                            Object {
                                              "name": "Gandalf",
                                              "value": "the Grey",
                                            },
                                            Object {
                                              "name": "Meriadoc",
                                              "value": "Brandybuck",
                                            },
                                            Object {
                                              "name": "Peregrin",
                                              "value": "Took",
                                            },
                                            Object {
                                              "name": "Gimli",
                                              "value": "song of Gloin",
                                            },
                                            Object {
                                              "name": "Legolas",
                                              "value": "Greenleaf",
                                            },
                                            Object {
                                              "name": "Boromir",
                                              "value": "son of Denethor",
                                            },
                                            Object {
                                              "name": "Aragorn",
                                              "value": "son of Arathorn",
                                            },
                                          ],
                                        }
                                      }
                                      factName="Legolas"
                                      factValue="Greenleaf"
                                      fetchBaselineData={[Function]}
                                      isSubFact={true}
                                      setFactData={[Function]}
                                      toggleFactModal={[Function]}
                                    >
                                      <Dropdown
                                        className="baseline-fact-kebab"
                                        dropdownItems={
                                          Array [
                                            <DropdownItem
                                              component="button"
                                              onClick={[Function]}
                                            >
                                              Edit fact
                                            </DropdownItem>,
                                            <DropdownItem
                                              component="button"
                                              onClick={[Function]}
                                            >
                                              Delete fact
                                            </DropdownItem>,
                                          ]
                                        }
                                        isOpen={false}
                                        isPlain={true}
                                        position="right"
                                        style={
                                          Object {
                                            "float": "right",
                                          }
                                        }
                                        toggle={
                                          <KebabToggle
                                            onToggle={[Function]}
                                          />
                                        }
                                      >
                                        <DropdownWithContext
                                          autoFocus={true}
                                          className="baseline-fact-kebab"
                                          direction="down"
                                          dropdownItems={
                                            Array [
                                              <DropdownItem
                                                component="button"
                                                onClick={[Function]}
                                              >
                                                Edit fact
                                              </DropdownItem>,
                                              <DropdownItem
                                                component="button"
                                                onClick={[Function]}
                                              >
                                                Delete fact
                                              </DropdownItem>,
                                            ]
                                          }
                                          isGrouped={false}
                                          isOpen={false}
                                          isPlain={true}
                                          menuAppendTo="inline"
                                          onSelect={[Function]}
                                          position="right"
                                          style={
                                            Object {
                                              "float": "right",
                                            }
                                          }
                                          toggle={
                                            <KebabToggle
                                              onToggle={[Function]}
                                            />
                                          }
                                        >
                                          <div
                                            className="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                            data-ouia-component-id="OUIA-Generated-Dropdown-22"
                                            data-ouia-component-type="PF4/Dropdown"
                                            data-ouia-safe={true}
                                            style={
                                              Object {
                                                "float": "right",
                                              }
                                            }
                                          >
                                            <KebabToggle
                                              aria-haspopup={true}
                                              getMenuRef={[Function]}
                                              id="pf-dropdown-toggle-id-33"
                                              isOpen={false}
                                              isPlain={true}
                                              key=".0"
                                              onEnter={[Function]}
                                              onToggle={[Function]}
                                              parentRef={
                                                Object {
                                                  "current": <div
                                                    class="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                                    data-ouia-component-id="OUIA-Generated-Dropdown-22"
                                                    data-ouia-component-type="PF4/Dropdown"
                                                    data-ouia-safe="true"
                                                    style="float: right;"
                                                  >
                                                    <button
                                                      aria-expanded="false"
                                                      aria-haspopup="true"
                                                      aria-label="Actions"
                                                      class="pf-c-dropdown__toggle pf-m-plain"
                                                      id="pf-dropdown-toggle-id-33"
                                                      type="button"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        fill="currentColor"
                                                        height="1em"
                                                        role="img"
                                                        style="vertical-align: -0.125em;"
                                                        viewBox="0 0 192 512"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                        />
                                                      </svg>
                                                    </button>
                                                  </div>,
                                                }
                                              }
                                            >
                                              <Toggle
                                                aria-haspopup={true}
                                                aria-label="Actions"
                                                bubbleEvent={false}
                                                className=""
                                                getMenuRef={[Function]}
                                                id="pf-dropdown-toggle-id-33"
                                                isActive={false}
                                                isDisabled={false}
                                                isOpen={false}
                                                isPlain={true}
                                                isPrimary={false}
                                                isSplitButton={false}
                                                onEnter={[Function]}
                                                onToggle={[Function]}
                                                parentRef={
                                                  Object {
                                                    "current": <div
                                                      class="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                                      data-ouia-component-id="OUIA-Generated-Dropdown-22"
                                                      data-ouia-component-type="PF4/Dropdown"
                                                      data-ouia-safe="true"
                                                      style="float: right;"
                                                    >
                                                      <button
                                                        aria-expanded="false"
                                                        aria-haspopup="true"
                                                        aria-label="Actions"
                                                        class="pf-c-dropdown__toggle pf-m-plain"
                                                        id="pf-dropdown-toggle-id-33"
                                                        type="button"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          fill="currentColor"
                                                          height="1em"
                                                          role="img"
                                                          style="vertical-align: -0.125em;"
                                                          viewBox="0 0 192 512"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                          />
                                                        </svg>
                                                      </button>
                                                    </div>,
                                                  }
                                                }
                                              >
                                                <button
                                                  aria-expanded={false}
                                                  aria-haspopup={true}
                                                  aria-label="Actions"
                                                  className="pf-c-dropdown__toggle pf-m-plain"
                                                  disabled={false}
                                                  id="pf-dropdown-toggle-id-33"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  type="button"
                                                >
                                                  <EllipsisVIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 192 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                      />
                                                    </svg>
                                                  </EllipsisVIcon>
                                                </button>
                                              </Toggle>
                                            </KebabToggle>
                                          </div>
                                        </DropdownWithContext>
                                      </Dropdown>
                                    </FactKebab>
                                  </Connect(FactKebab)>
                                </td>
                              </tr>
                              <tr
                                key="Boromir"
                              >
                                <td
                                  className="pf-c-table__check nested-fact"
                                >
                                  <Checkbox
                                    className=""
                                    id="fact-10"
                                    isChecked={false}
                                    isDisabled={false}
                                    isValid={true}
                                    name={10}
                                    onChange={[Function]}
                                  >
                                    <div
                                      className="pf-c-check"
                                    >
                                      <input
                                        aria-invalid={false}
                                        checked={false}
                                        className="pf-c-check__input"
                                        disabled={false}
                                        id="fact-10"
                                        name={10}
                                        onChange={[Function]}
                                        type="checkbox"
                                      />
                                    </div>
                                  </Checkbox>
                                </td>
                                <td>
                                  <p
                                    className="child-row"
                                  >
                                    Boromir
                                  </p>
                                </td>
                                <td>
                                  son of Denethor
                                </td>
                                <td>
                                  <Connect(FactKebab)
                                    fact={
                                      Object {
                                        "name": "The Fellowship of the Ring",
                                        "values": Array [
                                          Object {
                                            "name": "Frodo",
                                            "value": "Baggins",
                                          },
                                          Object {
                                            "name": "Samwise",
                                            "value": "Gamgee",
                                          },
                                          Object {
                                            "name": "Gandalf",
                                            "value": "the Grey",
                                          },
                                          Object {
                                            "name": "Meriadoc",
                                            "value": "Brandybuck",
                                          },
                                          Object {
                                            "name": "Peregrin",
                                            "value": "Took",
                                          },
                                          Object {
                                            "name": "Gimli",
                                            "value": "song of Gloin",
                                          },
                                          Object {
                                            "name": "Legolas",
                                            "value": "Greenleaf",
                                          },
                                          Object {
                                            "name": "Boromir",
                                            "value": "son of Denethor",
                                          },
                                          Object {
                                            "name": "Aragorn",
                                            "value": "son of Arathorn",
                                          },
                                        ],
                                      }
                                    }
                                    factName="Boromir"
                                    factValue="son of Denethor"
                                    isSubFact={true}
                                  >
                                    <FactKebab
                                      baselineData={
                                        Object {
                                          "baseline_facts": Array [
                                            Object {
                                              "name": "Sauron",
                                              "value": "the Dark Lord",
                                            },
                                            Object {
                                              "name": "Galadriel",
                                              "value": "the Elven Queen",
                                            },
                                            Object {
                                              "name": "The Fellowship of the Ring",
                                              "values": Array [
                                                Object {
                                                  "name": "Frodo",
                                                  "value": "Baggins",
                                                },
                                                Object {
                                                  "name": "Samwise",
                                                  "value": "Gamgee",
                                                },
                                                Object {
                                                  "name": "Gandalf",
                                                  "value": "the Grey",
                                                },
                                                Object {
                                                  "name": "Meriadoc",
                                                  "value": "Brandybuck",
                                                },
                                                Object {
                                                  "name": "Peregrin",
                                                  "value": "Took",
                                                },
                                                Object {
                                                  "name": "Gimli",
                                                  "value": "song of Gloin",
                                                },
                                                Object {
                                                  "name": "Legolas",
                                                  "value": "Greenleaf",
                                                },
                                                Object {
                                                  "name": "Boromir",
                                                  "value": "son of Denethor",
                                                },
                                                Object {
                                                  "name": "Aragorn",
                                                  "value": "son of Arathorn",
                                                },
                                              ],
                                            },
                                          ],
                                          "display_name": "lotr_baseline",
                                          "id": "38gnw73l-fn36-5829-1287-2m5ghs46801c",
                                        }
                                      }
                                      deleteBaselineData={[Function]}
                                      fact={
                                        Object {
                                          "name": "The Fellowship of the Ring",
                                          "values": Array [
                                            Object {
                                              "name": "Frodo",
                                              "value": "Baggins",
                                            },
                                            Object {
                                              "name": "Samwise",
                                              "value": "Gamgee",
                                            },
                                            Object {
                                              "name": "Gandalf",
                                              "value": "the Grey",
                                            },
                                            Object {
                                              "name": "Meriadoc",
                                              "value": "Brandybuck",
                                            },
                                            Object {
                                              "name": "Peregrin",
                                              "value": "Took",
                                            },
                                            Object {
                                              "name": "Gimli",
                                              "value": "song of Gloin",
                                            },
                                            Object {
                                              "name": "Legolas",
                                              "value": "Greenleaf",
                                            },
                                            Object {
                                              "name": "Boromir",
                                              "value": "son of Denethor",
                                            },
                                            Object {
                                              "name": "Aragorn",
                                              "value": "son of Arathorn",
                                            },
                                          ],
                                        }
                                      }
                                      factName="Boromir"
                                      factValue="son of Denethor"
                                      fetchBaselineData={[Function]}
                                      isSubFact={true}
                                      setFactData={[Function]}
                                      toggleFactModal={[Function]}
                                    >
                                      <Dropdown
                                        className="baseline-fact-kebab"
                                        dropdownItems={
                                          Array [
                                            <DropdownItem
                                              component="button"
                                              onClick={[Function]}
                                            >
                                              Edit fact
                                            </DropdownItem>,
                                            <DropdownItem
                                              component="button"
                                              onClick={[Function]}
                                            >
                                              Delete fact
                                            </DropdownItem>,
                                          ]
                                        }
                                        isOpen={false}
                                        isPlain={true}
                                        position="right"
                                        style={
                                          Object {
                                            "float": "right",
                                          }
                                        }
                                        toggle={
                                          <KebabToggle
                                            onToggle={[Function]}
                                          />
                                        }
                                      >
                                        <DropdownWithContext
                                          autoFocus={true}
                                          className="baseline-fact-kebab"
                                          direction="down"
                                          dropdownItems={
                                            Array [
                                              <DropdownItem
                                                component="button"
                                                onClick={[Function]}
                                              >
                                                Edit fact
                                              </DropdownItem>,
                                              <DropdownItem
                                                component="button"
                                                onClick={[Function]}
                                              >
                                                Delete fact
                                              </DropdownItem>,
                                            ]
                                          }
                                          isGrouped={false}
                                          isOpen={false}
                                          isPlain={true}
                                          menuAppendTo="inline"
                                          onSelect={[Function]}
                                          position="right"
                                          style={
                                            Object {
                                              "float": "right",
                                            }
                                          }
                                          toggle={
                                            <KebabToggle
                                              onToggle={[Function]}
                                            />
                                          }
                                        >
                                          <div
                                            className="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                            data-ouia-component-id="OUIA-Generated-Dropdown-23"
                                            data-ouia-component-type="PF4/Dropdown"
                                            data-ouia-safe={true}
                                            style={
                                              Object {
                                                "float": "right",
                                              }
                                            }
                                          >
                                            <KebabToggle
                                              aria-haspopup={true}
                                              getMenuRef={[Function]}
                                              id="pf-dropdown-toggle-id-34"
                                              isOpen={false}
                                              isPlain={true}
                                              key=".0"
                                              onEnter={[Function]}
                                              onToggle={[Function]}
                                              parentRef={
                                                Object {
                                                  "current": <div
                                                    class="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                                    data-ouia-component-id="OUIA-Generated-Dropdown-23"
                                                    data-ouia-component-type="PF4/Dropdown"
                                                    data-ouia-safe="true"
                                                    style="float: right;"
                                                  >
                                                    <button
                                                      aria-expanded="false"
                                                      aria-haspopup="true"
                                                      aria-label="Actions"
                                                      class="pf-c-dropdown__toggle pf-m-plain"
                                                      id="pf-dropdown-toggle-id-34"
                                                      type="button"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        fill="currentColor"
                                                        height="1em"
                                                        role="img"
                                                        style="vertical-align: -0.125em;"
                                                        viewBox="0 0 192 512"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                        />
                                                      </svg>
                                                    </button>
                                                  </div>,
                                                }
                                              }
                                            >
                                              <Toggle
                                                aria-haspopup={true}
                                                aria-label="Actions"
                                                bubbleEvent={false}
                                                className=""
                                                getMenuRef={[Function]}
                                                id="pf-dropdown-toggle-id-34"
                                                isActive={false}
                                                isDisabled={false}
                                                isOpen={false}
                                                isPlain={true}
                                                isPrimary={false}
                                                isSplitButton={false}
                                                onEnter={[Function]}
                                                onToggle={[Function]}
                                                parentRef={
                                                  Object {
                                                    "current": <div
                                                      class="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                                      data-ouia-component-id="OUIA-Generated-Dropdown-23"
                                                      data-ouia-component-type="PF4/Dropdown"
                                                      data-ouia-safe="true"
                                                      style="float: right;"
                                                    >
                                                      <button
                                                        aria-expanded="false"
                                                        aria-haspopup="true"
                                                        aria-label="Actions"
                                                        class="pf-c-dropdown__toggle pf-m-plain"
                                                        id="pf-dropdown-toggle-id-34"
                                                        type="button"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          fill="currentColor"
                                                          height="1em"
                                                          role="img"
                                                          style="vertical-align: -0.125em;"
                                                          viewBox="0 0 192 512"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                          />
                                                        </svg>
                                                      </button>
                                                    </div>,
                                                  }
                                                }
                                              >
                                                <button
                                                  aria-expanded={false}
                                                  aria-haspopup={true}
                                                  aria-label="Actions"
                                                  className="pf-c-dropdown__toggle pf-m-plain"
                                                  disabled={false}
                                                  id="pf-dropdown-toggle-id-34"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  type="button"
                                                >
                                                  <EllipsisVIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 192 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                      />
                                                    </svg>
                                                  </EllipsisVIcon>
                                                </button>
                                              </Toggle>
                                            </KebabToggle>
                                          </div>
                                        </DropdownWithContext>
                                      </Dropdown>
                                    </FactKebab>
                                  </Connect(FactKebab)>
                                </td>
                              </tr>
                              <tr
                                key="Aragorn"
                              >
                                <td
                                  className="pf-c-table__check nested-fact"
                                >
                                  <Checkbox
                                    className=""
                                    id="fact-11"
                                    isChecked={false}
                                    isDisabled={false}
                                    isValid={true}
                                    name={11}
                                    onChange={[Function]}
                                  >
                                    <div
                                      className="pf-c-check"
                                    >
                                      <input
                                        aria-invalid={false}
                                        checked={false}
                                        className="pf-c-check__input"
                                        disabled={false}
                                        id="fact-11"
                                        name={11}
                                        onChange={[Function]}
                                        type="checkbox"
                                      />
                                    </div>
                                  </Checkbox>
                                </td>
                                <td>
                                  <p
                                    className="child-row"
                                  >
                                    Aragorn
                                  </p>
                                </td>
                                <td>
                                  son of Arathorn
                                </td>
                                <td>
                                  <Connect(FactKebab)
                                    fact={
                                      Object {
                                        "name": "The Fellowship of the Ring",
                                        "values": Array [
                                          Object {
                                            "name": "Frodo",
                                            "value": "Baggins",
                                          },
                                          Object {
                                            "name": "Samwise",
                                            "value": "Gamgee",
                                          },
                                          Object {
                                            "name": "Gandalf",
                                            "value": "the Grey",
                                          },
                                          Object {
                                            "name": "Meriadoc",
                                            "value": "Brandybuck",
                                          },
                                          Object {
                                            "name": "Peregrin",
                                            "value": "Took",
                                          },
                                          Object {
                                            "name": "Gimli",
                                            "value": "song of Gloin",
                                          },
                                          Object {
                                            "name": "Legolas",
                                            "value": "Greenleaf",
                                          },
                                          Object {
                                            "name": "Boromir",
                                            "value": "son of Denethor",
                                          },
                                          Object {
                                            "name": "Aragorn",
                                            "value": "son of Arathorn",
                                          },
                                        ],
                                      }
                                    }
                                    factName="Aragorn"
                                    factValue="son of Arathorn"
                                    isSubFact={true}
                                  >
                                    <FactKebab
                                      baselineData={
                                        Object {
                                          "baseline_facts": Array [
                                            Object {
                                              "name": "Sauron",
                                              "value": "the Dark Lord",
                                            },
                                            Object {
                                              "name": "Galadriel",
                                              "value": "the Elven Queen",
                                            },
                                            Object {
                                              "name": "The Fellowship of the Ring",
                                              "values": Array [
                                                Object {
                                                  "name": "Frodo",
                                                  "value": "Baggins",
                                                },
                                                Object {
                                                  "name": "Samwise",
                                                  "value": "Gamgee",
                                                },
                                                Object {
                                                  "name": "Gandalf",
                                                  "value": "the Grey",
                                                },
                                                Object {
                                                  "name": "Meriadoc",
                                                  "value": "Brandybuck",
                                                },
                                                Object {
                                                  "name": "Peregrin",
                                                  "value": "Took",
                                                },
                                                Object {
                                                  "name": "Gimli",
                                                  "value": "song of Gloin",
                                                },
                                                Object {
                                                  "name": "Legolas",
                                                  "value": "Greenleaf",
                                                },
                                                Object {
                                                  "name": "Boromir",
                                                  "value": "son of Denethor",
                                                },
                                                Object {
                                                  "name": "Aragorn",
                                                  "value": "son of Arathorn",
                                                },
                                              ],
                                            },
                                          ],
                                          "display_name": "lotr_baseline",
                                          "id": "38gnw73l-fn36-5829-1287-2m5ghs46801c",
                                        }
                                      }
                                      deleteBaselineData={[Function]}
                                      fact={
                                        Object {
                                          "name": "The Fellowship of the Ring",
                                          "values": Array [
                                            Object {
                                              "name": "Frodo",
                                              "value": "Baggins",
                                            },
                                            Object {
                                              "name": "Samwise",
                                              "value": "Gamgee",
                                            },
                                            Object {
                                              "name": "Gandalf",
                                              "value": "the Grey",
                                            },
                                            Object {
                                              "name": "Meriadoc",
                                              "value": "Brandybuck",
                                            },
                                            Object {
                                              "name": "Peregrin",
                                              "value": "Took",
                                            },
                                            Object {
                                              "name": "Gimli",
                                              "value": "song of Gloin",
                                            },
                                            Object {
                                              "name": "Legolas",
                                              "value": "Greenleaf",
                                            },
                                            Object {
                                              "name": "Boromir",
                                              "value": "son of Denethor",
                                            },
                                            Object {
                                              "name": "Aragorn",
                                              "value": "son of Arathorn",
                                            },
                                          ],
                                        }
                                      }
                                      factName="Aragorn"
                                      factValue="son of Arathorn"
                                      fetchBaselineData={[Function]}
                                      isSubFact={true}
                                      setFactData={[Function]}
                                      toggleFactModal={[Function]}
                                    >
                                      <Dropdown
                                        className="baseline-fact-kebab"
                                        dropdownItems={
                                          Array [
                                            <DropdownItem
                                              component="button"
                                              onClick={[Function]}
                                            >
                                              Edit fact
                                            </DropdownItem>,
                                            <DropdownItem
                                              component="button"
                                              onClick={[Function]}
                                            >
                                              Delete fact
                                            </DropdownItem>,
                                          ]
                                        }
                                        isOpen={false}
                                        isPlain={true}
                                        position="right"
                                        style={
                                          Object {
                                            "float": "right",
                                          }
                                        }
                                        toggle={
                                          <KebabToggle
                                            onToggle={[Function]}
                                          />
                                        }
                                      >
                                        <DropdownWithContext
                                          autoFocus={true}
                                          className="baseline-fact-kebab"
                                          direction="down"
                                          dropdownItems={
                                            Array [
                                              <DropdownItem
                                                component="button"
                                                onClick={[Function]}
                                              >
                                                Edit fact
                                              </DropdownItem>,
                                              <DropdownItem
                                                component="button"
                                                onClick={[Function]}
                                              >
                                                Delete fact
                                              </DropdownItem>,
                                            ]
                                          }
                                          isGrouped={false}
                                          isOpen={false}
                                          isPlain={true}
                                          menuAppendTo="inline"
                                          onSelect={[Function]}
                                          position="right"
                                          style={
                                            Object {
                                              "float": "right",
                                            }
                                          }
                                          toggle={
                                            <KebabToggle
                                              onToggle={[Function]}
                                            />
                                          }
                                        >
                                          <div
                                            className="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                            data-ouia-component-id="OUIA-Generated-Dropdown-24"
                                            data-ouia-component-type="PF4/Dropdown"
                                            data-ouia-safe={true}
                                            style={
                                              Object {
                                                "float": "right",
                                              }
                                            }
                                          >
                                            <KebabToggle
                                              aria-haspopup={true}
                                              getMenuRef={[Function]}
                                              id="pf-dropdown-toggle-id-35"
                                              isOpen={false}
                                              isPlain={true}
                                              key=".0"
                                              onEnter={[Function]}
                                              onToggle={[Function]}
                                              parentRef={
                                                Object {
                                                  "current": <div
                                                    class="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                                    data-ouia-component-id="OUIA-Generated-Dropdown-24"
                                                    data-ouia-component-type="PF4/Dropdown"
                                                    data-ouia-safe="true"
                                                    style="float: right;"
                                                  >
                                                    <button
                                                      aria-expanded="false"
                                                      aria-haspopup="true"
                                                      aria-label="Actions"
                                                      class="pf-c-dropdown__toggle pf-m-plain"
                                                      id="pf-dropdown-toggle-id-35"
                                                      type="button"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        fill="currentColor"
                                                        height="1em"
                                                        role="img"
                                                        style="vertical-align: -0.125em;"
                                                        viewBox="0 0 192 512"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                        />
                                                      </svg>
                                                    </button>
                                                  </div>,
                                                }
                                              }
                                            >
                                              <Toggle
                                                aria-haspopup={true}
                                                aria-label="Actions"
                                                bubbleEvent={false}
                                                className=""
                                                getMenuRef={[Function]}
                                                id="pf-dropdown-toggle-id-35"
                                                isActive={false}
                                                isDisabled={false}
                                                isOpen={false}
                                                isPlain={true}
                                                isPrimary={false}
                                                isSplitButton={false}
                                                onEnter={[Function]}
                                                onToggle={[Function]}
                                                parentRef={
                                                  Object {
                                                    "current": <div
                                                      class="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                                      data-ouia-component-id="OUIA-Generated-Dropdown-24"
                                                      data-ouia-component-type="PF4/Dropdown"
                                                      data-ouia-safe="true"
                                                      style="float: right;"
                                                    >
                                                      <button
                                                        aria-expanded="false"
                                                        aria-haspopup="true"
                                                        aria-label="Actions"
                                                        class="pf-c-dropdown__toggle pf-m-plain"
                                                        id="pf-dropdown-toggle-id-35"
                                                        type="button"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          fill="currentColor"
                                                          height="1em"
                                                          role="img"
                                                          style="vertical-align: -0.125em;"
                                                          viewBox="0 0 192 512"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                          />
                                                        </svg>
                                                      </button>
                                                    </div>,
                                                  }
                                                }
                                              >
                                                <button
                                                  aria-expanded={false}
                                                  aria-haspopup={true}
                                                  aria-label="Actions"
                                                  className="pf-c-dropdown__toggle pf-m-plain"
                                                  disabled={false}
                                                  id="pf-dropdown-toggle-id-35"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  type="button"
                                                >
                                                  <EllipsisVIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 192 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                      />
                                                    </svg>
                                                  </EllipsisVIcon>
                                                </button>
                                              </Toggle>
                                            </KebabToggle>
                                          </div>
                                        </DropdownWithContext>
                                      </Dropdown>
                                    </FactKebab>
                                  </Connect(FactKebab)>
                                </td>
                              </tr>
                            </tbody>
                          </table>
                        </div>
                      </CardBody>
                    </article>
                  </Card>
                </section>
              </Main>
            </Connect(Main)>
          </EditBaseline>
        </Connect(EditBaseline)>
      </withRouter(Connect(EditBaseline))>
    </Provider>
  </Router>
</MemoryRouter>
`;

exports[`ConnectedEditBaseline should render loading rows 1`] = `
<MemoryRouter
  keyLength={0}
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <withRouter(Connect(EditBaseline))>
        <Connect(EditBaseline)
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "canGo": [Function],
              "createHref": [Function],
              "entries": Array [
                Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              ],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "index": 0,
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
          location={
            Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            }
          }
          match={
            Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            }
          }
        >
          <EditBaseline
            baselineDataLoading={true}
            clearBaselineData={[Function]}
            clearErrorData={[Function]}
            editBaselineEmptyState={false}
            editBaselineError={Object {}}
            editBaselineTableData={Array []}
            expandRow={[Function]}
            expandedRows={Array []}
            exportToCSV={[Function]}
            factModalOpened={false}
            fetchBaselineData={[Function]}
            fetchBaselines={[Function]}
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            inlineError={Object {}}
            location={
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              }
            }
            match={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
            selectFact={[Function]}
          >
            <PageHeader>
              <section
                className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                widget-type="InsightsPageHeader"
              >
                <div>
                  <Skeleton
                    isDark={false}
                    size="lg"
                  >
                    <div
                      className="ins-c-skeleton ins-c-skeleton__lg"
                    >
                       
                    </div>
                  </Skeleton>
                </div>
              </section>
            </PageHeader>
            <Connect(Main)>
              <Main>
                <section
                  className="pf-l-page__main-section pf-c-page__main-section"
                  page-type=""
                >
                  <div />
                  <Connect(ErrorAlert)
                    error={Object {}}
                    onClose={[Function]}
                  >
                    <ErrorAlert
                      addNotification={[Function]}
                      error={Object {}}
                      onClose={[Function]}
                    />
                  </Connect(ErrorAlert)>
                  <Card
                    className="pf-t-light pf-m-opaque-100"
                  >
                    <article
                      className="pf-c-card pf-t-light pf-m-opaque-100"
                      data-ouia-component-id="OUIA-Generated-Card-3"
                      data-ouia-component-type="PF4/Card"
                      data-ouia-safe={true}
                      id=""
                    >
                      <CardBody>
                        <div
                          className="pf-c-card__body"
                        >
                          <EditBaselineToolbar
                            exportToCSV={[Function]}
                            hasWritePermissions={true}
                            isDisabled={true}
                            onBulkSelect={[Function]}
                            selected={0}
                            tableData={Array []}
                            totalFacts={0}
                          >
                            <Toolbar
                              className="drift-toolbar"
                            >
                              <GenerateId
                                prefix="pf-random-id-"
                              >
                                <div
                                  className="pf-c-toolbar drift-toolbar"
                                  id="pf-random-id-2"
                                >
                                  <ToolbarContent
                                    isExpanded={false}
                                    showClearFiltersButton={false}
                                  >
                                    <div
                                      className="pf-c-toolbar__content"
                                    >
                                      <div
                                        className="pf-c-toolbar__content-section"
                                      >
                                        <ToolbarItem>
                                          <div
                                            className="pf-c-toolbar__item"
                                          >
                                            <BulkSelect
                                              checked={false}
                                              className=""
                                              count={null}
                                              isDisabled={true}
                                              items={
                                                Array [
                                                  Object {
                                                    "key": "select-all",
                                                    "onClick": [Function],
                                                    "title": "Select all",
                                                  },
                                                  Object {
                                                    "key": "select-none",
                                                    "onClick": [Function],
                                                    "title": "Select none",
                                                  },
                                                ]
                                              }
                                              onSelect={[Function]}
                                            >
                                              <Dropdown
                                                className="ins-c-bulk-select"
                                                dropdownItems={
                                                  Array [
                                                    <DropdownItem
                                                      component="button"
                                                      onClick={[Function]}
                                                    >
                                                      Select all
                                                    </DropdownItem>,
                                                    <DropdownItem
                                                      component="button"
                                                      onClick={[Function]}
                                                    >
                                                      Select none
                                                    </DropdownItem>,
                                                  ]
                                                }
                                                isOpen={false}
                                                onSelect={[Function]}
                                                toggle={
                                                  <DropdownToggle
                                                    isDisabled={true}
                                                    onToggle={[Function]}
                                                    splitButtonItems={
                                                      Array [
                                                        <React.Fragment>
                                                          <DropdownToggleCheckbox
                                                            aria-label="Select all"
                                                            className=""
                                                            id="toggle-checkbox"
                                                            isChecked={false}
                                                            isDisabled={false}
                                                            isValid={true}
                                                            onChange={[Function]}
                                                          >
                                                            
                                                          </DropdownToggleCheckbox>
                                                        </React.Fragment>,
                                                      ]
                                                    }
                                                  />
                                                }
                                              >
                                                <DropdownWithContext
                                                  autoFocus={true}
                                                  className="ins-c-bulk-select"
                                                  direction="down"
                                                  dropdownItems={
                                                    Array [
                                                      <DropdownItem
                                                        component="button"
                                                        onClick={[Function]}
                                                      >
                                                        Select all
                                                      </DropdownItem>,
                                                      <DropdownItem
                                                        component="button"
                                                        onClick={[Function]}
                                                      >
                                                        Select none
                                                      </DropdownItem>,
                                                    ]
                                                  }
                                                  isGrouped={false}
                                                  isOpen={false}
                                                  isPlain={false}
                                                  menuAppendTo="inline"
                                                  onSelect={[Function]}
                                                  position="left"
                                                  toggle={
                                                    <DropdownToggle
                                                      isDisabled={true}
                                                      onToggle={[Function]}
                                                      splitButtonItems={
                                                        Array [
                                                          <React.Fragment>
                                                            <DropdownToggleCheckbox
                                                              aria-label="Select all"
                                                              className=""
                                                              id="toggle-checkbox"
                                                              isChecked={false}
                                                              isDisabled={false}
                                                              isValid={true}
                                                              onChange={[Function]}
                                                            >
                                                              
                                                            </DropdownToggleCheckbox>
                                                          </React.Fragment>,
                                                        ]
                                                      }
                                                    />
                                                  }
                                                >
                                                  <div
                                                    className="pf-c-dropdown ins-c-bulk-select"
                                                    data-ouia-component-id="OUIA-Generated-Dropdown-3"
                                                    data-ouia-component-type="PF4/Dropdown"
                                                    data-ouia-safe={true}
                                                  >
                                                    <DropdownToggle
                                                      aria-haspopup={true}
                                                      getMenuRef={[Function]}
                                                      id="pf-dropdown-toggle-id-6"
                                                      isDisabled={true}
                                                      isOpen={false}
                                                      isPlain={false}
                                                      key=".0"
                                                      onEnter={[Function]}
                                                      onToggle={[Function]}
                                                      parentRef={
                                                        Object {
                                                          "current": <div
                                                            class="pf-c-dropdown ins-c-bulk-select"
                                                            data-ouia-component-id="OUIA-Generated-Dropdown-3"
                                                            data-ouia-component-type="PF4/Dropdown"
                                                            data-ouia-safe="true"
                                                          >
                                                            <div
                                                              class="pf-c-dropdown__toggle pf-m-split-button pf-m-disabled"
                                                            >
                                                              <label
                                                                class="pf-c-dropdown__toggle-check"
                                                                for="toggle-checkbox"
                                                              >
                                                                <input
                                                                  aria-invalid="false"
                                                                  aria-label="Select all"
                                                                  data-ouia-component-id="OUIA-Generated-DropdownToggleCheckbox-3"
                                                                  data-ouia-component-type="PF4/DropdownToggleCheckbox"
                                                                  data-ouia-safe="true"
                                                                  id="toggle-checkbox"
                                                                  type="checkbox"
                                                                />
                                                                
                                                              </label>
                                                              <button
                                                                aria-expanded="false"
                                                                aria-haspopup="true"
                                                                aria-label="Select"
                                                                class="pf-c-dropdown__toggle-button"
                                                                data-ouia-component-id="OUIA-Generated-DropdownToggle-5"
                                                                data-ouia-component-type="PF4/DropdownToggle"
                                                                data-ouia-safe="true"
                                                                disabled=""
                                                                id="pf-dropdown-toggle-id-6"
                                                                type="button"
                                                              >
                                                                <span
                                                                  class=""
                                                                >
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    fill="currentColor"
                                                                    height="1em"
                                                                    role="img"
                                                                    style="vertical-align: -0.125em;"
                                                                    viewBox="0 0 320 512"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                    />
                                                                  </svg>
                                                                </span>
                                                              </button>
                                                            </div>
                                                          </div>,
                                                        }
                                                      }
                                                      splitButtonItems={
                                                        Array [
                                                          <React.Fragment>
                                                            <DropdownToggleCheckbox
                                                              aria-label="Select all"
                                                              className=""
                                                              id="toggle-checkbox"
                                                              isChecked={false}
                                                              isDisabled={false}
                                                              isValid={true}
                                                              onChange={[Function]}
                                                            >
                                                              
                                                            </DropdownToggleCheckbox>
                                                          </React.Fragment>,
                                                        ]
                                                      }
                                                    >
                                                      <div
                                                        className="pf-c-dropdown__toggle pf-m-split-button pf-m-disabled"
                                                      >
                                                        <DropdownToggleCheckbox
                                                          aria-label="Select all"
                                                          className=""
                                                          id="toggle-checkbox"
                                                          isChecked={false}
                                                          isDisabled={false}
                                                          isValid={true}
                                                          onChange={[Function]}
                                                        >
                                                          <label
                                                            className="pf-c-dropdown__toggle-check"
                                                            htmlFor="toggle-checkbox"
                                                          >
                                                            <input
                                                              aria-invalid={false}
                                                              aria-label="Select all"
                                                              checked={false}
                                                              data-ouia-component-id="OUIA-Generated-DropdownToggleCheckbox-3"
                                                              data-ouia-component-type="PF4/DropdownToggleCheckbox"
                                                              data-ouia-safe={true}
                                                              disabled={false}
                                                              id="toggle-checkbox"
                                                              onChange={[Function]}
                                                              type="checkbox"
                                                            />
                                                          </label>
                                                        </DropdownToggleCheckbox>
                                                        <Toggle
                                                          aria-haspopup={true}
                                                          aria-label="Select"
                                                          bubbleEvent={false}
                                                          className=""
                                                          data-ouia-component-id="OUIA-Generated-DropdownToggle-5"
                                                          data-ouia-component-type="PF4/DropdownToggle"
                                                          data-ouia-safe={true}
                                                          getMenuRef={[Function]}
                                                          id="pf-dropdown-toggle-id-6"
                                                          isActive={false}
                                                          isDisabled={true}
                                                          isOpen={false}
                                                          isPlain={false}
                                                          isPrimary={false}
                                                          isSplitButton={true}
                                                          onEnter={[Function]}
                                                          onToggle={[Function]}
                                                          parentRef={
                                                            Object {
                                                              "current": <div
                                                                class="pf-c-dropdown ins-c-bulk-select"
                                                                data-ouia-component-id="OUIA-Generated-Dropdown-3"
                                                                data-ouia-component-type="PF4/Dropdown"
                                                                data-ouia-safe="true"
                                                              >
                                                                <div
                                                                  class="pf-c-dropdown__toggle pf-m-split-button pf-m-disabled"
                                                                >
                                                                  <label
                                                                    class="pf-c-dropdown__toggle-check"
                                                                    for="toggle-checkbox"
                                                                  >
                                                                    <input
                                                                      aria-invalid="false"
                                                                      aria-label="Select all"
                                                                      data-ouia-component-id="OUIA-Generated-DropdownToggleCheckbox-3"
                                                                      data-ouia-component-type="PF4/DropdownToggleCheckbox"
                                                                      data-ouia-safe="true"
                                                                      id="toggle-checkbox"
                                                                      type="checkbox"
                                                                    />
                                                                    
                                                                  </label>
                                                                  <button
                                                                    aria-expanded="false"
                                                                    aria-haspopup="true"
                                                                    aria-label="Select"
                                                                    class="pf-c-dropdown__toggle-button"
                                                                    data-ouia-component-id="OUIA-Generated-DropdownToggle-5"
                                                                    data-ouia-component-type="PF4/DropdownToggle"
                                                                    data-ouia-safe="true"
                                                                    disabled=""
                                                                    id="pf-dropdown-toggle-id-6"
                                                                    type="button"
                                                                  >
                                                                    <span
                                                                      class=""
                                                                    >
                                                                      <svg
                                                                        aria-hidden="true"
                                                                        fill="currentColor"
                                                                        height="1em"
                                                                        role="img"
                                                                        style="vertical-align: -0.125em;"
                                                                        viewBox="0 0 320 512"
                                                                        width="1em"
                                                                      >
                                                                        <path
                                                                          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                        />
                                                                      </svg>
                                                                    </span>
                                                                  </button>
                                                                </div>
                                                              </div>,
                                                            }
                                                          }
                                                        >
                                                          <button
                                                            aria-expanded={false}
                                                            aria-haspopup={true}
                                                            aria-label="Select"
                                                            className="pf-c-dropdown__toggle-button"
                                                            data-ouia-component-id="OUIA-Generated-DropdownToggle-5"
                                                            data-ouia-component-type="PF4/DropdownToggle"
                                                            data-ouia-safe={true}
                                                            disabled={true}
                                                            id="pf-dropdown-toggle-id-6"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            type="button"
                                                          >
                                                            <span
                                                              className=""
                                                            >
                                                              <CaretDownIcon
                                                                color="currentColor"
                                                                noVerticalAlign={false}
                                                                size="sm"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  aria-labelledby={null}
                                                                  fill="currentColor"
                                                                  height="1em"
                                                                  role="img"
                                                                  style={
                                                                    Object {
                                                                      "verticalAlign": "-0.125em",
                                                                    }
                                                                  }
                                                                  viewBox="0 0 320 512"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                  />
                                                                </svg>
                                                              </CaretDownIcon>
                                                            </span>
                                                          </button>
                                                        </Toggle>
                                                      </div>
                                                    </DropdownToggle>
                                                  </div>
                                                </DropdownWithContext>
                                              </Dropdown>
                                            </BulkSelect>
                                          </div>
                                        </ToolbarItem>
                                        <ToolbarItem>
                                          <div
                                            className="pf-c-toolbar__item"
                                          >
                                            <Connect(AddFactButton)
                                              hasWritePermissions={true}
                                              isDisabled={true}
                                            >
                                              <AddFactButton
                                                hasWritePermissions={true}
                                                isDisabled={true}
                                                setFactData={[Function]}
                                                toggleFactModal={[Function]}
                                              >
                                                <Button
                                                  isDisabled={true}
                                                  onClick={[Function]}
                                                  ouiaId="add_fact"
                                                  variant="primary"
                                                >
                                                  <button
                                                    aria-disabled={true}
                                                    aria-label={null}
                                                    className="pf-c-button pf-m-primary pf-m-disabled"
                                                    data-ouia-component-id="add_fact"
                                                    data-ouia-component-type="PF4/Button"
                                                    data-ouia-safe={true}
                                                    disabled={true}
                                                    onClick={[Function]}
                                                    role={null}
                                                    tabIndex={null}
                                                    type="button"
                                                  >
                                                    Add fact or category
                                                  </button>
                                                </Button>
                                              </AddFactButton>
                                            </Connect(AddFactButton)>
                                          </div>
                                        </ToolbarItem>
                                        <ForwardRef
                                          variant="icon-button-group"
                                        >
                                          <ToolbarGroupWithRef
                                            innerRef={null}
                                            variant="icon-button-group"
                                          >
                                            <div
                                              className="pf-c-toolbar__group pf-m-icon-button-group"
                                            >
                                              <ToolbarItem>
                                                <div
                                                  className="pf-c-toolbar__item"
                                                >
                                                  <ExportCSVButton
                                                    dropdownItems={
                                                      Array [
                                                        <DropdownItem
                                                          component="button"
                                                          onClick={[Function]}
                                                        >
                                                          Export to CSV
                                                        </DropdownItem>,
                                                      ]
                                                    }
                                                    isOpen={false}
                                                    onToggle={[Function]}
                                                  >
                                                    <Dropdown
                                                      dropdownItems={
                                                        Array [
                                                          <DropdownItem
                                                            component="button"
                                                            onClick={[Function]}
                                                          >
                                                            Export to CSV
                                                          </DropdownItem>,
                                                        ]
                                                      }
                                                      isOpen={false}
                                                      isPlain={true}
                                                      ouiaId="export"
                                                      position="left"
                                                      toggle={
                                                        <DropdownToggle
                                                          onToggle={[Function]}
                                                          toggleIndicator={null}
                                                        >
                                                          <ExportIcon
                                                            className="pointer not-active"
                                                            color="currentColor"
                                                            noVerticalAlign={false}
                                                            size="sm"
                                                          />
                                                        </DropdownToggle>
                                                      }
                                                    >
                                                      <DropdownWithContext
                                                        autoFocus={true}
                                                        className=""
                                                        direction="down"
                                                        dropdownItems={
                                                          Array [
                                                            <DropdownItem
                                                              component="button"
                                                              onClick={[Function]}
                                                            >
                                                              Export to CSV
                                                            </DropdownItem>,
                                                          ]
                                                        }
                                                        isGrouped={false}
                                                        isOpen={false}
                                                        isPlain={true}
                                                        menuAppendTo="inline"
                                                        onSelect={[Function]}
                                                        position="left"
                                                        toggle={
                                                          <DropdownToggle
                                                            onToggle={[Function]}
                                                            toggleIndicator={null}
                                                          >
                                                            <ExportIcon
                                                              className="pointer not-active"
                                                              color="currentColor"
                                                              noVerticalAlign={false}
                                                              size="sm"
                                                            />
                                                          </DropdownToggle>
                                                        }
                                                      >
                                                        <div
                                                          className="pf-c-dropdown"
                                                          data-ouia-component-id="export"
                                                          data-ouia-component-type="PF4/Dropdown"
                                                          data-ouia-safe={true}
                                                        >
                                                          <DropdownToggle
                                                            aria-haspopup={true}
                                                            getMenuRef={[Function]}
                                                            id="pf-dropdown-toggle-id-7"
                                                            isOpen={false}
                                                            isPlain={true}
                                                            key=".0"
                                                            onEnter={[Function]}
                                                            onToggle={[Function]}
                                                            parentRef={
                                                              Object {
                                                                "current": <div
                                                                  class="pf-c-dropdown"
                                                                  data-ouia-component-id="export"
                                                                  data-ouia-component-type="PF4/Dropdown"
                                                                  data-ouia-safe="true"
                                                                >
                                                                  <button
                                                                    aria-expanded="false"
                                                                    aria-haspopup="true"
                                                                    class="pf-c-dropdown__toggle pf-m-plain"
                                                                    data-ouia-component-id="OUIA-Generated-DropdownToggle-6"
                                                                    data-ouia-component-type="PF4/DropdownToggle"
                                                                    data-ouia-safe="true"
                                                                    id="pf-dropdown-toggle-id-7"
                                                                    type="button"
                                                                  >
                                                                    <span>
                                                                      <svg
                                                                        aria-hidden="true"
                                                                        class="pointer not-active"
                                                                        fill="currentColor"
                                                                        height="1em"
                                                                        role="img"
                                                                        style="vertical-align: -0.125em;"
                                                                        viewBox="0 0 1024 1024"
                                                                        width="1em"
                                                                      >
                                                                        <path
                                                                          d="M975.8,636.9 L870.9,741.8 L457.9,328.6 C452.1,322.8 445.4,319.9 437.9,319.9 C430.4,319.9 423.7,322.8 417.9,328.6 L328.8,417.7 C323,423.5 320.1,430.2 320.1,437.7 C320.1,445.2 323,451.9 328.8,457.7 L742,870.7 L636.9,975.8 C610.5,1002.2 619.4,1024 656.8,1024 L956,1024 C1014.5,1024 1024,1013.7 1024,955.9 L1024,656.7 C1023.9,619.4 1002.2,610.5 975.8,636.9 Z M128,128 L896,128 L896,361.7 C896.007942,370.182681 899.389907,378.313788 905.4,384.3 L996.7,475.6 C1006.8,485.7 1024,478.5 1024,464.3 L1024,22.7 C1024,16.1 1021.9,10.7 1017.6,6.4 C1013.3,2.1 1007.9,0 1001.3,0 L22.7,0 C16.1,0 10.7,2.1 6.4,6.4 C2.1,10.7 0,16.1 0,22.7 L0,1001.3 C0,1007.9 2.1,1013.3 6.4,1017.6 C10.7,1021.9 16.1,1024 22.7,1024 L463.4,1024 C469.862884,1023.98894 475.684489,1020.0908 478.156232,1014.11925 C480.627976,1008.14769 479.264428,1001.27548 474.7,996.7 L383.4,905.4 C377.413788,899.389907 369.282681,896.007942 360.8,896 L128,896 L128,128 Z"
                                                                        />
                                                                      </svg>
                                                                    </span>
                                                                  </button>
                                                                </div>,
                                                              }
                                                            }
                                                            toggleIndicator={null}
                                                          >
                                                            <Toggle
                                                              aria-haspopup={true}
                                                              bubbleEvent={false}
                                                              className=""
                                                              data-ouia-component-id="OUIA-Generated-DropdownToggle-6"
                                                              data-ouia-component-type="PF4/DropdownToggle"
                                                              data-ouia-safe={true}
                                                              getMenuRef={[Function]}
                                                              id="pf-dropdown-toggle-id-7"
                                                              isActive={false}
                                                              isDisabled={false}
                                                              isOpen={false}
                                                              isPlain={true}
                                                              isPrimary={false}
                                                              isSplitButton={false}
                                                              onEnter={[Function]}
                                                              onToggle={[Function]}
                                                              parentRef={
                                                                Object {
                                                                  "current": <div
                                                                    class="pf-c-dropdown"
                                                                    data-ouia-component-id="export"
                                                                    data-ouia-component-type="PF4/Dropdown"
                                                                    data-ouia-safe="true"
                                                                  >
                                                                    <button
                                                                      aria-expanded="false"
                                                                      aria-haspopup="true"
                                                                      class="pf-c-dropdown__toggle pf-m-plain"
                                                                      data-ouia-component-id="OUIA-Generated-DropdownToggle-6"
                                                                      data-ouia-component-type="PF4/DropdownToggle"
                                                                      data-ouia-safe="true"
                                                                      id="pf-dropdown-toggle-id-7"
                                                                      type="button"
                                                                    >
                                                                      <span>
                                                                        <svg
                                                                          aria-hidden="true"
                                                                          class="pointer not-active"
                                                                          fill="currentColor"
                                                                          height="1em"
                                                                          role="img"
                                                                          style="vertical-align: -0.125em;"
                                                                          viewBox="0 0 1024 1024"
                                                                          width="1em"
                                                                        >
                                                                          <path
                                                                            d="M975.8,636.9 L870.9,741.8 L457.9,328.6 C452.1,322.8 445.4,319.9 437.9,319.9 C430.4,319.9 423.7,322.8 417.9,328.6 L328.8,417.7 C323,423.5 320.1,430.2 320.1,437.7 C320.1,445.2 323,451.9 328.8,457.7 L742,870.7 L636.9,975.8 C610.5,1002.2 619.4,1024 656.8,1024 L956,1024 C1014.5,1024 1024,1013.7 1024,955.9 L1024,656.7 C1023.9,619.4 1002.2,610.5 975.8,636.9 Z M128,128 L896,128 L896,361.7 C896.007942,370.182681 899.389907,378.313788 905.4,384.3 L996.7,475.6 C1006.8,485.7 1024,478.5 1024,464.3 L1024,22.7 C1024,16.1 1021.9,10.7 1017.6,6.4 C1013.3,2.1 1007.9,0 1001.3,0 L22.7,0 C16.1,0 10.7,2.1 6.4,6.4 C2.1,10.7 0,16.1 0,22.7 L0,1001.3 C0,1007.9 2.1,1013.3 6.4,1017.6 C10.7,1021.9 16.1,1024 22.7,1024 L463.4,1024 C469.862884,1023.98894 475.684489,1020.0908 478.156232,1014.11925 C480.627976,1008.14769 479.264428,1001.27548 474.7,996.7 L383.4,905.4 C377.413788,899.389907 369.282681,896.007942 360.8,896 L128,896 L128,128 Z"
                                                                          />
                                                                        </svg>
                                                                      </span>
                                                                    </button>
                                                                  </div>,
                                                                }
                                                              }
                                                            >
                                                              <button
                                                                aria-expanded={false}
                                                                aria-haspopup={true}
                                                                className="pf-c-dropdown__toggle pf-m-plain"
                                                                data-ouia-component-id="OUIA-Generated-DropdownToggle-6"
                                                                data-ouia-component-type="PF4/DropdownToggle"
                                                                data-ouia-safe={true}
                                                                disabled={false}
                                                                id="pf-dropdown-toggle-id-7"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className={null}
                                                                >
                                                                  <ExportIcon
                                                                    className="pointer not-active"
                                                                    color="currentColor"
                                                                    noVerticalAlign={false}
                                                                    size="sm"
                                                                  >
                                                                    <svg
                                                                      aria-hidden={true}
                                                                      aria-labelledby={null}
                                                                      className="pointer not-active"
                                                                      fill="currentColor"
                                                                      height="1em"
                                                                      role="img"
                                                                      style={
                                                                        Object {
                                                                          "verticalAlign": "-0.125em",
                                                                        }
                                                                      }
                                                                      viewBox="0 0 1024 1024"
                                                                      width="1em"
                                                                    >
                                                                      <path
                                                                        d="M975.8,636.9 L870.9,741.8 L457.9,328.6 C452.1,322.8 445.4,319.9 437.9,319.9 C430.4,319.9 423.7,322.8 417.9,328.6 L328.8,417.7 C323,423.5 320.1,430.2 320.1,437.7 C320.1,445.2 323,451.9 328.8,457.7 L742,870.7 L636.9,975.8 C610.5,1002.2 619.4,1024 656.8,1024 L956,1024 C1014.5,1024 1024,1013.7 1024,955.9 L1024,656.7 C1023.9,619.4 1002.2,610.5 975.8,636.9 Z M128,128 L896,128 L896,361.7 C896.007942,370.182681 899.389907,378.313788 905.4,384.3 L996.7,475.6 C1006.8,485.7 1024,478.5 1024,464.3 L1024,22.7 C1024,16.1 1021.9,10.7 1017.6,6.4 C1013.3,2.1 1007.9,0 1001.3,0 L22.7,0 C16.1,0 10.7,2.1 6.4,6.4 C2.1,10.7 0,16.1 0,22.7 L0,1001.3 C0,1007.9 2.1,1013.3 6.4,1017.6 C10.7,1021.9 16.1,1024 22.7,1024 L463.4,1024 C469.862884,1023.98894 475.684489,1020.0908 478.156232,1014.11925 C480.627976,1008.14769 479.264428,1001.27548 474.7,996.7 L383.4,905.4 C377.413788,899.389907 369.282681,896.007942 360.8,896 L128,896 L128,128 Z"
                                                                      />
                                                                    </svg>
                                                                  </ExportIcon>
                                                                </span>
                                                              </button>
                                                            </Toggle>
                                                          </DropdownToggle>
                                                        </div>
                                                      </DropdownWithContext>
                                                    </Dropdown>
                                                  </ExportCSVButton>
                                                </div>
                                              </ToolbarItem>
                                              <ToolbarItem>
                                                <div
                                                  className="pf-c-toolbar__item"
                                                >
                                                  <Connect(EditBaselineKebab)>
                                                    <EditBaselineKebab
                                                      dispatch={[Function]}
                                                      editBaselineTableData={Array []}
                                                    >
                                                      <Dropdown
                                                        dropdownItems={
                                                          Array [
                                                            <DropdownItem
                                                              component="button"
                                                              isDisabled={true}
                                                              onClick={[Function]}
                                                            >
                                                              Delete facts
                                                            </DropdownItem>,
                                                          ]
                                                        }
                                                        isOpen={false}
                                                        isPlain={true}
                                                        ouiaId="actions"
                                                        style={
                                                          Object {
                                                            "float": "left",
                                                          }
                                                        }
                                                        toggle={
                                                          <KebabToggle
                                                            onToggle={[Function]}
                                                          />
                                                        }
                                                      >
                                                        <DropdownWithContext
                                                          autoFocus={true}
                                                          className=""
                                                          direction="down"
                                                          dropdownItems={
                                                            Array [
                                                              <DropdownItem
                                                                component="button"
                                                                isDisabled={true}
                                                                onClick={[Function]}
                                                              >
                                                                Delete facts
                                                              </DropdownItem>,
                                                            ]
                                                          }
                                                          isGrouped={false}
                                                          isOpen={false}
                                                          isPlain={true}
                                                          menuAppendTo="inline"
                                                          onSelect={[Function]}
                                                          position="left"
                                                          style={
                                                            Object {
                                                              "float": "left",
                                                            }
                                                          }
                                                          toggle={
                                                            <KebabToggle
                                                              onToggle={[Function]}
                                                            />
                                                          }
                                                        >
                                                          <div
                                                            className="pf-c-dropdown"
                                                            data-ouia-component-id="actions"
                                                            data-ouia-component-type="PF4/Dropdown"
                                                            data-ouia-safe={true}
                                                            style={
                                                              Object {
                                                                "float": "left",
                                                              }
                                                            }
                                                          >
                                                            <KebabToggle
                                                              aria-haspopup={true}
                                                              getMenuRef={[Function]}
                                                              id="pf-dropdown-toggle-id-8"
                                                              isOpen={false}
                                                              isPlain={true}
                                                              key=".0"
                                                              onEnter={[Function]}
                                                              onToggle={[Function]}
                                                              parentRef={
                                                                Object {
                                                                  "current": <div
                                                                    class="pf-c-dropdown"
                                                                    data-ouia-component-id="actions"
                                                                    data-ouia-component-type="PF4/Dropdown"
                                                                    data-ouia-safe="true"
                                                                    style="float: left;"
                                                                  >
                                                                    <button
                                                                      aria-expanded="false"
                                                                      aria-haspopup="true"
                                                                      aria-label="Actions"
                                                                      class="pf-c-dropdown__toggle pf-m-plain"
                                                                      id="pf-dropdown-toggle-id-8"
                                                                      type="button"
                                                                    >
                                                                      <svg
                                                                        aria-hidden="true"
                                                                        fill="currentColor"
                                                                        height="1em"
                                                                        role="img"
                                                                        style="vertical-align: -0.125em;"
                                                                        viewBox="0 0 192 512"
                                                                        width="1em"
                                                                      >
                                                                        <path
                                                                          d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                                        />
                                                                      </svg>
                                                                    </button>
                                                                  </div>,
                                                                }
                                                              }
                                                            >
                                                              <Toggle
                                                                aria-haspopup={true}
                                                                aria-label="Actions"
                                                                bubbleEvent={false}
                                                                className=""
                                                                getMenuRef={[Function]}
                                                                id="pf-dropdown-toggle-id-8"
                                                                isActive={false}
                                                                isDisabled={false}
                                                                isOpen={false}
                                                                isPlain={true}
                                                                isPrimary={false}
                                                                isSplitButton={false}
                                                                onEnter={[Function]}
                                                                onToggle={[Function]}
                                                                parentRef={
                                                                  Object {
                                                                    "current": <div
                                                                      class="pf-c-dropdown"
                                                                      data-ouia-component-id="actions"
                                                                      data-ouia-component-type="PF4/Dropdown"
                                                                      data-ouia-safe="true"
                                                                      style="float: left;"
                                                                    >
                                                                      <button
                                                                        aria-expanded="false"
                                                                        aria-haspopup="true"
                                                                        aria-label="Actions"
                                                                        class="pf-c-dropdown__toggle pf-m-plain"
                                                                        id="pf-dropdown-toggle-id-8"
                                                                        type="button"
                                                                      >
                                                                        <svg
                                                                          aria-hidden="true"
                                                                          fill="currentColor"
                                                                          height="1em"
                                                                          role="img"
                                                                          style="vertical-align: -0.125em;"
                                                                          viewBox="0 0 192 512"
                                                                          width="1em"
                                                                        >
                                                                          <path
                                                                            d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                                          />
                                                                        </svg>
                                                                      </button>
                                                                    </div>,
                                                                  }
                                                                }
                                                              >
                                                                <button
                                                                  aria-expanded={false}
                                                                  aria-haspopup={true}
                                                                  aria-label="Actions"
                                                                  className="pf-c-dropdown__toggle pf-m-plain"
                                                                  disabled={false}
                                                                  id="pf-dropdown-toggle-id-8"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  type="button"
                                                                >
                                                                  <EllipsisVIcon
                                                                    color="currentColor"
                                                                    noVerticalAlign={false}
                                                                    size="sm"
                                                                  >
                                                                    <svg
                                                                      aria-hidden={true}
                                                                      aria-labelledby={null}
                                                                      fill="currentColor"
                                                                      height="1em"
                                                                      role="img"
                                                                      style={
                                                                        Object {
                                                                          "verticalAlign": "-0.125em",
                                                                        }
                                                                      }
                                                                      viewBox="0 0 192 512"
                                                                      width="1em"
                                                                    >
                                                                      <path
                                                                        d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                                      />
                                                                    </svg>
                                                                  </EllipsisVIcon>
                                                                </button>
                                                              </Toggle>
                                                            </KebabToggle>
                                                          </div>
                                                        </DropdownWithContext>
                                                      </Dropdown>
                                                    </EditBaselineKebab>
                                                  </Connect(EditBaselineKebab)>
                                                </div>
                                              </ToolbarItem>
                                            </div>
                                          </ToolbarGroupWithRef>
                                        </ForwardRef>
                                      </div>
                                      <ToolbarExpandableContent
                                        chipContainerRef={
                                          Object {
                                            "current": null,
                                          }
                                        }
                                        clearFiltersButtonText="Clear all filters"
                                        expandableContentRef={
                                          Object {
                                            "current": <div
                                              class="pf-c-toolbar__expandable-content"
                                              id="pf-random-id-2-expandable-content-2"
                                            >
                                              <div
                                                class="pf-c-toolbar__group"
                                              />
                                            </div>,
                                          }
                                        }
                                        id="pf-random-id-2-expandable-content-2"
                                        isExpanded={false}
                                        showClearFiltersButton={false}
                                      >
                                        <div
                                          className="pf-c-toolbar__expandable-content"
                                          id="pf-random-id-2-expandable-content-2"
                                        >
                                          <ForwardRef>
                                            <ToolbarGroupWithRef
                                              innerRef={null}
                                            >
                                              <div
                                                className="pf-c-toolbar__group"
                                              />
                                            </ToolbarGroupWithRef>
                                          </ForwardRef>
                                        </div>
                                      </ToolbarExpandableContent>
                                    </div>
                                  </ToolbarContent>
                                  <ToolbarChipGroupContent
                                    chipGroupContentRef={
                                      Object {
                                        "current": <div
                                          class="pf-c-toolbar__content pf-m-hidden"
                                          hidden=""
                                        >
                                          <div
                                            class="pf-c-toolbar__group"
                                          />
                                        </div>,
                                      }
                                    }
                                    clearFiltersButtonText="Clear all filters"
                                    collapseListedFiltersBreakpoint="lg"
                                    isExpanded={false}
                                    numberOfFilters={0}
                                    showClearFiltersButton={false}
                                  >
                                    <div
                                      className="pf-c-toolbar__content pf-m-hidden"
                                      hidden={true}
                                    >
                                      <ForwardRef
                                        className=""
                                      >
                                        <ToolbarGroupWithRef
                                          className=""
                                          innerRef={null}
                                        >
                                          <div
                                            className="pf-c-toolbar__group"
                                          />
                                        </ToolbarGroupWithRef>
                                      </ForwardRef>
                                    </div>
                                  </ToolbarChipGroupContent>
                                </div>
                              </GenerateId>
                            </Toolbar>
                          </EditBaselineToolbar>
                          <SkeletonTable
                            canSelectAll={false}
                            columns={
                              Array [
                                Object {
                                  "title": "Fact",
                                  "transforms": Array [
                                    [Function],
                                  ],
                                },
                                Object {
                                  "title": "Value",
                                  "transforms": Array [
                                    [Function],
                                  ],
                                },
                                Object {
                                  "title": "",
                                  "transforms": Array [
                                    [Function],
                                  ],
                                },
                              ]
                            }
                            hasRadio={false}
                            isSelectable={true}
                            onSelect={true}
                            paddingColumnSize={0}
                            rowSize={8}
                          >
                            <Table
                              aria-label="Loading"
                              borders={true}
                              canSelectAll={false}
                              canSortFavorites={true}
                              cells={
                                Array [
                                  Object {
                                    "title": "Fact",
                                    "transforms": Array [
                                      [Function],
                                    ],
                                  },
                                  Object {
                                    "title": "Value",
                                    "transforms": Array [
                                      [Function],
                                    ],
                                  },
                                  Object {
                                    "title": "",
                                    "transforms": Array [
                                      [Function],
                                    ],
                                  },
                                ]
                              }
                              className=""
                              contentId="expanded-content"
                              dropdownDirection="down"
                              dropdownPosition="right"
                              expandId="expandable-toggle"
                              gridBreakPoint="grid-md"
                              isStickyHeader={false}
                              onSelect={true}
                              ouiaSafe={true}
                              role="grid"
                              rowLabeledBy="simple-node"
                              rows={
                                Array [
                                  Object {
                                    "cells": Array [
                                      Object {
                                        "title": <Skeleton
                                          isDark={false}
                                          size="md"
                                        />,
                                      },
                                      Object {
                                        "title": <Skeleton
                                          isDark={false}
                                          size="md"
                                        />,
                                      },
                                      Object {
                                        "title": <Skeleton
                                          isDark={false}
                                          size="md"
                                        />,
                                      },
                                    ],
                                    "disableSelection": true,
                                  },
                                  Object {
                                    "cells": Array [
                                      Object {
                                        "title": <Skeleton
                                          isDark={false}
                                          size="md"
                                        />,
                                      },
                                      Object {
                                        "title": <Skeleton
                                          isDark={false}
                                          size="md"
                                        />,
                                      },
                                      Object {
                                        "title": <Skeleton
                                          isDark={false}
                                          size="md"
                                        />,
                                      },
                                    ],
                                    "disableSelection": true,
                                  },
                                  Object {
                                    "cells": Array [
                                      Object {
                                        "title": <Skeleton
                                          isDark={false}
                                          size="md"
                                        />,
                                      },
                                      Object {
                                        "title": <Skeleton
                                          isDark={false}
                                          size="md"
                                        />,
                                      },
                                      Object {
                                        "title": <Skeleton
                                          isDark={false}
                                          size="md"
                                        />,
                                      },
                                    ],
                                    "disableSelection": true,
                                  },
                                  Object {
                                    "cells": Array [
                                      Object {
                                        "title": <Skeleton
                                          isDark={false}
                                          size="md"
                                        />,
                                      },
                                      Object {
                                        "title": <Skeleton
                                          isDark={false}
                                          size="md"
                                        />,
                                      },
                                      Object {
                                        "title": <Skeleton
                                          isDark={false}
                                          size="md"
                                        />,
                                      },
                                    ],
                                    "disableSelection": true,
                                  },
                                  Object {
                                    "cells": Array [
                                      Object {
                                        "title": <Skeleton
                                          isDark={false}
                                          size="md"
                                        />,
                                      },
                                      Object {
                                        "title": <Skeleton
                                          isDark={false}
                                          size="md"
                                        />,
                                      },
                                      Object {
                                        "title": <Skeleton
                                          isDark={false}
                                          size="md"
                                        />,
                                      },
                                    ],
                                    "disableSelection": true,
                                  },
                                  Object {
                                    "cells": Array [
                                      Object {
                                        "title": <Skeleton
                                          isDark={false}
                                          size="md"
                                        />,
                                      },
                                      Object {
                                        "title": <Skeleton
                                          isDark={false}
                                          size="md"
                                        />,
                                      },
                                      Object {
                                        "title": <Skeleton
                                          isDark={false}
                                          size="md"
                                        />,
                                      },
                                    ],
                                    "disableSelection": true,
                                  },
                                  Object {
                                    "cells": Array [
                                      Object {
                                        "title": <Skeleton
                                          isDark={false}
                                          size="md"
                                        />,
                                      },
                                      Object {
                                        "title": <Skeleton
                                          isDark={false}
                                          size="md"
                                        />,
                                      },
                                      Object {
                                        "title": <Skeleton
                                          isDark={false}
                                          size="md"
                                        />,
                                      },
                                    ],
                                    "disableSelection": true,
                                  },
                                  Object {
                                    "cells": Array [
                                      Object {
                                        "title": <Skeleton
                                          isDark={false}
                                          size="md"
                                        />,
                                      },
                                      Object {
                                        "title": <Skeleton
                                          isDark={false}
                                          size="md"
                                        />,
                                      },
                                      Object {
                                        "title": <Skeleton
                                          isDark={false}
                                          size="md"
                                        />,
                                      },
                                    ],
                                    "disableSelection": true,
                                  },
                                ]
                              }
                              selectVariant="checkbox"
                              variant={null}
                            >
                              <Provider
                                aria-label="Loading"
                                borders={true}
                                className=""
                                columns={
                                  Array [
                                    Object {
                                      "cell": Object {
                                        "formatters": Array [
                                          [Function],
                                        ],
                                        "transforms": Array [
                                          [Function],
                                          [Function],
                                        ],
                                      },
                                      "data": undefined,
                                      "extraParams": Object {
                                        "actionResolver": undefined,
                                        "actions": undefined,
                                        "allRowsSelected": false,
                                        "areActionsDisabled": undefined,
                                        "canSelectAll": false,
                                        "canSortFavorites": true,
                                        "contentId": "expanded-content",
                                        "dropdownDirection": "down",
                                        "dropdownPosition": "right",
                                        "expandId": "expandable-toggle",
                                        "firstUserColumnIndex": 1,
                                        "onCollapse": undefined,
                                        "onExpand": undefined,
                                        "onFavorite": undefined,
                                        "onRowEdit": undefined,
                                        "onSelect": true,
                                        "onSort": undefined,
                                        "rowLabeledBy": "simple-node",
                                        "selectVariant": "checkbox",
                                        "sortBy": undefined,
                                      },
                                      "header": Object {
                                        "formatters": Array [],
                                        "label": "",
                                        "transforms": Array [
                                          [Function],
                                          [Function],
                                        ],
                                      },
                                      "property": "column-0",
                                      "props": Object {
                                        "data-key": 0,
                                        "data-label": "",
                                      },
                                    },
                                    Object {
                                      "cell": Object {
                                        "formatters": Array [
                                          [Function],
                                        ],
                                        "transforms": Array [
                                          [Function],
                                        ],
                                      },
                                      "data": undefined,
                                      "extraParams": Object {
                                        "actionResolver": undefined,
                                        "actions": undefined,
                                        "allRowsSelected": false,
                                        "areActionsDisabled": undefined,
                                        "canSelectAll": false,
                                        "canSortFavorites": true,
                                        "contentId": "expanded-content",
                                        "dropdownDirection": "down",
                                        "dropdownPosition": "right",
                                        "expandId": "expandable-toggle",
                                        "firstUserColumnIndex": 1,
                                        "onCollapse": undefined,
                                        "onExpand": undefined,
                                        "onFavorite": undefined,
                                        "onRowEdit": undefined,
                                        "onSelect": true,
                                        "onSort": undefined,
                                        "rowLabeledBy": "simple-node",
                                        "selectVariant": "checkbox",
                                        "sortBy": undefined,
                                      },
                                      "header": Object {
                                        "formatters": Array [],
                                        "label": "Fact",
                                        "transforms": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                      },
                                      "property": "fact",
                                      "props": Object {
                                        "data-key": 1,
                                        "data-label": "Fact",
                                      },
                                    },
                                    Object {
                                      "cell": Object {
                                        "formatters": Array [
                                          [Function],
                                        ],
                                        "transforms": Array [
                                          [Function],
                                        ],
                                      },
                                      "data": undefined,
                                      "extraParams": Object {
                                        "actionResolver": undefined,
                                        "actions": undefined,
                                        "allRowsSelected": false,
                                        "areActionsDisabled": undefined,
                                        "canSelectAll": false,
                                        "canSortFavorites": true,
                                        "contentId": "expanded-content",
                                        "dropdownDirection": "down",
                                        "dropdownPosition": "right",
                                        "expandId": "expandable-toggle",
                                        "firstUserColumnIndex": 1,
                                        "onCollapse": undefined,
                                        "onExpand": undefined,
                                        "onFavorite": undefined,
                                        "onRowEdit": undefined,
                                        "onSelect": true,
                                        "onSort": undefined,
                                        "rowLabeledBy": "simple-node",
                                        "selectVariant": "checkbox",
                                        "sortBy": undefined,
                                      },
                                      "header": Object {
                                        "formatters": Array [],
                                        "label": "Value",
                                        "transforms": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                      },
                                      "property": "value",
                                      "props": Object {
                                        "data-key": 2,
                                        "data-label": "Value",
                                      },
                                    },
                                    Object {
                                      "cell": Object {
                                        "formatters": Array [
                                          [Function],
                                        ],
                                        "transforms": Array [
                                          [Function],
                                        ],
                                      },
                                      "data": undefined,
                                      "extraParams": Object {
                                        "actionResolver": undefined,
                                        "actions": undefined,
                                        "allRowsSelected": false,
                                        "areActionsDisabled": undefined,
                                        "canSelectAll": false,
                                        "canSortFavorites": true,
                                        "contentId": "expanded-content",
                                        "dropdownDirection": "down",
                                        "dropdownPosition": "right",
                                        "expandId": "expandable-toggle",
                                        "firstUserColumnIndex": 1,
                                        "onCollapse": undefined,
                                        "onExpand": undefined,
                                        "onFavorite": undefined,
                                        "onRowEdit": undefined,
                                        "onSelect": true,
                                        "onSort": undefined,
                                        "rowLabeledBy": "simple-node",
                                        "selectVariant": "checkbox",
                                        "sortBy": undefined,
                                      },
                                      "header": Object {
                                        "formatters": Array [],
                                        "label": "",
                                        "transforms": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                      },
                                      "property": "column-3",
                                      "props": Object {
                                        "data-key": 3,
                                        "data-label": "",
                                      },
                                    },
                                  ]
                                }
                                gridBreakPoint="grid-md"
                                isStickyHeader={false}
                                ouiaSafe={true}
                                renderers={
                                  Object {
                                    "body": Object {
                                      "cell": [Function],
                                      "row": [Function],
                                      "wrapper": [Function],
                                    },
                                    "header": Object {
                                      "cell": [Function],
                                    },
                                  }
                                }
                                role="grid"
                                variant={null}
                              >
                                <TableComposable
                                  aria-label="Loading"
                                  borders={true}
                                  className=""
                                  gridBreakPoint="grid-md"
                                  isStickyHeader={false}
                                  ouiaSafe={true}
                                  role="grid"
                                  variant={null}
                                >
                                  <TableComposableBase
                                    aria-label="Loading"
                                    borders={true}
                                    className=""
                                    gridBreakPoint="grid-md"
                                    innerRef={null}
                                    isStickyHeader={false}
                                    ouiaSafe={true}
                                    role="grid"
                                    variant={null}
                                  >
                                    <table
                                      aria-label="Loading"
                                      className="pf-c-table pf-m-grid-md"
                                      data-ouia-component-id="OUIA-Generated-Table-2"
                                      data-ouia-component-type="PF4/Table"
                                      data-ouia-safe={true}
                                      role="grid"
                                    >
                                      <TableHeader>
                                        <ContextHeader
                                          headerRows={null}
                                        >
                                          <Component
                                            className=""
                                            headerRows={null}
                                          >
                                            <BaseHeader
                                              className=""
                                              columns={
                                                Array [
                                                  Object {
                                                    "cell": Object {
                                                      "formatters": Array [
                                                        [Function],
                                                      ],
                                                      "transforms": Array [
                                                        [Function],
                                                        [Function],
                                                      ],
                                                    },
                                                    "data": undefined,
                                                    "extraParams": Object {
                                                      "actionResolver": undefined,
                                                      "actions": undefined,
                                                      "allRowsSelected": false,
                                                      "areActionsDisabled": undefined,
                                                      "canSelectAll": false,
                                                      "canSortFavorites": true,
                                                      "contentId": "expanded-content",
                                                      "dropdownDirection": "down",
                                                      "dropdownPosition": "right",
                                                      "expandId": "expandable-toggle",
                                                      "firstUserColumnIndex": 1,
                                                      "onCollapse": undefined,
                                                      "onExpand": undefined,
                                                      "onFavorite": undefined,
                                                      "onRowEdit": undefined,
                                                      "onSelect": true,
                                                      "onSort": undefined,
                                                      "rowLabeledBy": "simple-node",
                                                      "selectVariant": "checkbox",
                                                      "sortBy": undefined,
                                                    },
                                                    "header": Object {
                                                      "formatters": Array [],
                                                      "label": "",
                                                      "transforms": Array [
                                                        [Function],
                                                        [Function],
                                                      ],
                                                    },
                                                    "property": "column-0",
                                                    "props": Object {
                                                      "data-key": 0,
                                                      "data-label": "",
                                                    },
                                                  },
                                                  Object {
                                                    "cell": Object {
                                                      "formatters": Array [
                                                        [Function],
                                                      ],
                                                      "transforms": Array [
                                                        [Function],
                                                      ],
                                                    },
                                                    "data": undefined,
                                                    "extraParams": Object {
                                                      "actionResolver": undefined,
                                                      "actions": undefined,
                                                      "allRowsSelected": false,
                                                      "areActionsDisabled": undefined,
                                                      "canSelectAll": false,
                                                      "canSortFavorites": true,
                                                      "contentId": "expanded-content",
                                                      "dropdownDirection": "down",
                                                      "dropdownPosition": "right",
                                                      "expandId": "expandable-toggle",
                                                      "firstUserColumnIndex": 1,
                                                      "onCollapse": undefined,
                                                      "onExpand": undefined,
                                                      "onFavorite": undefined,
                                                      "onRowEdit": undefined,
                                                      "onSelect": true,
                                                      "onSort": undefined,
                                                      "rowLabeledBy": "simple-node",
                                                      "selectVariant": "checkbox",
                                                      "sortBy": undefined,
                                                    },
                                                    "header": Object {
                                                      "formatters": Array [],
                                                      "label": "Fact",
                                                      "transforms": Array [
                                                        [Function],
                                                        [Function],
                                                        [Function],
                                                      ],
                                                    },
                                                    "property": "fact",
                                                    "props": Object {
                                                      "data-key": 1,
                                                      "data-label": "Fact",
                                                    },
                                                  },
                                                  Object {
                                                    "cell": Object {
                                                      "formatters": Array [
                                                        [Function],
                                                      ],
                                                      "transforms": Array [
                                                        [Function],
                                                      ],
                                                    },
                                                    "data": undefined,
                                                    "extraParams": Object {
                                                      "actionResolver": undefined,
                                                      "actions": undefined,
                                                      "allRowsSelected": false,
                                                      "areActionsDisabled": undefined,
                                                      "canSelectAll": false,
                                                      "canSortFavorites": true,
                                                      "contentId": "expanded-content",
                                                      "dropdownDirection": "down",
                                                      "dropdownPosition": "right",
                                                      "expandId": "expandable-toggle",
                                                      "firstUserColumnIndex": 1,
                                                      "onCollapse": undefined,
                                                      "onExpand": undefined,
                                                      "onFavorite": undefined,
                                                      "onRowEdit": undefined,
                                                      "onSelect": true,
                                                      "onSort": undefined,
                                                      "rowLabeledBy": "simple-node",
                                                      "selectVariant": "checkbox",
                                                      "sortBy": undefined,
                                                    },
                                                    "header": Object {
                                                      "formatters": Array [],
                                                      "label": "Value",
                                                      "transforms": Array [
                                                        [Function],
                                                        [Function],
                                                        [Function],
                                                      ],
                                                    },
                                                    "property": "value",
                                                    "props": Object {
                                                      "data-key": 2,
                                                      "data-label": "Value",
                                                    },
                                                  },
                                                  Object {
                                                    "cell": Object {
                                                      "formatters": Array [
                                                        [Function],
                                                      ],
                                                      "transforms": Array [
                                                        [Function],
                                                      ],
                                                    },
                                                    "data": undefined,
                                                    "extraParams": Object {
                                                      "actionResolver": undefined,
                                                      "actions": undefined,
                                                      "allRowsSelected": false,
                                                      "areActionsDisabled": undefined,
                                                      "canSelectAll": false,
                                                      "canSortFavorites": true,
                                                      "contentId": "expanded-content",
                                                      "dropdownDirection": "down",
                                                      "dropdownPosition": "right",
                                                      "expandId": "expandable-toggle",
                                                      "firstUserColumnIndex": 1,
                                                      "onCollapse": undefined,
                                                      "onExpand": undefined,
                                                      "onFavorite": undefined,
                                                      "onRowEdit": undefined,
                                                      "onSelect": true,
                                                      "onSort": undefined,
                                                      "rowLabeledBy": "simple-node",
                                                      "selectVariant": "checkbox",
                                                      "sortBy": undefined,
                                                    },
                                                    "header": Object {
                                                      "formatters": Array [],
                                                      "label": "",
                                                      "transforms": Array [
                                                        [Function],
                                                        [Function],
                                                        [Function],
                                                      ],
                                                    },
                                                    "property": "column-3",
                                                    "props": Object {
                                                      "data-key": 3,
                                                      "data-label": "",
                                                    },
                                                  },
                                                ]
                                              }
                                              headerRows={null}
                                              renderers={
                                                Object {
                                                  "body": Object {
                                                    "cell": [Function],
                                                    "row": [Function],
                                                    "wrapper": [Function],
                                                  },
                                                  "header": Object {
                                                    "cell": [Function],
                                                    "row": Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "displayName": "Tr",
                                                      "render": [Function],
                                                    },
                                                    "wrapper": Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "displayName": "Thead",
                                                      "render": [Function],
                                                    },
                                                  },
                                                  "table": Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "displayName": "TableComposable",
                                                    "render": [Function],
                                                  },
                                                }
                                              }
                                            >
                                              <Thead
                                                className=""
                                              >
                                                <TheadBase
                                                  className=""
                                                  innerRef={null}
                                                >
                                                  <thead
                                                    className=""
                                                  >
                                                    <HeaderRow
                                                      key="0-header-row"
                                                      renderers={
                                                        Object {
                                                          "cell": [Function],
                                                          "row": Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "displayName": "Tr",
                                                            "render": [Function],
                                                          },
                                                          "wrapper": Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "displayName": "Thead",
                                                            "render": [Function],
                                                          },
                                                        }
                                                      }
                                                      rowData={
                                                        Array [
                                                          Object {
                                                            "cell": Object {
                                                              "formatters": Array [
                                                                [Function],
                                                              ],
                                                              "transforms": Array [
                                                                [Function],
                                                                [Function],
                                                              ],
                                                            },
                                                            "data": undefined,
                                                            "extraParams": Object {
                                                              "actionResolver": undefined,
                                                              "actions": undefined,
                                                              "allRowsSelected": false,
                                                              "areActionsDisabled": undefined,
                                                              "canSelectAll": false,
                                                              "canSortFavorites": true,
                                                              "contentId": "expanded-content",
                                                              "dropdownDirection": "down",
                                                              "dropdownPosition": "right",
                                                              "expandId": "expandable-toggle",
                                                              "firstUserColumnIndex": 1,
                                                              "onCollapse": undefined,
                                                              "onExpand": undefined,
                                                              "onFavorite": undefined,
                                                              "onRowEdit": undefined,
                                                              "onSelect": true,
                                                              "onSort": undefined,
                                                              "rowLabeledBy": "simple-node",
                                                              "selectVariant": "checkbox",
                                                              "sortBy": undefined,
                                                            },
                                                            "header": Object {
                                                              "formatters": Array [],
                                                              "label": "",
                                                              "transforms": Array [
                                                                [Function],
                                                                [Function],
                                                              ],
                                                            },
                                                            "property": "column-0",
                                                            "props": Object {
                                                              "data-key": 0,
                                                              "data-label": "",
                                                            },
                                                          },
                                                          Object {
                                                            "cell": Object {
                                                              "formatters": Array [
                                                                [Function],
                                                              ],
                                                              "transforms": Array [
                                                                [Function],
                                                              ],
                                                            },
                                                            "data": undefined,
                                                            "extraParams": Object {
                                                              "actionResolver": undefined,
                                                              "actions": undefined,
                                                              "allRowsSelected": false,
                                                              "areActionsDisabled": undefined,
                                                              "canSelectAll": false,
                                                              "canSortFavorites": true,
                                                              "contentId": "expanded-content",
                                                              "dropdownDirection": "down",
                                                              "dropdownPosition": "right",
                                                              "expandId": "expandable-toggle",
                                                              "firstUserColumnIndex": 1,
                                                              "onCollapse": undefined,
                                                              "onExpand": undefined,
                                                              "onFavorite": undefined,
                                                              "onRowEdit": undefined,
                                                              "onSelect": true,
                                                              "onSort": undefined,
                                                              "rowLabeledBy": "simple-node",
                                                              "selectVariant": "checkbox",
                                                              "sortBy": undefined,
                                                            },
                                                            "header": Object {
                                                              "formatters": Array [],
                                                              "label": "Fact",
                                                              "transforms": Array [
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                              ],
                                                            },
                                                            "property": "fact",
                                                            "props": Object {
                                                              "data-key": 1,
                                                              "data-label": "Fact",
                                                            },
                                                          },
                                                          Object {
                                                            "cell": Object {
                                                              "formatters": Array [
                                                                [Function],
                                                              ],
                                                              "transforms": Array [
                                                                [Function],
                                                              ],
                                                            },
                                                            "data": undefined,
                                                            "extraParams": Object {
                                                              "actionResolver": undefined,
                                                              "actions": undefined,
                                                              "allRowsSelected": false,
                                                              "areActionsDisabled": undefined,
                                                              "canSelectAll": false,
                                                              "canSortFavorites": true,
                                                              "contentId": "expanded-content",
                                                              "dropdownDirection": "down",
                                                              "dropdownPosition": "right",
                                                              "expandId": "expandable-toggle",
                                                              "firstUserColumnIndex": 1,
                                                              "onCollapse": undefined,
                                                              "onExpand": undefined,
                                                              "onFavorite": undefined,
                                                              "onRowEdit": undefined,
                                                              "onSelect": true,
                                                              "onSort": undefined,
                                                              "rowLabeledBy": "simple-node",
                                                              "selectVariant": "checkbox",
                                                              "sortBy": undefined,
                                                            },
                                                            "header": Object {
                                                              "formatters": Array [],
                                                              "label": "Value",
                                                              "transforms": Array [
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                              ],
                                                            },
                                                            "property": "value",
                                                            "props": Object {
                                                              "data-key": 2,
                                                              "data-label": "Value",
                                                            },
                                                          },
                                                          Object {
                                                            "cell": Object {
                                                              "formatters": Array [
                                                                [Function],
                                                              ],
                                                              "transforms": Array [
                                                                [Function],
                                                              ],
                                                            },
                                                            "data": undefined,
                                                            "extraParams": Object {
                                                              "actionResolver": undefined,
                                                              "actions": undefined,
                                                              "allRowsSelected": false,
                                                              "areActionsDisabled": undefined,
                                                              "canSelectAll": false,
                                                              "canSortFavorites": true,
                                                              "contentId": "expanded-content",
                                                              "dropdownDirection": "down",
                                                              "dropdownPosition": "right",
                                                              "expandId": "expandable-toggle",
                                                              "firstUserColumnIndex": 1,
                                                              "onCollapse": undefined,
                                                              "onExpand": undefined,
                                                              "onFavorite": undefined,
                                                              "onRowEdit": undefined,
                                                              "onSelect": true,
                                                              "onSort": undefined,
                                                              "rowLabeledBy": "simple-node",
                                                              "selectVariant": "checkbox",
                                                              "sortBy": undefined,
                                                            },
                                                            "header": Object {
                                                              "formatters": Array [],
                                                              "label": "",
                                                              "transforms": Array [
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                              ],
                                                            },
                                                            "property": "column-3",
                                                            "props": Object {
                                                              "data-key": 3,
                                                              "data-label": "",
                                                            },
                                                          },
                                                        ]
                                                      }
                                                      rowIndex={0}
                                                    >
                                                      <Tr>
                                                        <TrBase
                                                          innerRef={null}
                                                        >
                                                          <tr
                                                            className=""
                                                            data-ouia-component-id="OUIA-Generated-TableRow-1"
                                                            data-ouia-component-type="PF4/TableRow"
                                                            data-ouia-safe={true}
                                                            hidden={false}
                                                          >
                                                            <HeaderCell
                                                              data-key={0}
                                                              data-label=""
                                                              key="0-header"
                                                              scope=""
                                                            >
                                                              <Th
                                                                className=""
                                                                component="th"
                                                                data-key={0}
                                                                data-label=""
                                                                onMouseEnter={[Function]}
                                                                scope=""
                                                                textCenter={false}
                                                                tooltip=""
                                                              >
                                                                <ThBase
                                                                  className=""
                                                                  component="th"
                                                                  data-key={0}
                                                                  data-label=""
                                                                  innerRef={null}
                                                                  onMouseEnter={[Function]}
                                                                  scope=""
                                                                  textCenter={false}
                                                                  tooltip=""
                                                                >
                                                                  <th
                                                                    className=""
                                                                    data-key={0}
                                                                    data-label=""
                                                                    onMouseEnter={[Function]}
                                                                    scope=""
                                                                  />
                                                                </ThBase>
                                                              </Th>
                                                            </HeaderCell>
                                                            <HeaderCell
                                                              className="pf-m-width-40"
                                                              data-key={1}
                                                              data-label="Fact"
                                                              key="1-header"
                                                              scope="col"
                                                            >
                                                              <Th
                                                                className="pf-m-width-40"
                                                                component="th"
                                                                data-key={1}
                                                                data-label="Fact"
                                                                onMouseEnter={[Function]}
                                                                scope="col"
                                                                textCenter={false}
                                                                tooltip=""
                                                              >
                                                                <ThBase
                                                                  className="pf-m-width-40"
                                                                  component="th"
                                                                  data-key={1}
                                                                  data-label="Fact"
                                                                  innerRef={null}
                                                                  onMouseEnter={[Function]}
                                                                  scope="col"
                                                                  textCenter={false}
                                                                  tooltip=""
                                                                >
                                                                  <th
                                                                    className="pf-m-width-40"
                                                                    data-key={1}
                                                                    data-label="Fact"
                                                                    onMouseEnter={[Function]}
                                                                    scope="col"
                                                                  >
                                                                    Fact
                                                                  </th>
                                                                </ThBase>
                                                              </Th>
                                                            </HeaderCell>
                                                            <HeaderCell
                                                              className="pf-m-width-45"
                                                              data-key={2}
                                                              data-label="Value"
                                                              key="2-header"
                                                              scope="col"
                                                            >
                                                              <Th
                                                                className="pf-m-width-45"
                                                                component="th"
                                                                data-key={2}
                                                                data-label="Value"
                                                                onMouseEnter={[Function]}
                                                                scope="col"
                                                                textCenter={false}
                                                                tooltip=""
                                                              >
                                                                <ThBase
                                                                  className="pf-m-width-45"
                                                                  component="th"
                                                                  data-key={2}
                                                                  data-label="Value"
                                                                  innerRef={null}
                                                                  onMouseEnter={[Function]}
                                                                  scope="col"
                                                                  textCenter={false}
                                                                  tooltip=""
                                                                >
                                                                  <th
                                                                    className="pf-m-width-45"
                                                                    data-key={2}
                                                                    data-label="Value"
                                                                    onMouseEnter={[Function]}
                                                                    scope="col"
                                                                  >
                                                                    Value
                                                                  </th>
                                                                </ThBase>
                                                              </Th>
                                                            </HeaderCell>
                                                            <HeaderCell
                                                              className=""
                                                              data-key={3}
                                                              data-label=""
                                                              key="3-header"
                                                              scope=""
                                                            >
                                                              <Th
                                                                className=""
                                                                component="th"
                                                                data-key={3}
                                                                data-label=""
                                                                onMouseEnter={[Function]}
                                                                scope=""
                                                                textCenter={false}
                                                                tooltip=""
                                                              >
                                                                <ThBase
                                                                  className=""
                                                                  component="th"
                                                                  data-key={3}
                                                                  data-label=""
                                                                  innerRef={null}
                                                                  onMouseEnter={[Function]}
                                                                  scope=""
                                                                  textCenter={false}
                                                                  tooltip=""
                                                                >
                                                                  <th
                                                                    className=""
                                                                    data-key={3}
                                                                    data-label=""
                                                                    onMouseEnter={[Function]}
                                                                    scope=""
                                                                  />
                                                                </ThBase>
                                                              </Th>
                                                            </HeaderCell>
                                                          </tr>
                                                        </TrBase>
                                                      </Tr>
                                                    </HeaderRow>
                                                  </thead>
                                                </TheadBase>
                                              </Thead>
                                            </BaseHeader>
                                          </Component>
                                        </ContextHeader>
                                      </TableHeader>
                                      <Component>
                                        <ContextBody
                                          className=""
                                          headerData={
                                            Array [
                                              Object {
                                                "cell": Object {
                                                  "formatters": Array [
                                                    [Function],
                                                  ],
                                                  "transforms": Array [
                                                    [Function],
                                                    [Function],
                                                  ],
                                                },
                                                "data": undefined,
                                                "extraParams": Object {
                                                  "actionResolver": undefined,
                                                  "actions": undefined,
                                                  "allRowsSelected": false,
                                                  "areActionsDisabled": undefined,
                                                  "canSelectAll": false,
                                                  "canSortFavorites": true,
                                                  "contentId": "expanded-content",
                                                  "dropdownDirection": "down",
                                                  "dropdownPosition": "right",
                                                  "expandId": "expandable-toggle",
                                                  "firstUserColumnIndex": 1,
                                                  "onCollapse": undefined,
                                                  "onExpand": undefined,
                                                  "onFavorite": undefined,
                                                  "onRowEdit": undefined,
                                                  "onSelect": true,
                                                  "onSort": undefined,
                                                  "rowLabeledBy": "simple-node",
                                                  "selectVariant": "checkbox",
                                                  "sortBy": undefined,
                                                },
                                                "header": Object {
                                                  "formatters": Array [],
                                                  "label": "",
                                                  "transforms": Array [
                                                    [Function],
                                                    [Function],
                                                  ],
                                                },
                                                "property": "column-0",
                                                "props": Object {
                                                  "data-key": 0,
                                                  "data-label": "",
                                                },
                                              },
                                              Object {
                                                "cell": Object {
                                                  "formatters": Array [
                                                    [Function],
                                                  ],
                                                  "transforms": Array [
                                                    [Function],
                                                  ],
                                                },
                                                "data": undefined,
                                                "extraParams": Object {
                                                  "actionResolver": undefined,
                                                  "actions": undefined,
                                                  "allRowsSelected": false,
                                                  "areActionsDisabled": undefined,
                                                  "canSelectAll": false,
                                                  "canSortFavorites": true,
                                                  "contentId": "expanded-content",
                                                  "dropdownDirection": "down",
                                                  "dropdownPosition": "right",
                                                  "expandId": "expandable-toggle",
                                                  "firstUserColumnIndex": 1,
                                                  "onCollapse": undefined,
                                                  "onExpand": undefined,
                                                  "onFavorite": undefined,
                                                  "onRowEdit": undefined,
                                                  "onSelect": true,
                                                  "onSort": undefined,
                                                  "rowLabeledBy": "simple-node",
                                                  "selectVariant": "checkbox",
                                                  "sortBy": undefined,
                                                },
                                                "header": Object {
                                                  "formatters": Array [],
                                                  "label": "Fact",
                                                  "transforms": Array [
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                  ],
                                                },
                                                "property": "fact",
                                                "props": Object {
                                                  "data-key": 1,
                                                  "data-label": "Fact",
                                                },
                                              },
                                              Object {
                                                "cell": Object {
                                                  "formatters": Array [
                                                    [Function],
                                                  ],
                                                  "transforms": Array [
                                                    [Function],
                                                  ],
                                                },
                                                "data": undefined,
                                                "extraParams": Object {
                                                  "actionResolver": undefined,
                                                  "actions": undefined,
                                                  "allRowsSelected": false,
                                                  "areActionsDisabled": undefined,
                                                  "canSelectAll": false,
                                                  "canSortFavorites": true,
                                                  "contentId": "expanded-content",
                                                  "dropdownDirection": "down",
                                                  "dropdownPosition": "right",
                                                  "expandId": "expandable-toggle",
                                                  "firstUserColumnIndex": 1,
                                                  "onCollapse": undefined,
                                                  "onExpand": undefined,
                                                  "onFavorite": undefined,
                                                  "onRowEdit": undefined,
                                                  "onSelect": true,
                                                  "onSort": undefined,
                                                  "rowLabeledBy": "simple-node",
                                                  "selectVariant": "checkbox",
                                                  "sortBy": undefined,
                                                },
                                                "header": Object {
                                                  "formatters": Array [],
                                                  "label": "Value",
                                                  "transforms": Array [
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                  ],
                                                },
                                                "property": "value",
                                                "props": Object {
                                                  "data-key": 2,
                                                  "data-label": "Value",
                                                },
                                              },
                                              Object {
                                                "cell": Object {
                                                  "formatters": Array [
                                                    [Function],
                                                  ],
                                                  "transforms": Array [
                                                    [Function],
                                                  ],
                                                },
                                                "data": undefined,
                                                "extraParams": Object {
                                                  "actionResolver": undefined,
                                                  "actions": undefined,
                                                  "allRowsSelected": false,
                                                  "areActionsDisabled": undefined,
                                                  "canSelectAll": false,
                                                  "canSortFavorites": true,
                                                  "contentId": "expanded-content",
                                                  "dropdownDirection": "down",
                                                  "dropdownPosition": "right",
                                                  "expandId": "expandable-toggle",
                                                  "firstUserColumnIndex": 1,
                                                  "onCollapse": undefined,
                                                  "onExpand": undefined,
                                                  "onFavorite": undefined,
                                                  "onRowEdit": undefined,
                                                  "onSelect": true,
                                                  "onSort": undefined,
                                                  "rowLabeledBy": "simple-node",
                                                  "selectVariant": "checkbox",
                                                  "sortBy": undefined,
                                                },
                                                "header": Object {
                                                  "formatters": Array [],
                                                  "label": "",
                                                  "transforms": Array [
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                  ],
                                                },
                                                "property": "column-3",
                                                "props": Object {
                                                  "data-key": 3,
                                                  "data-label": "",
                                                },
                                              },
                                            ]
                                          }
                                          headerRows={null}
                                          onRow={[Function]}
                                          onRowClick={[Function]}
                                          rowKey="secretTableRowKeyId"
                                          rows={
                                            Array [
                                              Object {
                                                "cells": Array [
                                                  Object {
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  Object {
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  Object {
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                ],
                                                "disableSelection": true,
                                              },
                                              Object {
                                                "cells": Array [
                                                  Object {
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  Object {
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  Object {
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                ],
                                                "disableSelection": true,
                                              },
                                              Object {
                                                "cells": Array [
                                                  Object {
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  Object {
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  Object {
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                ],
                                                "disableSelection": true,
                                              },
                                              Object {
                                                "cells": Array [
                                                  Object {
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  Object {
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  Object {
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                ],
                                                "disableSelection": true,
                                              },
                                              Object {
                                                "cells": Array [
                                                  Object {
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  Object {
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  Object {
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                ],
                                                "disableSelection": true,
                                              },
                                              Object {
                                                "cells": Array [
                                                  Object {
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  Object {
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  Object {
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                ],
                                                "disableSelection": true,
                                              },
                                              Object {
                                                "cells": Array [
                                                  Object {
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  Object {
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  Object {
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                ],
                                                "disableSelection": true,
                                              },
                                              Object {
                                                "cells": Array [
                                                  Object {
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  Object {
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  Object {
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                ],
                                                "disableSelection": true,
                                              },
                                            ]
                                          }
                                        >
                                          <Component
                                            className=""
                                            headerRows={null}
                                            mappedRows={
                                              Array [
                                                Object {
                                                  "cells": Array [
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                  ],
                                                  "column-3": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  "disableSelection": true,
                                                  "fact": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  "isExpanded": undefined,
                                                  "isFirst": true,
                                                  "isFirstVisible": true,
                                                  "isHeightAuto": false,
                                                  "isLast": false,
                                                  "isLastVisible": false,
                                                  "secretTableRowKeyId": 0,
                                                  "value": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                },
                                                Object {
                                                  "cells": Array [
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                  ],
                                                  "column-3": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  "disableSelection": true,
                                                  "fact": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  "isExpanded": undefined,
                                                  "isFirst": false,
                                                  "isFirstVisible": false,
                                                  "isHeightAuto": false,
                                                  "isLast": false,
                                                  "isLastVisible": false,
                                                  "secretTableRowKeyId": 1,
                                                  "value": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                },
                                                Object {
                                                  "cells": Array [
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                  ],
                                                  "column-3": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  "disableSelection": true,
                                                  "fact": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  "isExpanded": undefined,
                                                  "isFirst": false,
                                                  "isFirstVisible": false,
                                                  "isHeightAuto": false,
                                                  "isLast": false,
                                                  "isLastVisible": false,
                                                  "secretTableRowKeyId": 2,
                                                  "value": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                },
                                                Object {
                                                  "cells": Array [
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                  ],
                                                  "column-3": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  "disableSelection": true,
                                                  "fact": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  "isExpanded": undefined,
                                                  "isFirst": false,
                                                  "isFirstVisible": false,
                                                  "isHeightAuto": false,
                                                  "isLast": false,
                                                  "isLastVisible": false,
                                                  "secretTableRowKeyId": 3,
                                                  "value": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                },
                                                Object {
                                                  "cells": Array [
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                  ],
                                                  "column-3": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  "disableSelection": true,
                                                  "fact": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  "isExpanded": undefined,
                                                  "isFirst": false,
                                                  "isFirstVisible": false,
                                                  "isHeightAuto": false,
                                                  "isLast": false,
                                                  "isLastVisible": false,
                                                  "secretTableRowKeyId": 4,
                                                  "value": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                },
                                                Object {
                                                  "cells": Array [
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                  ],
                                                  "column-3": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  "disableSelection": true,
                                                  "fact": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  "isExpanded": undefined,
                                                  "isFirst": false,
                                                  "isFirstVisible": false,
                                                  "isHeightAuto": false,
                                                  "isLast": false,
                                                  "isLastVisible": false,
                                                  "secretTableRowKeyId": 5,
                                                  "value": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                },
                                                Object {
                                                  "cells": Array [
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                  ],
                                                  "column-3": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  "disableSelection": true,
                                                  "fact": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  "isExpanded": undefined,
                                                  "isFirst": false,
                                                  "isFirstVisible": false,
                                                  "isHeightAuto": false,
                                                  "isLast": false,
                                                  "isLastVisible": false,
                                                  "secretTableRowKeyId": 6,
                                                  "value": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                },
                                                Object {
                                                  "cells": Array [
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                  ],
                                                  "column-3": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  "disableSelection": true,
                                                  "fact": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  "isExpanded": undefined,
                                                  "isFirst": false,
                                                  "isFirstVisible": false,
                                                  "isHeightAuto": false,
                                                  "isLast": true,
                                                  "isLastVisible": true,
                                                  "secretTableRowKeyId": 7,
                                                  "value": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                },
                                              ]
                                            }
                                            onRow={[Function]}
                                            rowKey="secretTableRowKeyId"
                                            rows={
                                              Array [
                                                Object {
                                                  "cells": Array [
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                  ],
                                                  "column-3": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  "disableSelection": true,
                                                  "fact": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  "isExpanded": undefined,
                                                  "isFirst": true,
                                                  "isFirstVisible": true,
                                                  "isHeightAuto": false,
                                                  "isLast": false,
                                                  "isLastVisible": false,
                                                  "secretTableRowKeyId": 0,
                                                  "value": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                },
                                                Object {
                                                  "cells": Array [
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                  ],
                                                  "column-3": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  "disableSelection": true,
                                                  "fact": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  "isExpanded": undefined,
                                                  "isFirst": false,
                                                  "isFirstVisible": false,
                                                  "isHeightAuto": false,
                                                  "isLast": false,
                                                  "isLastVisible": false,
                                                  "secretTableRowKeyId": 1,
                                                  "value": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                },
                                                Object {
                                                  "cells": Array [
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                  ],
                                                  "column-3": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  "disableSelection": true,
                                                  "fact": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  "isExpanded": undefined,
                                                  "isFirst": false,
                                                  "isFirstVisible": false,
                                                  "isHeightAuto": false,
                                                  "isLast": false,
                                                  "isLastVisible": false,
                                                  "secretTableRowKeyId": 2,
                                                  "value": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                },
                                                Object {
                                                  "cells": Array [
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                  ],
                                                  "column-3": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  "disableSelection": true,
                                                  "fact": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  "isExpanded": undefined,
                                                  "isFirst": false,
                                                  "isFirstVisible": false,
                                                  "isHeightAuto": false,
                                                  "isLast": false,
                                                  "isLastVisible": false,
                                                  "secretTableRowKeyId": 3,
                                                  "value": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                },
                                                Object {
                                                  "cells": Array [
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                  ],
                                                  "column-3": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  "disableSelection": true,
                                                  "fact": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  "isExpanded": undefined,
                                                  "isFirst": false,
                                                  "isFirstVisible": false,
                                                  "isHeightAuto": false,
                                                  "isLast": false,
                                                  "isLastVisible": false,
                                                  "secretTableRowKeyId": 4,
                                                  "value": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                },
                                                Object {
                                                  "cells": Array [
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                  ],
                                                  "column-3": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  "disableSelection": true,
                                                  "fact": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  "isExpanded": undefined,
                                                  "isFirst": false,
                                                  "isFirstVisible": false,
                                                  "isHeightAuto": false,
                                                  "isLast": false,
                                                  "isLastVisible": false,
                                                  "secretTableRowKeyId": 5,
                                                  "value": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                },
                                                Object {
                                                  "cells": Array [
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                  ],
                                                  "column-3": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  "disableSelection": true,
                                                  "fact": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  "isExpanded": undefined,
                                                  "isFirst": false,
                                                  "isFirstVisible": false,
                                                  "isHeightAuto": false,
                                                  "isLast": false,
                                                  "isLastVisible": false,
                                                  "secretTableRowKeyId": 6,
                                                  "value": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                },
                                                Object {
                                                  "cells": Array [
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    Object {
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                  ],
                                                  "column-3": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  "disableSelection": true,
                                                  "fact": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                  "isExpanded": undefined,
                                                  "isFirst": false,
                                                  "isFirstVisible": false,
                                                  "isHeightAuto": false,
                                                  "isLast": true,
                                                  "isLastVisible": true,
                                                  "secretTableRowKeyId": 7,
                                                  "value": Object {
                                                    "formatters": Array [],
                                                    "props": Object {
                                                      "isVisible": true,
                                                    },
                                                    "title": <Skeleton
                                                      isDark={false}
                                                      size="md"
                                                    />,
                                                  },
                                                },
                                              ]
                                            }
                                          >
                                            <BaseBody
                                              className=""
                                              columns={
                                                Array [
                                                  Object {
                                                    "cell": Object {
                                                      "formatters": Array [
                                                        [Function],
                                                      ],
                                                      "transforms": Array [
                                                        [Function],
                                                        [Function],
                                                      ],
                                                    },
                                                    "data": undefined,
                                                    "extraParams": Object {
                                                      "actionResolver": undefined,
                                                      "actions": undefined,
                                                      "allRowsSelected": false,
                                                      "areActionsDisabled": undefined,
                                                      "canSelectAll": false,
                                                      "canSortFavorites": true,
                                                      "contentId": "expanded-content",
                                                      "dropdownDirection": "down",
                                                      "dropdownPosition": "right",
                                                      "expandId": "expandable-toggle",
                                                      "firstUserColumnIndex": 1,
                                                      "onCollapse": undefined,
                                                      "onExpand": undefined,
                                                      "onFavorite": undefined,
                                                      "onRowEdit": undefined,
                                                      "onSelect": true,
                                                      "onSort": undefined,
                                                      "rowLabeledBy": "simple-node",
                                                      "selectVariant": "checkbox",
                                                      "sortBy": undefined,
                                                    },
                                                    "header": Object {
                                                      "formatters": Array [],
                                                      "label": "",
                                                      "transforms": Array [
                                                        [Function],
                                                        [Function],
                                                      ],
                                                    },
                                                    "property": "column-0",
                                                    "props": Object {
                                                      "data-key": 0,
                                                      "data-label": "",
                                                    },
                                                  },
                                                  Object {
                                                    "cell": Object {
                                                      "formatters": Array [
                                                        [Function],
                                                      ],
                                                      "transforms": Array [
                                                        [Function],
                                                      ],
                                                    },
                                                    "data": undefined,
                                                    "extraParams": Object {
                                                      "actionResolver": undefined,
                                                      "actions": undefined,
                                                      "allRowsSelected": false,
                                                      "areActionsDisabled": undefined,
                                                      "canSelectAll": false,
                                                      "canSortFavorites": true,
                                                      "contentId": "expanded-content",
                                                      "dropdownDirection": "down",
                                                      "dropdownPosition": "right",
                                                      "expandId": "expandable-toggle",
                                                      "firstUserColumnIndex": 1,
                                                      "onCollapse": undefined,
                                                      "onExpand": undefined,
                                                      "onFavorite": undefined,
                                                      "onRowEdit": undefined,
                                                      "onSelect": true,
                                                      "onSort": undefined,
                                                      "rowLabeledBy": "simple-node",
                                                      "selectVariant": "checkbox",
                                                      "sortBy": undefined,
                                                    },
                                                    "header": Object {
                                                      "formatters": Array [],
                                                      "label": "Fact",
                                                      "transforms": Array [
                                                        [Function],
                                                        [Function],
                                                        [Function],
                                                      ],
                                                    },
                                                    "property": "fact",
                                                    "props": Object {
                                                      "data-key": 1,
                                                      "data-label": "Fact",
                                                    },
                                                  },
                                                  Object {
                                                    "cell": Object {
                                                      "formatters": Array [
                                                        [Function],
                                                      ],
                                                      "transforms": Array [
                                                        [Function],
                                                      ],
                                                    },
                                                    "data": undefined,
                                                    "extraParams": Object {
                                                      "actionResolver": undefined,
                                                      "actions": undefined,
                                                      "allRowsSelected": false,
                                                      "areActionsDisabled": undefined,
                                                      "canSelectAll": false,
                                                      "canSortFavorites": true,
                                                      "contentId": "expanded-content",
                                                      "dropdownDirection": "down",
                                                      "dropdownPosition": "right",
                                                      "expandId": "expandable-toggle",
                                                      "firstUserColumnIndex": 1,
                                                      "onCollapse": undefined,
                                                      "onExpand": undefined,
                                                      "onFavorite": undefined,
                                                      "onRowEdit": undefined,
                                                      "onSelect": true,
                                                      "onSort": undefined,
                                                      "rowLabeledBy": "simple-node",
                                                      "selectVariant": "checkbox",
                                                      "sortBy": undefined,
                                                    },
                                                    "header": Object {
                                                      "formatters": Array [],
                                                      "label": "Value",
                                                      "transforms": Array [
                                                        [Function],
                                                        [Function],
                                                        [Function],
                                                      ],
                                                    },
                                                    "property": "value",
                                                    "props": Object {
                                                      "data-key": 2,
                                                      "data-label": "Value",
                                                    },
                                                  },
                                                  Object {
                                                    "cell": Object {
                                                      "formatters": Array [
                                                        [Function],
                                                      ],
                                                      "transforms": Array [
                                                        [Function],
                                                      ],
                                                    },
                                                    "data": undefined,
                                                    "extraParams": Object {
                                                      "actionResolver": undefined,
                                                      "actions": undefined,
                                                      "allRowsSelected": false,
                                                      "areActionsDisabled": undefined,
                                                      "canSelectAll": false,
                                                      "canSortFavorites": true,
                                                      "contentId": "expanded-content",
                                                      "dropdownDirection": "down",
                                                      "dropdownPosition": "right",
                                                      "expandId": "expandable-toggle",
                                                      "firstUserColumnIndex": 1,
                                                      "onCollapse": undefined,
                                                      "onExpand": undefined,
                                                      "onFavorite": undefined,
                                                      "onRowEdit": undefined,
                                                      "onSelect": true,
                                                      "onSort": undefined,
                                                      "rowLabeledBy": "simple-node",
                                                      "selectVariant": "checkbox",
                                                      "sortBy": undefined,
                                                    },
                                                    "header": Object {
                                                      "formatters": Array [],
                                                      "label": "",
                                                      "transforms": Array [
                                                        [Function],
                                                        [Function],
                                                        [Function],
                                                      ],
                                                    },
                                                    "property": "column-3",
                                                    "props": Object {
                                                      "data-key": 3,
                                                      "data-label": "",
                                                    },
                                                  },
                                                ]
                                              }
                                              headerRows={null}
                                              mappedRows={
                                                Array [
                                                  Object {
                                                    "cells": Array [
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                    ],
                                                    "column-3": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    "disableSelection": true,
                                                    "fact": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    "isExpanded": undefined,
                                                    "isFirst": true,
                                                    "isFirstVisible": true,
                                                    "isHeightAuto": false,
                                                    "isLast": false,
                                                    "isLastVisible": false,
                                                    "secretTableRowKeyId": 0,
                                                    "value": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                  },
                                                  Object {
                                                    "cells": Array [
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                    ],
                                                    "column-3": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    "disableSelection": true,
                                                    "fact": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    "isExpanded": undefined,
                                                    "isFirst": false,
                                                    "isFirstVisible": false,
                                                    "isHeightAuto": false,
                                                    "isLast": false,
                                                    "isLastVisible": false,
                                                    "secretTableRowKeyId": 1,
                                                    "value": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                  },
                                                  Object {
                                                    "cells": Array [
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                    ],
                                                    "column-3": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    "disableSelection": true,
                                                    "fact": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    "isExpanded": undefined,
                                                    "isFirst": false,
                                                    "isFirstVisible": false,
                                                    "isHeightAuto": false,
                                                    "isLast": false,
                                                    "isLastVisible": false,
                                                    "secretTableRowKeyId": 2,
                                                    "value": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                  },
                                                  Object {
                                                    "cells": Array [
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                    ],
                                                    "column-3": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    "disableSelection": true,
                                                    "fact": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    "isExpanded": undefined,
                                                    "isFirst": false,
                                                    "isFirstVisible": false,
                                                    "isHeightAuto": false,
                                                    "isLast": false,
                                                    "isLastVisible": false,
                                                    "secretTableRowKeyId": 3,
                                                    "value": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                  },
                                                  Object {
                                                    "cells": Array [
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                    ],
                                                    "column-3": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    "disableSelection": true,
                                                    "fact": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    "isExpanded": undefined,
                                                    "isFirst": false,
                                                    "isFirstVisible": false,
                                                    "isHeightAuto": false,
                                                    "isLast": false,
                                                    "isLastVisible": false,
                                                    "secretTableRowKeyId": 4,
                                                    "value": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                  },
                                                  Object {
                                                    "cells": Array [
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                    ],
                                                    "column-3": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    "disableSelection": true,
                                                    "fact": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    "isExpanded": undefined,
                                                    "isFirst": false,
                                                    "isFirstVisible": false,
                                                    "isHeightAuto": false,
                                                    "isLast": false,
                                                    "isLastVisible": false,
                                                    "secretTableRowKeyId": 5,
                                                    "value": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                  },
                                                  Object {
                                                    "cells": Array [
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                    ],
                                                    "column-3": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    "disableSelection": true,
                                                    "fact": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    "isExpanded": undefined,
                                                    "isFirst": false,
                                                    "isFirstVisible": false,
                                                    "isHeightAuto": false,
                                                    "isLast": false,
                                                    "isLastVisible": false,
                                                    "secretTableRowKeyId": 6,
                                                    "value": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                  },
                                                  Object {
                                                    "cells": Array [
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                    ],
                                                    "column-3": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    "disableSelection": true,
                                                    "fact": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    "isExpanded": undefined,
                                                    "isFirst": false,
                                                    "isFirstVisible": false,
                                                    "isHeightAuto": false,
                                                    "isLast": true,
                                                    "isLastVisible": true,
                                                    "secretTableRowKeyId": 7,
                                                    "value": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                  },
                                                ]
                                              }
                                              onRow={[Function]}
                                              renderers={
                                                Object {
                                                  "body": Object {
                                                    "cell": [Function],
                                                    "row": [Function],
                                                    "wrapper": [Function],
                                                  },
                                                  "header": Object {
                                                    "cell": [Function],
                                                    "row": Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "displayName": "Tr",
                                                      "render": [Function],
                                                    },
                                                    "wrapper": Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "displayName": "Thead",
                                                      "render": [Function],
                                                    },
                                                  },
                                                  "table": Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "displayName": "TableComposable",
                                                    "render": [Function],
                                                  },
                                                }
                                              }
                                              rowKey="secretTableRowKeyId"
                                              rows={
                                                Array [
                                                  Object {
                                                    "cells": Array [
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                    ],
                                                    "column-3": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    "disableSelection": true,
                                                    "fact": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    "isExpanded": undefined,
                                                    "isFirst": true,
                                                    "isFirstVisible": true,
                                                    "isHeightAuto": false,
                                                    "isLast": false,
                                                    "isLastVisible": false,
                                                    "secretTableRowKeyId": 0,
                                                    "value": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                  },
                                                  Object {
                                                    "cells": Array [
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                    ],
                                                    "column-3": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    "disableSelection": true,
                                                    "fact": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    "isExpanded": undefined,
                                                    "isFirst": false,
                                                    "isFirstVisible": false,
                                                    "isHeightAuto": false,
                                                    "isLast": false,
                                                    "isLastVisible": false,
                                                    "secretTableRowKeyId": 1,
                                                    "value": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                  },
                                                  Object {
                                                    "cells": Array [
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                    ],
                                                    "column-3": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    "disableSelection": true,
                                                    "fact": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    "isExpanded": undefined,
                                                    "isFirst": false,
                                                    "isFirstVisible": false,
                                                    "isHeightAuto": false,
                                                    "isLast": false,
                                                    "isLastVisible": false,
                                                    "secretTableRowKeyId": 2,
                                                    "value": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                  },
                                                  Object {
                                                    "cells": Array [
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                    ],
                                                    "column-3": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    "disableSelection": true,
                                                    "fact": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    "isExpanded": undefined,
                                                    "isFirst": false,
                                                    "isFirstVisible": false,
                                                    "isHeightAuto": false,
                                                    "isLast": false,
                                                    "isLastVisible": false,
                                                    "secretTableRowKeyId": 3,
                                                    "value": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                  },
                                                  Object {
                                                    "cells": Array [
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                    ],
                                                    "column-3": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    "disableSelection": true,
                                                    "fact": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    "isExpanded": undefined,
                                                    "isFirst": false,
                                                    "isFirstVisible": false,
                                                    "isHeightAuto": false,
                                                    "isLast": false,
                                                    "isLastVisible": false,
                                                    "secretTableRowKeyId": 4,
                                                    "value": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                  },
                                                  Object {
                                                    "cells": Array [
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                    ],
                                                    "column-3": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    "disableSelection": true,
                                                    "fact": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    "isExpanded": undefined,
                                                    "isFirst": false,
                                                    "isFirstVisible": false,
                                                    "isHeightAuto": false,
                                                    "isLast": false,
                                                    "isLastVisible": false,
                                                    "secretTableRowKeyId": 5,
                                                    "value": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                  },
                                                  Object {
                                                    "cells": Array [
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                    ],
                                                    "column-3": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    "disableSelection": true,
                                                    "fact": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    "isExpanded": undefined,
                                                    "isFirst": false,
                                                    "isFirstVisible": false,
                                                    "isHeightAuto": false,
                                                    "isLast": false,
                                                    "isLastVisible": false,
                                                    "secretTableRowKeyId": 6,
                                                    "value": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                  },
                                                  Object {
                                                    "cells": Array [
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      Object {
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                    ],
                                                    "column-3": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    "disableSelection": true,
                                                    "fact": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                    "isExpanded": undefined,
                                                    "isFirst": false,
                                                    "isFirstVisible": false,
                                                    "isHeightAuto": false,
                                                    "isLast": true,
                                                    "isLastVisible": true,
                                                    "secretTableRowKeyId": 7,
                                                    "value": Object {
                                                      "formatters": Array [],
                                                      "props": Object {
                                                        "isVisible": true,
                                                      },
                                                      "title": <Skeleton
                                                        isDark={false}
                                                        size="md"
                                                      />,
                                                    },
                                                  },
                                                ]
                                              }
                                            >
                                              <BodyWrapper
                                                className=""
                                                headerRows={null}
                                                mappedRows={
                                                  Array [
                                                    Object {
                                                      "cells": Array [
                                                        Object {
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="md"
                                                          />,
                                                        },
                                                        Object {
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="md"
                                                          />,
                                                        },
                                                        Object {
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="md"
                                                          />,
                                                        },
                                                      ],
                                                      "column-3": Object {
                                                        "formatters": Array [],
                                                        "props": Object {
                                                          "isVisible": true,
                                                        },
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      "disableSelection": true,
                                                      "fact": Object {
                                                        "formatters": Array [],
                                                        "props": Object {
                                                          "isVisible": true,
                                                        },
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      "isExpanded": undefined,
                                                      "isFirst": true,
                                                      "isFirstVisible": true,
                                                      "isHeightAuto": false,
                                                      "isLast": false,
                                                      "isLastVisible": false,
                                                      "secretTableRowKeyId": 0,
                                                      "value": Object {
                                                        "formatters": Array [],
                                                        "props": Object {
                                                          "isVisible": true,
                                                        },
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                    },
                                                    Object {
                                                      "cells": Array [
                                                        Object {
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="md"
                                                          />,
                                                        },
                                                        Object {
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="md"
                                                          />,
                                                        },
                                                        Object {
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="md"
                                                          />,
                                                        },
                                                      ],
                                                      "column-3": Object {
                                                        "formatters": Array [],
                                                        "props": Object {
                                                          "isVisible": true,
                                                        },
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      "disableSelection": true,
                                                      "fact": Object {
                                                        "formatters": Array [],
                                                        "props": Object {
                                                          "isVisible": true,
                                                        },
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      "isExpanded": undefined,
                                                      "isFirst": false,
                                                      "isFirstVisible": false,
                                                      "isHeightAuto": false,
                                                      "isLast": false,
                                                      "isLastVisible": false,
                                                      "secretTableRowKeyId": 1,
                                                      "value": Object {
                                                        "formatters": Array [],
                                                        "props": Object {
                                                          "isVisible": true,
                                                        },
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                    },
                                                    Object {
                                                      "cells": Array [
                                                        Object {
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="md"
                                                          />,
                                                        },
                                                        Object {
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="md"
                                                          />,
                                                        },
                                                        Object {
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="md"
                                                          />,
                                                        },
                                                      ],
                                                      "column-3": Object {
                                                        "formatters": Array [],
                                                        "props": Object {
                                                          "isVisible": true,
                                                        },
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      "disableSelection": true,
                                                      "fact": Object {
                                                        "formatters": Array [],
                                                        "props": Object {
                                                          "isVisible": true,
                                                        },
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      "isExpanded": undefined,
                                                      "isFirst": false,
                                                      "isFirstVisible": false,
                                                      "isHeightAuto": false,
                                                      "isLast": false,
                                                      "isLastVisible": false,
                                                      "secretTableRowKeyId": 2,
                                                      "value": Object {
                                                        "formatters": Array [],
                                                        "props": Object {
                                                          "isVisible": true,
                                                        },
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                    },
                                                    Object {
                                                      "cells": Array [
                                                        Object {
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="md"
                                                          />,
                                                        },
                                                        Object {
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="md"
                                                          />,
                                                        },
                                                        Object {
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="md"
                                                          />,
                                                        },
                                                      ],
                                                      "column-3": Object {
                                                        "formatters": Array [],
                                                        "props": Object {
                                                          "isVisible": true,
                                                        },
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      "disableSelection": true,
                                                      "fact": Object {
                                                        "formatters": Array [],
                                                        "props": Object {
                                                          "isVisible": true,
                                                        },
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      "isExpanded": undefined,
                                                      "isFirst": false,
                                                      "isFirstVisible": false,
                                                      "isHeightAuto": false,
                                                      "isLast": false,
                                                      "isLastVisible": false,
                                                      "secretTableRowKeyId": 3,
                                                      "value": Object {
                                                        "formatters": Array [],
                                                        "props": Object {
                                                          "isVisible": true,
                                                        },
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                    },
                                                    Object {
                                                      "cells": Array [
                                                        Object {
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="md"
                                                          />,
                                                        },
                                                        Object {
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="md"
                                                          />,
                                                        },
                                                        Object {
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="md"
                                                          />,
                                                        },
                                                      ],
                                                      "column-3": Object {
                                                        "formatters": Array [],
                                                        "props": Object {
                                                          "isVisible": true,
                                                        },
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      "disableSelection": true,
                                                      "fact": Object {
                                                        "formatters": Array [],
                                                        "props": Object {
                                                          "isVisible": true,
                                                        },
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      "isExpanded": undefined,
                                                      "isFirst": false,
                                                      "isFirstVisible": false,
                                                      "isHeightAuto": false,
                                                      "isLast": false,
                                                      "isLastVisible": false,
                                                      "secretTableRowKeyId": 4,
                                                      "value": Object {
                                                        "formatters": Array [],
                                                        "props": Object {
                                                          "isVisible": true,
                                                        },
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                    },
                                                    Object {
                                                      "cells": Array [
                                                        Object {
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="md"
                                                          />,
                                                        },
                                                        Object {
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="md"
                                                          />,
                                                        },
                                                        Object {
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="md"
                                                          />,
                                                        },
                                                      ],
                                                      "column-3": Object {
                                                        "formatters": Array [],
                                                        "props": Object {
                                                          "isVisible": true,
                                                        },
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      "disableSelection": true,
                                                      "fact": Object {
                                                        "formatters": Array [],
                                                        "props": Object {
                                                          "isVisible": true,
                                                        },
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      "isExpanded": undefined,
                                                      "isFirst": false,
                                                      "isFirstVisible": false,
                                                      "isHeightAuto": false,
                                                      "isLast": false,
                                                      "isLastVisible": false,
                                                      "secretTableRowKeyId": 5,
                                                      "value": Object {
                                                        "formatters": Array [],
                                                        "props": Object {
                                                          "isVisible": true,
                                                        },
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                    },
                                                    Object {
                                                      "cells": Array [
                                                        Object {
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="md"
                                                          />,
                                                        },
                                                        Object {
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="md"
                                                          />,
                                                        },
                                                        Object {
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="md"
                                                          />,
                                                        },
                                                      ],
                                                      "column-3": Object {
                                                        "formatters": Array [],
                                                        "props": Object {
                                                          "isVisible": true,
                                                        },
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      "disableSelection": true,
                                                      "fact": Object {
                                                        "formatters": Array [],
                                                        "props": Object {
                                                          "isVisible": true,
                                                        },
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      "isExpanded": undefined,
                                                      "isFirst": false,
                                                      "isFirstVisible": false,
                                                      "isHeightAuto": false,
                                                      "isLast": false,
                                                      "isLastVisible": false,
                                                      "secretTableRowKeyId": 6,
                                                      "value": Object {
                                                        "formatters": Array [],
                                                        "props": Object {
                                                          "isVisible": true,
                                                        },
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                    },
                                                    Object {
                                                      "cells": Array [
                                                        Object {
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="md"
                                                          />,
                                                        },
                                                        Object {
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="md"
                                                          />,
                                                        },
                                                        Object {
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="md"
                                                          />,
                                                        },
                                                      ],
                                                      "column-3": Object {
                                                        "formatters": Array [],
                                                        "props": Object {
                                                          "isVisible": true,
                                                        },
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      "disableSelection": true,
                                                      "fact": Object {
                                                        "formatters": Array [],
                                                        "props": Object {
                                                          "isVisible": true,
                                                        },
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                      "isExpanded": undefined,
                                                      "isFirst": false,
                                                      "isFirstVisible": false,
                                                      "isHeightAuto": false,
                                                      "isLast": true,
                                                      "isLastVisible": true,
                                                      "secretTableRowKeyId": 7,
                                                      "value": Object {
                                                        "formatters": Array [],
                                                        "props": Object {
                                                          "isVisible": true,
                                                        },
                                                        "title": <Skeleton
                                                          isDark={false}
                                                          size="md"
                                                        />,
                                                      },
                                                    },
                                                  ]
                                                }
                                              >
                                                <Tbody
                                                  className=""
                                                >
                                                  <TbodyBase
                                                    className=""
                                                    innerRef={null}
                                                  >
                                                    <tbody
                                                      className=""
                                                      role="rowgroup"
                                                    >
                                                      <BodyRow
                                                        columns={
                                                          Array [
                                                            Object {
                                                              "cell": Object {
                                                                "formatters": Array [
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "data": undefined,
                                                              "extraParams": Object {
                                                                "actionResolver": undefined,
                                                                "actions": undefined,
                                                                "allRowsSelected": false,
                                                                "areActionsDisabled": undefined,
                                                                "canSelectAll": false,
                                                                "canSortFavorites": true,
                                                                "contentId": "expanded-content",
                                                                "dropdownDirection": "down",
                                                                "dropdownPosition": "right",
                                                                "expandId": "expandable-toggle",
                                                                "firstUserColumnIndex": 1,
                                                                "onCollapse": undefined,
                                                                "onExpand": undefined,
                                                                "onFavorite": undefined,
                                                                "onRowEdit": undefined,
                                                                "onSelect": true,
                                                                "onSort": undefined,
                                                                "rowLabeledBy": "simple-node",
                                                                "selectVariant": "checkbox",
                                                                "sortBy": undefined,
                                                              },
                                                              "header": Object {
                                                                "formatters": Array [],
                                                                "label": "",
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "property": "column-0",
                                                              "props": Object {
                                                                "data-key": 0,
                                                                "data-label": "",
                                                              },
                                                            },
                                                            Object {
                                                              "cell": Object {
                                                                "formatters": Array [
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "data": undefined,
                                                              "extraParams": Object {
                                                                "actionResolver": undefined,
                                                                "actions": undefined,
                                                                "allRowsSelected": false,
                                                                "areActionsDisabled": undefined,
                                                                "canSelectAll": false,
                                                                "canSortFavorites": true,
                                                                "contentId": "expanded-content",
                                                                "dropdownDirection": "down",
                                                                "dropdownPosition": "right",
                                                                "expandId": "expandable-toggle",
                                                                "firstUserColumnIndex": 1,
                                                                "onCollapse": undefined,
                                                                "onExpand": undefined,
                                                                "onFavorite": undefined,
                                                                "onRowEdit": undefined,
                                                                "onSelect": true,
                                                                "onSort": undefined,
                                                                "rowLabeledBy": "simple-node",
                                                                "selectVariant": "checkbox",
                                                                "sortBy": undefined,
                                                              },
                                                              "header": Object {
                                                                "formatters": Array [],
                                                                "label": "Fact",
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "property": "fact",
                                                              "props": Object {
                                                                "data-key": 1,
                                                                "data-label": "Fact",
                                                              },
                                                            },
                                                            Object {
                                                              "cell": Object {
                                                                "formatters": Array [
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "data": undefined,
                                                              "extraParams": Object {
                                                                "actionResolver": undefined,
                                                                "actions": undefined,
                                                                "allRowsSelected": false,
                                                                "areActionsDisabled": undefined,
                                                                "canSelectAll": false,
                                                                "canSortFavorites": true,
                                                                "contentId": "expanded-content",
                                                                "dropdownDirection": "down",
                                                                "dropdownPosition": "right",
                                                                "expandId": "expandable-toggle",
                                                                "firstUserColumnIndex": 1,
                                                                "onCollapse": undefined,
                                                                "onExpand": undefined,
                                                                "onFavorite": undefined,
                                                                "onRowEdit": undefined,
                                                                "onSelect": true,
                                                                "onSort": undefined,
                                                                "rowLabeledBy": "simple-node",
                                                                "selectVariant": "checkbox",
                                                                "sortBy": undefined,
                                                              },
                                                              "header": Object {
                                                                "formatters": Array [],
                                                                "label": "Value",
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "property": "value",
                                                              "props": Object {
                                                                "data-key": 2,
                                                                "data-label": "Value",
                                                              },
                                                            },
                                                            Object {
                                                              "cell": Object {
                                                                "formatters": Array [
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "data": undefined,
                                                              "extraParams": Object {
                                                                "actionResolver": undefined,
                                                                "actions": undefined,
                                                                "allRowsSelected": false,
                                                                "areActionsDisabled": undefined,
                                                                "canSelectAll": false,
                                                                "canSortFavorites": true,
                                                                "contentId": "expanded-content",
                                                                "dropdownDirection": "down",
                                                                "dropdownPosition": "right",
                                                                "expandId": "expandable-toggle",
                                                                "firstUserColumnIndex": 1,
                                                                "onCollapse": undefined,
                                                                "onExpand": undefined,
                                                                "onFavorite": undefined,
                                                                "onRowEdit": undefined,
                                                                "onSelect": true,
                                                                "onSort": undefined,
                                                                "rowLabeledBy": "simple-node",
                                                                "selectVariant": "checkbox",
                                                                "sortBy": undefined,
                                                              },
                                                              "header": Object {
                                                                "formatters": Array [],
                                                                "label": "",
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "property": "column-3",
                                                              "props": Object {
                                                                "data-key": 3,
                                                                "data-label": "",
                                                              },
                                                            },
                                                          ]
                                                        }
                                                        key="0-row"
                                                        onRow={[Function]}
                                                        renderers={
                                                          Object {
                                                            "cell": [Function],
                                                            "row": [Function],
                                                            "wrapper": [Function],
                                                          }
                                                        }
                                                        rowData={
                                                          Object {
                                                            "cells": Array [
                                                              Object {
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                              Object {
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                              Object {
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                            ],
                                                            "column-3": Object {
                                                              "formatters": Array [],
                                                              "props": Object {
                                                                "isVisible": true,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="md"
                                                              />,
                                                            },
                                                            "disableSelection": true,
                                                            "fact": Object {
                                                              "formatters": Array [],
                                                              "props": Object {
                                                                "isVisible": true,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="md"
                                                              />,
                                                            },
                                                            "isExpanded": undefined,
                                                            "isFirst": true,
                                                            "isFirstVisible": true,
                                                            "isHeightAuto": false,
                                                            "isLast": false,
                                                            "isLastVisible": false,
                                                            "secretTableRowKeyId": 0,
                                                            "value": Object {
                                                              "formatters": Array [],
                                                              "props": Object {
                                                                "isVisible": true,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="md"
                                                              />,
                                                            },
                                                          }
                                                        }
                                                        rowIndex={0}
                                                        rowKey="0-row"
                                                      >
                                                        <RowWrapper
                                                          className=""
                                                          onMouseDown={[Function]}
                                                          row={
                                                            Object {
                                                              "cells": Array [
                                                                Object {
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="md"
                                                                  />,
                                                                },
                                                                Object {
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="md"
                                                                  />,
                                                                },
                                                                Object {
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="md"
                                                                  />,
                                                                },
                                                              ],
                                                              "column-3": Object {
                                                                "formatters": Array [],
                                                                "props": Object {
                                                                  "isVisible": true,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                              "disableSelection": true,
                                                              "fact": Object {
                                                                "formatters": Array [],
                                                                "props": Object {
                                                                  "isVisible": true,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                              "isExpanded": undefined,
                                                              "isFirst": true,
                                                              "isFirstVisible": true,
                                                              "isHeightAuto": false,
                                                              "isLast": false,
                                                              "isLastVisible": false,
                                                              "secretTableRowKeyId": 0,
                                                              "value": Object {
                                                                "formatters": Array [],
                                                                "props": Object {
                                                                  "isVisible": true,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                            }
                                                          }
                                                          rowProps={
                                                            Object {
                                                              "rowIndex": 0,
                                                              "rowKey": "0-row",
                                                            }
                                                          }
                                                        >
                                                          <Tr
                                                            className=""
                                                            onMouseDown={[Function]}
                                                          >
                                                            <TrBase
                                                              className=""
                                                              innerRef={null}
                                                              onMouseDown={[Function]}
                                                            >
                                                              <tr
                                                                className=""
                                                                data-ouia-component-id="OUIA-Generated-TableRow-2"
                                                                data-ouia-component-type="PF4/TableRow"
                                                                data-ouia-safe={true}
                                                                hidden={false}
                                                                onMouseDown={[Function]}
                                                              >
                                                                <BodyCell
                                                                  className="pf-c-table__check"
                                                                  component="td"
                                                                  data-key={0}
                                                                  data-label=""
                                                                  isVisible={true}
                                                                  key="col-0-row-0"
                                                                >
                                                                  <Td
                                                                    className="pf-c-table__check"
                                                                    component="td"
                                                                    data-key={0}
                                                                    dataLabel={null}
                                                                    onMouseEnter={[Function]}
                                                                    textCenter={false}
                                                                  >
                                                                    <TdBase
                                                                      className="pf-c-table__check"
                                                                      component="td"
                                                                      data-key={0}
                                                                      dataLabel={null}
                                                                      innerRef={null}
                                                                      onMouseEnter={[Function]}
                                                                      textCenter={false}
                                                                    >
                                                                      <td
                                                                        className="pf-c-table__check"
                                                                        data-key={0}
                                                                        data-label={null}
                                                                        onMouseEnter={[Function]}
                                                                      >
                                                                        <SelectColumn
                                                                          aria-label="Select row 0"
                                                                          checked={false}
                                                                          className="pf-c-check__input"
                                                                          disabled={true}
                                                                          name="checkrow0"
                                                                          onSelect={[Function]}
                                                                          selectVariant="checkbox"
                                                                        >
                                                                          <input
                                                                            aria-label="Select row 0"
                                                                            checked={false}
                                                                            disabled={true}
                                                                            name="checkrow0"
                                                                            onChange={[Function]}
                                                                            type="checkbox"
                                                                          />
                                                                        </SelectColumn>
                                                                      </td>
                                                                    </TdBase>
                                                                  </Td>
                                                                </BodyCell>
                                                                <BodyCell
                                                                  data-key={1}
                                                                  data-label="Fact"
                                                                  isVisible={true}
                                                                  key="col-1-row-0"
                                                                >
                                                                  <Td
                                                                    className=""
                                                                    component="td"
                                                                    data-key={1}
                                                                    dataLabel="Fact"
                                                                    onMouseEnter={[Function]}
                                                                    textCenter={false}
                                                                  >
                                                                    <TdBase
                                                                      className=""
                                                                      component="td"
                                                                      data-key={1}
                                                                      dataLabel="Fact"
                                                                      innerRef={null}
                                                                      onMouseEnter={[Function]}
                                                                      textCenter={false}
                                                                    >
                                                                      <td
                                                                        className=""
                                                                        data-key={1}
                                                                        data-label="Fact"
                                                                        onMouseEnter={[Function]}
                                                                      >
                                                                        <Skeleton
                                                                          isDark={false}
                                                                          size="md"
                                                                        >
                                                                          <div
                                                                            className="ins-c-skeleton ins-c-skeleton__md"
                                                                          >
                                                                             
                                                                          </div>
                                                                        </Skeleton>
                                                                      </td>
                                                                    </TdBase>
                                                                  </Td>
                                                                </BodyCell>
                                                                <BodyCell
                                                                  data-key={2}
                                                                  data-label="Value"
                                                                  isVisible={true}
                                                                  key="col-2-row-0"
                                                                >
                                                                  <Td
                                                                    className=""
                                                                    component="td"
                                                                    data-key={2}
                                                                    dataLabel="Value"
                                                                    onMouseEnter={[Function]}
                                                                    textCenter={false}
                                                                  >
                                                                    <TdBase
                                                                      className=""
                                                                      component="td"
                                                                      data-key={2}
                                                                      dataLabel="Value"
                                                                      innerRef={null}
                                                                      onMouseEnter={[Function]}
                                                                      textCenter={false}
                                                                    >
                                                                      <td
                                                                        className=""
                                                                        data-key={2}
                                                                        data-label="Value"
                                                                        onMouseEnter={[Function]}
                                                                      >
                                                                        <Skeleton
                                                                          isDark={false}
                                                                          size="md"
                                                                        >
                                                                          <div
                                                                            className="ins-c-skeleton ins-c-skeleton__md"
                                                                          >
                                                                             
                                                                          </div>
                                                                        </Skeleton>
                                                                      </td>
                                                                    </TdBase>
                                                                  </Td>
                                                                </BodyCell>
                                                                <BodyCell
                                                                  data-key={3}
                                                                  data-label=""
                                                                  isVisible={true}
                                                                  key="col-3-row-0"
                                                                >
                                                                  <Td
                                                                    className=""
                                                                    component="td"
                                                                    data-key={3}
                                                                    dataLabel={null}
                                                                    onMouseEnter={[Function]}
                                                                    textCenter={false}
                                                                  >
                                                                    <TdBase
                                                                      className=""
                                                                      component="td"
                                                                      data-key={3}
                                                                      dataLabel={null}
                                                                      innerRef={null}
                                                                      onMouseEnter={[Function]}
                                                                      textCenter={false}
                                                                    >
                                                                      <td
                                                                        className=""
                                                                        data-key={3}
                                                                        data-label={null}
                                                                        onMouseEnter={[Function]}
                                                                      >
                                                                        <Skeleton
                                                                          isDark={false}
                                                                          size="md"
                                                                        >
                                                                          <div
                                                                            className="ins-c-skeleton ins-c-skeleton__md"
                                                                          >
                                                                             
                                                                          </div>
                                                                        </Skeleton>
                                                                      </td>
                                                                    </TdBase>
                                                                  </Td>
                                                                </BodyCell>
                                                              </tr>
                                                            </TrBase>
                                                          </Tr>
                                                        </RowWrapper>
                                                      </BodyRow>
                                                      <BodyRow
                                                        columns={
                                                          Array [
                                                            Object {
                                                              "cell": Object {
                                                                "formatters": Array [
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "data": undefined,
                                                              "extraParams": Object {
                                                                "actionResolver": undefined,
                                                                "actions": undefined,
                                                                "allRowsSelected": false,
                                                                "areActionsDisabled": undefined,
                                                                "canSelectAll": false,
                                                                "canSortFavorites": true,
                                                                "contentId": "expanded-content",
                                                                "dropdownDirection": "down",
                                                                "dropdownPosition": "right",
                                                                "expandId": "expandable-toggle",
                                                                "firstUserColumnIndex": 1,
                                                                "onCollapse": undefined,
                                                                "onExpand": undefined,
                                                                "onFavorite": undefined,
                                                                "onRowEdit": undefined,
                                                                "onSelect": true,
                                                                "onSort": undefined,
                                                                "rowLabeledBy": "simple-node",
                                                                "selectVariant": "checkbox",
                                                                "sortBy": undefined,
                                                              },
                                                              "header": Object {
                                                                "formatters": Array [],
                                                                "label": "",
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "property": "column-0",
                                                              "props": Object {
                                                                "data-key": 0,
                                                                "data-label": "",
                                                              },
                                                            },
                                                            Object {
                                                              "cell": Object {
                                                                "formatters": Array [
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "data": undefined,
                                                              "extraParams": Object {
                                                                "actionResolver": undefined,
                                                                "actions": undefined,
                                                                "allRowsSelected": false,
                                                                "areActionsDisabled": undefined,
                                                                "canSelectAll": false,
                                                                "canSortFavorites": true,
                                                                "contentId": "expanded-content",
                                                                "dropdownDirection": "down",
                                                                "dropdownPosition": "right",
                                                                "expandId": "expandable-toggle",
                                                                "firstUserColumnIndex": 1,
                                                                "onCollapse": undefined,
                                                                "onExpand": undefined,
                                                                "onFavorite": undefined,
                                                                "onRowEdit": undefined,
                                                                "onSelect": true,
                                                                "onSort": undefined,
                                                                "rowLabeledBy": "simple-node",
                                                                "selectVariant": "checkbox",
                                                                "sortBy": undefined,
                                                              },
                                                              "header": Object {
                                                                "formatters": Array [],
                                                                "label": "Fact",
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "property": "fact",
                                                              "props": Object {
                                                                "data-key": 1,
                                                                "data-label": "Fact",
                                                              },
                                                            },
                                                            Object {
                                                              "cell": Object {
                                                                "formatters": Array [
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "data": undefined,
                                                              "extraParams": Object {
                                                                "actionResolver": undefined,
                                                                "actions": undefined,
                                                                "allRowsSelected": false,
                                                                "areActionsDisabled": undefined,
                                                                "canSelectAll": false,
                                                                "canSortFavorites": true,
                                                                "contentId": "expanded-content",
                                                                "dropdownDirection": "down",
                                                                "dropdownPosition": "right",
                                                                "expandId": "expandable-toggle",
                                                                "firstUserColumnIndex": 1,
                                                                "onCollapse": undefined,
                                                                "onExpand": undefined,
                                                                "onFavorite": undefined,
                                                                "onRowEdit": undefined,
                                                                "onSelect": true,
                                                                "onSort": undefined,
                                                                "rowLabeledBy": "simple-node",
                                                                "selectVariant": "checkbox",
                                                                "sortBy": undefined,
                                                              },
                                                              "header": Object {
                                                                "formatters": Array [],
                                                                "label": "Value",
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "property": "value",
                                                              "props": Object {
                                                                "data-key": 2,
                                                                "data-label": "Value",
                                                              },
                                                            },
                                                            Object {
                                                              "cell": Object {
                                                                "formatters": Array [
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "data": undefined,
                                                              "extraParams": Object {
                                                                "actionResolver": undefined,
                                                                "actions": undefined,
                                                                "allRowsSelected": false,
                                                                "areActionsDisabled": undefined,
                                                                "canSelectAll": false,
                                                                "canSortFavorites": true,
                                                                "contentId": "expanded-content",
                                                                "dropdownDirection": "down",
                                                                "dropdownPosition": "right",
                                                                "expandId": "expandable-toggle",
                                                                "firstUserColumnIndex": 1,
                                                                "onCollapse": undefined,
                                                                "onExpand": undefined,
                                                                "onFavorite": undefined,
                                                                "onRowEdit": undefined,
                                                                "onSelect": true,
                                                                "onSort": undefined,
                                                                "rowLabeledBy": "simple-node",
                                                                "selectVariant": "checkbox",
                                                                "sortBy": undefined,
                                                              },
                                                              "header": Object {
                                                                "formatters": Array [],
                                                                "label": "",
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "property": "column-3",
                                                              "props": Object {
                                                                "data-key": 3,
                                                                "data-label": "",
                                                              },
                                                            },
                                                          ]
                                                        }
                                                        key="1-row"
                                                        onRow={[Function]}
                                                        renderers={
                                                          Object {
                                                            "cell": [Function],
                                                            "row": [Function],
                                                            "wrapper": [Function],
                                                          }
                                                        }
                                                        rowData={
                                                          Object {
                                                            "cells": Array [
                                                              Object {
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                              Object {
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                              Object {
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                            ],
                                                            "column-3": Object {
                                                              "formatters": Array [],
                                                              "props": Object {
                                                                "isVisible": true,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="md"
                                                              />,
                                                            },
                                                            "disableSelection": true,
                                                            "fact": Object {
                                                              "formatters": Array [],
                                                              "props": Object {
                                                                "isVisible": true,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="md"
                                                              />,
                                                            },
                                                            "isExpanded": undefined,
                                                            "isFirst": false,
                                                            "isFirstVisible": false,
                                                            "isHeightAuto": false,
                                                            "isLast": false,
                                                            "isLastVisible": false,
                                                            "secretTableRowKeyId": 1,
                                                            "value": Object {
                                                              "formatters": Array [],
                                                              "props": Object {
                                                                "isVisible": true,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="md"
                                                              />,
                                                            },
                                                          }
                                                        }
                                                        rowIndex={1}
                                                        rowKey="1-row"
                                                      >
                                                        <RowWrapper
                                                          className=""
                                                          onMouseDown={[Function]}
                                                          row={
                                                            Object {
                                                              "cells": Array [
                                                                Object {
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="md"
                                                                  />,
                                                                },
                                                                Object {
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="md"
                                                                  />,
                                                                },
                                                                Object {
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="md"
                                                                  />,
                                                                },
                                                              ],
                                                              "column-3": Object {
                                                                "formatters": Array [],
                                                                "props": Object {
                                                                  "isVisible": true,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                              "disableSelection": true,
                                                              "fact": Object {
                                                                "formatters": Array [],
                                                                "props": Object {
                                                                  "isVisible": true,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                              "isExpanded": undefined,
                                                              "isFirst": false,
                                                              "isFirstVisible": false,
                                                              "isHeightAuto": false,
                                                              "isLast": false,
                                                              "isLastVisible": false,
                                                              "secretTableRowKeyId": 1,
                                                              "value": Object {
                                                                "formatters": Array [],
                                                                "props": Object {
                                                                  "isVisible": true,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                            }
                                                          }
                                                          rowProps={
                                                            Object {
                                                              "rowIndex": 1,
                                                              "rowKey": "1-row",
                                                            }
                                                          }
                                                        >
                                                          <Tr
                                                            className=""
                                                            onMouseDown={[Function]}
                                                          >
                                                            <TrBase
                                                              className=""
                                                              innerRef={null}
                                                              onMouseDown={[Function]}
                                                            >
                                                              <tr
                                                                className=""
                                                                data-ouia-component-id="OUIA-Generated-TableRow-3"
                                                                data-ouia-component-type="PF4/TableRow"
                                                                data-ouia-safe={true}
                                                                hidden={false}
                                                                onMouseDown={[Function]}
                                                              >
                                                                <BodyCell
                                                                  className="pf-c-table__check"
                                                                  component="td"
                                                                  data-key={0}
                                                                  data-label=""
                                                                  isVisible={true}
                                                                  key="col-0-row-1"
                                                                >
                                                                  <Td
                                                                    className="pf-c-table__check"
                                                                    component="td"
                                                                    data-key={0}
                                                                    dataLabel={null}
                                                                    onMouseEnter={[Function]}
                                                                    textCenter={false}
                                                                  >
                                                                    <TdBase
                                                                      className="pf-c-table__check"
                                                                      component="td"
                                                                      data-key={0}
                                                                      dataLabel={null}
                                                                      innerRef={null}
                                                                      onMouseEnter={[Function]}
                                                                      textCenter={false}
                                                                    >
                                                                      <td
                                                                        className="pf-c-table__check"
                                                                        data-key={0}
                                                                        data-label={null}
                                                                        onMouseEnter={[Function]}
                                                                      >
                                                                        <SelectColumn
                                                                          aria-label="Select row 1"
                                                                          checked={false}
                                                                          className="pf-c-check__input"
                                                                          disabled={true}
                                                                          name="checkrow1"
                                                                          onSelect={[Function]}
                                                                          selectVariant="checkbox"
                                                                        >
                                                                          <input
                                                                            aria-label="Select row 1"
                                                                            checked={false}
                                                                            disabled={true}
                                                                            name="checkrow1"
                                                                            onChange={[Function]}
                                                                            type="checkbox"
                                                                          />
                                                                        </SelectColumn>
                                                                      </td>
                                                                    </TdBase>
                                                                  </Td>
                                                                </BodyCell>
                                                                <BodyCell
                                                                  data-key={1}
                                                                  data-label="Fact"
                                                                  isVisible={true}
                                                                  key="col-1-row-1"
                                                                >
                                                                  <Td
                                                                    className=""
                                                                    component="td"
                                                                    data-key={1}
                                                                    dataLabel="Fact"
                                                                    onMouseEnter={[Function]}
                                                                    textCenter={false}
                                                                  >
                                                                    <TdBase
                                                                      className=""
                                                                      component="td"
                                                                      data-key={1}
                                                                      dataLabel="Fact"
                                                                      innerRef={null}
                                                                      onMouseEnter={[Function]}
                                                                      textCenter={false}
                                                                    >
                                                                      <td
                                                                        className=""
                                                                        data-key={1}
                                                                        data-label="Fact"
                                                                        onMouseEnter={[Function]}
                                                                      >
                                                                        <Skeleton
                                                                          isDark={false}
                                                                          size="md"
                                                                        >
                                                                          <div
                                                                            className="ins-c-skeleton ins-c-skeleton__md"
                                                                          >
                                                                             
                                                                          </div>
                                                                        </Skeleton>
                                                                      </td>
                                                                    </TdBase>
                                                                  </Td>
                                                                </BodyCell>
                                                                <BodyCell
                                                                  data-key={2}
                                                                  data-label="Value"
                                                                  isVisible={true}
                                                                  key="col-2-row-1"
                                                                >
                                                                  <Td
                                                                    className=""
                                                                    component="td"
                                                                    data-key={2}
                                                                    dataLabel="Value"
                                                                    onMouseEnter={[Function]}
                                                                    textCenter={false}
                                                                  >
                                                                    <TdBase
                                                                      className=""
                                                                      component="td"
                                                                      data-key={2}
                                                                      dataLabel="Value"
                                                                      innerRef={null}
                                                                      onMouseEnter={[Function]}
                                                                      textCenter={false}
                                                                    >
                                                                      <td
                                                                        className=""
                                                                        data-key={2}
                                                                        data-label="Value"
                                                                        onMouseEnter={[Function]}
                                                                      >
                                                                        <Skeleton
                                                                          isDark={false}
                                                                          size="md"
                                                                        >
                                                                          <div
                                                                            className="ins-c-skeleton ins-c-skeleton__md"
                                                                          >
                                                                             
                                                                          </div>
                                                                        </Skeleton>
                                                                      </td>
                                                                    </TdBase>
                                                                  </Td>
                                                                </BodyCell>
                                                                <BodyCell
                                                                  data-key={3}
                                                                  data-label=""
                                                                  isVisible={true}
                                                                  key="col-3-row-1"
                                                                >
                                                                  <Td
                                                                    className=""
                                                                    component="td"
                                                                    data-key={3}
                                                                    dataLabel={null}
                                                                    onMouseEnter={[Function]}
                                                                    textCenter={false}
                                                                  >
                                                                    <TdBase
                                                                      className=""
                                                                      component="td"
                                                                      data-key={3}
                                                                      dataLabel={null}
                                                                      innerRef={null}
                                                                      onMouseEnter={[Function]}
                                                                      textCenter={false}
                                                                    >
                                                                      <td
                                                                        className=""
                                                                        data-key={3}
                                                                        data-label={null}
                                                                        onMouseEnter={[Function]}
                                                                      >
                                                                        <Skeleton
                                                                          isDark={false}
                                                                          size="md"
                                                                        >
                                                                          <div
                                                                            className="ins-c-skeleton ins-c-skeleton__md"
                                                                          >
                                                                             
                                                                          </div>
                                                                        </Skeleton>
                                                                      </td>
                                                                    </TdBase>
                                                                  </Td>
                                                                </BodyCell>
                                                              </tr>
                                                            </TrBase>
                                                          </Tr>
                                                        </RowWrapper>
                                                      </BodyRow>
                                                      <BodyRow
                                                        columns={
                                                          Array [
                                                            Object {
                                                              "cell": Object {
                                                                "formatters": Array [
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "data": undefined,
                                                              "extraParams": Object {
                                                                "actionResolver": undefined,
                                                                "actions": undefined,
                                                                "allRowsSelected": false,
                                                                "areActionsDisabled": undefined,
                                                                "canSelectAll": false,
                                                                "canSortFavorites": true,
                                                                "contentId": "expanded-content",
                                                                "dropdownDirection": "down",
                                                                "dropdownPosition": "right",
                                                                "expandId": "expandable-toggle",
                                                                "firstUserColumnIndex": 1,
                                                                "onCollapse": undefined,
                                                                "onExpand": undefined,
                                                                "onFavorite": undefined,
                                                                "onRowEdit": undefined,
                                                                "onSelect": true,
                                                                "onSort": undefined,
                                                                "rowLabeledBy": "simple-node",
                                                                "selectVariant": "checkbox",
                                                                "sortBy": undefined,
                                                              },
                                                              "header": Object {
                                                                "formatters": Array [],
                                                                "label": "",
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "property": "column-0",
                                                              "props": Object {
                                                                "data-key": 0,
                                                                "data-label": "",
                                                              },
                                                            },
                                                            Object {
                                                              "cell": Object {
                                                                "formatters": Array [
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "data": undefined,
                                                              "extraParams": Object {
                                                                "actionResolver": undefined,
                                                                "actions": undefined,
                                                                "allRowsSelected": false,
                                                                "areActionsDisabled": undefined,
                                                                "canSelectAll": false,
                                                                "canSortFavorites": true,
                                                                "contentId": "expanded-content",
                                                                "dropdownDirection": "down",
                                                                "dropdownPosition": "right",
                                                                "expandId": "expandable-toggle",
                                                                "firstUserColumnIndex": 1,
                                                                "onCollapse": undefined,
                                                                "onExpand": undefined,
                                                                "onFavorite": undefined,
                                                                "onRowEdit": undefined,
                                                                "onSelect": true,
                                                                "onSort": undefined,
                                                                "rowLabeledBy": "simple-node",
                                                                "selectVariant": "checkbox",
                                                                "sortBy": undefined,
                                                              },
                                                              "header": Object {
                                                                "formatters": Array [],
                                                                "label": "Fact",
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "property": "fact",
                                                              "props": Object {
                                                                "data-key": 1,
                                                                "data-label": "Fact",
                                                              },
                                                            },
                                                            Object {
                                                              "cell": Object {
                                                                "formatters": Array [
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "data": undefined,
                                                              "extraParams": Object {
                                                                "actionResolver": undefined,
                                                                "actions": undefined,
                                                                "allRowsSelected": false,
                                                                "areActionsDisabled": undefined,
                                                                "canSelectAll": false,
                                                                "canSortFavorites": true,
                                                                "contentId": "expanded-content",
                                                                "dropdownDirection": "down",
                                                                "dropdownPosition": "right",
                                                                "expandId": "expandable-toggle",
                                                                "firstUserColumnIndex": 1,
                                                                "onCollapse": undefined,
                                                                "onExpand": undefined,
                                                                "onFavorite": undefined,
                                                                "onRowEdit": undefined,
                                                                "onSelect": true,
                                                                "onSort": undefined,
                                                                "rowLabeledBy": "simple-node",
                                                                "selectVariant": "checkbox",
                                                                "sortBy": undefined,
                                                              },
                                                              "header": Object {
                                                                "formatters": Array [],
                                                                "label": "Value",
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "property": "value",
                                                              "props": Object {
                                                                "data-key": 2,
                                                                "data-label": "Value",
                                                              },
                                                            },
                                                            Object {
                                                              "cell": Object {
                                                                "formatters": Array [
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "data": undefined,
                                                              "extraParams": Object {
                                                                "actionResolver": undefined,
                                                                "actions": undefined,
                                                                "allRowsSelected": false,
                                                                "areActionsDisabled": undefined,
                                                                "canSelectAll": false,
                                                                "canSortFavorites": true,
                                                                "contentId": "expanded-content",
                                                                "dropdownDirection": "down",
                                                                "dropdownPosition": "right",
                                                                "expandId": "expandable-toggle",
                                                                "firstUserColumnIndex": 1,
                                                                "onCollapse": undefined,
                                                                "onExpand": undefined,
                                                                "onFavorite": undefined,
                                                                "onRowEdit": undefined,
                                                                "onSelect": true,
                                                                "onSort": undefined,
                                                                "rowLabeledBy": "simple-node",
                                                                "selectVariant": "checkbox",
                                                                "sortBy": undefined,
                                                              },
                                                              "header": Object {
                                                                "formatters": Array [],
                                                                "label": "",
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "property": "column-3",
                                                              "props": Object {
                                                                "data-key": 3,
                                                                "data-label": "",
                                                              },
                                                            },
                                                          ]
                                                        }
                                                        key="2-row"
                                                        onRow={[Function]}
                                                        renderers={
                                                          Object {
                                                            "cell": [Function],
                                                            "row": [Function],
                                                            "wrapper": [Function],
                                                          }
                                                        }
                                                        rowData={
                                                          Object {
                                                            "cells": Array [
                                                              Object {
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                              Object {
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                              Object {
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                            ],
                                                            "column-3": Object {
                                                              "formatters": Array [],
                                                              "props": Object {
                                                                "isVisible": true,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="md"
                                                              />,
                                                            },
                                                            "disableSelection": true,
                                                            "fact": Object {
                                                              "formatters": Array [],
                                                              "props": Object {
                                                                "isVisible": true,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="md"
                                                              />,
                                                            },
                                                            "isExpanded": undefined,
                                                            "isFirst": false,
                                                            "isFirstVisible": false,
                                                            "isHeightAuto": false,
                                                            "isLast": false,
                                                            "isLastVisible": false,
                                                            "secretTableRowKeyId": 2,
                                                            "value": Object {
                                                              "formatters": Array [],
                                                              "props": Object {
                                                                "isVisible": true,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="md"
                                                              />,
                                                            },
                                                          }
                                                        }
                                                        rowIndex={2}
                                                        rowKey="2-row"
                                                      >
                                                        <RowWrapper
                                                          className=""
                                                          onMouseDown={[Function]}
                                                          row={
                                                            Object {
                                                              "cells": Array [
                                                                Object {
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="md"
                                                                  />,
                                                                },
                                                                Object {
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="md"
                                                                  />,
                                                                },
                                                                Object {
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="md"
                                                                  />,
                                                                },
                                                              ],
                                                              "column-3": Object {
                                                                "formatters": Array [],
                                                                "props": Object {
                                                                  "isVisible": true,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                              "disableSelection": true,
                                                              "fact": Object {
                                                                "formatters": Array [],
                                                                "props": Object {
                                                                  "isVisible": true,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                              "isExpanded": undefined,
                                                              "isFirst": false,
                                                              "isFirstVisible": false,
                                                              "isHeightAuto": false,
                                                              "isLast": false,
                                                              "isLastVisible": false,
                                                              "secretTableRowKeyId": 2,
                                                              "value": Object {
                                                                "formatters": Array [],
                                                                "props": Object {
                                                                  "isVisible": true,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                            }
                                                          }
                                                          rowProps={
                                                            Object {
                                                              "rowIndex": 2,
                                                              "rowKey": "2-row",
                                                            }
                                                          }
                                                        >
                                                          <Tr
                                                            className=""
                                                            onMouseDown={[Function]}
                                                          >
                                                            <TrBase
                                                              className=""
                                                              innerRef={null}
                                                              onMouseDown={[Function]}
                                                            >
                                                              <tr
                                                                className=""
                                                                data-ouia-component-id="OUIA-Generated-TableRow-4"
                                                                data-ouia-component-type="PF4/TableRow"
                                                                data-ouia-safe={true}
                                                                hidden={false}
                                                                onMouseDown={[Function]}
                                                              >
                                                                <BodyCell
                                                                  className="pf-c-table__check"
                                                                  component="td"
                                                                  data-key={0}
                                                                  data-label=""
                                                                  isVisible={true}
                                                                  key="col-0-row-2"
                                                                >
                                                                  <Td
                                                                    className="pf-c-table__check"
                                                                    component="td"
                                                                    data-key={0}
                                                                    dataLabel={null}
                                                                    onMouseEnter={[Function]}
                                                                    textCenter={false}
                                                                  >
                                                                    <TdBase
                                                                      className="pf-c-table__check"
                                                                      component="td"
                                                                      data-key={0}
                                                                      dataLabel={null}
                                                                      innerRef={null}
                                                                      onMouseEnter={[Function]}
                                                                      textCenter={false}
                                                                    >
                                                                      <td
                                                                        className="pf-c-table__check"
                                                                        data-key={0}
                                                                        data-label={null}
                                                                        onMouseEnter={[Function]}
                                                                      >
                                                                        <SelectColumn
                                                                          aria-label="Select row 2"
                                                                          checked={false}
                                                                          className="pf-c-check__input"
                                                                          disabled={true}
                                                                          name="checkrow2"
                                                                          onSelect={[Function]}
                                                                          selectVariant="checkbox"
                                                                        >
                                                                          <input
                                                                            aria-label="Select row 2"
                                                                            checked={false}
                                                                            disabled={true}
                                                                            name="checkrow2"
                                                                            onChange={[Function]}
                                                                            type="checkbox"
                                                                          />
                                                                        </SelectColumn>
                                                                      </td>
                                                                    </TdBase>
                                                                  </Td>
                                                                </BodyCell>
                                                                <BodyCell
                                                                  data-key={1}
                                                                  data-label="Fact"
                                                                  isVisible={true}
                                                                  key="col-1-row-2"
                                                                >
                                                                  <Td
                                                                    className=""
                                                                    component="td"
                                                                    data-key={1}
                                                                    dataLabel="Fact"
                                                                    onMouseEnter={[Function]}
                                                                    textCenter={false}
                                                                  >
                                                                    <TdBase
                                                                      className=""
                                                                      component="td"
                                                                      data-key={1}
                                                                      dataLabel="Fact"
                                                                      innerRef={null}
                                                                      onMouseEnter={[Function]}
                                                                      textCenter={false}
                                                                    >
                                                                      <td
                                                                        className=""
                                                                        data-key={1}
                                                                        data-label="Fact"
                                                                        onMouseEnter={[Function]}
                                                                      >
                                                                        <Skeleton
                                                                          isDark={false}
                                                                          size="md"
                                                                        >
                                                                          <div
                                                                            className="ins-c-skeleton ins-c-skeleton__md"
                                                                          >
                                                                             
                                                                          </div>
                                                                        </Skeleton>
                                                                      </td>
                                                                    </TdBase>
                                                                  </Td>
                                                                </BodyCell>
                                                                <BodyCell
                                                                  data-key={2}
                                                                  data-label="Value"
                                                                  isVisible={true}
                                                                  key="col-2-row-2"
                                                                >
                                                                  <Td
                                                                    className=""
                                                                    component="td"
                                                                    data-key={2}
                                                                    dataLabel="Value"
                                                                    onMouseEnter={[Function]}
                                                                    textCenter={false}
                                                                  >
                                                                    <TdBase
                                                                      className=""
                                                                      component="td"
                                                                      data-key={2}
                                                                      dataLabel="Value"
                                                                      innerRef={null}
                                                                      onMouseEnter={[Function]}
                                                                      textCenter={false}
                                                                    >
                                                                      <td
                                                                        className=""
                                                                        data-key={2}
                                                                        data-label="Value"
                                                                        onMouseEnter={[Function]}
                                                                      >
                                                                        <Skeleton
                                                                          isDark={false}
                                                                          size="md"
                                                                        >
                                                                          <div
                                                                            className="ins-c-skeleton ins-c-skeleton__md"
                                                                          >
                                                                             
                                                                          </div>
                                                                        </Skeleton>
                                                                      </td>
                                                                    </TdBase>
                                                                  </Td>
                                                                </BodyCell>
                                                                <BodyCell
                                                                  data-key={3}
                                                                  data-label=""
                                                                  isVisible={true}
                                                                  key="col-3-row-2"
                                                                >
                                                                  <Td
                                                                    className=""
                                                                    component="td"
                                                                    data-key={3}
                                                                    dataLabel={null}
                                                                    onMouseEnter={[Function]}
                                                                    textCenter={false}
                                                                  >
                                                                    <TdBase
                                                                      className=""
                                                                      component="td"
                                                                      data-key={3}
                                                                      dataLabel={null}
                                                                      innerRef={null}
                                                                      onMouseEnter={[Function]}
                                                                      textCenter={false}
                                                                    >
                                                                      <td
                                                                        className=""
                                                                        data-key={3}
                                                                        data-label={null}
                                                                        onMouseEnter={[Function]}
                                                                      >
                                                                        <Skeleton
                                                                          isDark={false}
                                                                          size="md"
                                                                        >
                                                                          <div
                                                                            className="ins-c-skeleton ins-c-skeleton__md"
                                                                          >
                                                                             
                                                                          </div>
                                                                        </Skeleton>
                                                                      </td>
                                                                    </TdBase>
                                                                  </Td>
                                                                </BodyCell>
                                                              </tr>
                                                            </TrBase>
                                                          </Tr>
                                                        </RowWrapper>
                                                      </BodyRow>
                                                      <BodyRow
                                                        columns={
                                                          Array [
                                                            Object {
                                                              "cell": Object {
                                                                "formatters": Array [
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "data": undefined,
                                                              "extraParams": Object {
                                                                "actionResolver": undefined,
                                                                "actions": undefined,
                                                                "allRowsSelected": false,
                                                                "areActionsDisabled": undefined,
                                                                "canSelectAll": false,
                                                                "canSortFavorites": true,
                                                                "contentId": "expanded-content",
                                                                "dropdownDirection": "down",
                                                                "dropdownPosition": "right",
                                                                "expandId": "expandable-toggle",
                                                                "firstUserColumnIndex": 1,
                                                                "onCollapse": undefined,
                                                                "onExpand": undefined,
                                                                "onFavorite": undefined,
                                                                "onRowEdit": undefined,
                                                                "onSelect": true,
                                                                "onSort": undefined,
                                                                "rowLabeledBy": "simple-node",
                                                                "selectVariant": "checkbox",
                                                                "sortBy": undefined,
                                                              },
                                                              "header": Object {
                                                                "formatters": Array [],
                                                                "label": "",
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "property": "column-0",
                                                              "props": Object {
                                                                "data-key": 0,
                                                                "data-label": "",
                                                              },
                                                            },
                                                            Object {
                                                              "cell": Object {
                                                                "formatters": Array [
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "data": undefined,
                                                              "extraParams": Object {
                                                                "actionResolver": undefined,
                                                                "actions": undefined,
                                                                "allRowsSelected": false,
                                                                "areActionsDisabled": undefined,
                                                                "canSelectAll": false,
                                                                "canSortFavorites": true,
                                                                "contentId": "expanded-content",
                                                                "dropdownDirection": "down",
                                                                "dropdownPosition": "right",
                                                                "expandId": "expandable-toggle",
                                                                "firstUserColumnIndex": 1,
                                                                "onCollapse": undefined,
                                                                "onExpand": undefined,
                                                                "onFavorite": undefined,
                                                                "onRowEdit": undefined,
                                                                "onSelect": true,
                                                                "onSort": undefined,
                                                                "rowLabeledBy": "simple-node",
                                                                "selectVariant": "checkbox",
                                                                "sortBy": undefined,
                                                              },
                                                              "header": Object {
                                                                "formatters": Array [],
                                                                "label": "Fact",
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "property": "fact",
                                                              "props": Object {
                                                                "data-key": 1,
                                                                "data-label": "Fact",
                                                              },
                                                            },
                                                            Object {
                                                              "cell": Object {
                                                                "formatters": Array [
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "data": undefined,
                                                              "extraParams": Object {
                                                                "actionResolver": undefined,
                                                                "actions": undefined,
                                                                "allRowsSelected": false,
                                                                "areActionsDisabled": undefined,
                                                                "canSelectAll": false,
                                                                "canSortFavorites": true,
                                                                "contentId": "expanded-content",
                                                                "dropdownDirection": "down",
                                                                "dropdownPosition": "right",
                                                                "expandId": "expandable-toggle",
                                                                "firstUserColumnIndex": 1,
                                                                "onCollapse": undefined,
                                                                "onExpand": undefined,
                                                                "onFavorite": undefined,
                                                                "onRowEdit": undefined,
                                                                "onSelect": true,
                                                                "onSort": undefined,
                                                                "rowLabeledBy": "simple-node",
                                                                "selectVariant": "checkbox",
                                                                "sortBy": undefined,
                                                              },
                                                              "header": Object {
                                                                "formatters": Array [],
                                                                "label": "Value",
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "property": "value",
                                                              "props": Object {
                                                                "data-key": 2,
                                                                "data-label": "Value",
                                                              },
                                                            },
                                                            Object {
                                                              "cell": Object {
                                                                "formatters": Array [
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "data": undefined,
                                                              "extraParams": Object {
                                                                "actionResolver": undefined,
                                                                "actions": undefined,
                                                                "allRowsSelected": false,
                                                                "areActionsDisabled": undefined,
                                                                "canSelectAll": false,
                                                                "canSortFavorites": true,
                                                                "contentId": "expanded-content",
                                                                "dropdownDirection": "down",
                                                                "dropdownPosition": "right",
                                                                "expandId": "expandable-toggle",
                                                                "firstUserColumnIndex": 1,
                                                                "onCollapse": undefined,
                                                                "onExpand": undefined,
                                                                "onFavorite": undefined,
                                                                "onRowEdit": undefined,
                                                                "onSelect": true,
                                                                "onSort": undefined,
                                                                "rowLabeledBy": "simple-node",
                                                                "selectVariant": "checkbox",
                                                                "sortBy": undefined,
                                                              },
                                                              "header": Object {
                                                                "formatters": Array [],
                                                                "label": "",
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "property": "column-3",
                                                              "props": Object {
                                                                "data-key": 3,
                                                                "data-label": "",
                                                              },
                                                            },
                                                          ]
                                                        }
                                                        key="3-row"
                                                        onRow={[Function]}
                                                        renderers={
                                                          Object {
                                                            "cell": [Function],
                                                            "row": [Function],
                                                            "wrapper": [Function],
                                                          }
                                                        }
                                                        rowData={
                                                          Object {
                                                            "cells": Array [
                                                              Object {
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                              Object {
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                              Object {
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                            ],
                                                            "column-3": Object {
                                                              "formatters": Array [],
                                                              "props": Object {
                                                                "isVisible": true,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="md"
                                                              />,
                                                            },
                                                            "disableSelection": true,
                                                            "fact": Object {
                                                              "formatters": Array [],
                                                              "props": Object {
                                                                "isVisible": true,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="md"
                                                              />,
                                                            },
                                                            "isExpanded": undefined,
                                                            "isFirst": false,
                                                            "isFirstVisible": false,
                                                            "isHeightAuto": false,
                                                            "isLast": false,
                                                            "isLastVisible": false,
                                                            "secretTableRowKeyId": 3,
                                                            "value": Object {
                                                              "formatters": Array [],
                                                              "props": Object {
                                                                "isVisible": true,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="md"
                                                              />,
                                                            },
                                                          }
                                                        }
                                                        rowIndex={3}
                                                        rowKey="3-row"
                                                      >
                                                        <RowWrapper
                                                          className=""
                                                          onMouseDown={[Function]}
                                                          row={
                                                            Object {
                                                              "cells": Array [
                                                                Object {
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="md"
                                                                  />,
                                                                },
                                                                Object {
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="md"
                                                                  />,
                                                                },
                                                                Object {
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="md"
                                                                  />,
                                                                },
                                                              ],
                                                              "column-3": Object {
                                                                "formatters": Array [],
                                                                "props": Object {
                                                                  "isVisible": true,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                              "disableSelection": true,
                                                              "fact": Object {
                                                                "formatters": Array [],
                                                                "props": Object {
                                                                  "isVisible": true,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                              "isExpanded": undefined,
                                                              "isFirst": false,
                                                              "isFirstVisible": false,
                                                              "isHeightAuto": false,
                                                              "isLast": false,
                                                              "isLastVisible": false,
                                                              "secretTableRowKeyId": 3,
                                                              "value": Object {
                                                                "formatters": Array [],
                                                                "props": Object {
                                                                  "isVisible": true,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                            }
                                                          }
                                                          rowProps={
                                                            Object {
                                                              "rowIndex": 3,
                                                              "rowKey": "3-row",
                                                            }
                                                          }
                                                        >
                                                          <Tr
                                                            className=""
                                                            onMouseDown={[Function]}
                                                          >
                                                            <TrBase
                                                              className=""
                                                              innerRef={null}
                                                              onMouseDown={[Function]}
                                                            >
                                                              <tr
                                                                className=""
                                                                data-ouia-component-id="OUIA-Generated-TableRow-5"
                                                                data-ouia-component-type="PF4/TableRow"
                                                                data-ouia-safe={true}
                                                                hidden={false}
                                                                onMouseDown={[Function]}
                                                              >
                                                                <BodyCell
                                                                  className="pf-c-table__check"
                                                                  component="td"
                                                                  data-key={0}
                                                                  data-label=""
                                                                  isVisible={true}
                                                                  key="col-0-row-3"
                                                                >
                                                                  <Td
                                                                    className="pf-c-table__check"
                                                                    component="td"
                                                                    data-key={0}
                                                                    dataLabel={null}
                                                                    onMouseEnter={[Function]}
                                                                    textCenter={false}
                                                                  >
                                                                    <TdBase
                                                                      className="pf-c-table__check"
                                                                      component="td"
                                                                      data-key={0}
                                                                      dataLabel={null}
                                                                      innerRef={null}
                                                                      onMouseEnter={[Function]}
                                                                      textCenter={false}
                                                                    >
                                                                      <td
                                                                        className="pf-c-table__check"
                                                                        data-key={0}
                                                                        data-label={null}
                                                                        onMouseEnter={[Function]}
                                                                      >
                                                                        <SelectColumn
                                                                          aria-label="Select row 3"
                                                                          checked={false}
                                                                          className="pf-c-check__input"
                                                                          disabled={true}
                                                                          name="checkrow3"
                                                                          onSelect={[Function]}
                                                                          selectVariant="checkbox"
                                                                        >
                                                                          <input
                                                                            aria-label="Select row 3"
                                                                            checked={false}
                                                                            disabled={true}
                                                                            name="checkrow3"
                                                                            onChange={[Function]}
                                                                            type="checkbox"
                                                                          />
                                                                        </SelectColumn>
                                                                      </td>
                                                                    </TdBase>
                                                                  </Td>
                                                                </BodyCell>
                                                                <BodyCell
                                                                  data-key={1}
                                                                  data-label="Fact"
                                                                  isVisible={true}
                                                                  key="col-1-row-3"
                                                                >
                                                                  <Td
                                                                    className=""
                                                                    component="td"
                                                                    data-key={1}
                                                                    dataLabel="Fact"
                                                                    onMouseEnter={[Function]}
                                                                    textCenter={false}
                                                                  >
                                                                    <TdBase
                                                                      className=""
                                                                      component="td"
                                                                      data-key={1}
                                                                      dataLabel="Fact"
                                                                      innerRef={null}
                                                                      onMouseEnter={[Function]}
                                                                      textCenter={false}
                                                                    >
                                                                      <td
                                                                        className=""
                                                                        data-key={1}
                                                                        data-label="Fact"
                                                                        onMouseEnter={[Function]}
                                                                      >
                                                                        <Skeleton
                                                                          isDark={false}
                                                                          size="md"
                                                                        >
                                                                          <div
                                                                            className="ins-c-skeleton ins-c-skeleton__md"
                                                                          >
                                                                             
                                                                          </div>
                                                                        </Skeleton>
                                                                      </td>
                                                                    </TdBase>
                                                                  </Td>
                                                                </BodyCell>
                                                                <BodyCell
                                                                  data-key={2}
                                                                  data-label="Value"
                                                                  isVisible={true}
                                                                  key="col-2-row-3"
                                                                >
                                                                  <Td
                                                                    className=""
                                                                    component="td"
                                                                    data-key={2}
                                                                    dataLabel="Value"
                                                                    onMouseEnter={[Function]}
                                                                    textCenter={false}
                                                                  >
                                                                    <TdBase
                                                                      className=""
                                                                      component="td"
                                                                      data-key={2}
                                                                      dataLabel="Value"
                                                                      innerRef={null}
                                                                      onMouseEnter={[Function]}
                                                                      textCenter={false}
                                                                    >
                                                                      <td
                                                                        className=""
                                                                        data-key={2}
                                                                        data-label="Value"
                                                                        onMouseEnter={[Function]}
                                                                      >
                                                                        <Skeleton
                                                                          isDark={false}
                                                                          size="md"
                                                                        >
                                                                          <div
                                                                            className="ins-c-skeleton ins-c-skeleton__md"
                                                                          >
                                                                             
                                                                          </div>
                                                                        </Skeleton>
                                                                      </td>
                                                                    </TdBase>
                                                                  </Td>
                                                                </BodyCell>
                                                                <BodyCell
                                                                  data-key={3}
                                                                  data-label=""
                                                                  isVisible={true}
                                                                  key="col-3-row-3"
                                                                >
                                                                  <Td
                                                                    className=""
                                                                    component="td"
                                                                    data-key={3}
                                                                    dataLabel={null}
                                                                    onMouseEnter={[Function]}
                                                                    textCenter={false}
                                                                  >
                                                                    <TdBase
                                                                      className=""
                                                                      component="td"
                                                                      data-key={3}
                                                                      dataLabel={null}
                                                                      innerRef={null}
                                                                      onMouseEnter={[Function]}
                                                                      textCenter={false}
                                                                    >
                                                                      <td
                                                                        className=""
                                                                        data-key={3}
                                                                        data-label={null}
                                                                        onMouseEnter={[Function]}
                                                                      >
                                                                        <Skeleton
                                                                          isDark={false}
                                                                          size="md"
                                                                        >
                                                                          <div
                                                                            className="ins-c-skeleton ins-c-skeleton__md"
                                                                          >
                                                                             
                                                                          </div>
                                                                        </Skeleton>
                                                                      </td>
                                                                    </TdBase>
                                                                  </Td>
                                                                </BodyCell>
                                                              </tr>
                                                            </TrBase>
                                                          </Tr>
                                                        </RowWrapper>
                                                      </BodyRow>
                                                      <BodyRow
                                                        columns={
                                                          Array [
                                                            Object {
                                                              "cell": Object {
                                                                "formatters": Array [
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "data": undefined,
                                                              "extraParams": Object {
                                                                "actionResolver": undefined,
                                                                "actions": undefined,
                                                                "allRowsSelected": false,
                                                                "areActionsDisabled": undefined,
                                                                "canSelectAll": false,
                                                                "canSortFavorites": true,
                                                                "contentId": "expanded-content",
                                                                "dropdownDirection": "down",
                                                                "dropdownPosition": "right",
                                                                "expandId": "expandable-toggle",
                                                                "firstUserColumnIndex": 1,
                                                                "onCollapse": undefined,
                                                                "onExpand": undefined,
                                                                "onFavorite": undefined,
                                                                "onRowEdit": undefined,
                                                                "onSelect": true,
                                                                "onSort": undefined,
                                                                "rowLabeledBy": "simple-node",
                                                                "selectVariant": "checkbox",
                                                                "sortBy": undefined,
                                                              },
                                                              "header": Object {
                                                                "formatters": Array [],
                                                                "label": "",
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "property": "column-0",
                                                              "props": Object {
                                                                "data-key": 0,
                                                                "data-label": "",
                                                              },
                                                            },
                                                            Object {
                                                              "cell": Object {
                                                                "formatters": Array [
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "data": undefined,
                                                              "extraParams": Object {
                                                                "actionResolver": undefined,
                                                                "actions": undefined,
                                                                "allRowsSelected": false,
                                                                "areActionsDisabled": undefined,
                                                                "canSelectAll": false,
                                                                "canSortFavorites": true,
                                                                "contentId": "expanded-content",
                                                                "dropdownDirection": "down",
                                                                "dropdownPosition": "right",
                                                                "expandId": "expandable-toggle",
                                                                "firstUserColumnIndex": 1,
                                                                "onCollapse": undefined,
                                                                "onExpand": undefined,
                                                                "onFavorite": undefined,
                                                                "onRowEdit": undefined,
                                                                "onSelect": true,
                                                                "onSort": undefined,
                                                                "rowLabeledBy": "simple-node",
                                                                "selectVariant": "checkbox",
                                                                "sortBy": undefined,
                                                              },
                                                              "header": Object {
                                                                "formatters": Array [],
                                                                "label": "Fact",
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "property": "fact",
                                                              "props": Object {
                                                                "data-key": 1,
                                                                "data-label": "Fact",
                                                              },
                                                            },
                                                            Object {
                                                              "cell": Object {
                                                                "formatters": Array [
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "data": undefined,
                                                              "extraParams": Object {
                                                                "actionResolver": undefined,
                                                                "actions": undefined,
                                                                "allRowsSelected": false,
                                                                "areActionsDisabled": undefined,
                                                                "canSelectAll": false,
                                                                "canSortFavorites": true,
                                                                "contentId": "expanded-content",
                                                                "dropdownDirection": "down",
                                                                "dropdownPosition": "right",
                                                                "expandId": "expandable-toggle",
                                                                "firstUserColumnIndex": 1,
                                                                "onCollapse": undefined,
                                                                "onExpand": undefined,
                                                                "onFavorite": undefined,
                                                                "onRowEdit": undefined,
                                                                "onSelect": true,
                                                                "onSort": undefined,
                                                                "rowLabeledBy": "simple-node",
                                                                "selectVariant": "checkbox",
                                                                "sortBy": undefined,
                                                              },
                                                              "header": Object {
                                                                "formatters": Array [],
                                                                "label": "Value",
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "property": "value",
                                                              "props": Object {
                                                                "data-key": 2,
                                                                "data-label": "Value",
                                                              },
                                                            },
                                                            Object {
                                                              "cell": Object {
                                                                "formatters": Array [
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "data": undefined,
                                                              "extraParams": Object {
                                                                "actionResolver": undefined,
                                                                "actions": undefined,
                                                                "allRowsSelected": false,
                                                                "areActionsDisabled": undefined,
                                                                "canSelectAll": false,
                                                                "canSortFavorites": true,
                                                                "contentId": "expanded-content",
                                                                "dropdownDirection": "down",
                                                                "dropdownPosition": "right",
                                                                "expandId": "expandable-toggle",
                                                                "firstUserColumnIndex": 1,
                                                                "onCollapse": undefined,
                                                                "onExpand": undefined,
                                                                "onFavorite": undefined,
                                                                "onRowEdit": undefined,
                                                                "onSelect": true,
                                                                "onSort": undefined,
                                                                "rowLabeledBy": "simple-node",
                                                                "selectVariant": "checkbox",
                                                                "sortBy": undefined,
                                                              },
                                                              "header": Object {
                                                                "formatters": Array [],
                                                                "label": "",
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "property": "column-3",
                                                              "props": Object {
                                                                "data-key": 3,
                                                                "data-label": "",
                                                              },
                                                            },
                                                          ]
                                                        }
                                                        key="4-row"
                                                        onRow={[Function]}
                                                        renderers={
                                                          Object {
                                                            "cell": [Function],
                                                            "row": [Function],
                                                            "wrapper": [Function],
                                                          }
                                                        }
                                                        rowData={
                                                          Object {
                                                            "cells": Array [
                                                              Object {
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                              Object {
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                              Object {
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                            ],
                                                            "column-3": Object {
                                                              "formatters": Array [],
                                                              "props": Object {
                                                                "isVisible": true,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="md"
                                                              />,
                                                            },
                                                            "disableSelection": true,
                                                            "fact": Object {
                                                              "formatters": Array [],
                                                              "props": Object {
                                                                "isVisible": true,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="md"
                                                              />,
                                                            },
                                                            "isExpanded": undefined,
                                                            "isFirst": false,
                                                            "isFirstVisible": false,
                                                            "isHeightAuto": false,
                                                            "isLast": false,
                                                            "isLastVisible": false,
                                                            "secretTableRowKeyId": 4,
                                                            "value": Object {
                                                              "formatters": Array [],
                                                              "props": Object {
                                                                "isVisible": true,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="md"
                                                              />,
                                                            },
                                                          }
                                                        }
                                                        rowIndex={4}
                                                        rowKey="4-row"
                                                      >
                                                        <RowWrapper
                                                          className=""
                                                          onMouseDown={[Function]}
                                                          row={
                                                            Object {
                                                              "cells": Array [
                                                                Object {
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="md"
                                                                  />,
                                                                },
                                                                Object {
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="md"
                                                                  />,
                                                                },
                                                                Object {
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="md"
                                                                  />,
                                                                },
                                                              ],
                                                              "column-3": Object {
                                                                "formatters": Array [],
                                                                "props": Object {
                                                                  "isVisible": true,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                              "disableSelection": true,
                                                              "fact": Object {
                                                                "formatters": Array [],
                                                                "props": Object {
                                                                  "isVisible": true,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                              "isExpanded": undefined,
                                                              "isFirst": false,
                                                              "isFirstVisible": false,
                                                              "isHeightAuto": false,
                                                              "isLast": false,
                                                              "isLastVisible": false,
                                                              "secretTableRowKeyId": 4,
                                                              "value": Object {
                                                                "formatters": Array [],
                                                                "props": Object {
                                                                  "isVisible": true,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                            }
                                                          }
                                                          rowProps={
                                                            Object {
                                                              "rowIndex": 4,
                                                              "rowKey": "4-row",
                                                            }
                                                          }
                                                        >
                                                          <Tr
                                                            className=""
                                                            onMouseDown={[Function]}
                                                          >
                                                            <TrBase
                                                              className=""
                                                              innerRef={null}
                                                              onMouseDown={[Function]}
                                                            >
                                                              <tr
                                                                className=""
                                                                data-ouia-component-id="OUIA-Generated-TableRow-6"
                                                                data-ouia-component-type="PF4/TableRow"
                                                                data-ouia-safe={true}
                                                                hidden={false}
                                                                onMouseDown={[Function]}
                                                              >
                                                                <BodyCell
                                                                  className="pf-c-table__check"
                                                                  component="td"
                                                                  data-key={0}
                                                                  data-label=""
                                                                  isVisible={true}
                                                                  key="col-0-row-4"
                                                                >
                                                                  <Td
                                                                    className="pf-c-table__check"
                                                                    component="td"
                                                                    data-key={0}
                                                                    dataLabel={null}
                                                                    onMouseEnter={[Function]}
                                                                    textCenter={false}
                                                                  >
                                                                    <TdBase
                                                                      className="pf-c-table__check"
                                                                      component="td"
                                                                      data-key={0}
                                                                      dataLabel={null}
                                                                      innerRef={null}
                                                                      onMouseEnter={[Function]}
                                                                      textCenter={false}
                                                                    >
                                                                      <td
                                                                        className="pf-c-table__check"
                                                                        data-key={0}
                                                                        data-label={null}
                                                                        onMouseEnter={[Function]}
                                                                      >
                                                                        <SelectColumn
                                                                          aria-label="Select row 4"
                                                                          checked={false}
                                                                          className="pf-c-check__input"
                                                                          disabled={true}
                                                                          name="checkrow4"
                                                                          onSelect={[Function]}
                                                                          selectVariant="checkbox"
                                                                        >
                                                                          <input
                                                                            aria-label="Select row 4"
                                                                            checked={false}
                                                                            disabled={true}
                                                                            name="checkrow4"
                                                                            onChange={[Function]}
                                                                            type="checkbox"
                                                                          />
                                                                        </SelectColumn>
                                                                      </td>
                                                                    </TdBase>
                                                                  </Td>
                                                                </BodyCell>
                                                                <BodyCell
                                                                  data-key={1}
                                                                  data-label="Fact"
                                                                  isVisible={true}
                                                                  key="col-1-row-4"
                                                                >
                                                                  <Td
                                                                    className=""
                                                                    component="td"
                                                                    data-key={1}
                                                                    dataLabel="Fact"
                                                                    onMouseEnter={[Function]}
                                                                    textCenter={false}
                                                                  >
                                                                    <TdBase
                                                                      className=""
                                                                      component="td"
                                                                      data-key={1}
                                                                      dataLabel="Fact"
                                                                      innerRef={null}
                                                                      onMouseEnter={[Function]}
                                                                      textCenter={false}
                                                                    >
                                                                      <td
                                                                        className=""
                                                                        data-key={1}
                                                                        data-label="Fact"
                                                                        onMouseEnter={[Function]}
                                                                      >
                                                                        <Skeleton
                                                                          isDark={false}
                                                                          size="md"
                                                                        >
                                                                          <div
                                                                            className="ins-c-skeleton ins-c-skeleton__md"
                                                                          >
                                                                             
                                                                          </div>
                                                                        </Skeleton>
                                                                      </td>
                                                                    </TdBase>
                                                                  </Td>
                                                                </BodyCell>
                                                                <BodyCell
                                                                  data-key={2}
                                                                  data-label="Value"
                                                                  isVisible={true}
                                                                  key="col-2-row-4"
                                                                >
                                                                  <Td
                                                                    className=""
                                                                    component="td"
                                                                    data-key={2}
                                                                    dataLabel="Value"
                                                                    onMouseEnter={[Function]}
                                                                    textCenter={false}
                                                                  >
                                                                    <TdBase
                                                                      className=""
                                                                      component="td"
                                                                      data-key={2}
                                                                      dataLabel="Value"
                                                                      innerRef={null}
                                                                      onMouseEnter={[Function]}
                                                                      textCenter={false}
                                                                    >
                                                                      <td
                                                                        className=""
                                                                        data-key={2}
                                                                        data-label="Value"
                                                                        onMouseEnter={[Function]}
                                                                      >
                                                                        <Skeleton
                                                                          isDark={false}
                                                                          size="md"
                                                                        >
                                                                          <div
                                                                            className="ins-c-skeleton ins-c-skeleton__md"
                                                                          >
                                                                             
                                                                          </div>
                                                                        </Skeleton>
                                                                      </td>
                                                                    </TdBase>
                                                                  </Td>
                                                                </BodyCell>
                                                                <BodyCell
                                                                  data-key={3}
                                                                  data-label=""
                                                                  isVisible={true}
                                                                  key="col-3-row-4"
                                                                >
                                                                  <Td
                                                                    className=""
                                                                    component="td"
                                                                    data-key={3}
                                                                    dataLabel={null}
                                                                    onMouseEnter={[Function]}
                                                                    textCenter={false}
                                                                  >
                                                                    <TdBase
                                                                      className=""
                                                                      component="td"
                                                                      data-key={3}
                                                                      dataLabel={null}
                                                                      innerRef={null}
                                                                      onMouseEnter={[Function]}
                                                                      textCenter={false}
                                                                    >
                                                                      <td
                                                                        className=""
                                                                        data-key={3}
                                                                        data-label={null}
                                                                        onMouseEnter={[Function]}
                                                                      >
                                                                        <Skeleton
                                                                          isDark={false}
                                                                          size="md"
                                                                        >
                                                                          <div
                                                                            className="ins-c-skeleton ins-c-skeleton__md"
                                                                          >
                                                                             
                                                                          </div>
                                                                        </Skeleton>
                                                                      </td>
                                                                    </TdBase>
                                                                  </Td>
                                                                </BodyCell>
                                                              </tr>
                                                            </TrBase>
                                                          </Tr>
                                                        </RowWrapper>
                                                      </BodyRow>
                                                      <BodyRow
                                                        columns={
                                                          Array [
                                                            Object {
                                                              "cell": Object {
                                                                "formatters": Array [
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "data": undefined,
                                                              "extraParams": Object {
                                                                "actionResolver": undefined,
                                                                "actions": undefined,
                                                                "allRowsSelected": false,
                                                                "areActionsDisabled": undefined,
                                                                "canSelectAll": false,
                                                                "canSortFavorites": true,
                                                                "contentId": "expanded-content",
                                                                "dropdownDirection": "down",
                                                                "dropdownPosition": "right",
                                                                "expandId": "expandable-toggle",
                                                                "firstUserColumnIndex": 1,
                                                                "onCollapse": undefined,
                                                                "onExpand": undefined,
                                                                "onFavorite": undefined,
                                                                "onRowEdit": undefined,
                                                                "onSelect": true,
                                                                "onSort": undefined,
                                                                "rowLabeledBy": "simple-node",
                                                                "selectVariant": "checkbox",
                                                                "sortBy": undefined,
                                                              },
                                                              "header": Object {
                                                                "formatters": Array [],
                                                                "label": "",
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "property": "column-0",
                                                              "props": Object {
                                                                "data-key": 0,
                                                                "data-label": "",
                                                              },
                                                            },
                                                            Object {
                                                              "cell": Object {
                                                                "formatters": Array [
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "data": undefined,
                                                              "extraParams": Object {
                                                                "actionResolver": undefined,
                                                                "actions": undefined,
                                                                "allRowsSelected": false,
                                                                "areActionsDisabled": undefined,
                                                                "canSelectAll": false,
                                                                "canSortFavorites": true,
                                                                "contentId": "expanded-content",
                                                                "dropdownDirection": "down",
                                                                "dropdownPosition": "right",
                                                                "expandId": "expandable-toggle",
                                                                "firstUserColumnIndex": 1,
                                                                "onCollapse": undefined,
                                                                "onExpand": undefined,
                                                                "onFavorite": undefined,
                                                                "onRowEdit": undefined,
                                                                "onSelect": true,
                                                                "onSort": undefined,
                                                                "rowLabeledBy": "simple-node",
                                                                "selectVariant": "checkbox",
                                                                "sortBy": undefined,
                                                              },
                                                              "header": Object {
                                                                "formatters": Array [],
                                                                "label": "Fact",
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "property": "fact",
                                                              "props": Object {
                                                                "data-key": 1,
                                                                "data-label": "Fact",
                                                              },
                                                            },
                                                            Object {
                                                              "cell": Object {
                                                                "formatters": Array [
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "data": undefined,
                                                              "extraParams": Object {
                                                                "actionResolver": undefined,
                                                                "actions": undefined,
                                                                "allRowsSelected": false,
                                                                "areActionsDisabled": undefined,
                                                                "canSelectAll": false,
                                                                "canSortFavorites": true,
                                                                "contentId": "expanded-content",
                                                                "dropdownDirection": "down",
                                                                "dropdownPosition": "right",
                                                                "expandId": "expandable-toggle",
                                                                "firstUserColumnIndex": 1,
                                                                "onCollapse": undefined,
                                                                "onExpand": undefined,
                                                                "onFavorite": undefined,
                                                                "onRowEdit": undefined,
                                                                "onSelect": true,
                                                                "onSort": undefined,
                                                                "rowLabeledBy": "simple-node",
                                                                "selectVariant": "checkbox",
                                                                "sortBy": undefined,
                                                              },
                                                              "header": Object {
                                                                "formatters": Array [],
                                                                "label": "Value",
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "property": "value",
                                                              "props": Object {
                                                                "data-key": 2,
                                                                "data-label": "Value",
                                                              },
                                                            },
                                                            Object {
                                                              "cell": Object {
                                                                "formatters": Array [
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "data": undefined,
                                                              "extraParams": Object {
                                                                "actionResolver": undefined,
                                                                "actions": undefined,
                                                                "allRowsSelected": false,
                                                                "areActionsDisabled": undefined,
                                                                "canSelectAll": false,
                                                                "canSortFavorites": true,
                                                                "contentId": "expanded-content",
                                                                "dropdownDirection": "down",
                                                                "dropdownPosition": "right",
                                                                "expandId": "expandable-toggle",
                                                                "firstUserColumnIndex": 1,
                                                                "onCollapse": undefined,
                                                                "onExpand": undefined,
                                                                "onFavorite": undefined,
                                                                "onRowEdit": undefined,
                                                                "onSelect": true,
                                                                "onSort": undefined,
                                                                "rowLabeledBy": "simple-node",
                                                                "selectVariant": "checkbox",
                                                                "sortBy": undefined,
                                                              },
                                                              "header": Object {
                                                                "formatters": Array [],
                                                                "label": "",
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "property": "column-3",
                                                              "props": Object {
                                                                "data-key": 3,
                                                                "data-label": "",
                                                              },
                                                            },
                                                          ]
                                                        }
                                                        key="5-row"
                                                        onRow={[Function]}
                                                        renderers={
                                                          Object {
                                                            "cell": [Function],
                                                            "row": [Function],
                                                            "wrapper": [Function],
                                                          }
                                                        }
                                                        rowData={
                                                          Object {
                                                            "cells": Array [
                                                              Object {
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                              Object {
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                              Object {
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                            ],
                                                            "column-3": Object {
                                                              "formatters": Array [],
                                                              "props": Object {
                                                                "isVisible": true,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="md"
                                                              />,
                                                            },
                                                            "disableSelection": true,
                                                            "fact": Object {
                                                              "formatters": Array [],
                                                              "props": Object {
                                                                "isVisible": true,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="md"
                                                              />,
                                                            },
                                                            "isExpanded": undefined,
                                                            "isFirst": false,
                                                            "isFirstVisible": false,
                                                            "isHeightAuto": false,
                                                            "isLast": false,
                                                            "isLastVisible": false,
                                                            "secretTableRowKeyId": 5,
                                                            "value": Object {
                                                              "formatters": Array [],
                                                              "props": Object {
                                                                "isVisible": true,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="md"
                                                              />,
                                                            },
                                                          }
                                                        }
                                                        rowIndex={5}
                                                        rowKey="5-row"
                                                      >
                                                        <RowWrapper
                                                          className=""
                                                          onMouseDown={[Function]}
                                                          row={
                                                            Object {
                                                              "cells": Array [
                                                                Object {
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="md"
                                                                  />,
                                                                },
                                                                Object {
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="md"
                                                                  />,
                                                                },
                                                                Object {
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="md"
                                                                  />,
                                                                },
                                                              ],
                                                              "column-3": Object {
                                                                "formatters": Array [],
                                                                "props": Object {
                                                                  "isVisible": true,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                              "disableSelection": true,
                                                              "fact": Object {
                                                                "formatters": Array [],
                                                                "props": Object {
                                                                  "isVisible": true,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                              "isExpanded": undefined,
                                                              "isFirst": false,
                                                              "isFirstVisible": false,
                                                              "isHeightAuto": false,
                                                              "isLast": false,
                                                              "isLastVisible": false,
                                                              "secretTableRowKeyId": 5,
                                                              "value": Object {
                                                                "formatters": Array [],
                                                                "props": Object {
                                                                  "isVisible": true,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                            }
                                                          }
                                                          rowProps={
                                                            Object {
                                                              "rowIndex": 5,
                                                              "rowKey": "5-row",
                                                            }
                                                          }
                                                        >
                                                          <Tr
                                                            className=""
                                                            onMouseDown={[Function]}
                                                          >
                                                            <TrBase
                                                              className=""
                                                              innerRef={null}
                                                              onMouseDown={[Function]}
                                                            >
                                                              <tr
                                                                className=""
                                                                data-ouia-component-id="OUIA-Generated-TableRow-7"
                                                                data-ouia-component-type="PF4/TableRow"
                                                                data-ouia-safe={true}
                                                                hidden={false}
                                                                onMouseDown={[Function]}
                                                              >
                                                                <BodyCell
                                                                  className="pf-c-table__check"
                                                                  component="td"
                                                                  data-key={0}
                                                                  data-label=""
                                                                  isVisible={true}
                                                                  key="col-0-row-5"
                                                                >
                                                                  <Td
                                                                    className="pf-c-table__check"
                                                                    component="td"
                                                                    data-key={0}
                                                                    dataLabel={null}
                                                                    onMouseEnter={[Function]}
                                                                    textCenter={false}
                                                                  >
                                                                    <TdBase
                                                                      className="pf-c-table__check"
                                                                      component="td"
                                                                      data-key={0}
                                                                      dataLabel={null}
                                                                      innerRef={null}
                                                                      onMouseEnter={[Function]}
                                                                      textCenter={false}
                                                                    >
                                                                      <td
                                                                        className="pf-c-table__check"
                                                                        data-key={0}
                                                                        data-label={null}
                                                                        onMouseEnter={[Function]}
                                                                      >
                                                                        <SelectColumn
                                                                          aria-label="Select row 5"
                                                                          checked={false}
                                                                          className="pf-c-check__input"
                                                                          disabled={true}
                                                                          name="checkrow5"
                                                                          onSelect={[Function]}
                                                                          selectVariant="checkbox"
                                                                        >
                                                                          <input
                                                                            aria-label="Select row 5"
                                                                            checked={false}
                                                                            disabled={true}
                                                                            name="checkrow5"
                                                                            onChange={[Function]}
                                                                            type="checkbox"
                                                                          />
                                                                        </SelectColumn>
                                                                      </td>
                                                                    </TdBase>
                                                                  </Td>
                                                                </BodyCell>
                                                                <BodyCell
                                                                  data-key={1}
                                                                  data-label="Fact"
                                                                  isVisible={true}
                                                                  key="col-1-row-5"
                                                                >
                                                                  <Td
                                                                    className=""
                                                                    component="td"
                                                                    data-key={1}
                                                                    dataLabel="Fact"
                                                                    onMouseEnter={[Function]}
                                                                    textCenter={false}
                                                                  >
                                                                    <TdBase
                                                                      className=""
                                                                      component="td"
                                                                      data-key={1}
                                                                      dataLabel="Fact"
                                                                      innerRef={null}
                                                                      onMouseEnter={[Function]}
                                                                      textCenter={false}
                                                                    >
                                                                      <td
                                                                        className=""
                                                                        data-key={1}
                                                                        data-label="Fact"
                                                                        onMouseEnter={[Function]}
                                                                      >
                                                                        <Skeleton
                                                                          isDark={false}
                                                                          size="md"
                                                                        >
                                                                          <div
                                                                            className="ins-c-skeleton ins-c-skeleton__md"
                                                                          >
                                                                             
                                                                          </div>
                                                                        </Skeleton>
                                                                      </td>
                                                                    </TdBase>
                                                                  </Td>
                                                                </BodyCell>
                                                                <BodyCell
                                                                  data-key={2}
                                                                  data-label="Value"
                                                                  isVisible={true}
                                                                  key="col-2-row-5"
                                                                >
                                                                  <Td
                                                                    className=""
                                                                    component="td"
                                                                    data-key={2}
                                                                    dataLabel="Value"
                                                                    onMouseEnter={[Function]}
                                                                    textCenter={false}
                                                                  >
                                                                    <TdBase
                                                                      className=""
                                                                      component="td"
                                                                      data-key={2}
                                                                      dataLabel="Value"
                                                                      innerRef={null}
                                                                      onMouseEnter={[Function]}
                                                                      textCenter={false}
                                                                    >
                                                                      <td
                                                                        className=""
                                                                        data-key={2}
                                                                        data-label="Value"
                                                                        onMouseEnter={[Function]}
                                                                      >
                                                                        <Skeleton
                                                                          isDark={false}
                                                                          size="md"
                                                                        >
                                                                          <div
                                                                            className="ins-c-skeleton ins-c-skeleton__md"
                                                                          >
                                                                             
                                                                          </div>
                                                                        </Skeleton>
                                                                      </td>
                                                                    </TdBase>
                                                                  </Td>
                                                                </BodyCell>
                                                                <BodyCell
                                                                  data-key={3}
                                                                  data-label=""
                                                                  isVisible={true}
                                                                  key="col-3-row-5"
                                                                >
                                                                  <Td
                                                                    className=""
                                                                    component="td"
                                                                    data-key={3}
                                                                    dataLabel={null}
                                                                    onMouseEnter={[Function]}
                                                                    textCenter={false}
                                                                  >
                                                                    <TdBase
                                                                      className=""
                                                                      component="td"
                                                                      data-key={3}
                                                                      dataLabel={null}
                                                                      innerRef={null}
                                                                      onMouseEnter={[Function]}
                                                                      textCenter={false}
                                                                    >
                                                                      <td
                                                                        className=""
                                                                        data-key={3}
                                                                        data-label={null}
                                                                        onMouseEnter={[Function]}
                                                                      >
                                                                        <Skeleton
                                                                          isDark={false}
                                                                          size="md"
                                                                        >
                                                                          <div
                                                                            className="ins-c-skeleton ins-c-skeleton__md"
                                                                          >
                                                                             
                                                                          </div>
                                                                        </Skeleton>
                                                                      </td>
                                                                    </TdBase>
                                                                  </Td>
                                                                </BodyCell>
                                                              </tr>
                                                            </TrBase>
                                                          </Tr>
                                                        </RowWrapper>
                                                      </BodyRow>
                                                      <BodyRow
                                                        columns={
                                                          Array [
                                                            Object {
                                                              "cell": Object {
                                                                "formatters": Array [
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "data": undefined,
                                                              "extraParams": Object {
                                                                "actionResolver": undefined,
                                                                "actions": undefined,
                                                                "allRowsSelected": false,
                                                                "areActionsDisabled": undefined,
                                                                "canSelectAll": false,
                                                                "canSortFavorites": true,
                                                                "contentId": "expanded-content",
                                                                "dropdownDirection": "down",
                                                                "dropdownPosition": "right",
                                                                "expandId": "expandable-toggle",
                                                                "firstUserColumnIndex": 1,
                                                                "onCollapse": undefined,
                                                                "onExpand": undefined,
                                                                "onFavorite": undefined,
                                                                "onRowEdit": undefined,
                                                                "onSelect": true,
                                                                "onSort": undefined,
                                                                "rowLabeledBy": "simple-node",
                                                                "selectVariant": "checkbox",
                                                                "sortBy": undefined,
                                                              },
                                                              "header": Object {
                                                                "formatters": Array [],
                                                                "label": "",
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "property": "column-0",
                                                              "props": Object {
                                                                "data-key": 0,
                                                                "data-label": "",
                                                              },
                                                            },
                                                            Object {
                                                              "cell": Object {
                                                                "formatters": Array [
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "data": undefined,
                                                              "extraParams": Object {
                                                                "actionResolver": undefined,
                                                                "actions": undefined,
                                                                "allRowsSelected": false,
                                                                "areActionsDisabled": undefined,
                                                                "canSelectAll": false,
                                                                "canSortFavorites": true,
                                                                "contentId": "expanded-content",
                                                                "dropdownDirection": "down",
                                                                "dropdownPosition": "right",
                                                                "expandId": "expandable-toggle",
                                                                "firstUserColumnIndex": 1,
                                                                "onCollapse": undefined,
                                                                "onExpand": undefined,
                                                                "onFavorite": undefined,
                                                                "onRowEdit": undefined,
                                                                "onSelect": true,
                                                                "onSort": undefined,
                                                                "rowLabeledBy": "simple-node",
                                                                "selectVariant": "checkbox",
                                                                "sortBy": undefined,
                                                              },
                                                              "header": Object {
                                                                "formatters": Array [],
                                                                "label": "Fact",
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "property": "fact",
                                                              "props": Object {
                                                                "data-key": 1,
                                                                "data-label": "Fact",
                                                              },
                                                            },
                                                            Object {
                                                              "cell": Object {
                                                                "formatters": Array [
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "data": undefined,
                                                              "extraParams": Object {
                                                                "actionResolver": undefined,
                                                                "actions": undefined,
                                                                "allRowsSelected": false,
                                                                "areActionsDisabled": undefined,
                                                                "canSelectAll": false,
                                                                "canSortFavorites": true,
                                                                "contentId": "expanded-content",
                                                                "dropdownDirection": "down",
                                                                "dropdownPosition": "right",
                                                                "expandId": "expandable-toggle",
                                                                "firstUserColumnIndex": 1,
                                                                "onCollapse": undefined,
                                                                "onExpand": undefined,
                                                                "onFavorite": undefined,
                                                                "onRowEdit": undefined,
                                                                "onSelect": true,
                                                                "onSort": undefined,
                                                                "rowLabeledBy": "simple-node",
                                                                "selectVariant": "checkbox",
                                                                "sortBy": undefined,
                                                              },
                                                              "header": Object {
                                                                "formatters": Array [],
                                                                "label": "Value",
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "property": "value",
                                                              "props": Object {
                                                                "data-key": 2,
                                                                "data-label": "Value",
                                                              },
                                                            },
                                                            Object {
                                                              "cell": Object {
                                                                "formatters": Array [
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "data": undefined,
                                                              "extraParams": Object {
                                                                "actionResolver": undefined,
                                                                "actions": undefined,
                                                                "allRowsSelected": false,
                                                                "areActionsDisabled": undefined,
                                                                "canSelectAll": false,
                                                                "canSortFavorites": true,
                                                                "contentId": "expanded-content",
                                                                "dropdownDirection": "down",
                                                                "dropdownPosition": "right",
                                                                "expandId": "expandable-toggle",
                                                                "firstUserColumnIndex": 1,
                                                                "onCollapse": undefined,
                                                                "onExpand": undefined,
                                                                "onFavorite": undefined,
                                                                "onRowEdit": undefined,
                                                                "onSelect": true,
                                                                "onSort": undefined,
                                                                "rowLabeledBy": "simple-node",
                                                                "selectVariant": "checkbox",
                                                                "sortBy": undefined,
                                                              },
                                                              "header": Object {
                                                                "formatters": Array [],
                                                                "label": "",
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "property": "column-3",
                                                              "props": Object {
                                                                "data-key": 3,
                                                                "data-label": "",
                                                              },
                                                            },
                                                          ]
                                                        }
                                                        key="6-row"
                                                        onRow={[Function]}
                                                        renderers={
                                                          Object {
                                                            "cell": [Function],
                                                            "row": [Function],
                                                            "wrapper": [Function],
                                                          }
                                                        }
                                                        rowData={
                                                          Object {
                                                            "cells": Array [
                                                              Object {
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                              Object {
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                              Object {
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                            ],
                                                            "column-3": Object {
                                                              "formatters": Array [],
                                                              "props": Object {
                                                                "isVisible": true,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="md"
                                                              />,
                                                            },
                                                            "disableSelection": true,
                                                            "fact": Object {
                                                              "formatters": Array [],
                                                              "props": Object {
                                                                "isVisible": true,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="md"
                                                              />,
                                                            },
                                                            "isExpanded": undefined,
                                                            "isFirst": false,
                                                            "isFirstVisible": false,
                                                            "isHeightAuto": false,
                                                            "isLast": false,
                                                            "isLastVisible": false,
                                                            "secretTableRowKeyId": 6,
                                                            "value": Object {
                                                              "formatters": Array [],
                                                              "props": Object {
                                                                "isVisible": true,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="md"
                                                              />,
                                                            },
                                                          }
                                                        }
                                                        rowIndex={6}
                                                        rowKey="6-row"
                                                      >
                                                        <RowWrapper
                                                          className=""
                                                          onMouseDown={[Function]}
                                                          row={
                                                            Object {
                                                              "cells": Array [
                                                                Object {
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="md"
                                                                  />,
                                                                },
                                                                Object {
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="md"
                                                                  />,
                                                                },
                                                                Object {
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="md"
                                                                  />,
                                                                },
                                                              ],
                                                              "column-3": Object {
                                                                "formatters": Array [],
                                                                "props": Object {
                                                                  "isVisible": true,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                              "disableSelection": true,
                                                              "fact": Object {
                                                                "formatters": Array [],
                                                                "props": Object {
                                                                  "isVisible": true,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                              "isExpanded": undefined,
                                                              "isFirst": false,
                                                              "isFirstVisible": false,
                                                              "isHeightAuto": false,
                                                              "isLast": false,
                                                              "isLastVisible": false,
                                                              "secretTableRowKeyId": 6,
                                                              "value": Object {
                                                                "formatters": Array [],
                                                                "props": Object {
                                                                  "isVisible": true,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                            }
                                                          }
                                                          rowProps={
                                                            Object {
                                                              "rowIndex": 6,
                                                              "rowKey": "6-row",
                                                            }
                                                          }
                                                        >
                                                          <Tr
                                                            className=""
                                                            onMouseDown={[Function]}
                                                          >
                                                            <TrBase
                                                              className=""
                                                              innerRef={null}
                                                              onMouseDown={[Function]}
                                                            >
                                                              <tr
                                                                className=""
                                                                data-ouia-component-id="OUIA-Generated-TableRow-8"
                                                                data-ouia-component-type="PF4/TableRow"
                                                                data-ouia-safe={true}
                                                                hidden={false}
                                                                onMouseDown={[Function]}
                                                              >
                                                                <BodyCell
                                                                  className="pf-c-table__check"
                                                                  component="td"
                                                                  data-key={0}
                                                                  data-label=""
                                                                  isVisible={true}
                                                                  key="col-0-row-6"
                                                                >
                                                                  <Td
                                                                    className="pf-c-table__check"
                                                                    component="td"
                                                                    data-key={0}
                                                                    dataLabel={null}
                                                                    onMouseEnter={[Function]}
                                                                    textCenter={false}
                                                                  >
                                                                    <TdBase
                                                                      className="pf-c-table__check"
                                                                      component="td"
                                                                      data-key={0}
                                                                      dataLabel={null}
                                                                      innerRef={null}
                                                                      onMouseEnter={[Function]}
                                                                      textCenter={false}
                                                                    >
                                                                      <td
                                                                        className="pf-c-table__check"
                                                                        data-key={0}
                                                                        data-label={null}
                                                                        onMouseEnter={[Function]}
                                                                      >
                                                                        <SelectColumn
                                                                          aria-label="Select row 6"
                                                                          checked={false}
                                                                          className="pf-c-check__input"
                                                                          disabled={true}
                                                                          name="checkrow6"
                                                                          onSelect={[Function]}
                                                                          selectVariant="checkbox"
                                                                        >
                                                                          <input
                                                                            aria-label="Select row 6"
                                                                            checked={false}
                                                                            disabled={true}
                                                                            name="checkrow6"
                                                                            onChange={[Function]}
                                                                            type="checkbox"
                                                                          />
                                                                        </SelectColumn>
                                                                      </td>
                                                                    </TdBase>
                                                                  </Td>
                                                                </BodyCell>
                                                                <BodyCell
                                                                  data-key={1}
                                                                  data-label="Fact"
                                                                  isVisible={true}
                                                                  key="col-1-row-6"
                                                                >
                                                                  <Td
                                                                    className=""
                                                                    component="td"
                                                                    data-key={1}
                                                                    dataLabel="Fact"
                                                                    onMouseEnter={[Function]}
                                                                    textCenter={false}
                                                                  >
                                                                    <TdBase
                                                                      className=""
                                                                      component="td"
                                                                      data-key={1}
                                                                      dataLabel="Fact"
                                                                      innerRef={null}
                                                                      onMouseEnter={[Function]}
                                                                      textCenter={false}
                                                                    >
                                                                      <td
                                                                        className=""
                                                                        data-key={1}
                                                                        data-label="Fact"
                                                                        onMouseEnter={[Function]}
                                                                      >
                                                                        <Skeleton
                                                                          isDark={false}
                                                                          size="md"
                                                                        >
                                                                          <div
                                                                            className="ins-c-skeleton ins-c-skeleton__md"
                                                                          >
                                                                             
                                                                          </div>
                                                                        </Skeleton>
                                                                      </td>
                                                                    </TdBase>
                                                                  </Td>
                                                                </BodyCell>
                                                                <BodyCell
                                                                  data-key={2}
                                                                  data-label="Value"
                                                                  isVisible={true}
                                                                  key="col-2-row-6"
                                                                >
                                                                  <Td
                                                                    className=""
                                                                    component="td"
                                                                    data-key={2}
                                                                    dataLabel="Value"
                                                                    onMouseEnter={[Function]}
                                                                    textCenter={false}
                                                                  >
                                                                    <TdBase
                                                                      className=""
                                                                      component="td"
                                                                      data-key={2}
                                                                      dataLabel="Value"
                                                                      innerRef={null}
                                                                      onMouseEnter={[Function]}
                                                                      textCenter={false}
                                                                    >
                                                                      <td
                                                                        className=""
                                                                        data-key={2}
                                                                        data-label="Value"
                                                                        onMouseEnter={[Function]}
                                                                      >
                                                                        <Skeleton
                                                                          isDark={false}
                                                                          size="md"
                                                                        >
                                                                          <div
                                                                            className="ins-c-skeleton ins-c-skeleton__md"
                                                                          >
                                                                             
                                                                          </div>
                                                                        </Skeleton>
                                                                      </td>
                                                                    </TdBase>
                                                                  </Td>
                                                                </BodyCell>
                                                                <BodyCell
                                                                  data-key={3}
                                                                  data-label=""
                                                                  isVisible={true}
                                                                  key="col-3-row-6"
                                                                >
                                                                  <Td
                                                                    className=""
                                                                    component="td"
                                                                    data-key={3}
                                                                    dataLabel={null}
                                                                    onMouseEnter={[Function]}
                                                                    textCenter={false}
                                                                  >
                                                                    <TdBase
                                                                      className=""
                                                                      component="td"
                                                                      data-key={3}
                                                                      dataLabel={null}
                                                                      innerRef={null}
                                                                      onMouseEnter={[Function]}
                                                                      textCenter={false}
                                                                    >
                                                                      <td
                                                                        className=""
                                                                        data-key={3}
                                                                        data-label={null}
                                                                        onMouseEnter={[Function]}
                                                                      >
                                                                        <Skeleton
                                                                          isDark={false}
                                                                          size="md"
                                                                        >
                                                                          <div
                                                                            className="ins-c-skeleton ins-c-skeleton__md"
                                                                          >
                                                                             
                                                                          </div>
                                                                        </Skeleton>
                                                                      </td>
                                                                    </TdBase>
                                                                  </Td>
                                                                </BodyCell>
                                                              </tr>
                                                            </TrBase>
                                                          </Tr>
                                                        </RowWrapper>
                                                      </BodyRow>
                                                      <BodyRow
                                                        columns={
                                                          Array [
                                                            Object {
                                                              "cell": Object {
                                                                "formatters": Array [
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "data": undefined,
                                                              "extraParams": Object {
                                                                "actionResolver": undefined,
                                                                "actions": undefined,
                                                                "allRowsSelected": false,
                                                                "areActionsDisabled": undefined,
                                                                "canSelectAll": false,
                                                                "canSortFavorites": true,
                                                                "contentId": "expanded-content",
                                                                "dropdownDirection": "down",
                                                                "dropdownPosition": "right",
                                                                "expandId": "expandable-toggle",
                                                                "firstUserColumnIndex": 1,
                                                                "onCollapse": undefined,
                                                                "onExpand": undefined,
                                                                "onFavorite": undefined,
                                                                "onRowEdit": undefined,
                                                                "onSelect": true,
                                                                "onSort": undefined,
                                                                "rowLabeledBy": "simple-node",
                                                                "selectVariant": "checkbox",
                                                                "sortBy": undefined,
                                                              },
                                                              "header": Object {
                                                                "formatters": Array [],
                                                                "label": "",
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "property": "column-0",
                                                              "props": Object {
                                                                "data-key": 0,
                                                                "data-label": "",
                                                              },
                                                            },
                                                            Object {
                                                              "cell": Object {
                                                                "formatters": Array [
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "data": undefined,
                                                              "extraParams": Object {
                                                                "actionResolver": undefined,
                                                                "actions": undefined,
                                                                "allRowsSelected": false,
                                                                "areActionsDisabled": undefined,
                                                                "canSelectAll": false,
                                                                "canSortFavorites": true,
                                                                "contentId": "expanded-content",
                                                                "dropdownDirection": "down",
                                                                "dropdownPosition": "right",
                                                                "expandId": "expandable-toggle",
                                                                "firstUserColumnIndex": 1,
                                                                "onCollapse": undefined,
                                                                "onExpand": undefined,
                                                                "onFavorite": undefined,
                                                                "onRowEdit": undefined,
                                                                "onSelect": true,
                                                                "onSort": undefined,
                                                                "rowLabeledBy": "simple-node",
                                                                "selectVariant": "checkbox",
                                                                "sortBy": undefined,
                                                              },
                                                              "header": Object {
                                                                "formatters": Array [],
                                                                "label": "Fact",
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "property": "fact",
                                                              "props": Object {
                                                                "data-key": 1,
                                                                "data-label": "Fact",
                                                              },
                                                            },
                                                            Object {
                                                              "cell": Object {
                                                                "formatters": Array [
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "data": undefined,
                                                              "extraParams": Object {
                                                                "actionResolver": undefined,
                                                                "actions": undefined,
                                                                "allRowsSelected": false,
                                                                "areActionsDisabled": undefined,
                                                                "canSelectAll": false,
                                                                "canSortFavorites": true,
                                                                "contentId": "expanded-content",
                                                                "dropdownDirection": "down",
                                                                "dropdownPosition": "right",
                                                                "expandId": "expandable-toggle",
                                                                "firstUserColumnIndex": 1,
                                                                "onCollapse": undefined,
                                                                "onExpand": undefined,
                                                                "onFavorite": undefined,
                                                                "onRowEdit": undefined,
                                                                "onSelect": true,
                                                                "onSort": undefined,
                                                                "rowLabeledBy": "simple-node",
                                                                "selectVariant": "checkbox",
                                                                "sortBy": undefined,
                                                              },
                                                              "header": Object {
                                                                "formatters": Array [],
                                                                "label": "Value",
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "property": "value",
                                                              "props": Object {
                                                                "data-key": 2,
                                                                "data-label": "Value",
                                                              },
                                                            },
                                                            Object {
                                                              "cell": Object {
                                                                "formatters": Array [
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "data": undefined,
                                                              "extraParams": Object {
                                                                "actionResolver": undefined,
                                                                "actions": undefined,
                                                                "allRowsSelected": false,
                                                                "areActionsDisabled": undefined,
                                                                "canSelectAll": false,
                                                                "canSortFavorites": true,
                                                                "contentId": "expanded-content",
                                                                "dropdownDirection": "down",
                                                                "dropdownPosition": "right",
                                                                "expandId": "expandable-toggle",
                                                                "firstUserColumnIndex": 1,
                                                                "onCollapse": undefined,
                                                                "onExpand": undefined,
                                                                "onFavorite": undefined,
                                                                "onRowEdit": undefined,
                                                                "onSelect": true,
                                                                "onSort": undefined,
                                                                "rowLabeledBy": "simple-node",
                                                                "selectVariant": "checkbox",
                                                                "sortBy": undefined,
                                                              },
                                                              "header": Object {
                                                                "formatters": Array [],
                                                                "label": "",
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "property": "column-3",
                                                              "props": Object {
                                                                "data-key": 3,
                                                                "data-label": "",
                                                              },
                                                            },
                                                          ]
                                                        }
                                                        key="7-row"
                                                        onRow={[Function]}
                                                        renderers={
                                                          Object {
                                                            "cell": [Function],
                                                            "row": [Function],
                                                            "wrapper": [Function],
                                                          }
                                                        }
                                                        rowData={
                                                          Object {
                                                            "cells": Array [
                                                              Object {
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                              Object {
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                              Object {
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                            ],
                                                            "column-3": Object {
                                                              "formatters": Array [],
                                                              "props": Object {
                                                                "isVisible": true,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="md"
                                                              />,
                                                            },
                                                            "disableSelection": true,
                                                            "fact": Object {
                                                              "formatters": Array [],
                                                              "props": Object {
                                                                "isVisible": true,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="md"
                                                              />,
                                                            },
                                                            "isExpanded": undefined,
                                                            "isFirst": false,
                                                            "isFirstVisible": false,
                                                            "isHeightAuto": false,
                                                            "isLast": true,
                                                            "isLastVisible": true,
                                                            "secretTableRowKeyId": 7,
                                                            "value": Object {
                                                              "formatters": Array [],
                                                              "props": Object {
                                                                "isVisible": true,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="md"
                                                              />,
                                                            },
                                                          }
                                                        }
                                                        rowIndex={7}
                                                        rowKey="7-row"
                                                      >
                                                        <RowWrapper
                                                          className=""
                                                          onMouseDown={[Function]}
                                                          row={
                                                            Object {
                                                              "cells": Array [
                                                                Object {
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="md"
                                                                  />,
                                                                },
                                                                Object {
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="md"
                                                                  />,
                                                                },
                                                                Object {
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="md"
                                                                  />,
                                                                },
                                                              ],
                                                              "column-3": Object {
                                                                "formatters": Array [],
                                                                "props": Object {
                                                                  "isVisible": true,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                              "disableSelection": true,
                                                              "fact": Object {
                                                                "formatters": Array [],
                                                                "props": Object {
                                                                  "isVisible": true,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                              "isExpanded": undefined,
                                                              "isFirst": false,
                                                              "isFirstVisible": false,
                                                              "isHeightAuto": false,
                                                              "isLast": true,
                                                              "isLastVisible": true,
                                                              "secretTableRowKeyId": 7,
                                                              "value": Object {
                                                                "formatters": Array [],
                                                                "props": Object {
                                                                  "isVisible": true,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="md"
                                                                />,
                                                              },
                                                            }
                                                          }
                                                          rowProps={
                                                            Object {
                                                              "rowIndex": 7,
                                                              "rowKey": "7-row",
                                                            }
                                                          }
                                                        >
                                                          <Tr
                                                            className=""
                                                            onMouseDown={[Function]}
                                                          >
                                                            <TrBase
                                                              className=""
                                                              innerRef={null}
                                                              onMouseDown={[Function]}
                                                            >
                                                              <tr
                                                                className=""
                                                                data-ouia-component-id="OUIA-Generated-TableRow-9"
                                                                data-ouia-component-type="PF4/TableRow"
                                                                data-ouia-safe={true}
                                                                hidden={false}
                                                                onMouseDown={[Function]}
                                                              >
                                                                <BodyCell
                                                                  className="pf-c-table__check"
                                                                  component="td"
                                                                  data-key={0}
                                                                  data-label=""
                                                                  isVisible={true}
                                                                  key="col-0-row-7"
                                                                >
                                                                  <Td
                                                                    className="pf-c-table__check"
                                                                    component="td"
                                                                    data-key={0}
                                                                    dataLabel={null}
                                                                    onMouseEnter={[Function]}
                                                                    textCenter={false}
                                                                  >
                                                                    <TdBase
                                                                      className="pf-c-table__check"
                                                                      component="td"
                                                                      data-key={0}
                                                                      dataLabel={null}
                                                                      innerRef={null}
                                                                      onMouseEnter={[Function]}
                                                                      textCenter={false}
                                                                    >
                                                                      <td
                                                                        className="pf-c-table__check"
                                                                        data-key={0}
                                                                        data-label={null}
                                                                        onMouseEnter={[Function]}
                                                                      >
                                                                        <SelectColumn
                                                                          aria-label="Select row 7"
                                                                          checked={false}
                                                                          className="pf-c-check__input"
                                                                          disabled={true}
                                                                          name="checkrow7"
                                                                          onSelect={[Function]}
                                                                          selectVariant="checkbox"
                                                                        >
                                                                          <input
                                                                            aria-label="Select row 7"
                                                                            checked={false}
                                                                            disabled={true}
                                                                            name="checkrow7"
                                                                            onChange={[Function]}
                                                                            type="checkbox"
                                                                          />
                                                                        </SelectColumn>
                                                                      </td>
                                                                    </TdBase>
                                                                  </Td>
                                                                </BodyCell>
                                                                <BodyCell
                                                                  data-key={1}
                                                                  data-label="Fact"
                                                                  isVisible={true}
                                                                  key="col-1-row-7"
                                                                >
                                                                  <Td
                                                                    className=""
                                                                    component="td"
                                                                    data-key={1}
                                                                    dataLabel="Fact"
                                                                    onMouseEnter={[Function]}
                                                                    textCenter={false}
                                                                  >
                                                                    <TdBase
                                                                      className=""
                                                                      component="td"
                                                                      data-key={1}
                                                                      dataLabel="Fact"
                                                                      innerRef={null}
                                                                      onMouseEnter={[Function]}
                                                                      textCenter={false}
                                                                    >
                                                                      <td
                                                                        className=""
                                                                        data-key={1}
                                                                        data-label="Fact"
                                                                        onMouseEnter={[Function]}
                                                                      >
                                                                        <Skeleton
                                                                          isDark={false}
                                                                          size="md"
                                                                        >
                                                                          <div
                                                                            className="ins-c-skeleton ins-c-skeleton__md"
                                                                          >
                                                                             
                                                                          </div>
                                                                        </Skeleton>
                                                                      </td>
                                                                    </TdBase>
                                                                  </Td>
                                                                </BodyCell>
                                                                <BodyCell
                                                                  data-key={2}
                                                                  data-label="Value"
                                                                  isVisible={true}
                                                                  key="col-2-row-7"
                                                                >
                                                                  <Td
                                                                    className=""
                                                                    component="td"
                                                                    data-key={2}
                                                                    dataLabel="Value"
                                                                    onMouseEnter={[Function]}
                                                                    textCenter={false}
                                                                  >
                                                                    <TdBase
                                                                      className=""
                                                                      component="td"
                                                                      data-key={2}
                                                                      dataLabel="Value"
                                                                      innerRef={null}
                                                                      onMouseEnter={[Function]}
                                                                      textCenter={false}
                                                                    >
                                                                      <td
                                                                        className=""
                                                                        data-key={2}
                                                                        data-label="Value"
                                                                        onMouseEnter={[Function]}
                                                                      >
                                                                        <Skeleton
                                                                          isDark={false}
                                                                          size="md"
                                                                        >
                                                                          <div
                                                                            className="ins-c-skeleton ins-c-skeleton__md"
                                                                          >
                                                                             
                                                                          </div>
                                                                        </Skeleton>
                                                                      </td>
                                                                    </TdBase>
                                                                  </Td>
                                                                </BodyCell>
                                                                <BodyCell
                                                                  data-key={3}
                                                                  data-label=""
                                                                  isVisible={true}
                                                                  key="col-3-row-7"
                                                                >
                                                                  <Td
                                                                    className=""
                                                                    component="td"
                                                                    data-key={3}
                                                                    dataLabel={null}
                                                                    onMouseEnter={[Function]}
                                                                    textCenter={false}
                                                                  >
                                                                    <TdBase
                                                                      className=""
                                                                      component="td"
                                                                      data-key={3}
                                                                      dataLabel={null}
                                                                      innerRef={null}
                                                                      onMouseEnter={[Function]}
                                                                      textCenter={false}
                                                                    >
                                                                      <td
                                                                        className=""
                                                                        data-key={3}
                                                                        data-label={null}
                                                                        onMouseEnter={[Function]}
                                                                      >
                                                                        <Skeleton
                                                                          isDark={false}
                                                                          size="md"
                                                                        >
                                                                          <div
                                                                            className="ins-c-skeleton ins-c-skeleton__md"
                                                                          >
                                                                             
                                                                          </div>
                                                                        </Skeleton>
                                                                      </td>
                                                                    </TdBase>
                                                                  </Td>
                                                                </BodyCell>
                                                              </tr>
                                                            </TrBase>
                                                          </Tr>
                                                        </RowWrapper>
                                                      </BodyRow>
                                                    </tbody>
                                                  </TbodyBase>
                                                </Tbody>
                                              </BodyWrapper>
                                            </BaseBody>
                                          </Component>
                                        </ContextBody>
                                      </Component>
                                    </table>
                                  </TableComposableBase>
                                </TableComposable>
                              </Provider>
                            </Table>
                          </SkeletonTable>
                        </div>
                      </CardBody>
                    </article>
                  </Card>
                </section>
              </Main>
            </Connect(Main)>
          </EditBaseline>
        </Connect(EditBaseline)>
      </withRouter(Connect(EditBaseline))>
    </Provider>
  </Router>
</MemoryRouter>
`;

exports[`ConnectedEditBaseline should render with baseline facts 1`] = `
<MemoryRouter
  keyLength={0}
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <withRouter(Connect(EditBaseline))>
        <Connect(EditBaseline)
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "canGo": [Function],
              "createHref": [Function],
              "entries": Array [
                Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              ],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "index": 0,
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
          location={
            Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            }
          }
          match={
            Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            }
          }
        >
          <EditBaseline
            baselineData={
              Object {
                "account": "12345678",
                "baseline_facts": Array [
                  Object {
                    "name": "Sauron",
                    "value": "the Dark Lord",
                  },
                  Object {
                    "name": "Galadriel",
                    "value": "the Elven Queen",
                  },
                  Object {
                    "name": "The Fellowship of the Ring",
                    "values": Array [
                      Object {
                        "name": "Frodo",
                        "value": "Baggins",
                      },
                      Object {
                        "name": "Samwise",
                        "value": "Gamgee",
                      },
                      Object {
                        "name": "Gandalf",
                        "value": "the Grey",
                      },
                      Object {
                        "name": "Meriadoc",
                        "value": "Brandybuck",
                      },
                      Object {
                        "name": "Peregrin",
                        "value": "Took",
                      },
                      Object {
                        "name": "Gimli",
                        "value": "son of Gloin",
                      },
                      Object {
                        "name": "Legolas",
                        "value": "Greenleaf",
                      },
                      Object {
                        "name": "Boromir",
                        "value": "son of Denethor",
                      },
                      Object {
                        "name": "Aragorn",
                        "value": "son of Arathorn",
                      },
                    ],
                  },
                ],
                "created": "2019-10-17T16:20:06.050710Z",
                "display_name": "lotr-baseline",
                "fact_count": 3,
                "id": "jf8alskj-jf74-aje8-ke83-jf84ldjru439k",
                "updated": "2020-02-06T21:48:30.661510Z",
              }
            }
            baselineDataLoading={false}
            clearBaselineData={[Function]}
            clearErrorData={[Function]}
            editBaselineEmptyState={false}
            editBaselineError={Object {}}
            editBaselineTableData={
              Array [
                Array [
                  0,
                  "Sauron",
                  "the Dark Lord",
                ],
                Array [
                  1,
                  "Galadriel",
                  "the Elven Queen",
                ],
                Array [
                  2,
                  "The Fellowship of the Ring",
                  Array [
                    Array [
                      3,
                      "Frodo",
                      "Baggins",
                    ],
                    Array [
                      4,
                      "Samwise",
                      "Gamgee",
                    ],
                    Array [
                      5,
                      "Gandalf",
                      "the Grey",
                    ],
                    Array [
                      6,
                      "Meriadoc",
                      "Brandybuck",
                    ],
                    Array [
                      7,
                      "Peregrin",
                      "Took",
                    ],
                    Array [
                      8,
                      "Gimli",
                      "son of Gloin",
                    ],
                    Array [
                      9,
                      "Legolas",
                      "Greenleaf",
                    ],
                    Array [
                      10,
                      "Boromir",
                      "son of Denethor",
                    ],
                    Array [
                      11,
                      "Aragorn",
                      "son of Arathorn",
                    ],
                  ],
                ],
              ]
            }
            expandRow={[Function]}
            expandedRows={Array []}
            exportToCSV={[Function]}
            factModalOpened={false}
            fetchBaselineData={[Function]}
            fetchBaselines={[Function]}
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            inlineError={Object {}}
            location={
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              }
            }
            match={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
            selectFact={[Function]}
          >
            <Connect(EditBaselineNameModal)
              baselineData={
                Object {
                  "account": "12345678",
                  "baseline_facts": Array [
                    Object {
                      "name": "Sauron",
                      "value": "the Dark Lord",
                    },
                    Object {
                      "name": "Galadriel",
                      "value": "the Elven Queen",
                    },
                    Object {
                      "name": "The Fellowship of the Ring",
                      "values": Array [
                        Object {
                          "name": "Frodo",
                          "value": "Baggins",
                        },
                        Object {
                          "name": "Samwise",
                          "value": "Gamgee",
                        },
                        Object {
                          "name": "Gandalf",
                          "value": "the Grey",
                        },
                        Object {
                          "name": "Meriadoc",
                          "value": "Brandybuck",
                        },
                        Object {
                          "name": "Peregrin",
                          "value": "Took",
                        },
                        Object {
                          "name": "Gimli",
                          "value": "son of Gloin",
                        },
                        Object {
                          "name": "Legolas",
                          "value": "Greenleaf",
                        },
                        Object {
                          "name": "Boromir",
                          "value": "son of Denethor",
                        },
                        Object {
                          "name": "Aragorn",
                          "value": "son of Arathorn",
                        },
                      ],
                    },
                  ],
                  "created": "2019-10-17T16:20:06.050710Z",
                  "display_name": "lotr-baseline",
                  "fact_count": 3,
                  "id": "jf8alskj-jf74-aje8-ke83-jf84ldjru439k",
                  "updated": "2020-02-06T21:48:30.661510Z",
                }
              }
              error={Object {}}
              modalOpened={false}
              toggleEditNameModal={[Function]}
            >
              <EditBaselineNameModal
                baselineData={
                  Object {
                    "account": "12345678",
                    "baseline_facts": Array [
                      Object {
                        "name": "Sauron",
                        "value": "the Dark Lord",
                      },
                      Object {
                        "name": "Galadriel",
                        "value": "the Elven Queen",
                      },
                      Object {
                        "name": "The Fellowship of the Ring",
                        "values": Array [
                          Object {
                            "name": "Frodo",
                            "value": "Baggins",
                          },
                          Object {
                            "name": "Samwise",
                            "value": "Gamgee",
                          },
                          Object {
                            "name": "Gandalf",
                            "value": "the Grey",
                          },
                          Object {
                            "name": "Meriadoc",
                            "value": "Brandybuck",
                          },
                          Object {
                            "name": "Peregrin",
                            "value": "Took",
                          },
                          Object {
                            "name": "Gimli",
                            "value": "son of Gloin",
                          },
                          Object {
                            "name": "Legolas",
                            "value": "Greenleaf",
                          },
                          Object {
                            "name": "Boromir",
                            "value": "son of Denethor",
                          },
                          Object {
                            "name": "Aragorn",
                            "value": "son of Arathorn",
                          },
                        ],
                      },
                    ],
                    "created": "2019-10-17T16:20:06.050710Z",
                    "display_name": "lotr-baseline",
                    "fact_count": 3,
                    "id": "jf8alskj-jf74-aje8-ke83-jf84ldjru439k",
                    "updated": "2020-02-06T21:48:30.661510Z",
                  }
                }
                error={Object {}}
                modalOpened={false}
                patchBaseline={[Function]}
                toggleEditNameModal={[Function]}
              >
                <Modal
                  actions={
                    Array [
                      <Button
                        onClick={[Function]}
                        ouiaId="save"
                        variant="primary"
                      >
                        Save
                      </Button>,
                      <Button
                        onClick={[Function]}
                        ouiaId="cancel"
                        variant="link"
                      >
                        Cancel
                      </Button>,
                    ]
                  }
                  appendTo={[Function]}
                  aria-describedby=""
                  aria-label=""
                  aria-labelledby=""
                  className=""
                  hasNoBodyWrapper={false}
                  isOpen={false}
                  onClose={[Function]}
                  ouiaSafe={true}
                  showClose={true}
                  title="Edit name"
                  titleIconVariant={null}
                  titleLabel=""
                  variant="small"
                >
                  <Portal
                    containerInfo={<div />}
                  >
                    <ModalContent
                      actions={
                        Array [
                          <Button
                            onClick={[Function]}
                            ouiaId="save"
                            variant="primary"
                          >
                            Save
                          </Button>,
                          <Button
                            onClick={[Function]}
                            ouiaId="cancel"
                            variant="link"
                          >
                            Cancel
                          </Button>,
                        ]
                      }
                      aria-describedby=""
                      aria-label=""
                      aria-labelledby=""
                      boxId="pf-modal-part-5"
                      className=""
                      descriptorId="pf-modal-part-7"
                      hasNoBodyWrapper={false}
                      isOpen={false}
                      labelId="pf-modal-part-6"
                      onClose={[Function]}
                      ouiaId="OUIA-Generated-Modal-small-6"
                      ouiaSafe={true}
                      showClose={true}
                      title="Edit name"
                      titleIconVariant={null}
                      titleLabel=""
                      variant="small"
                    />
                  </Portal>
                </Modal>
              </EditBaselineNameModal>
            </Connect(EditBaselineNameModal)>
            <PageHeader>
              <section
                className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                widget-type="InsightsPageHeader"
              >
                <Breadcrumb>
                  <nav
                    aria-label="Breadcrumb"
                    className="pf-c-breadcrumb"
                    data-ouia-component-id="OUIA-Generated-Breadcrumb-6"
                    data-ouia-component-type="PF4/Breadcrumb"
                    data-ouia-safe={true}
                  >
                    <ol
                      className="pf-c-breadcrumb__list"
                    >
                      <BreadcrumbItem
                        key=".0"
                        showDivider={false}
                      >
                        <li
                          className="pf-c-breadcrumb__item"
                        >
                          <a
                            onClick={[Function]}
                          >
                            Baselines
                          </a>
                        </li>
                      </BreadcrumbItem>
                      <BreadcrumbHeading
                        key=".1"
                        showDivider={true}
                      >
                        <li
                          className="pf-c-breadcrumb__item"
                        >
                          <h1
                            className="pf-c-breadcrumb__heading"
                          >
                            <span
                              className="pf-c-breadcrumb__item-divider"
                            >
                              <AngleRightIcon
                                color="currentColor"
                                noVerticalAlign={false}
                                size="sm"
                              >
                                <svg
                                  aria-hidden={true}
                                  aria-labelledby={null}
                                  fill="currentColor"
                                  height="1em"
                                  role="img"
                                  style={
                                    Object {
                                      "verticalAlign": "-0.125em",
                                    }
                                  }
                                  viewBox="0 0 256 512"
                                  width="1em"
                                >
                                  <path
                                    d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                  />
                                </svg>
                              </AngleRightIcon>
                            </span>
                            lotr-baseline
                          </h1>
                        </li>
                      </BreadcrumbHeading>
                    </ol>
                  </nav>
                </Breadcrumb>
                <div
                  id="edit-baseline-title"
                >
                  <span
                    className="pf-c-title pf-m-2xl"
                  >
                    lotr-baseline
                  </span>
                  <span>
                    <EditAltIcon
                      className="pointer not-active edit-icon-margin"
                      color="currentColor"
                      noVerticalAlign={false}
                      onClick={[Function]}
                      size="sm"
                    >
                      <svg
                        aria-hidden={true}
                        aria-labelledby={null}
                        className="pointer not-active edit-icon-margin"
                        fill="currentColor"
                        height="1em"
                        onClick={[Function]}
                        role="img"
                        style={
                          Object {
                            "verticalAlign": "-0.125em",
                          }
                        }
                        viewBox="0 0 1024 1024"
                        width="1em"
                      >
                        <path
                          d="M1024,187.9 C1024,207 1017.3,223.1 1004,236.4 L857.5,386.9 L638.8,168.4 L787.3,20.5 C800.3,6.83333333 816.5,0 835.9,0 C855,0 871.366667,6.83333333 885,20.5 L1004,138.9 C1017.3,152.9 1023.96667,169.233333 1024,187.9 Z M806.2,438.9 L219.4,1024 L0,1024 L0,804.6 L586.6,219.5 L806.2,438.9 Z M219.6,950.9 L292.9,877.8 L146.3,731.4 L73.2,804.5 L73.2,877.6 L146.3,877.6 L146.3,951 L219.6,950.9 Z"
                        />
                      </svg>
                    </EditAltIcon>
                  </span>
                </div>
              </section>
            </PageHeader>
            <Connect(Main)>
              <Main>
                <section
                  className="pf-l-page__main-section pf-c-page__main-section"
                  page-type=""
                >
                  <div />
                  <Connect(ErrorAlert)
                    error={Object {}}
                    onClose={[Function]}
                  >
                    <ErrorAlert
                      addNotification={[Function]}
                      error={Object {}}
                      onClose={[Function]}
                    />
                  </Connect(ErrorAlert)>
                  <Card
                    className="pf-t-light pf-m-opaque-100"
                  >
                    <article
                      className="pf-c-card pf-t-light pf-m-opaque-100"
                      data-ouia-component-id="OUIA-Generated-Card-4"
                      data-ouia-component-type="PF4/Card"
                      data-ouia-safe={true}
                      id=""
                    >
                      <CardBody>
                        <div
                          className="pf-c-card__body"
                        >
                          <EditBaselineToolbar
                            baselineData={
                              Object {
                                "account": "12345678",
                                "baseline_facts": Array [
                                  Object {
                                    "name": "Sauron",
                                    "value": "the Dark Lord",
                                  },
                                  Object {
                                    "name": "Galadriel",
                                    "value": "the Elven Queen",
                                  },
                                  Object {
                                    "name": "The Fellowship of the Ring",
                                    "values": Array [
                                      Object {
                                        "name": "Frodo",
                                        "value": "Baggins",
                                      },
                                      Object {
                                        "name": "Samwise",
                                        "value": "Gamgee",
                                      },
                                      Object {
                                        "name": "Gandalf",
                                        "value": "the Grey",
                                      },
                                      Object {
                                        "name": "Meriadoc",
                                        "value": "Brandybuck",
                                      },
                                      Object {
                                        "name": "Peregrin",
                                        "value": "Took",
                                      },
                                      Object {
                                        "name": "Gimli",
                                        "value": "son of Gloin",
                                      },
                                      Object {
                                        "name": "Legolas",
                                        "value": "Greenleaf",
                                      },
                                      Object {
                                        "name": "Boromir",
                                        "value": "son of Denethor",
                                      },
                                      Object {
                                        "name": "Aragorn",
                                        "value": "son of Arathorn",
                                      },
                                    ],
                                  },
                                ],
                                "created": "2019-10-17T16:20:06.050710Z",
                                "display_name": "lotr-baseline",
                                "fact_count": 3,
                                "id": "jf8alskj-jf74-aje8-ke83-jf84ldjru439k",
                                "updated": "2020-02-06T21:48:30.661510Z",
                              }
                            }
                            exportToCSV={[Function]}
                            hasWritePermissions={true}
                            isDisabled={false}
                            onBulkSelect={[Function]}
                            selected={0}
                            tableData={
                              Array [
                                Array [
                                  0,
                                  "Sauron",
                                  "the Dark Lord",
                                ],
                                Array [
                                  1,
                                  "Galadriel",
                                  "the Elven Queen",
                                ],
                                Array [
                                  2,
                                  "The Fellowship of the Ring",
                                  Array [
                                    Array [
                                      3,
                                      "Frodo",
                                      "Baggins",
                                    ],
                                    Array [
                                      4,
                                      "Samwise",
                                      "Gamgee",
                                    ],
                                    Array [
                                      5,
                                      "Gandalf",
                                      "the Grey",
                                    ],
                                    Array [
                                      6,
                                      "Meriadoc",
                                      "Brandybuck",
                                    ],
                                    Array [
                                      7,
                                      "Peregrin",
                                      "Took",
                                    ],
                                    Array [
                                      8,
                                      "Gimli",
                                      "son of Gloin",
                                    ],
                                    Array [
                                      9,
                                      "Legolas",
                                      "Greenleaf",
                                    ],
                                    Array [
                                      10,
                                      "Boromir",
                                      "son of Denethor",
                                    ],
                                    Array [
                                      11,
                                      "Aragorn",
                                      "son of Arathorn",
                                    ],
                                  ],
                                ],
                              ]
                            }
                            totalFacts={11}
                          >
                            <Toolbar
                              className="drift-toolbar"
                            >
                              <GenerateId
                                prefix="pf-random-id-"
                              >
                                <div
                                  className="pf-c-toolbar drift-toolbar"
                                  id="pf-random-id-3"
                                >
                                  <ToolbarContent
                                    isExpanded={false}
                                    showClearFiltersButton={false}
                                  >
                                    <div
                                      className="pf-c-toolbar__content"
                                    >
                                      <div
                                        className="pf-c-toolbar__content-section"
                                      >
                                        <ToolbarItem>
                                          <div
                                            className="pf-c-toolbar__item"
                                          >
                                            <BulkSelect
                                              checked={false}
                                              className=""
                                              count={null}
                                              isDisabled={false}
                                              items={
                                                Array [
                                                  Object {
                                                    "key": "select-all",
                                                    "onClick": [Function],
                                                    "title": "Select all",
                                                  },
                                                  Object {
                                                    "key": "select-none",
                                                    "onClick": [Function],
                                                    "title": "Select none",
                                                  },
                                                ]
                                              }
                                              onSelect={[Function]}
                                            >
                                              <Dropdown
                                                className="ins-c-bulk-select"
                                                dropdownItems={
                                                  Array [
                                                    <DropdownItem
                                                      component="button"
                                                      onClick={[Function]}
                                                    >
                                                      Select all
                                                    </DropdownItem>,
                                                    <DropdownItem
                                                      component="button"
                                                      onClick={[Function]}
                                                    >
                                                      Select none
                                                    </DropdownItem>,
                                                  ]
                                                }
                                                isOpen={false}
                                                onSelect={[Function]}
                                                toggle={
                                                  <DropdownToggle
                                                    isDisabled={false}
                                                    onToggle={[Function]}
                                                    splitButtonItems={
                                                      Array [
                                                        <React.Fragment>
                                                          <DropdownToggleCheckbox
                                                            aria-label="Select all"
                                                            className=""
                                                            id="toggle-checkbox"
                                                            isChecked={false}
                                                            isDisabled={false}
                                                            isValid={true}
                                                            onChange={[Function]}
                                                          >
                                                            
                                                          </DropdownToggleCheckbox>
                                                        </React.Fragment>,
                                                      ]
                                                    }
                                                  />
                                                }
                                              >
                                                <DropdownWithContext
                                                  autoFocus={true}
                                                  className="ins-c-bulk-select"
                                                  direction="down"
                                                  dropdownItems={
                                                    Array [
                                                      <DropdownItem
                                                        component="button"
                                                        onClick={[Function]}
                                                      >
                                                        Select all
                                                      </DropdownItem>,
                                                      <DropdownItem
                                                        component="button"
                                                        onClick={[Function]}
                                                      >
                                                        Select none
                                                      </DropdownItem>,
                                                    ]
                                                  }
                                                  isGrouped={false}
                                                  isOpen={false}
                                                  isPlain={false}
                                                  menuAppendTo="inline"
                                                  onSelect={[Function]}
                                                  position="left"
                                                  toggle={
                                                    <DropdownToggle
                                                      isDisabled={false}
                                                      onToggle={[Function]}
                                                      splitButtonItems={
                                                        Array [
                                                          <React.Fragment>
                                                            <DropdownToggleCheckbox
                                                              aria-label="Select all"
                                                              className=""
                                                              id="toggle-checkbox"
                                                              isChecked={false}
                                                              isDisabled={false}
                                                              isValid={true}
                                                              onChange={[Function]}
                                                            >
                                                              
                                                            </DropdownToggleCheckbox>
                                                          </React.Fragment>,
                                                        ]
                                                      }
                                                    />
                                                  }
                                                >
                                                  <div
                                                    className="pf-c-dropdown ins-c-bulk-select"
                                                    data-ouia-component-id="OUIA-Generated-Dropdown-4"
                                                    data-ouia-component-type="PF4/Dropdown"
                                                    data-ouia-safe={true}
                                                  >
                                                    <DropdownToggle
                                                      aria-haspopup={true}
                                                      getMenuRef={[Function]}
                                                      id="pf-dropdown-toggle-id-9"
                                                      isDisabled={false}
                                                      isOpen={false}
                                                      isPlain={false}
                                                      key=".0"
                                                      onEnter={[Function]}
                                                      onToggle={[Function]}
                                                      parentRef={
                                                        Object {
                                                          "current": <div
                                                            class="pf-c-dropdown ins-c-bulk-select"
                                                            data-ouia-component-id="OUIA-Generated-Dropdown-4"
                                                            data-ouia-component-type="PF4/Dropdown"
                                                            data-ouia-safe="true"
                                                          >
                                                            <div
                                                              class="pf-c-dropdown__toggle pf-m-split-button"
                                                            >
                                                              <label
                                                                class="pf-c-dropdown__toggle-check"
                                                                for="toggle-checkbox"
                                                              >
                                                                <input
                                                                  aria-invalid="false"
                                                                  aria-label="Select all"
                                                                  data-ouia-component-id="OUIA-Generated-DropdownToggleCheckbox-4"
                                                                  data-ouia-component-type="PF4/DropdownToggleCheckbox"
                                                                  data-ouia-safe="true"
                                                                  id="toggle-checkbox"
                                                                  type="checkbox"
                                                                />
                                                                
                                                              </label>
                                                              <button
                                                                aria-expanded="false"
                                                                aria-haspopup="true"
                                                                aria-label="Select"
                                                                class="pf-c-dropdown__toggle-button"
                                                                data-ouia-component-id="OUIA-Generated-DropdownToggle-7"
                                                                data-ouia-component-type="PF4/DropdownToggle"
                                                                data-ouia-safe="true"
                                                                id="pf-dropdown-toggle-id-9"
                                                                type="button"
                                                              >
                                                                <span
                                                                  class=""
                                                                >
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    fill="currentColor"
                                                                    height="1em"
                                                                    role="img"
                                                                    style="vertical-align: -0.125em;"
                                                                    viewBox="0 0 320 512"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                    />
                                                                  </svg>
                                                                </span>
                                                              </button>
                                                            </div>
                                                          </div>,
                                                        }
                                                      }
                                                      splitButtonItems={
                                                        Array [
                                                          <React.Fragment>
                                                            <DropdownToggleCheckbox
                                                              aria-label="Select all"
                                                              className=""
                                                              id="toggle-checkbox"
                                                              isChecked={false}
                                                              isDisabled={false}
                                                              isValid={true}
                                                              onChange={[Function]}
                                                            >
                                                              
                                                            </DropdownToggleCheckbox>
                                                          </React.Fragment>,
                                                        ]
                                                      }
                                                    >
                                                      <div
                                                        className="pf-c-dropdown__toggle pf-m-split-button"
                                                      >
                                                        <DropdownToggleCheckbox
                                                          aria-label="Select all"
                                                          className=""
                                                          id="toggle-checkbox"
                                                          isChecked={false}
                                                          isDisabled={false}
                                                          isValid={true}
                                                          onChange={[Function]}
                                                        >
                                                          <label
                                                            className="pf-c-dropdown__toggle-check"
                                                            htmlFor="toggle-checkbox"
                                                          >
                                                            <input
                                                              aria-invalid={false}
                                                              aria-label="Select all"
                                                              checked={false}
                                                              data-ouia-component-id="OUIA-Generated-DropdownToggleCheckbox-4"
                                                              data-ouia-component-type="PF4/DropdownToggleCheckbox"
                                                              data-ouia-safe={true}
                                                              disabled={false}
                                                              id="toggle-checkbox"
                                                              onChange={[Function]}
                                                              type="checkbox"
                                                            />
                                                          </label>
                                                        </DropdownToggleCheckbox>
                                                        <Toggle
                                                          aria-haspopup={true}
                                                          aria-label="Select"
                                                          bubbleEvent={false}
                                                          className=""
                                                          data-ouia-component-id="OUIA-Generated-DropdownToggle-7"
                                                          data-ouia-component-type="PF4/DropdownToggle"
                                                          data-ouia-safe={true}
                                                          getMenuRef={[Function]}
                                                          id="pf-dropdown-toggle-id-9"
                                                          isActive={false}
                                                          isDisabled={false}
                                                          isOpen={false}
                                                          isPlain={false}
                                                          isPrimary={false}
                                                          isSplitButton={true}
                                                          onEnter={[Function]}
                                                          onToggle={[Function]}
                                                          parentRef={
                                                            Object {
                                                              "current": <div
                                                                class="pf-c-dropdown ins-c-bulk-select"
                                                                data-ouia-component-id="OUIA-Generated-Dropdown-4"
                                                                data-ouia-component-type="PF4/Dropdown"
                                                                data-ouia-safe="true"
                                                              >
                                                                <div
                                                                  class="pf-c-dropdown__toggle pf-m-split-button"
                                                                >
                                                                  <label
                                                                    class="pf-c-dropdown__toggle-check"
                                                                    for="toggle-checkbox"
                                                                  >
                                                                    <input
                                                                      aria-invalid="false"
                                                                      aria-label="Select all"
                                                                      data-ouia-component-id="OUIA-Generated-DropdownToggleCheckbox-4"
                                                                      data-ouia-component-type="PF4/DropdownToggleCheckbox"
                                                                      data-ouia-safe="true"
                                                                      id="toggle-checkbox"
                                                                      type="checkbox"
                                                                    />
                                                                    
                                                                  </label>
                                                                  <button
                                                                    aria-expanded="false"
                                                                    aria-haspopup="true"
                                                                    aria-label="Select"
                                                                    class="pf-c-dropdown__toggle-button"
                                                                    data-ouia-component-id="OUIA-Generated-DropdownToggle-7"
                                                                    data-ouia-component-type="PF4/DropdownToggle"
                                                                    data-ouia-safe="true"
                                                                    id="pf-dropdown-toggle-id-9"
                                                                    type="button"
                                                                  >
                                                                    <span
                                                                      class=""
                                                                    >
                                                                      <svg
                                                                        aria-hidden="true"
                                                                        fill="currentColor"
                                                                        height="1em"
                                                                        role="img"
                                                                        style="vertical-align: -0.125em;"
                                                                        viewBox="0 0 320 512"
                                                                        width="1em"
                                                                      >
                                                                        <path
                                                                          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                        />
                                                                      </svg>
                                                                    </span>
                                                                  </button>
                                                                </div>
                                                              </div>,
                                                            }
                                                          }
                                                        >
                                                          <button
                                                            aria-expanded={false}
                                                            aria-haspopup={true}
                                                            aria-label="Select"
                                                            className="pf-c-dropdown__toggle-button"
                                                            data-ouia-component-id="OUIA-Generated-DropdownToggle-7"
                                                            data-ouia-component-type="PF4/DropdownToggle"
                                                            data-ouia-safe={true}
                                                            disabled={false}
                                                            id="pf-dropdown-toggle-id-9"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            type="button"
                                                          >
                                                            <span
                                                              className=""
                                                            >
                                                              <CaretDownIcon
                                                                color="currentColor"
                                                                noVerticalAlign={false}
                                                                size="sm"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  aria-labelledby={null}
                                                                  fill="currentColor"
                                                                  height="1em"
                                                                  role="img"
                                                                  style={
                                                                    Object {
                                                                      "verticalAlign": "-0.125em",
                                                                    }
                                                                  }
                                                                  viewBox="0 0 320 512"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                  />
                                                                </svg>
                                                              </CaretDownIcon>
                                                            </span>
                                                          </button>
                                                        </Toggle>
                                                      </div>
                                                    </DropdownToggle>
                                                  </div>
                                                </DropdownWithContext>
                                              </Dropdown>
                                            </BulkSelect>
                                          </div>
                                        </ToolbarItem>
                                        <ToolbarItem>
                                          <div
                                            className="pf-c-toolbar__item"
                                          >
                                            <Connect(AddFactButton)
                                              hasWritePermissions={true}
                                              isDisabled={false}
                                            >
                                              <AddFactButton
                                                hasWritePermissions={true}
                                                isDisabled={false}
                                                setFactData={[Function]}
                                                toggleFactModal={[Function]}
                                              >
                                                <Button
                                                  isDisabled={false}
                                                  onClick={[Function]}
                                                  ouiaId="add_fact"
                                                  variant="primary"
                                                >
                                                  <button
                                                    aria-disabled={false}
                                                    aria-label={null}
                                                    className="pf-c-button pf-m-primary"
                                                    data-ouia-component-id="add_fact"
                                                    data-ouia-component-type="PF4/Button"
                                                    data-ouia-safe={true}
                                                    disabled={false}
                                                    onClick={[Function]}
                                                    role={null}
                                                    type="button"
                                                  >
                                                    Add fact or category
                                                  </button>
                                                </Button>
                                              </AddFactButton>
                                            </Connect(AddFactButton)>
                                          </div>
                                        </ToolbarItem>
                                        <ForwardRef
                                          variant="icon-button-group"
                                        >
                                          <ToolbarGroupWithRef
                                            innerRef={null}
                                            variant="icon-button-group"
                                          >
                                            <div
                                              className="pf-c-toolbar__group pf-m-icon-button-group"
                                            >
                                              <ToolbarItem>
                                                <div
                                                  className="pf-c-toolbar__item"
                                                >
                                                  <ExportCSVButton
                                                    dropdownItems={
                                                      Array [
                                                        <DropdownItem
                                                          component="button"
                                                          onClick={[Function]}
                                                        >
                                                          Export to CSV
                                                        </DropdownItem>,
                                                      ]
                                                    }
                                                    isOpen={false}
                                                    onToggle={[Function]}
                                                  >
                                                    <Dropdown
                                                      dropdownItems={
                                                        Array [
                                                          <DropdownItem
                                                            component="button"
                                                            onClick={[Function]}
                                                          >
                                                            Export to CSV
                                                          </DropdownItem>,
                                                        ]
                                                      }
                                                      isOpen={false}
                                                      isPlain={true}
                                                      ouiaId="export"
                                                      position="left"
                                                      toggle={
                                                        <DropdownToggle
                                                          onToggle={[Function]}
                                                          toggleIndicator={null}
                                                        >
                                                          <ExportIcon
                                                            className="pointer not-active"
                                                            color="currentColor"
                                                            noVerticalAlign={false}
                                                            size="sm"
                                                          />
                                                        </DropdownToggle>
                                                      }
                                                    >
                                                      <DropdownWithContext
                                                        autoFocus={true}
                                                        className=""
                                                        direction="down"
                                                        dropdownItems={
                                                          Array [
                                                            <DropdownItem
                                                              component="button"
                                                              onClick={[Function]}
                                                            >
                                                              Export to CSV
                                                            </DropdownItem>,
                                                          ]
                                                        }
                                                        isGrouped={false}
                                                        isOpen={false}
                                                        isPlain={true}
                                                        menuAppendTo="inline"
                                                        onSelect={[Function]}
                                                        position="left"
                                                        toggle={
                                                          <DropdownToggle
                                                            onToggle={[Function]}
                                                            toggleIndicator={null}
                                                          >
                                                            <ExportIcon
                                                              className="pointer not-active"
                                                              color="currentColor"
                                                              noVerticalAlign={false}
                                                              size="sm"
                                                            />
                                                          </DropdownToggle>
                                                        }
                                                      >
                                                        <div
                                                          className="pf-c-dropdown"
                                                          data-ouia-component-id="export"
                                                          data-ouia-component-type="PF4/Dropdown"
                                                          data-ouia-safe={true}
                                                        >
                                                          <DropdownToggle
                                                            aria-haspopup={true}
                                                            getMenuRef={[Function]}
                                                            id="pf-dropdown-toggle-id-10"
                                                            isOpen={false}
                                                            isPlain={true}
                                                            key=".0"
                                                            onEnter={[Function]}
                                                            onToggle={[Function]}
                                                            parentRef={
                                                              Object {
                                                                "current": <div
                                                                  class="pf-c-dropdown"
                                                                  data-ouia-component-id="export"
                                                                  data-ouia-component-type="PF4/Dropdown"
                                                                  data-ouia-safe="true"
                                                                >
                                                                  <button
                                                                    aria-expanded="false"
                                                                    aria-haspopup="true"
                                                                    class="pf-c-dropdown__toggle pf-m-plain"
                                                                    data-ouia-component-id="OUIA-Generated-DropdownToggle-8"
                                                                    data-ouia-component-type="PF4/DropdownToggle"
                                                                    data-ouia-safe="true"
                                                                    id="pf-dropdown-toggle-id-10"
                                                                    type="button"
                                                                  >
                                                                    <span>
                                                                      <svg
                                                                        aria-hidden="true"
                                                                        class="pointer not-active"
                                                                        fill="currentColor"
                                                                        height="1em"
                                                                        role="img"
                                                                        style="vertical-align: -0.125em;"
                                                                        viewBox="0 0 1024 1024"
                                                                        width="1em"
                                                                      >
                                                                        <path
                                                                          d="M975.8,636.9 L870.9,741.8 L457.9,328.6 C452.1,322.8 445.4,319.9 437.9,319.9 C430.4,319.9 423.7,322.8 417.9,328.6 L328.8,417.7 C323,423.5 320.1,430.2 320.1,437.7 C320.1,445.2 323,451.9 328.8,457.7 L742,870.7 L636.9,975.8 C610.5,1002.2 619.4,1024 656.8,1024 L956,1024 C1014.5,1024 1024,1013.7 1024,955.9 L1024,656.7 C1023.9,619.4 1002.2,610.5 975.8,636.9 Z M128,128 L896,128 L896,361.7 C896.007942,370.182681 899.389907,378.313788 905.4,384.3 L996.7,475.6 C1006.8,485.7 1024,478.5 1024,464.3 L1024,22.7 C1024,16.1 1021.9,10.7 1017.6,6.4 C1013.3,2.1 1007.9,0 1001.3,0 L22.7,0 C16.1,0 10.7,2.1 6.4,6.4 C2.1,10.7 0,16.1 0,22.7 L0,1001.3 C0,1007.9 2.1,1013.3 6.4,1017.6 C10.7,1021.9 16.1,1024 22.7,1024 L463.4,1024 C469.862884,1023.98894 475.684489,1020.0908 478.156232,1014.11925 C480.627976,1008.14769 479.264428,1001.27548 474.7,996.7 L383.4,905.4 C377.413788,899.389907 369.282681,896.007942 360.8,896 L128,896 L128,128 Z"
                                                                        />
                                                                      </svg>
                                                                    </span>
                                                                  </button>
                                                                </div>,
                                                              }
                                                            }
                                                            toggleIndicator={null}
                                                          >
                                                            <Toggle
                                                              aria-haspopup={true}
                                                              bubbleEvent={false}
                                                              className=""
                                                              data-ouia-component-id="OUIA-Generated-DropdownToggle-8"
                                                              data-ouia-component-type="PF4/DropdownToggle"
                                                              data-ouia-safe={true}
                                                              getMenuRef={[Function]}
                                                              id="pf-dropdown-toggle-id-10"
                                                              isActive={false}
                                                              isDisabled={false}
                                                              isOpen={false}
                                                              isPlain={true}
                                                              isPrimary={false}
                                                              isSplitButton={false}
                                                              onEnter={[Function]}
                                                              onToggle={[Function]}
                                                              parentRef={
                                                                Object {
                                                                  "current": <div
                                                                    class="pf-c-dropdown"
                                                                    data-ouia-component-id="export"
                                                                    data-ouia-component-type="PF4/Dropdown"
                                                                    data-ouia-safe="true"
                                                                  >
                                                                    <button
                                                                      aria-expanded="false"
                                                                      aria-haspopup="true"
                                                                      class="pf-c-dropdown__toggle pf-m-plain"
                                                                      data-ouia-component-id="OUIA-Generated-DropdownToggle-8"
                                                                      data-ouia-component-type="PF4/DropdownToggle"
                                                                      data-ouia-safe="true"
                                                                      id="pf-dropdown-toggle-id-10"
                                                                      type="button"
                                                                    >
                                                                      <span>
                                                                        <svg
                                                                          aria-hidden="true"
                                                                          class="pointer not-active"
                                                                          fill="currentColor"
                                                                          height="1em"
                                                                          role="img"
                                                                          style="vertical-align: -0.125em;"
                                                                          viewBox="0 0 1024 1024"
                                                                          width="1em"
                                                                        >
                                                                          <path
                                                                            d="M975.8,636.9 L870.9,741.8 L457.9,328.6 C452.1,322.8 445.4,319.9 437.9,319.9 C430.4,319.9 423.7,322.8 417.9,328.6 L328.8,417.7 C323,423.5 320.1,430.2 320.1,437.7 C320.1,445.2 323,451.9 328.8,457.7 L742,870.7 L636.9,975.8 C610.5,1002.2 619.4,1024 656.8,1024 L956,1024 C1014.5,1024 1024,1013.7 1024,955.9 L1024,656.7 C1023.9,619.4 1002.2,610.5 975.8,636.9 Z M128,128 L896,128 L896,361.7 C896.007942,370.182681 899.389907,378.313788 905.4,384.3 L996.7,475.6 C1006.8,485.7 1024,478.5 1024,464.3 L1024,22.7 C1024,16.1 1021.9,10.7 1017.6,6.4 C1013.3,2.1 1007.9,0 1001.3,0 L22.7,0 C16.1,0 10.7,2.1 6.4,6.4 C2.1,10.7 0,16.1 0,22.7 L0,1001.3 C0,1007.9 2.1,1013.3 6.4,1017.6 C10.7,1021.9 16.1,1024 22.7,1024 L463.4,1024 C469.862884,1023.98894 475.684489,1020.0908 478.156232,1014.11925 C480.627976,1008.14769 479.264428,1001.27548 474.7,996.7 L383.4,905.4 C377.413788,899.389907 369.282681,896.007942 360.8,896 L128,896 L128,128 Z"
                                                                          />
                                                                        </svg>
                                                                      </span>
                                                                    </button>
                                                                  </div>,
                                                                }
                                                              }
                                                            >
                                                              <button
                                                                aria-expanded={false}
                                                                aria-haspopup={true}
                                                                className="pf-c-dropdown__toggle pf-m-plain"
                                                                data-ouia-component-id="OUIA-Generated-DropdownToggle-8"
                                                                data-ouia-component-type="PF4/DropdownToggle"
                                                                data-ouia-safe={true}
                                                                disabled={false}
                                                                id="pf-dropdown-toggle-id-10"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className={null}
                                                                >
                                                                  <ExportIcon
                                                                    className="pointer not-active"
                                                                    color="currentColor"
                                                                    noVerticalAlign={false}
                                                                    size="sm"
                                                                  >
                                                                    <svg
                                                                      aria-hidden={true}
                                                                      aria-labelledby={null}
                                                                      className="pointer not-active"
                                                                      fill="currentColor"
                                                                      height="1em"
                                                                      role="img"
                                                                      style={
                                                                        Object {
                                                                          "verticalAlign": "-0.125em",
                                                                        }
                                                                      }
                                                                      viewBox="0 0 1024 1024"
                                                                      width="1em"
                                                                    >
                                                                      <path
                                                                        d="M975.8,636.9 L870.9,741.8 L457.9,328.6 C452.1,322.8 445.4,319.9 437.9,319.9 C430.4,319.9 423.7,322.8 417.9,328.6 L328.8,417.7 C323,423.5 320.1,430.2 320.1,437.7 C320.1,445.2 323,451.9 328.8,457.7 L742,870.7 L636.9,975.8 C610.5,1002.2 619.4,1024 656.8,1024 L956,1024 C1014.5,1024 1024,1013.7 1024,955.9 L1024,656.7 C1023.9,619.4 1002.2,610.5 975.8,636.9 Z M128,128 L896,128 L896,361.7 C896.007942,370.182681 899.389907,378.313788 905.4,384.3 L996.7,475.6 C1006.8,485.7 1024,478.5 1024,464.3 L1024,22.7 C1024,16.1 1021.9,10.7 1017.6,6.4 C1013.3,2.1 1007.9,0 1001.3,0 L22.7,0 C16.1,0 10.7,2.1 6.4,6.4 C2.1,10.7 0,16.1 0,22.7 L0,1001.3 C0,1007.9 2.1,1013.3 6.4,1017.6 C10.7,1021.9 16.1,1024 22.7,1024 L463.4,1024 C469.862884,1023.98894 475.684489,1020.0908 478.156232,1014.11925 C480.627976,1008.14769 479.264428,1001.27548 474.7,996.7 L383.4,905.4 C377.413788,899.389907 369.282681,896.007942 360.8,896 L128,896 L128,128 Z"
                                                                      />
                                                                    </svg>
                                                                  </ExportIcon>
                                                                </span>
                                                              </button>
                                                            </Toggle>
                                                          </DropdownToggle>
                                                        </div>
                                                      </DropdownWithContext>
                                                    </Dropdown>
                                                  </ExportCSVButton>
                                                </div>
                                              </ToolbarItem>
                                              <ToolbarItem>
                                                <div
                                                  className="pf-c-toolbar__item"
                                                >
                                                  <Connect(EditBaselineKebab)>
                                                    <EditBaselineKebab
                                                      dispatch={[Function]}
                                                      editBaselineTableData={
                                                        Array [
                                                          Array [
                                                            0,
                                                            "Sauron",
                                                            "the Dark Lord",
                                                          ],
                                                          Array [
                                                            1,
                                                            "Galadriel",
                                                            "the Elven Queen",
                                                          ],
                                                          Array [
                                                            2,
                                                            "The Fellowship of the Ring",
                                                            Array [
                                                              Array [
                                                                3,
                                                                "Frodo",
                                                                "Baggins",
                                                              ],
                                                              Array [
                                                                4,
                                                                "Samwise",
                                                                "Gamgee",
                                                              ],
                                                              Array [
                                                                5,
                                                                "Gandalf",
                                                                "the Grey",
                                                              ],
                                                              Array [
                                                                6,
                                                                "Meriadoc",
                                                                "Brandybuck",
                                                              ],
                                                              Array [
                                                                7,
                                                                "Peregrin",
                                                                "Took",
                                                              ],
                                                              Array [
                                                                8,
                                                                "Gimli",
                                                                "son of Gloin",
                                                              ],
                                                              Array [
                                                                9,
                                                                "Legolas",
                                                                "Greenleaf",
                                                              ],
                                                              Array [
                                                                10,
                                                                "Boromir",
                                                                "son of Denethor",
                                                              ],
                                                              Array [
                                                                11,
                                                                "Aragorn",
                                                                "son of Arathorn",
                                                              ],
                                                            ],
                                                          ],
                                                        ]
                                                      }
                                                    >
                                                      <Dropdown
                                                        dropdownItems={
                                                          Array [
                                                            <DropdownItem
                                                              component="button"
                                                              isDisabled={true}
                                                              onClick={[Function]}
                                                            >
                                                              Delete facts
                                                            </DropdownItem>,
                                                          ]
                                                        }
                                                        isOpen={false}
                                                        isPlain={true}
                                                        ouiaId="actions"
                                                        style={
                                                          Object {
                                                            "float": "left",
                                                          }
                                                        }
                                                        toggle={
                                                          <KebabToggle
                                                            onToggle={[Function]}
                                                          />
                                                        }
                                                      >
                                                        <DropdownWithContext
                                                          autoFocus={true}
                                                          className=""
                                                          direction="down"
                                                          dropdownItems={
                                                            Array [
                                                              <DropdownItem
                                                                component="button"
                                                                isDisabled={true}
                                                                onClick={[Function]}
                                                              >
                                                                Delete facts
                                                              </DropdownItem>,
                                                            ]
                                                          }
                                                          isGrouped={false}
                                                          isOpen={false}
                                                          isPlain={true}
                                                          menuAppendTo="inline"
                                                          onSelect={[Function]}
                                                          position="left"
                                                          style={
                                                            Object {
                                                              "float": "left",
                                                            }
                                                          }
                                                          toggle={
                                                            <KebabToggle
                                                              onToggle={[Function]}
                                                            />
                                                          }
                                                        >
                                                          <div
                                                            className="pf-c-dropdown"
                                                            data-ouia-component-id="actions"
                                                            data-ouia-component-type="PF4/Dropdown"
                                                            data-ouia-safe={true}
                                                            style={
                                                              Object {
                                                                "float": "left",
                                                              }
                                                            }
                                                          >
                                                            <KebabToggle
                                                              aria-haspopup={true}
                                                              getMenuRef={[Function]}
                                                              id="pf-dropdown-toggle-id-11"
                                                              isOpen={false}
                                                              isPlain={true}
                                                              key=".0"
                                                              onEnter={[Function]}
                                                              onToggle={[Function]}
                                                              parentRef={
                                                                Object {
                                                                  "current": <div
                                                                    class="pf-c-dropdown"
                                                                    data-ouia-component-id="actions"
                                                                    data-ouia-component-type="PF4/Dropdown"
                                                                    data-ouia-safe="true"
                                                                    style="float: left;"
                                                                  >
                                                                    <button
                                                                      aria-expanded="false"
                                                                      aria-haspopup="true"
                                                                      aria-label="Actions"
                                                                      class="pf-c-dropdown__toggle pf-m-plain"
                                                                      id="pf-dropdown-toggle-id-11"
                                                                      type="button"
                                                                    >
                                                                      <svg
                                                                        aria-hidden="true"
                                                                        fill="currentColor"
                                                                        height="1em"
                                                                        role="img"
                                                                        style="vertical-align: -0.125em;"
                                                                        viewBox="0 0 192 512"
                                                                        width="1em"
                                                                      >
                                                                        <path
                                                                          d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                                        />
                                                                      </svg>
                                                                    </button>
                                                                  </div>,
                                                                }
                                                              }
                                                            >
                                                              <Toggle
                                                                aria-haspopup={true}
                                                                aria-label="Actions"
                                                                bubbleEvent={false}
                                                                className=""
                                                                getMenuRef={[Function]}
                                                                id="pf-dropdown-toggle-id-11"
                                                                isActive={false}
                                                                isDisabled={false}
                                                                isOpen={false}
                                                                isPlain={true}
                                                                isPrimary={false}
                                                                isSplitButton={false}
                                                                onEnter={[Function]}
                                                                onToggle={[Function]}
                                                                parentRef={
                                                                  Object {
                                                                    "current": <div
                                                                      class="pf-c-dropdown"
                                                                      data-ouia-component-id="actions"
                                                                      data-ouia-component-type="PF4/Dropdown"
                                                                      data-ouia-safe="true"
                                                                      style="float: left;"
                                                                    >
                                                                      <button
                                                                        aria-expanded="false"
                                                                        aria-haspopup="true"
                                                                        aria-label="Actions"
                                                                        class="pf-c-dropdown__toggle pf-m-plain"
                                                                        id="pf-dropdown-toggle-id-11"
                                                                        type="button"
                                                                      >
                                                                        <svg
                                                                          aria-hidden="true"
                                                                          fill="currentColor"
                                                                          height="1em"
                                                                          role="img"
                                                                          style="vertical-align: -0.125em;"
                                                                          viewBox="0 0 192 512"
                                                                          width="1em"
                                                                        >
                                                                          <path
                                                                            d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                                          />
                                                                        </svg>
                                                                      </button>
                                                                    </div>,
                                                                  }
                                                                }
                                                              >
                                                                <button
                                                                  aria-expanded={false}
                                                                  aria-haspopup={true}
                                                                  aria-label="Actions"
                                                                  className="pf-c-dropdown__toggle pf-m-plain"
                                                                  disabled={false}
                                                                  id="pf-dropdown-toggle-id-11"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  type="button"
                                                                >
                                                                  <EllipsisVIcon
                                                                    color="currentColor"
                                                                    noVerticalAlign={false}
                                                                    size="sm"
                                                                  >
                                                                    <svg
                                                                      aria-hidden={true}
                                                                      aria-labelledby={null}
                                                                      fill="currentColor"
                                                                      height="1em"
                                                                      role="img"
                                                                      style={
                                                                        Object {
                                                                          "verticalAlign": "-0.125em",
                                                                        }
                                                                      }
                                                                      viewBox="0 0 192 512"
                                                                      width="1em"
                                                                    >
                                                                      <path
                                                                        d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                                      />
                                                                    </svg>
                                                                  </EllipsisVIcon>
                                                                </button>
                                                              </Toggle>
                                                            </KebabToggle>
                                                          </div>
                                                        </DropdownWithContext>
                                                      </Dropdown>
                                                    </EditBaselineKebab>
                                                  </Connect(EditBaselineKebab)>
                                                </div>
                                              </ToolbarItem>
                                            </div>
                                          </ToolbarGroupWithRef>
                                        </ForwardRef>
                                      </div>
                                      <ToolbarExpandableContent
                                        chipContainerRef={
                                          Object {
                                            "current": null,
                                          }
                                        }
                                        clearFiltersButtonText="Clear all filters"
                                        expandableContentRef={
                                          Object {
                                            "current": <div
                                              class="pf-c-toolbar__expandable-content"
                                              id="pf-random-id-3-expandable-content-3"
                                            >
                                              <div
                                                class="pf-c-toolbar__group"
                                              />
                                            </div>,
                                          }
                                        }
                                        id="pf-random-id-3-expandable-content-3"
                                        isExpanded={false}
                                        showClearFiltersButton={false}
                                      >
                                        <div
                                          className="pf-c-toolbar__expandable-content"
                                          id="pf-random-id-3-expandable-content-3"
                                        >
                                          <ForwardRef>
                                            <ToolbarGroupWithRef
                                              innerRef={null}
                                            >
                                              <div
                                                className="pf-c-toolbar__group"
                                              />
                                            </ToolbarGroupWithRef>
                                          </ForwardRef>
                                        </div>
                                      </ToolbarExpandableContent>
                                    </div>
                                  </ToolbarContent>
                                  <ToolbarChipGroupContent
                                    chipGroupContentRef={
                                      Object {
                                        "current": <div
                                          class="pf-c-toolbar__content pf-m-hidden"
                                          hidden=""
                                        >
                                          <div
                                            class="pf-c-toolbar__group"
                                          />
                                        </div>,
                                      }
                                    }
                                    clearFiltersButtonText="Clear all filters"
                                    collapseListedFiltersBreakpoint="lg"
                                    isExpanded={false}
                                    numberOfFilters={0}
                                    showClearFiltersButton={false}
                                  >
                                    <div
                                      className="pf-c-toolbar__content pf-m-hidden"
                                      hidden={true}
                                    >
                                      <ForwardRef
                                        className=""
                                      >
                                        <ToolbarGroupWithRef
                                          className=""
                                          innerRef={null}
                                        >
                                          <div
                                            className="pf-c-toolbar__group"
                                          />
                                        </ToolbarGroupWithRef>
                                      </ForwardRef>
                                    </div>
                                  </ToolbarChipGroupContent>
                                </div>
                              </GenerateId>
                            </Toolbar>
                          </EditBaselineToolbar>
                          <table
                            className="pf-c-table ins-c-table pf-m-grid-md ins-entity-table"
                          >
                            <thead>
                              <tr
                                key="edit-baseline-table-header"
                              >
                                <th />
                                <th
                                  className="edit-baseline-header"
                                >
                                  <div>
                                    Fact
                                  </div>
                                </th>
                                <th
                                  className="edit-baseline-header"
                                >
                                  <div>
                                    Value
                                  </div>
                                </th>
                                <th />
                              </tr>
                            </thead>
                            <tbody
                              key="edit-baseline-table"
                            >
                              <tr
                                key="Sauron"
                              >
                                <td
                                  className="pf-c-table__check"
                                >
                                  <Checkbox
                                    className=""
                                    id="fact-0"
                                    isChecked={false}
                                    isDisabled={false}
                                    isValid={true}
                                    name={0}
                                    onChange={[Function]}
                                  >
                                    <div
                                      className="pf-c-check"
                                    >
                                      <input
                                        aria-invalid={false}
                                        checked={false}
                                        className="pf-c-check__input"
                                        disabled={false}
                                        id="fact-0"
                                        name={0}
                                        onChange={[Function]}
                                        type="checkbox"
                                      />
                                    </div>
                                  </Checkbox>
                                </td>
                                <td>
                                  Sauron
                                </td>
                                <td>
                                  the Dark Lord
                                </td>
                                <td>
                                  <Connect(FactKebab)
                                    fact={
                                      Object {
                                        "name": "Sauron",
                                        "value": "the Dark Lord",
                                      }
                                    }
                                    factName="Sauron"
                                    factValue="the Dark Lord"
                                  >
                                    <FactKebab
                                      baselineData={
                                        Object {
                                          "account": "12345678",
                                          "baseline_facts": Array [
                                            Object {
                                              "name": "Sauron",
                                              "value": "the Dark Lord",
                                            },
                                            Object {
                                              "name": "Galadriel",
                                              "value": "the Elven Queen",
                                            },
                                            Object {
                                              "name": "The Fellowship of the Ring",
                                              "values": Array [
                                                Object {
                                                  "name": "Frodo",
                                                  "value": "Baggins",
                                                },
                                                Object {
                                                  "name": "Samwise",
                                                  "value": "Gamgee",
                                                },
                                                Object {
                                                  "name": "Gandalf",
                                                  "value": "the Grey",
                                                },
                                                Object {
                                                  "name": "Meriadoc",
                                                  "value": "Brandybuck",
                                                },
                                                Object {
                                                  "name": "Peregrin",
                                                  "value": "Took",
                                                },
                                                Object {
                                                  "name": "Gimli",
                                                  "value": "son of Gloin",
                                                },
                                                Object {
                                                  "name": "Legolas",
                                                  "value": "Greenleaf",
                                                },
                                                Object {
                                                  "name": "Boromir",
                                                  "value": "son of Denethor",
                                                },
                                                Object {
                                                  "name": "Aragorn",
                                                  "value": "son of Arathorn",
                                                },
                                              ],
                                            },
                                          ],
                                          "created": "2019-10-17T16:20:06.050710Z",
                                          "display_name": "lotr-baseline",
                                          "fact_count": 3,
                                          "id": "jf8alskj-jf74-aje8-ke83-jf84ldjru439k",
                                          "updated": "2020-02-06T21:48:30.661510Z",
                                        }
                                      }
                                      deleteBaselineData={[Function]}
                                      fact={
                                        Object {
                                          "name": "Sauron",
                                          "value": "the Dark Lord",
                                        }
                                      }
                                      factName="Sauron"
                                      factValue="the Dark Lord"
                                      fetchBaselineData={[Function]}
                                      setFactData={[Function]}
                                      toggleFactModal={[Function]}
                                    >
                                      <Dropdown
                                        className="baseline-fact-kebab"
                                        dropdownItems={
                                          Array [
                                            <DropdownItem
                                              component="button"
                                              onClick={[Function]}
                                            >
                                              Edit fact
                                            </DropdownItem>,
                                            <DropdownItem
                                              component="button"
                                              onClick={[Function]}
                                            >
                                              Delete fact
                                            </DropdownItem>,
                                          ]
                                        }
                                        isOpen={false}
                                        isPlain={true}
                                        position="right"
                                        style={
                                          Object {
                                            "float": "right",
                                          }
                                        }
                                        toggle={
                                          <KebabToggle
                                            onToggle={[Function]}
                                          />
                                        }
                                      >
                                        <DropdownWithContext
                                          autoFocus={true}
                                          className="baseline-fact-kebab"
                                          direction="down"
                                          dropdownItems={
                                            Array [
                                              <DropdownItem
                                                component="button"
                                                onClick={[Function]}
                                              >
                                                Edit fact
                                              </DropdownItem>,
                                              <DropdownItem
                                                component="button"
                                                onClick={[Function]}
                                              >
                                                Delete fact
                                              </DropdownItem>,
                                            ]
                                          }
                                          isGrouped={false}
                                          isOpen={false}
                                          isPlain={true}
                                          menuAppendTo="inline"
                                          onSelect={[Function]}
                                          position="right"
                                          style={
                                            Object {
                                              "float": "right",
                                            }
                                          }
                                          toggle={
                                            <KebabToggle
                                              onToggle={[Function]}
                                            />
                                          }
                                        >
                                          <div
                                            className="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                            data-ouia-component-id="OUIA-Generated-Dropdown-5"
                                            data-ouia-component-type="PF4/Dropdown"
                                            data-ouia-safe={true}
                                            style={
                                              Object {
                                                "float": "right",
                                              }
                                            }
                                          >
                                            <KebabToggle
                                              aria-haspopup={true}
                                              getMenuRef={[Function]}
                                              id="pf-dropdown-toggle-id-12"
                                              isOpen={false}
                                              isPlain={true}
                                              key=".0"
                                              onEnter={[Function]}
                                              onToggle={[Function]}
                                              parentRef={
                                                Object {
                                                  "current": <div
                                                    class="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                                    data-ouia-component-id="OUIA-Generated-Dropdown-5"
                                                    data-ouia-component-type="PF4/Dropdown"
                                                    data-ouia-safe="true"
                                                    style="float: right;"
                                                  >
                                                    <button
                                                      aria-expanded="false"
                                                      aria-haspopup="true"
                                                      aria-label="Actions"
                                                      class="pf-c-dropdown__toggle pf-m-plain"
                                                      id="pf-dropdown-toggle-id-12"
                                                      type="button"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        fill="currentColor"
                                                        height="1em"
                                                        role="img"
                                                        style="vertical-align: -0.125em;"
                                                        viewBox="0 0 192 512"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                        />
                                                      </svg>
                                                    </button>
                                                  </div>,
                                                }
                                              }
                                            >
                                              <Toggle
                                                aria-haspopup={true}
                                                aria-label="Actions"
                                                bubbleEvent={false}
                                                className=""
                                                getMenuRef={[Function]}
                                                id="pf-dropdown-toggle-id-12"
                                                isActive={false}
                                                isDisabled={false}
                                                isOpen={false}
                                                isPlain={true}
                                                isPrimary={false}
                                                isSplitButton={false}
                                                onEnter={[Function]}
                                                onToggle={[Function]}
                                                parentRef={
                                                  Object {
                                                    "current": <div
                                                      class="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                                      data-ouia-component-id="OUIA-Generated-Dropdown-5"
                                                      data-ouia-component-type="PF4/Dropdown"
                                                      data-ouia-safe="true"
                                                      style="float: right;"
                                                    >
                                                      <button
                                                        aria-expanded="false"
                                                        aria-haspopup="true"
                                                        aria-label="Actions"
                                                        class="pf-c-dropdown__toggle pf-m-plain"
                                                        id="pf-dropdown-toggle-id-12"
                                                        type="button"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          fill="currentColor"
                                                          height="1em"
                                                          role="img"
                                                          style="vertical-align: -0.125em;"
                                                          viewBox="0 0 192 512"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                          />
                                                        </svg>
                                                      </button>
                                                    </div>,
                                                  }
                                                }
                                              >
                                                <button
                                                  aria-expanded={false}
                                                  aria-haspopup={true}
                                                  aria-label="Actions"
                                                  className="pf-c-dropdown__toggle pf-m-plain"
                                                  disabled={false}
                                                  id="pf-dropdown-toggle-id-12"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  type="button"
                                                >
                                                  <EllipsisVIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 192 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                      />
                                                    </svg>
                                                  </EllipsisVIcon>
                                                </button>
                                              </Toggle>
                                            </KebabToggle>
                                          </div>
                                        </DropdownWithContext>
                                      </Dropdown>
                                    </FactKebab>
                                  </Connect(FactKebab)>
                                </td>
                              </tr>
                              <tr
                                key="Galadriel"
                              >
                                <td
                                  className="pf-c-table__check"
                                >
                                  <Checkbox
                                    className=""
                                    id="fact-1"
                                    isChecked={false}
                                    isDisabled={false}
                                    isValid={true}
                                    name={1}
                                    onChange={[Function]}
                                  >
                                    <div
                                      className="pf-c-check"
                                    >
                                      <input
                                        aria-invalid={false}
                                        checked={false}
                                        className="pf-c-check__input"
                                        disabled={false}
                                        id="fact-1"
                                        name={1}
                                        onChange={[Function]}
                                        type="checkbox"
                                      />
                                    </div>
                                  </Checkbox>
                                </td>
                                <td>
                                  Galadriel
                                </td>
                                <td>
                                  the Elven Queen
                                </td>
                                <td>
                                  <Connect(FactKebab)
                                    fact={
                                      Object {
                                        "name": "Galadriel",
                                        "value": "the Elven Queen",
                                      }
                                    }
                                    factName="Galadriel"
                                    factValue="the Elven Queen"
                                  >
                                    <FactKebab
                                      baselineData={
                                        Object {
                                          "account": "12345678",
                                          "baseline_facts": Array [
                                            Object {
                                              "name": "Sauron",
                                              "value": "the Dark Lord",
                                            },
                                            Object {
                                              "name": "Galadriel",
                                              "value": "the Elven Queen",
                                            },
                                            Object {
                                              "name": "The Fellowship of the Ring",
                                              "values": Array [
                                                Object {
                                                  "name": "Frodo",
                                                  "value": "Baggins",
                                                },
                                                Object {
                                                  "name": "Samwise",
                                                  "value": "Gamgee",
                                                },
                                                Object {
                                                  "name": "Gandalf",
                                                  "value": "the Grey",
                                                },
                                                Object {
                                                  "name": "Meriadoc",
                                                  "value": "Brandybuck",
                                                },
                                                Object {
                                                  "name": "Peregrin",
                                                  "value": "Took",
                                                },
                                                Object {
                                                  "name": "Gimli",
                                                  "value": "son of Gloin",
                                                },
                                                Object {
                                                  "name": "Legolas",
                                                  "value": "Greenleaf",
                                                },
                                                Object {
                                                  "name": "Boromir",
                                                  "value": "son of Denethor",
                                                },
                                                Object {
                                                  "name": "Aragorn",
                                                  "value": "son of Arathorn",
                                                },
                                              ],
                                            },
                                          ],
                                          "created": "2019-10-17T16:20:06.050710Z",
                                          "display_name": "lotr-baseline",
                                          "fact_count": 3,
                                          "id": "jf8alskj-jf74-aje8-ke83-jf84ldjru439k",
                                          "updated": "2020-02-06T21:48:30.661510Z",
                                        }
                                      }
                                      deleteBaselineData={[Function]}
                                      fact={
                                        Object {
                                          "name": "Galadriel",
                                          "value": "the Elven Queen",
                                        }
                                      }
                                      factName="Galadriel"
                                      factValue="the Elven Queen"
                                      fetchBaselineData={[Function]}
                                      setFactData={[Function]}
                                      toggleFactModal={[Function]}
                                    >
                                      <Dropdown
                                        className="baseline-fact-kebab"
                                        dropdownItems={
                                          Array [
                                            <DropdownItem
                                              component="button"
                                              onClick={[Function]}
                                            >
                                              Edit fact
                                            </DropdownItem>,
                                            <DropdownItem
                                              component="button"
                                              onClick={[Function]}
                                            >
                                              Delete fact
                                            </DropdownItem>,
                                          ]
                                        }
                                        isOpen={false}
                                        isPlain={true}
                                        position="right"
                                        style={
                                          Object {
                                            "float": "right",
                                          }
                                        }
                                        toggle={
                                          <KebabToggle
                                            onToggle={[Function]}
                                          />
                                        }
                                      >
                                        <DropdownWithContext
                                          autoFocus={true}
                                          className="baseline-fact-kebab"
                                          direction="down"
                                          dropdownItems={
                                            Array [
                                              <DropdownItem
                                                component="button"
                                                onClick={[Function]}
                                              >
                                                Edit fact
                                              </DropdownItem>,
                                              <DropdownItem
                                                component="button"
                                                onClick={[Function]}
                                              >
                                                Delete fact
                                              </DropdownItem>,
                                            ]
                                          }
                                          isGrouped={false}
                                          isOpen={false}
                                          isPlain={true}
                                          menuAppendTo="inline"
                                          onSelect={[Function]}
                                          position="right"
                                          style={
                                            Object {
                                              "float": "right",
                                            }
                                          }
                                          toggle={
                                            <KebabToggle
                                              onToggle={[Function]}
                                            />
                                          }
                                        >
                                          <div
                                            className="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                            data-ouia-component-id="OUIA-Generated-Dropdown-6"
                                            data-ouia-component-type="PF4/Dropdown"
                                            data-ouia-safe={true}
                                            style={
                                              Object {
                                                "float": "right",
                                              }
                                            }
                                          >
                                            <KebabToggle
                                              aria-haspopup={true}
                                              getMenuRef={[Function]}
                                              id="pf-dropdown-toggle-id-13"
                                              isOpen={false}
                                              isPlain={true}
                                              key=".0"
                                              onEnter={[Function]}
                                              onToggle={[Function]}
                                              parentRef={
                                                Object {
                                                  "current": <div
                                                    class="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                                    data-ouia-component-id="OUIA-Generated-Dropdown-6"
                                                    data-ouia-component-type="PF4/Dropdown"
                                                    data-ouia-safe="true"
                                                    style="float: right;"
                                                  >
                                                    <button
                                                      aria-expanded="false"
                                                      aria-haspopup="true"
                                                      aria-label="Actions"
                                                      class="pf-c-dropdown__toggle pf-m-plain"
                                                      id="pf-dropdown-toggle-id-13"
                                                      type="button"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        fill="currentColor"
                                                        height="1em"
                                                        role="img"
                                                        style="vertical-align: -0.125em;"
                                                        viewBox="0 0 192 512"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                        />
                                                      </svg>
                                                    </button>
                                                  </div>,
                                                }
                                              }
                                            >
                                              <Toggle
                                                aria-haspopup={true}
                                                aria-label="Actions"
                                                bubbleEvent={false}
                                                className=""
                                                getMenuRef={[Function]}
                                                id="pf-dropdown-toggle-id-13"
                                                isActive={false}
                                                isDisabled={false}
                                                isOpen={false}
                                                isPlain={true}
                                                isPrimary={false}
                                                isSplitButton={false}
                                                onEnter={[Function]}
                                                onToggle={[Function]}
                                                parentRef={
                                                  Object {
                                                    "current": <div
                                                      class="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                                      data-ouia-component-id="OUIA-Generated-Dropdown-6"
                                                      data-ouia-component-type="PF4/Dropdown"
                                                      data-ouia-safe="true"
                                                      style="float: right;"
                                                    >
                                                      <button
                                                        aria-expanded="false"
                                                        aria-haspopup="true"
                                                        aria-label="Actions"
                                                        class="pf-c-dropdown__toggle pf-m-plain"
                                                        id="pf-dropdown-toggle-id-13"
                                                        type="button"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          fill="currentColor"
                                                          height="1em"
                                                          role="img"
                                                          style="vertical-align: -0.125em;"
                                                          viewBox="0 0 192 512"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                          />
                                                        </svg>
                                                      </button>
                                                    </div>,
                                                  }
                                                }
                                              >
                                                <button
                                                  aria-expanded={false}
                                                  aria-haspopup={true}
                                                  aria-label="Actions"
                                                  className="pf-c-dropdown__toggle pf-m-plain"
                                                  disabled={false}
                                                  id="pf-dropdown-toggle-id-13"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  type="button"
                                                >
                                                  <EllipsisVIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 192 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                      />
                                                    </svg>
                                                  </EllipsisVIcon>
                                                </button>
                                              </Toggle>
                                            </KebabToggle>
                                          </div>
                                        </DropdownWithContext>
                                      </Dropdown>
                                    </FactKebab>
                                  </Connect(FactKebab)>
                                </td>
                              </tr>
                              <tr
                                key="The Fellowship of the Ring"
                              >
                                <td
                                  className="pf-c-table__check"
                                >
                                  <Checkbox
                                    className=""
                                    id="category-2"
                                    isChecked={false}
                                    isDisabled={false}
                                    isValid={true}
                                    name={2}
                                    onChange={[Function]}
                                  >
                                    <div
                                      className="pf-c-check"
                                    >
                                      <input
                                        aria-invalid={false}
                                        checked={false}
                                        className="pf-c-check__input"
                                        disabled={false}
                                        id="category-2"
                                        name={2}
                                        onChange={[Function]}
                                        type="checkbox"
                                      />
                                    </div>
                                  </Checkbox>
                                </td>
                                <td>
                                  <AngleRightIcon
                                    className="pointer"
                                    color="currentColor"
                                    noVerticalAlign={false}
                                    onClick={[Function]}
                                    size="sm"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      aria-labelledby={null}
                                      className="pointer"
                                      fill="currentColor"
                                      height="1em"
                                      onClick={[Function]}
                                      role="img"
                                      style={
                                        Object {
                                          "verticalAlign": "-0.125em",
                                        }
                                      }
                                      viewBox="0 0 256 512"
                                      width="1em"
                                    >
                                      <path
                                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                      />
                                    </svg>
                                  </AngleRightIcon>
                                   
                                  The Fellowship of the Ring
                                </td>
                                <td />
                                <td>
                                  <Connect(FactKebab)
                                    fact={
                                      Object {
                                        "name": "The Fellowship of the Ring",
                                        "values": Array [
                                          Object {
                                            "name": "Frodo",
                                            "value": "Baggins",
                                          },
                                          Object {
                                            "name": "Samwise",
                                            "value": "Gamgee",
                                          },
                                          Object {
                                            "name": "Gandalf",
                                            "value": "the Grey",
                                          },
                                          Object {
                                            "name": "Meriadoc",
                                            "value": "Brandybuck",
                                          },
                                          Object {
                                            "name": "Peregrin",
                                            "value": "Took",
                                          },
                                          Object {
                                            "name": "Gimli",
                                            "value": "son of Gloin",
                                          },
                                          Object {
                                            "name": "Legolas",
                                            "value": "Greenleaf",
                                          },
                                          Object {
                                            "name": "Boromir",
                                            "value": "son of Denethor",
                                          },
                                          Object {
                                            "name": "Aragorn",
                                            "value": "son of Arathorn",
                                          },
                                        ],
                                      }
                                    }
                                    factName="The Fellowship of the Ring"
                                    isCategory={true}
                                  >
                                    <FactKebab
                                      baselineData={
                                        Object {
                                          "account": "12345678",
                                          "baseline_facts": Array [
                                            Object {
                                              "name": "Sauron",
                                              "value": "the Dark Lord",
                                            },
                                            Object {
                                              "name": "Galadriel",
                                              "value": "the Elven Queen",
                                            },
                                            Object {
                                              "name": "The Fellowship of the Ring",
                                              "values": Array [
                                                Object {
                                                  "name": "Frodo",
                                                  "value": "Baggins",
                                                },
                                                Object {
                                                  "name": "Samwise",
                                                  "value": "Gamgee",
                                                },
                                                Object {
                                                  "name": "Gandalf",
                                                  "value": "the Grey",
                                                },
                                                Object {
                                                  "name": "Meriadoc",
                                                  "value": "Brandybuck",
                                                },
                                                Object {
                                                  "name": "Peregrin",
                                                  "value": "Took",
                                                },
                                                Object {
                                                  "name": "Gimli",
                                                  "value": "son of Gloin",
                                                },
                                                Object {
                                                  "name": "Legolas",
                                                  "value": "Greenleaf",
                                                },
                                                Object {
                                                  "name": "Boromir",
                                                  "value": "son of Denethor",
                                                },
                                                Object {
                                                  "name": "Aragorn",
                                                  "value": "son of Arathorn",
                                                },
                                              ],
                                            },
                                          ],
                                          "created": "2019-10-17T16:20:06.050710Z",
                                          "display_name": "lotr-baseline",
                                          "fact_count": 3,
                                          "id": "jf8alskj-jf74-aje8-ke83-jf84ldjru439k",
                                          "updated": "2020-02-06T21:48:30.661510Z",
                                        }
                                      }
                                      deleteBaselineData={[Function]}
                                      fact={
                                        Object {
                                          "name": "The Fellowship of the Ring",
                                          "values": Array [
                                            Object {
                                              "name": "Frodo",
                                              "value": "Baggins",
                                            },
                                            Object {
                                              "name": "Samwise",
                                              "value": "Gamgee",
                                            },
                                            Object {
                                              "name": "Gandalf",
                                              "value": "the Grey",
                                            },
                                            Object {
                                              "name": "Meriadoc",
                                              "value": "Brandybuck",
                                            },
                                            Object {
                                              "name": "Peregrin",
                                              "value": "Took",
                                            },
                                            Object {
                                              "name": "Gimli",
                                              "value": "son of Gloin",
                                            },
                                            Object {
                                              "name": "Legolas",
                                              "value": "Greenleaf",
                                            },
                                            Object {
                                              "name": "Boromir",
                                              "value": "son of Denethor",
                                            },
                                            Object {
                                              "name": "Aragorn",
                                              "value": "son of Arathorn",
                                            },
                                          ],
                                        }
                                      }
                                      factName="The Fellowship of the Ring"
                                      fetchBaselineData={[Function]}
                                      isCategory={true}
                                      setFactData={[Function]}
                                      toggleFactModal={[Function]}
                                    >
                                      <Dropdown
                                        className="baseline-fact-kebab"
                                        dropdownItems={
                                          Array [
                                            <DropdownItem
                                              component="button"
                                              onClick={[Function]}
                                            >
                                              Add sub fact
                                            </DropdownItem>,
                                            <DropdownItem
                                              component="button"
                                              onClick={[Function]}
                                            >
                                              Edit category
                                            </DropdownItem>,
                                            <DropdownItem
                                              component="button"
                                              onClick={[Function]}
                                            >
                                              Delete category
                                            </DropdownItem>,
                                          ]
                                        }
                                        isOpen={false}
                                        isPlain={true}
                                        position="right"
                                        style={
                                          Object {
                                            "float": "right",
                                          }
                                        }
                                        toggle={
                                          <KebabToggle
                                            onToggle={[Function]}
                                          />
                                        }
                                      >
                                        <DropdownWithContext
                                          autoFocus={true}
                                          className="baseline-fact-kebab"
                                          direction="down"
                                          dropdownItems={
                                            Array [
                                              <DropdownItem
                                                component="button"
                                                onClick={[Function]}
                                              >
                                                Add sub fact
                                              </DropdownItem>,
                                              <DropdownItem
                                                component="button"
                                                onClick={[Function]}
                                              >
                                                Edit category
                                              </DropdownItem>,
                                              <DropdownItem
                                                component="button"
                                                onClick={[Function]}
                                              >
                                                Delete category
                                              </DropdownItem>,
                                            ]
                                          }
                                          isGrouped={false}
                                          isOpen={false}
                                          isPlain={true}
                                          menuAppendTo="inline"
                                          onSelect={[Function]}
                                          position="right"
                                          style={
                                            Object {
                                              "float": "right",
                                            }
                                          }
                                          toggle={
                                            <KebabToggle
                                              onToggle={[Function]}
                                            />
                                          }
                                        >
                                          <div
                                            className="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                            data-ouia-component-id="OUIA-Generated-Dropdown-7"
                                            data-ouia-component-type="PF4/Dropdown"
                                            data-ouia-safe={true}
                                            style={
                                              Object {
                                                "float": "right",
                                              }
                                            }
                                          >
                                            <KebabToggle
                                              aria-haspopup={true}
                                              getMenuRef={[Function]}
                                              id="pf-dropdown-toggle-id-14"
                                              isOpen={false}
                                              isPlain={true}
                                              key=".0"
                                              onEnter={[Function]}
                                              onToggle={[Function]}
                                              parentRef={
                                                Object {
                                                  "current": <div
                                                    class="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                                    data-ouia-component-id="OUIA-Generated-Dropdown-7"
                                                    data-ouia-component-type="PF4/Dropdown"
                                                    data-ouia-safe="true"
                                                    style="float: right;"
                                                  >
                                                    <button
                                                      aria-expanded="false"
                                                      aria-haspopup="true"
                                                      aria-label="Actions"
                                                      class="pf-c-dropdown__toggle pf-m-plain"
                                                      id="pf-dropdown-toggle-id-14"
                                                      type="button"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        fill="currentColor"
                                                        height="1em"
                                                        role="img"
                                                        style="vertical-align: -0.125em;"
                                                        viewBox="0 0 192 512"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                        />
                                                      </svg>
                                                    </button>
                                                  </div>,
                                                }
                                              }
                                            >
                                              <Toggle
                                                aria-haspopup={true}
                                                aria-label="Actions"
                                                bubbleEvent={false}
                                                className=""
                                                getMenuRef={[Function]}
                                                id="pf-dropdown-toggle-id-14"
                                                isActive={false}
                                                isDisabled={false}
                                                isOpen={false}
                                                isPlain={true}
                                                isPrimary={false}
                                                isSplitButton={false}
                                                onEnter={[Function]}
                                                onToggle={[Function]}
                                                parentRef={
                                                  Object {
                                                    "current": <div
                                                      class="pf-c-dropdown pf-m-align-right baseline-fact-kebab"
                                                      data-ouia-component-id="OUIA-Generated-Dropdown-7"
                                                      data-ouia-component-type="PF4/Dropdown"
                                                      data-ouia-safe="true"
                                                      style="float: right;"
                                                    >
                                                      <button
                                                        aria-expanded="false"
                                                        aria-haspopup="true"
                                                        aria-label="Actions"
                                                        class="pf-c-dropdown__toggle pf-m-plain"
                                                        id="pf-dropdown-toggle-id-14"
                                                        type="button"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          fill="currentColor"
                                                          height="1em"
                                                          role="img"
                                                          style="vertical-align: -0.125em;"
                                                          viewBox="0 0 192 512"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                          />
                                                        </svg>
                                                      </button>
                                                    </div>,
                                                  }
                                                }
                                              >
                                                <button
                                                  aria-expanded={false}
                                                  aria-haspopup={true}
                                                  aria-label="Actions"
                                                  className="pf-c-dropdown__toggle pf-m-plain"
                                                  disabled={false}
                                                  id="pf-dropdown-toggle-id-14"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  type="button"
                                                >
                                                  <EllipsisVIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 192 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                      />
                                                    </svg>
                                                  </EllipsisVIcon>
                                                </button>
                                              </Toggle>
                                            </KebabToggle>
                                          </div>
                                        </DropdownWithContext>
                                      </Dropdown>
                                    </FactKebab>
                                  </Connect(FactKebab)>
                                </td>
                              </tr>
                            </tbody>
                          </table>
                        </div>
                      </CardBody>
                    </article>
                  </Card>
                </section>
              </Main>
            </Connect(Main)>
          </EditBaseline>
        </Connect(EditBaseline)>
      </withRouter(Connect(EditBaseline))>
    </Provider>
  </Router>
</MemoryRouter>
`;
