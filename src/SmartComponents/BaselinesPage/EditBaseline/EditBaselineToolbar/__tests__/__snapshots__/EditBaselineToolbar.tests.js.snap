// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ConnectedEditBaselineToolbar should render correctly 1`] = `
<MemoryRouter
  keyLength={0}
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <EditBaselineToolbar
        exportToCSV={[MockFunction]}
        hasWritePermissions={true}
        isDisabled={false}
        onBulkSelect={[MockFunction]}
        selected={0}
        totalFacts={2}
      >
        <Toolbar
          className="drift-toolbar"
        >
          <GenerateId
            prefix="pf-random-id-"
          >
            <div
              className="pf-c-toolbar drift-toolbar"
              id="pf-random-id-0"
            >
              <ToolbarContent
                isExpanded={false}
                showClearFiltersButton={false}
              >
                <div
                  className="pf-c-toolbar__content"
                >
                  <div
                    className="pf-c-toolbar__content-section"
                  >
                    <ToolbarItem>
                      <div
                        className="pf-c-toolbar__item"
                      >
                        <BulkSelect
                          checked={false}
                          className=""
                          count={null}
                          isDisabled={false}
                          items={
                            Array [
                              Object {
                                "key": "select-all",
                                "onClick": [Function],
                                "title": "Select all",
                              },
                              Object {
                                "key": "select-none",
                                "onClick": [Function],
                                "title": "Select none",
                              },
                            ]
                          }
                          onSelect={[Function]}
                        >
                          <Dropdown
                            className="ins-c-bulk-select"
                            dropdownItems={
                              Array [
                                <DropdownItem
                                  component="button"
                                  onClick={[Function]}
                                >
                                  Select all
                                </DropdownItem>,
                                <DropdownItem
                                  component="button"
                                  onClick={[Function]}
                                >
                                  Select none
                                </DropdownItem>,
                              ]
                            }
                            isOpen={false}
                            onSelect={[Function]}
                            toggle={
                              <DropdownToggle
                                isDisabled={false}
                                onToggle={[Function]}
                                splitButtonItems={
                                  Array [
                                    <React.Fragment>
                                      <DropdownToggleCheckbox
                                        aria-label="Select all"
                                        className=""
                                        id="toggle-checkbox"
                                        isChecked={false}
                                        isDisabled={false}
                                        isValid={true}
                                        onChange={[Function]}
                                      >
                                        
                                      </DropdownToggleCheckbox>
                                    </React.Fragment>,
                                  ]
                                }
                              />
                            }
                          >
                            <DropdownWithContext
                              autoFocus={true}
                              className="ins-c-bulk-select"
                              direction="down"
                              dropdownItems={
                                Array [
                                  <DropdownItem
                                    component="button"
                                    onClick={[Function]}
                                  >
                                    Select all
                                  </DropdownItem>,
                                  <DropdownItem
                                    component="button"
                                    onClick={[Function]}
                                  >
                                    Select none
                                  </DropdownItem>,
                                ]
                              }
                              isGrouped={false}
                              isOpen={false}
                              isPlain={false}
                              menuAppendTo="inline"
                              onSelect={[Function]}
                              position="left"
                              toggle={
                                <DropdownToggle
                                  isDisabled={false}
                                  onToggle={[Function]}
                                  splitButtonItems={
                                    Array [
                                      <React.Fragment>
                                        <DropdownToggleCheckbox
                                          aria-label="Select all"
                                          className=""
                                          id="toggle-checkbox"
                                          isChecked={false}
                                          isDisabled={false}
                                          isValid={true}
                                          onChange={[Function]}
                                        >
                                          
                                        </DropdownToggleCheckbox>
                                      </React.Fragment>,
                                    ]
                                  }
                                />
                              }
                            >
                              <div
                                className="pf-c-dropdown ins-c-bulk-select"
                                data-ouia-component-id={0}
                                data-ouia-component-type="PF4/Dropdown"
                                data-ouia-safe={true}
                              >
                                <DropdownToggle
                                  aria-haspopup={true}
                                  getMenuRef={[Function]}
                                  id="pf-dropdown-toggle-id-0"
                                  isDisabled={false}
                                  isOpen={false}
                                  isPlain={false}
                                  key=".0"
                                  onEnter={[Function]}
                                  onToggle={[Function]}
                                  parentRef={
                                    Object {
                                      "current": <div
                                        class="pf-c-dropdown ins-c-bulk-select"
                                        data-ouia-component-id="0"
                                        data-ouia-component-type="PF4/Dropdown"
                                        data-ouia-safe="true"
                                      >
                                        <div
                                          class="pf-c-dropdown__toggle pf-m-split-button"
                                        >
                                          <label
                                            class="pf-c-dropdown__toggle-check"
                                            for="toggle-checkbox"
                                          >
                                            <input
                                              aria-invalid="false"
                                              aria-label="Select all"
                                              id="toggle-checkbox"
                                              type="checkbox"
                                            />
                                            
                                          </label>
                                          <button
                                            aria-expanded="false"
                                            aria-haspopup="true"
                                            aria-label="Select"
                                            class="pf-c-dropdown__toggle-button"
                                            id="pf-dropdown-toggle-id-0"
                                            type="button"
                                          >
                                            <span
                                              class=""
                                            >
                                              <svg
                                                aria-hidden="true"
                                                fill="currentColor"
                                                height="1em"
                                                role="img"
                                                style="vertical-align: -0.125em;"
                                                viewBox="0 0 320 512"
                                                width="1em"
                                              >
                                                <path
                                                  d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                  transform=""
                                                />
                                              </svg>
                                            </span>
                                          </button>
                                        </div>
                                      </div>,
                                    }
                                  }
                                  splitButtonItems={
                                    Array [
                                      <React.Fragment>
                                        <DropdownToggleCheckbox
                                          aria-label="Select all"
                                          className=""
                                          id="toggle-checkbox"
                                          isChecked={false}
                                          isDisabled={false}
                                          isValid={true}
                                          onChange={[Function]}
                                        >
                                          
                                        </DropdownToggleCheckbox>
                                      </React.Fragment>,
                                    ]
                                  }
                                >
                                  <div
                                    className="pf-c-dropdown__toggle pf-m-split-button"
                                  >
                                    <DropdownToggleCheckbox
                                      aria-label="Select all"
                                      className=""
                                      id="toggle-checkbox"
                                      isChecked={false}
                                      isDisabled={false}
                                      isValid={true}
                                      onChange={[Function]}
                                    >
                                      <label
                                        className="pf-c-dropdown__toggle-check"
                                        htmlFor="toggle-checkbox"
                                      >
                                        <input
                                          aria-invalid={false}
                                          aria-label="Select all"
                                          checked={false}
                                          disabled={false}
                                          id="toggle-checkbox"
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                      </label>
                                    </DropdownToggleCheckbox>
                                    <Toggle
                                      aria-haspopup={true}
                                      aria-label="Select"
                                      bubbleEvent={false}
                                      className=""
                                      getMenuRef={[Function]}
                                      id="pf-dropdown-toggle-id-0"
                                      isActive={false}
                                      isDisabled={false}
                                      isOpen={false}
                                      isPlain={false}
                                      isPrimary={false}
                                      isSplitButton={true}
                                      onEnter={[Function]}
                                      onToggle={[Function]}
                                      parentRef={
                                        Object {
                                          "current": <div
                                            class="pf-c-dropdown ins-c-bulk-select"
                                            data-ouia-component-id="0"
                                            data-ouia-component-type="PF4/Dropdown"
                                            data-ouia-safe="true"
                                          >
                                            <div
                                              class="pf-c-dropdown__toggle pf-m-split-button"
                                            >
                                              <label
                                                class="pf-c-dropdown__toggle-check"
                                                for="toggle-checkbox"
                                              >
                                                <input
                                                  aria-invalid="false"
                                                  aria-label="Select all"
                                                  id="toggle-checkbox"
                                                  type="checkbox"
                                                />
                                                
                                              </label>
                                              <button
                                                aria-expanded="false"
                                                aria-haspopup="true"
                                                aria-label="Select"
                                                class="pf-c-dropdown__toggle-button"
                                                id="pf-dropdown-toggle-id-0"
                                                type="button"
                                              >
                                                <span
                                                  class=""
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    fill="currentColor"
                                                    height="1em"
                                                    role="img"
                                                    style="vertical-align: -0.125em;"
                                                    viewBox="0 0 320 512"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                      transform=""
                                                    />
                                                  </svg>
                                                </span>
                                              </button>
                                            </div>
                                          </div>,
                                        }
                                      }
                                    >
                                      <button
                                        aria-expanded={false}
                                        aria-haspopup={true}
                                        aria-label="Select"
                                        className="pf-c-dropdown__toggle-button"
                                        disabled={false}
                                        id="pf-dropdown-toggle-id-0"
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        type="button"
                                      >
                                        <span
                                          className=""
                                        >
                                          <CaretDownIcon
                                            color="currentColor"
                                            noVerticalAlign={false}
                                            size="sm"
                                          >
                                            <svg
                                              aria-hidden={true}
                                              aria-labelledby={null}
                                              fill="currentColor"
                                              height="1em"
                                              role="img"
                                              style={
                                                Object {
                                                  "verticalAlign": "-0.125em",
                                                }
                                              }
                                              viewBox="0 0 320 512"
                                              width="1em"
                                            >
                                              <path
                                                d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                transform=""
                                              />
                                            </svg>
                                          </CaretDownIcon>
                                        </span>
                                      </button>
                                    </Toggle>
                                  </div>
                                </DropdownToggle>
                              </div>
                            </DropdownWithContext>
                          </Dropdown>
                        </BulkSelect>
                      </div>
                    </ToolbarItem>
                    <ToolbarItem>
                      <div
                        className="pf-c-toolbar__item"
                      >
                        <Connect(AddFactButton)
                          hasWritePermissions={true}
                          isDisabled={false}
                        >
                          <AddFactButton
                            hasWritePermissions={true}
                            isDisabled={false}
                            setFactData={[Function]}
                            toggleFactModal={[Function]}
                          >
                            <Button
                              isDisabled={false}
                              onClick={[Function]}
                              variant="primary"
                            >
                              <button
                                aria-disabled={false}
                                aria-label={null}
                                className="pf-c-button pf-m-primary"
                                data-ouia-component-id={1}
                                data-ouia-component-type="PF4/Button"
                                data-ouia-safe={true}
                                disabled={false}
                                onClick={[Function]}
                                type="button"
                              >
                                Add fact or category
                              </button>
                            </Button>
                          </AddFactButton>
                        </Connect(AddFactButton)>
                      </div>
                    </ToolbarItem>
                    <ForwardRef
                      variant="icon-button-group"
                    >
                      <ToolbarGroupWithRef
                        innerRef={null}
                        variant="icon-button-group"
                      >
                        <div
                          className="pf-c-toolbar__group pf-m-icon-button-group"
                        >
                          <ToolbarItem>
                            <div
                              className="pf-c-toolbar__item"
                            >
                              <ExportCSVButton
                                dropdownItems={
                                  Array [
                                    <DropdownItem
                                      component="button"
                                      onClick={[Function]}
                                    >
                                      Export to CSV
                                    </DropdownItem>,
                                  ]
                                }
                                isOpen={false}
                                onToggle={[Function]}
                              >
                                <Dropdown
                                  dropdownItems={
                                    Array [
                                      <DropdownItem
                                        component="button"
                                        onClick={[Function]}
                                      >
                                        Export to CSV
                                      </DropdownItem>,
                                    ]
                                  }
                                  isOpen={false}
                                  isPlain={true}
                                  position="left"
                                  toggle={
                                    <DropdownToggle
                                      onToggle={[Function]}
                                      toggleIndicator={null}
                                    >
                                      <ExportIcon
                                        className="pointer not-active"
                                        color="currentColor"
                                        noVerticalAlign={false}
                                        size="sm"
                                      />
                                    </DropdownToggle>
                                  }
                                >
                                  <DropdownWithContext
                                    autoFocus={true}
                                    className=""
                                    direction="down"
                                    dropdownItems={
                                      Array [
                                        <DropdownItem
                                          component="button"
                                          onClick={[Function]}
                                        >
                                          Export to CSV
                                        </DropdownItem>,
                                      ]
                                    }
                                    isGrouped={false}
                                    isOpen={false}
                                    isPlain={true}
                                    menuAppendTo="inline"
                                    onSelect={[Function]}
                                    position="left"
                                    toggle={
                                      <DropdownToggle
                                        onToggle={[Function]}
                                        toggleIndicator={null}
                                      >
                                        <ExportIcon
                                          className="pointer not-active"
                                          color="currentColor"
                                          noVerticalAlign={false}
                                          size="sm"
                                        />
                                      </DropdownToggle>
                                    }
                                  >
                                    <div
                                      className="pf-c-dropdown"
                                      data-ouia-component-id={2}
                                      data-ouia-component-type="PF4/Dropdown"
                                      data-ouia-safe={true}
                                    >
                                      <DropdownToggle
                                        aria-haspopup={true}
                                        getMenuRef={[Function]}
                                        id="pf-dropdown-toggle-id-1"
                                        isOpen={false}
                                        isPlain={true}
                                        key=".0"
                                        onEnter={[Function]}
                                        onToggle={[Function]}
                                        parentRef={
                                          Object {
                                            "current": <div
                                              class="pf-c-dropdown"
                                              data-ouia-component-id="2"
                                              data-ouia-component-type="PF4/Dropdown"
                                              data-ouia-safe="true"
                                            >
                                              <button
                                                aria-expanded="false"
                                                aria-haspopup="true"
                                                class="pf-c-dropdown__toggle pf-m-plain"
                                                id="pf-dropdown-toggle-id-1"
                                                type="button"
                                              >
                                                <span>
                                                  <svg
                                                    aria-hidden="true"
                                                    class="pointer not-active"
                                                    fill="currentColor"
                                                    height="1em"
                                                    role="img"
                                                    style="vertical-align: -0.125em;"
                                                    viewBox="0 64 1024 1024"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M980.293 278.754l-95.387-95.387-393.84 393.856c-5.285 5.262-11.353 7.909-18.203 7.911-6.862 0-12.935-2.649-18.222-7.911l-81.019-81.019c-5.262-5.285-7.909-11.353-7.909-18.219 0-6.85 2.649-12.914 7.909-18.203l393.856-393.84-95.381-95.381c-24.039-24.037-15.89-43.705 18.105-43.705h271.982c53.227 0 61.813 9.273 61.813 61.813v271.982c0.005 33.998-19.662 42.151-43.703 18.105zM146.286 793.143c0 3.312 1.077 6.048 3.232 8.203 2.151 2.151 4.889 3.227 8.199 3.225h708.661c3.287 0 5.998-1.067 8.137-3.202 2.135-2.137 3.202-4.848 3.202-8.135v-331.701c0-6.571 2.135-11.995 6.409-16.272 4.27-4.267 9.696-6.407 16.267-6.405h100.933c6.571-0.002 11.998 2.137 16.267 6.405 4.277 4.277 6.409 9.701 6.409 16.272v466.647c0.002 6.571-2.137 11.998-6.405 16.267-4.277 4.274-9.701 6.409-16.272 6.409h-978.649c-6.571 0.002-11.998-2.137-16.267-6.405-4.274-4.277-6.409-9.701-6.409-16.272v-978.647c0-6.571 2.135-11.995 6.409-16.272 4.27-4.267 9.696-6.407 16.267-6.405h466.647c6.571 0 11.995 2.135 16.272 6.411 4.267 4.267 6.407 9.696 6.405 16.265v100.933c0.002 6.569-2.137 11.998-6.405 16.265-4.277 4.277-9.701 6.411-16.272 6.411h-331.609c-3.312 0-6.048 1.077-8.203 3.232-2.151 2.149-3.227 4.889-3.225 8.197v708.571z"
                                                      transform="rotate(180 0 512) scale(-1 1)"
                                                    />
                                                  </svg>
                                                </span>
                                              </button>
                                            </div>,
                                          }
                                        }
                                        toggleIndicator={null}
                                      >
                                        <Toggle
                                          aria-haspopup={true}
                                          bubbleEvent={false}
                                          className=""
                                          getMenuRef={[Function]}
                                          id="pf-dropdown-toggle-id-1"
                                          isActive={false}
                                          isDisabled={false}
                                          isOpen={false}
                                          isPlain={true}
                                          isPrimary={false}
                                          isSplitButton={false}
                                          onEnter={[Function]}
                                          onToggle={[Function]}
                                          parentRef={
                                            Object {
                                              "current": <div
                                                class="pf-c-dropdown"
                                                data-ouia-component-id="2"
                                                data-ouia-component-type="PF4/Dropdown"
                                                data-ouia-safe="true"
                                              >
                                                <button
                                                  aria-expanded="false"
                                                  aria-haspopup="true"
                                                  class="pf-c-dropdown__toggle pf-m-plain"
                                                  id="pf-dropdown-toggle-id-1"
                                                  type="button"
                                                >
                                                  <span>
                                                    <svg
                                                      aria-hidden="true"
                                                      class="pointer not-active"
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style="vertical-align: -0.125em;"
                                                      viewBox="0 64 1024 1024"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M980.293 278.754l-95.387-95.387-393.84 393.856c-5.285 5.262-11.353 7.909-18.203 7.911-6.862 0-12.935-2.649-18.222-7.911l-81.019-81.019c-5.262-5.285-7.909-11.353-7.909-18.219 0-6.85 2.649-12.914 7.909-18.203l393.856-393.84-95.381-95.381c-24.039-24.037-15.89-43.705 18.105-43.705h271.982c53.227 0 61.813 9.273 61.813 61.813v271.982c0.005 33.998-19.662 42.151-43.703 18.105zM146.286 793.143c0 3.312 1.077 6.048 3.232 8.203 2.151 2.151 4.889 3.227 8.199 3.225h708.661c3.287 0 5.998-1.067 8.137-3.202 2.135-2.137 3.202-4.848 3.202-8.135v-331.701c0-6.571 2.135-11.995 6.409-16.272 4.27-4.267 9.696-6.407 16.267-6.405h100.933c6.571-0.002 11.998 2.137 16.267 6.405 4.277 4.277 6.409 9.701 6.409 16.272v466.647c0.002 6.571-2.137 11.998-6.405 16.267-4.277 4.274-9.701 6.409-16.272 6.409h-978.649c-6.571 0.002-11.998-2.137-16.267-6.405-4.274-4.277-6.409-9.701-6.409-16.272v-978.647c0-6.571 2.135-11.995 6.409-16.272 4.27-4.267 9.696-6.407 16.267-6.405h466.647c6.571 0 11.995 2.135 16.272 6.411 4.267 4.267 6.407 9.696 6.405 16.265v100.933c0.002 6.569-2.137 11.998-6.405 16.265-4.277 4.277-9.701 6.411-16.272 6.411h-331.609c-3.312 0-6.048 1.077-8.203 3.232-2.151 2.149-3.227 4.889-3.225 8.197v708.571z"
                                                        transform="rotate(180 0 512) scale(-1 1)"
                                                      />
                                                    </svg>
                                                  </span>
                                                </button>
                                              </div>,
                                            }
                                          }
                                        >
                                          <button
                                            aria-expanded={false}
                                            aria-haspopup={true}
                                            className="pf-c-dropdown__toggle pf-m-plain"
                                            disabled={false}
                                            id="pf-dropdown-toggle-id-1"
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            type="button"
                                          >
                                            <span
                                              className={null}
                                            >
                                              <ExportIcon
                                                className="pointer not-active"
                                                color="currentColor"
                                                noVerticalAlign={false}
                                                size="sm"
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  aria-labelledby={null}
                                                  className="pointer not-active"
                                                  fill="currentColor"
                                                  height="1em"
                                                  role="img"
                                                  style={
                                                    Object {
                                                      "verticalAlign": "-0.125em",
                                                    }
                                                  }
                                                  viewBox="0 64 1024 1024"
                                                  width="1em"
                                                >
                                                  <path
                                                    d="M980.293 278.754l-95.387-95.387-393.84 393.856c-5.285 5.262-11.353 7.909-18.203 7.911-6.862 0-12.935-2.649-18.222-7.911l-81.019-81.019c-5.262-5.285-7.909-11.353-7.909-18.219 0-6.85 2.649-12.914 7.909-18.203l393.856-393.84-95.381-95.381c-24.039-24.037-15.89-43.705 18.105-43.705h271.982c53.227 0 61.813 9.273 61.813 61.813v271.982c0.005 33.998-19.662 42.151-43.703 18.105zM146.286 793.143c0 3.312 1.077 6.048 3.232 8.203 2.151 2.151 4.889 3.227 8.199 3.225h708.661c3.287 0 5.998-1.067 8.137-3.202 2.135-2.137 3.202-4.848 3.202-8.135v-331.701c0-6.571 2.135-11.995 6.409-16.272 4.27-4.267 9.696-6.407 16.267-6.405h100.933c6.571-0.002 11.998 2.137 16.267 6.405 4.277 4.277 6.409 9.701 6.409 16.272v466.647c0.002 6.571-2.137 11.998-6.405 16.267-4.277 4.274-9.701 6.409-16.272 6.409h-978.649c-6.571 0.002-11.998-2.137-16.267-6.405-4.274-4.277-6.409-9.701-6.409-16.272v-978.647c0-6.571 2.135-11.995 6.409-16.272 4.27-4.267 9.696-6.407 16.267-6.405h466.647c6.571 0 11.995 2.135 16.272 6.411 4.267 4.267 6.407 9.696 6.405 16.265v100.933c0.002 6.569-2.137 11.998-6.405 16.265-4.277 4.277-9.701 6.411-16.272 6.411h-331.609c-3.312 0-6.048 1.077-8.203 3.232-2.151 2.149-3.227 4.889-3.225 8.197v708.571z"
                                                    transform="rotate(180 0 512) scale(-1 1)"
                                                  />
                                                </svg>
                                              </ExportIcon>
                                            </span>
                                          </button>
                                        </Toggle>
                                      </DropdownToggle>
                                    </div>
                                  </DropdownWithContext>
                                </Dropdown>
                              </ExportCSVButton>
                            </div>
                          </ToolbarItem>
                          <ToolbarItem>
                            <div
                              className="pf-c-toolbar__item"
                            >
                              <Connect(EditBaselineKebab)>
                                <EditBaselineKebab
                                  dispatch={[Function]}
                                  editBaselineTableData={
                                    Array [
                                      Array [
                                        0,
                                        "Sauron",
                                        "the Dark Lord",
                                      ],
                                      Array [
                                        1,
                                        "Galadriel",
                                        "the Elven Queen",
                                      ],
                                      Array [
                                        2,
                                        "The Fellowship of the Ring",
                                        Array [
                                          Array [
                                            3,
                                            "Frodo",
                                            "Baggins",
                                          ],
                                          Array [
                                            4,
                                            "Samwise",
                                            "Gamgee",
                                          ],
                                          Array [
                                            5,
                                            "Gandalf",
                                            "the Grey",
                                          ],
                                          Array [
                                            6,
                                            "Meriadoc",
                                            "Brandybuck",
                                          ],
                                          Array [
                                            7,
                                            "Peregrin",
                                            "Took",
                                          ],
                                          Array [
                                            8,
                                            "Gimli",
                                            "son of Gloin",
                                          ],
                                          Array [
                                            9,
                                            "Legolas",
                                            "Greenleaf",
                                          ],
                                          Array [
                                            10,
                                            "Boromir",
                                            "son of Denethor",
                                          ],
                                          Array [
                                            11,
                                            "Aragorn",
                                            "son of Arathorn",
                                          ],
                                        ],
                                      ],
                                    ]
                                  }
                                >
                                  <Dropdown
                                    dropdownItems={
                                      Array [
                                        <DropdownItem
                                          component="button"
                                          isDisabled={true}
                                          onClick={[Function]}
                                        >
                                          Delete facts
                                        </DropdownItem>,
                                      ]
                                    }
                                    isOpen={false}
                                    isPlain={true}
                                    style={
                                      Object {
                                        "float": "left",
                                      }
                                    }
                                    toggle={
                                      <KebabToggle
                                        onToggle={[Function]}
                                      />
                                    }
                                  >
                                    <DropdownWithContext
                                      autoFocus={true}
                                      className=""
                                      direction="down"
                                      dropdownItems={
                                        Array [
                                          <DropdownItem
                                            component="button"
                                            isDisabled={true}
                                            onClick={[Function]}
                                          >
                                            Delete facts
                                          </DropdownItem>,
                                        ]
                                      }
                                      isGrouped={false}
                                      isOpen={false}
                                      isPlain={true}
                                      menuAppendTo="inline"
                                      onSelect={[Function]}
                                      position="left"
                                      style={
                                        Object {
                                          "float": "left",
                                        }
                                      }
                                      toggle={
                                        <KebabToggle
                                          onToggle={[Function]}
                                        />
                                      }
                                    >
                                      <div
                                        className="pf-c-dropdown"
                                        data-ouia-component-id={3}
                                        data-ouia-component-type="PF4/Dropdown"
                                        data-ouia-safe={true}
                                        style={
                                          Object {
                                            "float": "left",
                                          }
                                        }
                                      >
                                        <KebabToggle
                                          aria-haspopup={true}
                                          getMenuRef={[Function]}
                                          id="pf-dropdown-toggle-id-2"
                                          isOpen={false}
                                          isPlain={true}
                                          key=".0"
                                          onEnter={[Function]}
                                          onToggle={[Function]}
                                          parentRef={
                                            Object {
                                              "current": <div
                                                class="pf-c-dropdown"
                                                data-ouia-component-id="3"
                                                data-ouia-component-type="PF4/Dropdown"
                                                data-ouia-safe="true"
                                                style="float: left;"
                                              >
                                                <button
                                                  aria-expanded="false"
                                                  aria-haspopup="true"
                                                  aria-label="Actions"
                                                  class="pf-c-dropdown__toggle pf-m-plain"
                                                  id="pf-dropdown-toggle-id-2"
                                                  type="button"
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    fill="currentColor"
                                                    height="1em"
                                                    role="img"
                                                    style="vertical-align: -0.125em;"
                                                    viewBox="0 0 192 512"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                      transform=""
                                                    />
                                                  </svg>
                                                </button>
                                              </div>,
                                            }
                                          }
                                        >
                                          <Toggle
                                            aria-haspopup={true}
                                            aria-label="Actions"
                                            bubbleEvent={false}
                                            className=""
                                            getMenuRef={[Function]}
                                            id="pf-dropdown-toggle-id-2"
                                            isActive={false}
                                            isDisabled={false}
                                            isOpen={false}
                                            isPlain={true}
                                            isPrimary={false}
                                            isSplitButton={false}
                                            onEnter={[Function]}
                                            onToggle={[Function]}
                                            parentRef={
                                              Object {
                                                "current": <div
                                                  class="pf-c-dropdown"
                                                  data-ouia-component-id="3"
                                                  data-ouia-component-type="PF4/Dropdown"
                                                  data-ouia-safe="true"
                                                  style="float: left;"
                                                >
                                                  <button
                                                    aria-expanded="false"
                                                    aria-haspopup="true"
                                                    aria-label="Actions"
                                                    class="pf-c-dropdown__toggle pf-m-plain"
                                                    id="pf-dropdown-toggle-id-2"
                                                    type="button"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style="vertical-align: -0.125em;"
                                                      viewBox="0 0 192 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </button>
                                                </div>,
                                              }
                                            }
                                          >
                                            <button
                                              aria-expanded={false}
                                              aria-haspopup={true}
                                              aria-label="Actions"
                                              className="pf-c-dropdown__toggle pf-m-plain"
                                              disabled={false}
                                              id="pf-dropdown-toggle-id-2"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              type="button"
                                            >
                                              <EllipsisVIcon
                                                color="currentColor"
                                                noVerticalAlign={false}
                                                size="sm"
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  aria-labelledby={null}
                                                  fill="currentColor"
                                                  height="1em"
                                                  role="img"
                                                  style={
                                                    Object {
                                                      "verticalAlign": "-0.125em",
                                                    }
                                                  }
                                                  viewBox="0 0 192 512"
                                                  width="1em"
                                                >
                                                  <path
                                                    d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                    transform=""
                                                  />
                                                </svg>
                                              </EllipsisVIcon>
                                            </button>
                                          </Toggle>
                                        </KebabToggle>
                                      </div>
                                    </DropdownWithContext>
                                  </Dropdown>
                                </EditBaselineKebab>
                              </Connect(EditBaselineKebab)>
                            </div>
                          </ToolbarItem>
                        </div>
                      </ToolbarGroupWithRef>
                    </ForwardRef>
                  </div>
                  <ToolbarExpandableContent
                    chipContainerRef={
                      Object {
                        "current": null,
                      }
                    }
                    clearFiltersButtonText="Clear all filters"
                    expandableContentRef={
                      Object {
                        "current": <div
                          class="pf-c-toolbar__expandable-content"
                          id="pf-random-id-0-expandable-content-0"
                        >
                          <div
                            class="pf-c-toolbar__group"
                          />
                        </div>,
                      }
                    }
                    id="pf-random-id-0-expandable-content-0"
                    isExpanded={false}
                    showClearFiltersButton={false}
                  >
                    <div
                      className="pf-c-toolbar__expandable-content"
                      id="pf-random-id-0-expandable-content-0"
                    >
                      <ForwardRef>
                        <ToolbarGroupWithRef
                          innerRef={null}
                        >
                          <div
                            className="pf-c-toolbar__group"
                          />
                        </ToolbarGroupWithRef>
                      </ForwardRef>
                    </div>
                  </ToolbarExpandableContent>
                </div>
              </ToolbarContent>
              <ToolbarChipGroupContent
                chipGroupContentRef={
                  Object {
                    "current": <div
                      class="pf-c-toolbar__content pf-m-hidden"
                      hidden=""
                    >
                      <div
                        class="pf-c-toolbar__group"
                      />
                    </div>,
                  }
                }
                clearFiltersButtonText="Clear all filters"
                collapseListedFiltersBreakpoint="lg"
                isExpanded={false}
                numberOfFilters={0}
                showClearFiltersButton={false}
              >
                <div
                  className="pf-c-toolbar__content pf-m-hidden"
                  hidden={true}
                >
                  <ForwardRef
                    className=""
                  >
                    <ToolbarGroupWithRef
                      className=""
                      innerRef={null}
                    >
                      <div
                        className="pf-c-toolbar__group"
                      />
                    </ToolbarGroupWithRef>
                  </ForwardRef>
                </div>
              </ToolbarChipGroupContent>
            </div>
          </GenerateId>
        </Toolbar>
      </EditBaselineToolbar>
    </Provider>
  </Router>
</MemoryRouter>
`;

exports[`EditBaselineToolbar should render correctly 1`] = `
<Toolbar
  className="drift-toolbar"
>
  <ToolbarContent
    isExpanded={false}
    showClearFiltersButton={false}
  >
    <ToolbarItem>
      <BulkSelect
        checked={false}
        className=""
        count={null}
        isDisabled={false}
        items={
          Array [
            Object {
              "key": "select-all",
              "onClick": [Function],
              "title": "Select all",
            },
            Object {
              "key": "select-none",
              "onClick": [Function],
              "title": "Select none",
            },
          ]
        }
        onSelect={[Function]}
      />
    </ToolbarItem>
    <ToolbarItem>
      <Connect(AddFactButton)
        hasWritePermissions={true}
        isDisabled={false}
      />
    </ToolbarItem>
    <ForwardRef
      variant="icon-button-group"
    >
      <ToolbarItem>
        <ExportCSVButton
          dropdownItems={
            Array [
              <DropdownItem
                component="button"
                onClick={[Function]}
              >
                Export to CSV
              </DropdownItem>,
            ]
          }
          isOpen={false}
          onToggle={[Function]}
        />
      </ToolbarItem>
      <ToolbarItem>
        <Connect(EditBaselineKebab) />
      </ToolbarItem>
    </ForwardRef>
  </ToolbarContent>
</Toolbar>
`;
