// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BaselinesKebab should render correctly 1`] = `
<Fragment>
  <Dropdown
    dropdownItems={
      Array [
        <DropdownItem
          component="button"
          isDisabled={true}
          onClick={[Function]}
        >
          Delete baselines
        </DropdownItem>,
        <DropdownItem
          component="button"
          isDisabled={true}
          onClick={null}
        >
          Clear filters
        </DropdownItem>,
      ]
    }
    isOpen={false}
    isPlain={true}
    style={
      Object {
        "float": "left",
      }
    }
    toggle={
      <KebabToggle
        onToggle={[Function]}
      />
    }
  />
</Fragment>
`;

exports[`ConnectedBaselinesKebab should render correctly 1`] = `
<MemoryRouter
  keyLength={0}
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <Connect(BaselinesKebab)>
        <BaselinesKebab
          dispatch={[Function]}
          selectedBaselineIds={Array []}
        >
          <Dropdown
            dropdownItems={
              Array [
                <DropdownItem
                  component="button"
                  isDisabled={true}
                  onClick={[Function]}
                >
                  Delete baselines
                </DropdownItem>,
                <DropdownItem
                  component="button"
                  isDisabled={true}
                  onClick={null}
                >
                  Clear filters
                </DropdownItem>,
              ]
            }
            isOpen={false}
            isPlain={true}
            style={
              Object {
                "float": "left",
              }
            }
            toggle={
              <KebabToggle
                onToggle={[Function]}
              />
            }
          >
            <DropdownWithContext
              autoFocus={true}
              className=""
              direction="down"
              dropdownItems={
                Array [
                  <DropdownItem
                    component="button"
                    isDisabled={true}
                    onClick={[Function]}
                  >
                    Delete baselines
                  </DropdownItem>,
                  <DropdownItem
                    component="button"
                    isDisabled={true}
                    onClick={null}
                  >
                    Clear filters
                  </DropdownItem>,
                ]
              }
              isGrouped={false}
              isOpen={false}
              isPlain={true}
              menuAppendTo="inline"
              onSelect={[Function]}
              position="left"
              style={
                Object {
                  "float": "left",
                }
              }
              toggle={
                <KebabToggle
                  onToggle={[Function]}
                />
              }
            >
              <div
                className="pf-c-dropdown"
                data-ouia-component-id={0}
                data-ouia-component-type="PF4/Dropdown"
                data-ouia-safe={true}
                style={
                  Object {
                    "float": "left",
                  }
                }
              >
                <KebabToggle
                  aria-haspopup={true}
                  getMenuRef={[Function]}
                  id="pf-dropdown-toggle-id-0"
                  isOpen={false}
                  isPlain={true}
                  key=".0"
                  onEnter={[Function]}
                  onToggle={[Function]}
                  parentRef={
                    Object {
                      "current": <div
                        class="pf-c-dropdown"
                        data-ouia-component-id="0"
                        data-ouia-component-type="PF4/Dropdown"
                        data-ouia-safe="true"
                        style="float: left;"
                      >
                        <button
                          aria-expanded="false"
                          aria-haspopup="true"
                          aria-label="Actions"
                          class="pf-c-dropdown__toggle pf-m-plain"
                          id="pf-dropdown-toggle-id-0"
                          type="button"
                        >
                          <svg
                            aria-hidden="true"
                            fill="currentColor"
                            height="1em"
                            role="img"
                            style="vertical-align: -0.125em;"
                            viewBox="0 0 192 512"
                            width="1em"
                          >
                            <path
                              d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                              transform=""
                            />
                          </svg>
                        </button>
                      </div>,
                    }
                  }
                >
                  <Toggle
                    aria-haspopup={true}
                    aria-label="Actions"
                    bubbleEvent={false}
                    className=""
                    getMenuRef={[Function]}
                    id="pf-dropdown-toggle-id-0"
                    isActive={false}
                    isDisabled={false}
                    isOpen={false}
                    isPlain={true}
                    isPrimary={false}
                    isSplitButton={false}
                    onEnter={[Function]}
                    onToggle={[Function]}
                    parentRef={
                      Object {
                        "current": <div
                          class="pf-c-dropdown"
                          data-ouia-component-id="0"
                          data-ouia-component-type="PF4/Dropdown"
                          data-ouia-safe="true"
                          style="float: left;"
                        >
                          <button
                            aria-expanded="false"
                            aria-haspopup="true"
                            aria-label="Actions"
                            class="pf-c-dropdown__toggle pf-m-plain"
                            id="pf-dropdown-toggle-id-0"
                            type="button"
                          >
                            <svg
                              aria-hidden="true"
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style="vertical-align: -0.125em;"
                              viewBox="0 0 192 512"
                              width="1em"
                            >
                              <path
                                d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                transform=""
                              />
                            </svg>
                          </button>
                        </div>,
                      }
                    }
                  >
                    <button
                      aria-expanded={false}
                      aria-haspopup={true}
                      aria-label="Actions"
                      className="pf-c-dropdown__toggle pf-m-plain"
                      disabled={false}
                      id="pf-dropdown-toggle-id-0"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      type="button"
                    >
                      <EllipsisVIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                      >
                        <svg
                          aria-hidden={true}
                          aria-labelledby={null}
                          fill="currentColor"
                          height="1em"
                          role="img"
                          style={
                            Object {
                              "verticalAlign": "-0.125em",
                            }
                          }
                          viewBox="0 0 192 512"
                          width="1em"
                        >
                          <path
                            d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                            transform=""
                          />
                        </svg>
                      </EllipsisVIcon>
                    </button>
                  </Toggle>
                </KebabToggle>
              </div>
            </DropdownWithContext>
          </Dropdown>
        </BaselinesKebab>
      </Connect(BaselinesKebab)>
    </Provider>
  </Router>
</MemoryRouter>
`;
